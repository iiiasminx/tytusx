{"version":3,"sources":["Analizador/Expresiones/Primitiva.js","Analizador/AST/Tipo.js","Analizador/Global/Error.js","Analizador/Global/ListaError.js","Analizador/XPath/Nodo.js","Analizador/AST/Entorno.js","Analizador/Optimizacion/Expresiones3D/Primitiva3D.js","Analizador/XPath/Consulta.js","Analizador/AST/Simbolo.js","Analizador/Optimizacion/Expresiones3D/Operacion3D.js","Analizador/Traduccion/TranslateXQuery.js","Analizador/Optimizacion/Instrucciones3D/Instruccion3D.js","Analizador/Expresiones/Operacion.js","Analizador/Optimizacion/Instrucciones3D/Asignacion3D.js","Analizador/Optimizacion/Expresiones3D/Expresion3D.js","Analizador/Reporte/CST.js","Analizador/Optimizacion/Instrucciones3D/Etiqueta3D.js","Analizador/XML/Atributo.js","Analizador/XML/Objeto.js","Analizador/Optimizacion/Instrucciones3D/If3D.js","Analizador/Optimizacion/Instrucciones3D/Goto3D.js","Analizador/XPath/Predicate.js","Analizador/Optimizacion/Declaraciones3D/Main.js","Analizador/Optimizacion/Declaraciones3D/Metodo.js","Analizador/Gramatica/XPath_GramaticaDesc.js","Analizador/Reporte/Nodo.js","Analizador/XQuery/Return.js","Analizador/XQuery/DeclaracionFor.js","Analizador/XQuery/FuncionXQuery.js","Analizador/Gramatica/XML_GramaticaAsc.js","Analizador/Gramatica/XQuery_GramaticaAsc.js","Analizador/Gramatica/XML_GramaticaDesc.js","Analizador/Gramatica/XPath_GramaticaAsc.js","Analizador/Gramatica/Optimizacion_Grammar.js","Analizador/XQuery/Flwor.js","Analizador/XQuery/Where.js","Analizador/XQuery/For.js","Analizador/XQuery/Let.js","Analizador/XQuery/OrderBy.js","Analizador/XQuery/Sort.js","Analizador/XQuery/CondicionIf.js","Analizador/XQuery/Html.js","Analizador/XQuery/IfThenElse.js","Analizador/XQuery/ElseIf.js","Analizador/XQuery/VarCall.js","Analizador/Optimizacion/Declaraciones3D/Include.js","Analizador/Optimizacion/Declaraciones3D/Variable.js","Analizador/Optimizacion/Declaraciones3D/Declaracion3D.js","Analizador/Optimizacion/Instrucciones3D/Llamada3D.js","Analizador/Optimizacion/Instrucciones3D/Printf3D.js","Analizador/Optimizacion/Instrucciones3D/Return3D.js","Analizador/Traduccion/TranslateXPath.js","Components/Editor.js","Analizador/Reporte/Optimizacion.js","Analizador/Traduccion/TraduceXML.js","Analizador/Optimizacion/Instrucciones3D/Representacion3D.js","Analizador/Optimizacion/Optimizer.js","Analizador/indexAnalizador.js","Components/App.js","index.js"],"names":["TipoPrim","Primitiva","valor","tipo","linea","columna","isXQuery","this","ent","IDENTIFIER","getValorInicial","getValor","existeSimbolo","obtenerSimbolo","ATRIBUTO","entTemporal","Entorno","i","tsimbolos","length","elem","getTipo","Tipo","getNombre","agregarSimbolo","FUNCION","padre","forEach","e","ETIQUETA","nombre","c2","aux","CONSULTA","tempConsulta","Consulta","ejecutar","Array","toLowerCase","indice","INTEGER","mierror","tipoError","descripcion","errores","listaError","ListaError","_instance","push","TipoNodo","TipoAxis","Nodo","predicado","tipoAxis","nodeTest","fromRoot","NodeTest","undefined","getPredicado","global","simbolo","a","toString","nuevo","agregarError","t","STRING","XQ_FUNC","XQ_VAR","TipoPrim3D","Primitiva3D","tipoPrimitiva","codigo3D","fila","listaNodos","cad","nodo","isFromRoot","isAxis","obtenerSalida","salida","simbs","cadConsulta","auxSimb","escribirConsultaObjeto","escribirEtiquetaPadre","concatHijoTexto","pos","elemAux","rompeCiclo","actualNode","auxSal","obtenerConsultaPredicado","concat","getConsultaAtributos","DOTDOT","father","DOT","ASTERISCO","toLocaleLowerCase","AXIS","getTipoAxis","ANCESTOR","nombreParent","tmpEnt","ANCESTORORSELF","auxS","ATTRIBUTE","CHILD","DESCENDANT","auxSal2","obtenerHijosRecursivos","DESCENDANTORSELF","FOLLOWING","tmpPadre","found","nombreBuscar","FOLLOWINGSIBLING","siblingPadre","NAMESPACE","PARENT","PRECEDING","PRECEDINGSIBLING","tPadre","antes","SELF","NODOERROR","entBuscar","nombreNodo","auxEnt","encontrarEntorno","predValue","console","log","predTipo","veces","DOUBLE","BOOLEAN","nTabs","tabs","nameEncontrar","ex","buscarHaciaAdentro","isLast","close","atrBuscar","son","addTabs","hijosList","atr","atributo","ETIQUETA_UNIQUE","h","hijo","Simbolo","posicion","TipoOperacion3D","Operacion3D","tipoOperacion","op_izq","op_der","MENOSUNARIO","getCodigo3D","getOperandoString","SUMA","RESTA","MULTIPLICACION","DIVISION","MOD","MAYORQUE","MENORQUE","MAYORIGUALQUE","MENORIGUALQUE","IGUALIGUAL","DIFERENTEQUE","NativaXQuery","TranslateXQuery","instruccion","xqueryTabla","xmlTabla","translateXPath","contSQ","contHQ","xQueryHeap","xQueryStack","strTraduccion","xmlHeap","xmlStack","xQueryTabla","contT","funcionesUtilizadas","funciones","reverse","func","FROMHEAPTOXQHEAP","getFromHeapToXQHeap","IMPRIMIRATRIBUTOXQ","getImprimirAtributo","IMPRIMIRCONSULTAXQ","getImprimirConsulta","IMPRIMIRETIQUETAXQ","getImprimirEtiqueta","IMPRIMIRTEXTOXQ","getImprimirTexto","temps","getCodigo3Dir","id","tradNodo","temporal","split","element","charCodeAt","code","segundoTemp","tercerTemp","primerTemp","cuartoTemp","quintoTemp","TipoInstruccion3D","TipoOperacion","Operacion","operacion","y","x","get3Dir","w","entorno","PAR","res","opIzq","opDer","resultado","valIzq","typeIzq","valDer","typeDer","tipoDominanteAritmetica","ERROR","parseInt","parseFloat","getStringTipo","izq","resolverOperacionNumeroId","CADENA","resolverOperacionAtributoCadena","der","resolverOperacionIdNumero","resolverOperacionIdCadena","IGUAL","flag","tmp","entTemporalAT","l","fromR","lastNodeName","entConsultaTemp","resolverConsultaRecursiva","XQresolverOperacionIdNumero","AND","OR","operadorTipo","xd","ex1","ex2","relacional","TipoNumero","texto","buscarTexto","numCompare","insd","elin","XQresolverOperacionIdCadena","replace","XQresolverOperacionAtributoCadena","op","elemEnt","c1","elemfinal","buscarAtributosRecursivamente","at","Asignacion3D","identificador","expresion","codigo3d","eliminada","optimizada","codigo","ASIGNORMAL","TipoExpresion3D","CST","pila","raiz","pop","root","cstXmlAsc","cstXmlDesc","cstXpathAsc","cstXpathDesc","Etiqueta3D","Atributo","Objeto","listaAtributos","listaO","isUnica","listaObjetos","local","obj","If3D","condicion","gotoEtiqueta","negada","negarCondicion","OPERACION","Object","create","Goto3D","nuevoId","Predicate","Main","listaInstrucciones","codigo3Dir","auxCode","Metodo","XPath_GramaticaDesc","o","k","v","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","$VT","$VU","parser","trace","yy","symbols_","terminals_","2","5","7","8","12","14","16","18","20","21","23","24","26","27","28","29","30","31","32","33","34","35","36","37","38","39","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","first_line","first_column","default","table","3","4","6","10","9","22","11","1","19","13","17","15","40","41","25","defaultActions","parseError","str","hash","recoverable","error","Error","parse","input","self","stack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","popStack","n","getPrototypeOf","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","lex","token","yyval","error_rule_depth","locateNearestErrorRecoveryRule","stack_probe","depth","errStr","showPosition","join","text","match","line","loc","last_line","last_column","range","apply","require","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","flex","begin","condition","popState","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","exports","main","process","exit","source","readFileSync","normalize","module","argv","hijos","setPadre","TipoReturn","Return","tipoRet","html","ifthen","funcion","XQueryEnt","xmlEnt","traductorXPath","traductorXQuery","NORMAL","indexOf","temp","respAnterior","nuevaSalida","s","StringToHeap","setPosicion","FUNCIONXQUERY","prueba","XQEnt","pruebaReturn","listaReturn","ListaSimb","simb","auxEntorno","simbolosToString","sx","elx","IFTHENELSE","nue","TipoFor","DeclaracionFor","consultas","desde","hasta","listaEnteros","con","resp","ITERATIVO","AT","newSimb","listaSimbolos","consulta","contador","XQ_NUMB","TipoFuncionXQ","FuncionXQuery","tipoFuncion","otraFuncion","ls","test","DATA","reemplazarTexto","getOnlyTextos","getSobreEntornoXML","aplicarFuncionTexto","listaRedefinida","consTemp","nuevoSimbolo","sobreEscribirSimbolo","listaS","et","nuevaLista","interior","etiqueta","listaTextos","UPPERCASE","toUpperCase","SUBSTRING","substring","LOWERCASE","NUMBER","XML_GramaticaAsc","cst","getId","obtenerUltimoNodo","setRaiz","unshift","elementos","atributosE","agregarPila","replaceAll","listaElem","padreLE","elemText","elemAtr","elem1","atr1","atr2","atrs2","text2","textContent2","XQuery_GramaticaAsc","$VV","$VW","$VX","$VY","$VZ","$V_","$V$","$V01","$V11","$V21","$V31","$V41","$V51","$V61","$V71","$V81","$V91","$Va1","$Vb1","$Vc1","$Vd1","$Ve1","$Vf1","$Vg1","$Vh1","$Vi1","$Vj1","$Vk1","$Vl1","$Vm1","$Vn1","$Vo1","$Vp1","$Vq1","$Vr1","$Vs1","$Vt1","$Vu1","$Vv1","$Vw1","$Vx1","$Vy1","$Vz1","$VA1","$VB1","$VC1","$VD1","$VE1","62","63","64","70","72","73","76","83","84","85","88","92","94","95","97","99","100","101","102","103","104","105","106","107","108","109","110","111","112","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","Flwor","Where","OrderBy","Let","For","VarCall","IfThenElse","ElseIf","CondicionIf","Sort","XQUERYIDENTIFIER","65","66","67","86","71","113","114","96","87","89","90","91","93","68","69","74","78","79","98","75","77","344","371","373","385","Html","XML_GramaticaDesc","listaElem2","listAtrs3","elem2","newObj","idCierre","content","tElement","listAtrs2","listAtrs","mElem2","mElem1","textContent","t1","XPath_GramaticaAsc","Optimizacion_Grammar","Include","TipoDeclaracion3D","INCLUDE","Variable","VARIABLE","firstId","MAIN","METODO","ASIGARREGLO","ARREGLOASIG","ARREGLOASIGARREGLO","GOTO","Llamada3D","LLAMADA","Printf3D","PRINTF","IF","Return3D","RETURN","PRIMITIVA","opcionales","retType","opcional","respuesta","auxLista","newNodo","listaFor","identifier","listaSort","criterioActual","listaSimbs","listaOrdenada","ordenarPorCriterios","Ordenada","consultaTemp","auxRespuesta","j","auxSimbRes","textoCompare","obtenerTexto","numero","numLista","isNaN","reOrdenar","desempatar","valComparar","valYaEnLista","posCriterio","nuevoCriterio","auxYaEnLista","auxRespuestaYaEnLista","auxSimbYaRes","textoYaEnLista","nuevoTexto","nuevoSimb","indiceReemplazar","nuevaListaText","nuevaListaSimb","funcionXQ","vacio","llamadaFuncion","tempC","atributos","listaHtml","listaVarCall","respThen","listaElseIf","respElse","condicionElse","condicionThen","isVacio","obtenerResponse","aplicado","unElseIf","condicionCumple","flwor","nombreMetodo","metodo","NativaXPath","Editor","props","handleChange","editor","data","value","onChange","open","language","displayName","className","type","onClick","setState","icon","faCompressAlt","faExpandAlt","onBeforeChange","lineWrapping","lint","mode","theme","lineNumbers","Component","TranslateXPath","listaConsultas","tabla","contHP","contSP","xPathHeap","xPathStack","TRASLADARSIMBOLO","getTrasladarSimbolo","IMPRIMIRATRIBUTO","IMPRIMIRCONSULTA","IMPRIMIRETIQUETA","IMPRIMIRTEXTO","BUSCARTEXTO","getBuscarTexto","traducir","traduccionMain","entActual","trad","auxN","traducirNodo","buscarSimbolos","traducirSimb","traducirPredicado","respx","obtenerAsterisco","obtenerAtributos","respsi","xdsi","respsidot","xdsidot","enx","traducirNombre","stackPointer","simb3dir","entSimbolo","el","operaciones","obtenerSigno","continuarTrad","varTemporal","ops","numIzq","signo","numDer","ReglaOptimizacion","TraduceXML","instruccionXQuery","xqEntorno","contS","contH","heap","strXPathTraduccion","strXQueryTraduccion","cuerpo","getEncabezado","getDeclaraTemps","analizador","traducirXPath","strFuncs","getFuncionesUtilizadas","getDeclaraTempsXPATH","iniciarTraduccion","getDeclaraTempsXQuery","getMain","getCodeC","entrada","finalPadre","getIDAsignacionHeap","getVALAsignacionHeap","palabra","asignacion","numFinalizacion","Optimizacion","codigoAntes","codigoAhora","REGLA1","REGLA2","REGLA3","REGLA4","REGLA5","REGLA6","REGLA7","REGLA8","REGLA9","REGLA10","Representacion3D","Optimizer","reporte","regla1","regla2","regla3_y_regla4","regla5","reglasAlgebraicas","arrayInst","cadena","inst","codigoNuevo","codigoEliminado","numRegla","col","codeBefore","instruccionesToString","codeNow","nodoOpt","nuevasInstrucciones","getTipoInstruccion","isOptimizada","setOptimizada","agregarReporte","marcarAsOptimizadas","nombreEtiqueta","seOptimizo","miIf","sigInst","ifAnterior","crearIfAnterior","etFalsa","gotoAnterior","nameEtiquetaLV","instEtAnterior","getCodigoEtiqueta","cambiarReferencias","instEtNueva","auxiliar1","REPRESENTACION","auxiliar2","auxReporte","shift","isEliminada","sonConstantes","getValorRelacional","etVerdadera","getTipoPrim3D","Id1","Id2","auxInst","auxiliarInstr","auxAsig","expr","getTipoOperacion","nuevaExpr","nuevaAsig","REGLA15","REGLA11","REGLA12","REGLA13","REGLA14","etiquetaEliminada","nuevaReferencia","getReferencia","changeReferencia","opt","etiquetaBuscar","addEtiqueta","instruccionesEtiqueta","setEliminada","unIf","cond","xqGlobal","limpiar","reporteOptimiza","xPathEntry","xQueryEntry","instrucciones","Analizador","OptimizacionGrammar","optimizador","aplicar","XMLGramDesc","objetos","XMLGramAsc","XPathGramAsc","ToString","XPathGramDesc","XQueryGram","err","getMensaje","cadenaDot","getSimbolosEntorno","simbolos","getTipoDato","getLinea","getColumna","getPosicion","getDescripcion","getCodigoAntes","getCodigoAhora","tipoReglaToString","getFila","recorridoCst","getRaiz","concatena","traducirXML","App","modalOpen","modalOpenCst","alertOpen","opcion","consoleText","fileName","xml","xpath","reptHtml","fileDownloadUrl","selectedOption","dot","c3d","open3D","tituloRepHTML","abrirModal","handleClose","handleOpen","handleXML","handleXPath","handleDot","handleC3d","upload","event","preventDefault","dofileUpload","click","evt","fileObj","target","files","reader","FileReader","fileloaded","fileContents","result","name","bind","onload","readAsText","downloadXML","output","blob","Blob","URL","createObjectURL","hoy","Date","formato","getDate","getMonth","getFullYear","getHours","getMinutes","dofileDownload","revokeObjectURL","downloadXPath","onValueChange","formSubmit","analizar","xmlAscendente","XPathAscendente","xmlDescendente","XQueryAscendente","generar3D","traduceXML","optimizar","limpiarOptimizacion","optimizacion","reporteTablaSimbolos","getRepTablaSimbolos","reporteListaErrores","getRepErrores","reporteOptimizacion","getRepOptimizacion","mostrarCst","reporteCst","modalStyles","position","top","left","transform","style","width","AppBar","background","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Grid","container","spacing","item","xs","backgroundColor","faFileAlt","faFileUpload","display","multiple","accept","ref","padding","faSave","download","href","faPlay","faCode","faCogs","Paper","InputLabel","fontWeight","fontFamily","disabled","rows","visibility","Button","borderStyle","borderRadius","Graphviz","fit","zoom","dangerouslySetInnerHTML","__html","Collapse","in","Alert","size","fontSize","Modal","isOpen","ModalHeader","ModalBody","onSubmit","checked","ModalFooter","React","ReactDOM","render","document","getElementById"],"mappings":"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AAG,IAAKC,EAAM,CAAC,EAAG,GAAIC,EAAM,CAAC,EAAG,GAAIC,EAAM,CAAC,EAAG,GAAIC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI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,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAMC,EAAM,CAAC,EAAG,KAAMC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAMC,EAAM,CAAC,EAAG,KAAMC,EAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAKC,EAAM,CAAC,EAAG,KAAMC,EAAM,CAAC,EAAG,KAAMC,EAAM,CAAC,EAAG,KAAMC,EAAM,CAAC,EAAG,KAAMC,EAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAMC,EAAM,CAAC,EAAG,KAAMC,EAAM,CAAC,EAAG,KAAMC,EAAM,CAAC,EAAG,KAAMC,EAAM,CAAC,EAAG,KAAMC,EAAM,CAAC,EAAG,KAAMC,EAAM,CAAC,EAAG,KAAMC,EAAM,CAAC,EAAG,KAAMC,EAAM,CAAC,EAAG,KAAMC,EAAM,CAAC,EAAG,KAAMC,EAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,EAAG,KAAMkS,GAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAMC,GAAO,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,GAAI,IAAKC,GAAO,CAAC,EAAG,IAAKC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,G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AG,GAAIC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,GAAIC,EAAM,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,KAAMC,EAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAA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","file":"static/js/main.deaf51c0.chunk.js","sourcesContent":["import { Entorno } from \"../AST/Entorno\";\r\nimport { Tipo } from \"../AST/Tipo\";\r\nimport { Consulta } from \"../XPath/Consulta\";\r\nexport class Primitiva {\r\n    constructor(valor, tipo, linea, columna, isXQuery) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.valor = valor;\r\n        this.isXQuery = isXQuery;\r\n    }\r\n    getTipo(ent) {\r\n        return this.tipo;\r\n    }\r\n    get3Dir(ent) {\r\n        if (this.tipo === TipoPrim.IDENTIFIER) {\r\n            return this.getValorInicial(ent);\r\n        }\r\n        let x = this.getValor(ent);\r\n        return x;\r\n    }\r\n    getValorInicial(ent) {\r\n        return this.valor;\r\n    }\r\n    getValor(ent) {\r\n        if (this.tipo === TipoPrim.IDENTIFIER) {\r\n            /* SE BUSCAN LAS ETIQUETAS CON ESTE NOMBRE */\r\n            if (ent.existeSimbolo(this.valor)) {\r\n                return ent.obtenerSimbolo(this.valor);\r\n            }\r\n            else {\r\n                //errores.agregarError('semantico', 'No existe el simbolo ' + this.valor, this.linea, this.columna);\r\n                //this.tipo = TipoPrim.ERROR;\r\n                return null;\r\n            }\r\n        }\r\n        else if (this.tipo === TipoPrim.ATRIBUTO) {\r\n            if (!this.isXQuery) {\r\n                /* SE BUSCAN LOS ATRIBUTOS CON ESTE NOMBRE */\r\n                this.tipo = TipoPrim.FUNCION;\r\n                //0. Se devolver un entorno temporal, que contendra todos los que coinciden con la busqueda.\r\n                let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                //1. Obtener el padre.\r\n                let padre = ent.padre;\r\n                //2. Sobre el padre buscar todos los que sean ent.nombre\r\n                padre.tsimbolos.forEach((e) => {\r\n                    let elem = e.valor;\r\n                    if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === ent.nombre) {\r\n                        //Ahora en este entorno ver si tiene un atributo como el que se busca.\r\n                        elem.valor.tsimbolos.forEach((c2) => {\r\n                            let aux = c2.valor;\r\n                            if (aux.getTipo() === Tipo.ATRIBUTO && (this.valor === \"*\" || this.valor === aux.getNombre())) {\r\n                                //Si se encuentra el atributo o es *, ingresar al entorno temporal\r\n                                entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                return entTemporal;\r\n            }\r\n            else {\r\n                //Obtener solo si el atributo existe en este entorno (no buscar en el padre)\r\n                let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                for (let i = 0; i < ent.tsimbolos.length; i++) {\r\n                    let elem = ent.tsimbolos[i].valor;\r\n                    if (elem.getTipo() === Tipo.ATRIBUTO && elem.getNombre() === this.valor) {\r\n                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                        return entTemporal;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n        }\r\n        else if (this.tipo === TipoPrim.FUNCION || this.valor == \"last()\") {\r\n            //Si es funcion, ver de cual funcion se trata\r\n            if (this.valor instanceof Array) {\r\n                this.tipo = TipoPrim.CONSULTA;\r\n                return this.getValor(ent);\r\n            }\r\n            switch (this.valor.toLowerCase()) {\r\n                case \"last()\":\r\n                    //Para last, calcular sobre el entorno padre, cual es el numero del ultimo\r\n                    //que tiene nombre como ent.nombre\r\n                    //1. Obtener padre.\r\n                    let padre = ent.padre;\r\n                    //2. Sobre el padre, contar cual es el ultimo que tiene ent.nobmre\r\n                    let indice = 0; //Se empieza en 0, por si no se encuentra devuelva 0. (y asi retornaria nada en la consulta)\r\n                    padre.tsimbolos.forEach((e) => {\r\n                        let elem = e.valor;\r\n                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === ent.nombre) {\r\n                            //Se encontro, sumar al indice\r\n                            indice++;\r\n                        }\r\n                    });\r\n                    //3. al terminar devolver indice\r\n                    //4. Cambiar su tipo a tipo INTEGER\r\n                    this.tipo = TipoPrim.INTEGER;\r\n                    if (indice > 0) {\r\n                        return indice;\r\n                    }\r\n                    else {\r\n                        return 0;\r\n                    }\r\n                default:\r\n                    //Para position(), devolver lo mismo.\r\n                    return this.valor;\r\n            }\r\n        }\r\n        else if (this.tipo == TipoPrim.CONSULTA) {\r\n            this.tipo = TipoPrim.FUNCION;\r\n            //Consulta devuelve TRUE si la ruta existe\r\n            //Es una lista de nodos. entonces crear una consulta \r\n            let tempConsulta = new Consulta(this.valor, this.linea, this.columna);\r\n            //Obtener padre, porque se deben buscar en todos los que tengan ent.nombre\r\n            let entTemporal = new Entorno(\"Temporal\", null, null);\r\n            let padre = ent.padre;\r\n            padre.tsimbolos.forEach((e) => {\r\n                let elem = e.valor;\r\n                if (elem.getNombre() === ent.nombre) {\r\n                    //Sobre este entorno ejecutar la consulta para ver si existe la ruta.\r\n                    let result = tempConsulta.ejecutar(elem.valor);\r\n                    if (result.length > 0) {\r\n                        //La consulta si existe\r\n                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                    }\r\n                    else {\r\n                    }\r\n                }\r\n            });\r\n            return entTemporal;\r\n        }\r\n        else\r\n            return this.valor;\r\n    }\r\n}\r\nexport var TipoPrim;\r\n(function (TipoPrim) {\r\n    TipoPrim[TipoPrim[\"INTEGER\"] = 0] = \"INTEGER\";\r\n    TipoPrim[TipoPrim[\"DOUBLE\"] = 1] = \"DOUBLE\";\r\n    TipoPrim[TipoPrim[\"CADENA\"] = 2] = \"CADENA\";\r\n    TipoPrim[TipoPrim[\"IDENTIFIER\"] = 3] = \"IDENTIFIER\";\r\n    TipoPrim[TipoPrim[\"ATRIBUTO\"] = 4] = \"ATRIBUTO\";\r\n    TipoPrim[TipoPrim[\"DOT\"] = 5] = \"DOT\";\r\n    TipoPrim[TipoPrim[\"FUNCION\"] = 6] = \"FUNCION\";\r\n    TipoPrim[TipoPrim[\"BOOLEAN\"] = 7] = \"BOOLEAN\";\r\n    TipoPrim[TipoPrim[\"CONSULTA\"] = 8] = \"CONSULTA\";\r\n    TipoPrim[TipoPrim[\"ERROR\"] = 9] = \"ERROR\";\r\n    TipoPrim[TipoPrim[\"FUNCIONXQUERY\"] = 10] = \"FUNCIONXQUERY\";\r\n    TipoPrim[TipoPrim[\"XQUERYIDENTIFIER\"] = 11] = \"XQUERYIDENTIFIER\";\r\n})(TipoPrim || (TipoPrim = {}));\r\n","export var Tipo;\r\n(function (Tipo) {\r\n    Tipo[Tipo[\"STRING\"] = 0] = \"STRING\";\r\n    Tipo[Tipo[\"ETIQUETA\"] = 1] = \"ETIQUETA\";\r\n    Tipo[Tipo[\"ATRIBUTO\"] = 2] = \"ATRIBUTO\";\r\n    Tipo[Tipo[\"ETIQUETA_UNIQUE\"] = 3] = \"ETIQUETA_UNIQUE\";\r\n    Tipo[Tipo[\"XQ_VAR\"] = 4] = \"XQ_VAR\";\r\n    Tipo[Tipo[\"XQ_FUNC\"] = 5] = \"XQ_FUNC\";\r\n    Tipo[Tipo[\"XQ_NUMB\"] = 6] = \"XQ_NUMB\";\r\n})(Tipo || (Tipo = {}));\r\n","export default class mierror {\r\n    constructor(tipoError, descripcion, linea, columna) {\r\n        this.tipoError = tipoError;\r\n        this.descripcion = descripcion;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n    getTipo() {\r\n        return this.tipoError;\r\n    }\r\n    getDescripcion() {\r\n        return this.descripcion;\r\n    }\r\n    getLinea() {\r\n        return this.linea;\r\n    }\r\n    getColumna() {\r\n        return this.columna;\r\n    }\r\n    getMensaje() {\r\n        return ('Error ' + this.tipoError + ': ' +\r\n            this.descripcion +\r\n            ' en la linea ' + this.linea +\r\n            ' y columna ' + this.columna);\r\n    }\r\n}\r\n","import mierror from './Error';\r\nclass ListaError {\r\n    constructor() {\r\n        this.listaError = new Array();\r\n        if (typeof ListaError._instance === \"object\") {\r\n            return ListaError._instance;\r\n        }\r\n        ListaError._instance = this;\r\n        return this;\r\n    }\r\n    static getInstance() {\r\n        return this._instance;\r\n    }\r\n    agregarError(tipo, descripcion, linea, columna) {\r\n        this.listaError.push(new mierror(tipo, descripcion, linea, columna));\r\n    }\r\n    getSize() {\r\n        return this.listaError.length;\r\n    }\r\n    getError(indice) {\r\n        return this.listaError[indice];\r\n    }\r\n    limpiar() {\r\n        this.listaError = [];\r\n    }\r\n}\r\nconst errores = new ListaError();\r\nexport default errores;\r\n","export class Nodo {\r\n    constructor(nombre, tipo, linea, columna, predicado, tipoAxis, nodeTest) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.nombre = nombre;\r\n        this.predicado = predicado;\r\n        this.fromRoot = true;\r\n        this.tipoAxis = tipoAxis;\r\n        this.NodeTest = nodeTest;\r\n    }\r\n    get3Dir() {\r\n    }\r\n    ToString() {\r\n        if (this.predicado != undefined) {\r\n            return this.nombre + \" \" + this.predicado;\r\n        }\r\n        return this.nombre;\r\n    }\r\n    isFromRoot() {\r\n        return this.fromRoot;\r\n    }\r\n    setFromRoot(fromRoot) {\r\n        this.fromRoot = fromRoot;\r\n    }\r\n    getValorInicial() {\r\n        return this.nombre;\r\n    }\r\n    getValor() {\r\n        if (this.NodeTest != undefined) {\r\n            return this.NodeTest.getNombre();\r\n        }\r\n        return this.nombre;\r\n    }\r\n    getNombre() {\r\n        return this.nombre;\r\n    }\r\n    getPredicado() {\r\n        if (this.NodeTest != undefined) {\r\n            return this.NodeTest.getPredicado();\r\n        }\r\n        return this.predicado;\r\n    }\r\n    getTipo() {\r\n        return this.tipo;\r\n    }\r\n    isAxis() {\r\n        if (this.tipoAxis != undefined) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    getTipoAxis() {\r\n        return this.tipoAxis;\r\n    }\r\n}\r\nexport var TipoNodo;\r\n(function (TipoNodo) {\r\n    TipoNodo[TipoNodo[\"IDENTIFIER\"] = 0] = \"IDENTIFIER\";\r\n    TipoNodo[TipoNodo[\"ATRIBUTO\"] = 1] = \"ATRIBUTO\";\r\n    TipoNodo[TipoNodo[\"DOT\"] = 2] = \"DOT\";\r\n    TipoNodo[TipoNodo[\"DOTDOT\"] = 3] = \"DOTDOT\";\r\n    TipoNodo[TipoNodo[\"ASTERISCO\"] = 4] = \"ASTERISCO\";\r\n    TipoNodo[TipoNodo[\"AXIS\"] = 5] = \"AXIS\";\r\n    TipoNodo[TipoNodo[\"FUNCION\"] = 6] = \"FUNCION\";\r\n    TipoNodo[TipoNodo[\"NODOERROR\"] = 7] = \"NODOERROR\";\r\n})(TipoNodo || (TipoNodo = {}));\r\nexport var TipoAxis;\r\n(function (TipoAxis) {\r\n    TipoAxis[TipoAxis[\"ANCESTOR\"] = 0] = \"ANCESTOR\";\r\n    TipoAxis[TipoAxis[\"ANCESTORORSELF\"] = 1] = \"ANCESTORORSELF\";\r\n    TipoAxis[TipoAxis[\"ATTRIBUTE\"] = 2] = \"ATTRIBUTE\";\r\n    TipoAxis[TipoAxis[\"CHILD\"] = 3] = \"CHILD\";\r\n    TipoAxis[TipoAxis[\"DESCENDANT\"] = 4] = \"DESCENDANT\";\r\n    TipoAxis[TipoAxis[\"DESCENDANTORSELF\"] = 5] = \"DESCENDANTORSELF\";\r\n    TipoAxis[TipoAxis[\"FOLLOWING\"] = 6] = \"FOLLOWING\";\r\n    TipoAxis[TipoAxis[\"FOLLOWINGSIBLING\"] = 7] = \"FOLLOWINGSIBLING\";\r\n    TipoAxis[TipoAxis[\"PARENT\"] = 8] = \"PARENT\";\r\n    TipoAxis[TipoAxis[\"PRECEDING\"] = 9] = \"PRECEDING\";\r\n    TipoAxis[TipoAxis[\"PRECEDINGSIBLING\"] = 10] = \"PRECEDINGSIBLING\";\r\n    TipoAxis[TipoAxis[\"SELF\"] = 11] = \"SELF\";\r\n    TipoAxis[TipoAxis[\"NAMESPACE\"] = 12] = \"NAMESPACE\";\r\n})(TipoAxis || (TipoAxis = {}));\r\n","import errores from \"../Global/ListaError\";\r\nimport { Tipo } from \"./Tipo\";\r\nexport class Entorno {\r\n    constructor(nombre, padre, global) {\r\n        this.tsimbolos = new Array();\r\n        this.nombre = nombre;\r\n        this.padre = padre;\r\n        if (global === null)\r\n            this.global = this;\r\n        else\r\n            this.global = global;\r\n    }\r\n    agregarSimbolo(nombre, simbolo) {\r\n        this.tsimbolos.push({ 'nombre': nombre, 'valor': simbolo });\r\n    }\r\n    sobreEscribirSimbolo(nombre, simbolo) {\r\n        for (let a = this; a != null; a = a.padre) {\r\n            for (let i = 0; i < a.tsimbolos.length; i++) {\r\n                if (a.tsimbolos[i].nombre.toString().toLowerCase() === nombre.toString().toLowerCase()) {\r\n                    let nuevo = { 'nombre': nombre, 'valor': simbolo };\r\n                    a.tsimbolos[i] = nuevo;\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        errores.agregarError('semantico', 'No existe el simbolo ' + nombre, -1, -1);\r\n        return false;\r\n    }\r\n    getStringTipo(t) {\r\n        switch (t) {\r\n            case Tipo.STRING:\r\n                return 'Cadena';\r\n            case Tipo.ETIQUETA:\r\n                return 'Etiqueta';\r\n            case Tipo.ATRIBUTO:\r\n                return 'Atributo';\r\n            case Tipo.XQ_FUNC:\r\n                return \"Funcion XQuery\";\r\n            case Tipo.XQ_VAR:\r\n                return \"Variable XQuery\";\r\n        }\r\n        return '';\r\n    }\r\n    obtenerSimbolo(nombre) {\r\n        for (let a = this; a != null; a = a.padre) {\r\n            for (let i = 0; i < a.tsimbolos.length; i++) {\r\n                if (a.tsimbolos[i].nombre.toString().toLowerCase() === nombre.toString().toLowerCase()) {\r\n                    return a.tsimbolos[i].valor;\r\n                }\r\n            }\r\n        }\r\n        errores.agregarError('semantico', 'No existe el simbolo ' + nombre, -1, -1);\r\n        return null;\r\n    }\r\n    /* Metodo para cambiar el valor del simbolo */\r\n    setSimbolo(nombre, simbolo) {\r\n        //console.log(\"Entra a set simbolo\");\r\n        for (let a = this; a != null; a = a.padre) {\r\n            for (let i = 0; i < a.tsimbolos.length; i++) {\r\n                //console.log(a.tsimbolos[i].nombre.toString().toLowerCase());\r\n                //console.log(nombre.toString().toLowerCase());\r\n                let aux = a.tsimbolos[i];\r\n                if (aux.nombre.toString().toLowerCase() === nombre.toString().toLowerCase()) {\r\n                    aux.valor = simbolo;\r\n                    //console.log(a.tsimbolos[i].valor);\r\n                    //console.log(this.tsimbolos[i].valor);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /* Verifica si el simbolo existe en el entorno actual */\r\n    existeSimbolo(nombre) {\r\n        for (let i = 0; i < this.tsimbolos.length; i++) {\r\n            if (this.tsimbolos[i].nombre.toString().toLowerCase() === nombre.toString().toLowerCase())\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","export class Primitiva3D {\r\n    constructor(tipo, tipoPrimitiva, valor, codigo3D, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.valor = valor;\r\n        this.tipo = tipo;\r\n        this.tipoPrimitiva = tipoPrimitiva;\r\n        this.codigo3D = codigo3D;\r\n    }\r\n    getCodigo3D() {\r\n        return this.valor;\r\n    }\r\n    getValor() {\r\n        return this.valor;\r\n    }\r\n    getTipoPrim3D() {\r\n        return this.tipoPrimitiva;\r\n    }\r\n    getTipoExpresion() {\r\n        return this.tipo;\r\n    }\r\n}\r\nexport var TipoPrim3D;\r\n(function (TipoPrim3D) {\r\n    TipoPrim3D[TipoPrim3D[\"IDENTIFIER\"] = 0] = \"IDENTIFIER\";\r\n    TipoPrim3D[TipoPrim3D[\"DOUBLE\"] = 1] = \"DOUBLE\";\r\n    TipoPrim3D[TipoPrim3D[\"INTEGER\"] = 2] = \"INTEGER\";\r\n})(TipoPrim3D || (TipoPrim3D = {}));\r\n","import { Tipo } from \"../AST/Tipo\";\r\nimport { TipoAxis, TipoNodo } from \"./Nodo\";\r\nimport { TipoPrim } from \"../Expresiones/Primitiva\";\r\nexport class Consulta {\r\n    constructor(listaNodos, linea, columna) {\r\n        this.listaNodos = listaNodos;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n    ToString() {\r\n        let cad = \"\";\r\n        this.listaNodos.forEach((nodo) => {\r\n            if (nodo.isFromRoot()) {\r\n                cad += \"/\" + nodo.getNombre();\r\n            }\r\n            else {\r\n                cad += \"//\" + nodo.getNombre();\r\n            }\r\n            if (nodo.isAxis()) {\r\n                cad += \"::\" + nodo.getValor();\r\n            }\r\n            if (nodo.getPredicado() != undefined) {\r\n                cad += \"[\" + nodo.getPredicado() + \"]\";\r\n            }\r\n        });\r\n        return cad;\r\n    }\r\n    ejecutar(global) {\r\n        //Recorrer lista de nodos\r\n        let [salida, _] = this.obtenerSalida(0, global, null, false);\r\n        return salida;\r\n    }\r\n    simbolosToString(simbs) {\r\n        let cadConsulta = \"\";\r\n        simbs.forEach((auxSimb) => {\r\n            if (!(typeof auxSimb === \"string\")) {\r\n                switch (auxSimb.getTipo()) {\r\n                    case Tipo.ATRIBUTO:\r\n                        cadConsulta += auxSimb.getNombre() + \"=\" + auxSimb.getValor() + \"\\n\";\r\n                        break;\r\n                    case Tipo.ETIQUETA:\r\n                        if (auxSimb.valor !== undefined) {\r\n                            cadConsulta += this.escribirConsultaObjeto(auxSimb, 0);\r\n                        }\r\n                        else {\r\n                            cadConsulta += this.escribirEtiquetaPadre(auxSimb);\r\n                        }\r\n                        break;\r\n                    case Tipo.STRING:\r\n                        cadConsulta += this.concatHijoTexto(auxSimb, 0);\r\n                        break;\r\n                    default:\r\n                        cadConsulta += \"---> \" + auxSimb.getTipo();\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                cadConsulta += auxSimb + \"\\n\";\r\n            }\r\n        });\r\n        return cadConsulta;\r\n    }\r\n    obtenerSalida(pos, ent, elemAux, rompeCiclo) {\r\n        let salida = [];\r\n        let actualNode = this.listaNodos[pos];\r\n        switch (actualNode.getTipo()) {\r\n            case TipoNodo.IDENTIFIER:\r\n                //Buscar si este id existe en el entorno.\r\n                //Antes de entrar al foreach revisar si se debe hacer para cada elemento  o no.\r\n                for (let i = 0; i < ent.tsimbolos.length; i++) {\r\n                    //Ver si este simbolo es igual a actualNode.getNombre()\r\n                    let elem = ent.tsimbolos[i].valor;\r\n                    if (elem.getNombre() === actualNode.getNombre()) {\r\n                        //Si existe este simbolo en el entorno.\r\n                        //Revisar Si tiene predicado este nodo.\r\n                        let predicado = actualNode.getPredicado();\r\n                        if (predicado != undefined) {\r\n                            let auxSal;\r\n                            [auxSal, rompeCiclo] = this.obtenerConsultaPredicado(predicado, pos, ent, elemAux, rompeCiclo, actualNode.getValor(), false);\r\n                            salida = salida.concat(auxSal);\r\n                            break;\r\n                        }\r\n                        //1. Revisar si es el ultimo nodo a buscar\r\n                        if (pos + 1 < this.listaNodos.length) {\r\n                            //Aun existen mas nodos en la consulta, ir a buscar eso\r\n                            let auxSal;\r\n                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elem, rompeCiclo);\r\n                            salida = salida.concat(auxSal);\r\n                        }\r\n                        else {\r\n                            //Es el ultimo nodo en la consulta, escribir su informacion de objeto\r\n                            salida.push(elem);\r\n                        }\r\n                    }\r\n                    else if (!actualNode.isFromRoot()) {\r\n                        //Este nodo es de tipo //, entonces entrar a buscar de todos modos.\r\n                        if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                            let auxSal;\r\n                            [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elem, rompeCiclo);\r\n                            salida = salida.concat(auxSal);\r\n                        }\r\n                    }\r\n                    if (rompeCiclo) {\r\n                        //Salir del ciclo del for.\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            case TipoNodo.ATRIBUTO:\r\n                //Ver si es @algo o @*\r\n                if (actualNode.getNombre() === \"*\") {\r\n                    //Si es asterisco, obtener todos los atributos del entorno actual\r\n                    if (actualNode.isFromRoot()) {\r\n                        //Solo es /, buscar solo en el entorno actual todos los atributos.\r\n                        ent.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (elem.getTipo() === Tipo.ATRIBUTO) {\r\n                                salida.push(elem.valor);\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        //Es //, buscar en el entorno actual y los entornos hijos.\r\n                        ent.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (elem.getTipo() === Tipo.ATRIBUTO) {\r\n                                salida.push(elem.valor);\r\n                            }\r\n                            else if (elem.getTipo() === Tipo.STRING) {\r\n                                salida.push(elem.valor);\r\n                            }\r\n                            else if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                //Ir a buscar atributos al entorno de esta etiqueta\r\n                                salida = salida.concat(this.getConsultaAtributos(elem, 0, \"*\"));\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    //El atributo tiene identificador, buscar solo los atributos que tienen este nombre.\r\n                    if (actualNode.isFromRoot()) {\r\n                        //Solo es /, buscar solo en el entorno actual todos los atributos.\r\n                        ent.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (elem.getTipo() === Tipo.ATRIBUTO) {\r\n                                //Concatenar solo si los nombres son iguales.\r\n                                if (actualNode.getNombre() === elem.getNombre()) {\r\n                                    salida.push(elem.valor);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        //Es //, buscar en el entorno actual y los entornos hijos.\r\n                        ent.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (elem.getTipo() === Tipo.ATRIBUTO) {\r\n                                if (actualNode.getNombre() === elem.getNombre()) {\r\n                                    salida.push(elem.valor);\r\n                                }\r\n                            }\r\n                            else if (elem.getTipo() === Tipo.STRING) {\r\n                                salida.push(elem.valor);\r\n                            }\r\n                            else if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                //Ir a buscar atributos al entorno de esta etiqueta\r\n                                salida = salida.concat(this.getConsultaAtributos(elem, 0, actualNode.getNombre()));\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n            case TipoNodo.DOTDOT:\r\n                /*\r\n                 **\r\n                 **  .. (DOTDOT) ESTA BUGGEADO :(\r\n                 **\r\n                 */\r\n                //Ver si es el ultimo o no\r\n                if (pos + 1 < this.listaNodos.length) {\r\n                    //Aun hay mas nodos.\r\n                    //Avanzar en la lista de nodos (pos+1) pero regresar al entorno anterior (padre)\r\n                    let auxSal;\r\n                    [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, ent.padre, ent.padre.valor, rompeCiclo);\r\n                    salida = salida.concat(auxSal);\r\n                    // console.log(\"SALIDA: \", salida)\r\n                }\r\n                else {\r\n                    //Es el ultimo nodo, entonces obtener consulta sobre este entorno\r\n                    let father = ent.padre;\r\n                    salida.push(father);\r\n                }\r\n                break;\r\n            case TipoNodo.DOT:\r\n                //Ver si es el ultimo o no\r\n                if (pos + 1 < this.listaNodos.length) {\r\n                    //Aun hay mas nodos.\r\n                    //Avanzar en la lista de nodos (pos+1) pero mantener el mismo entorno\r\n                    let auxSal;\r\n                    [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, ent, elemAux, rompeCiclo);\r\n                    salida = salida.concat(auxSal);\r\n                }\r\n                else {\r\n                    //Es el ultimo nodo, entonces obtener consulta sobre este entorno\r\n                    if (elemAux.getTipo() === Tipo.STRING) {\r\n                        //Esta etiqueta contiene solo texto.\r\n                        salida.push(elemAux);\r\n                    }\r\n                    else if (elemAux.getTipo() === Tipo.ETIQUETA) {\r\n                        salida.push(elemAux);\r\n                    }\r\n                }\r\n                break;\r\n            case TipoNodo.ASTERISCO:\r\n                //* Obtener Todo\r\n                //1. Ver si existen mas nodos\r\n                if (pos + 1 < this.listaNodos.length) {\r\n                    //Aun hay mas nodos.\r\n                    ent.tsimbolos.forEach((e) => {\r\n                        if (e.valor.getTipo() === Tipo.ETIQUETA) {\r\n                            let auxSal;\r\n                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, e.valor.valor, e.valor, rompeCiclo);\r\n                            salida = salida.concat(auxSal);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    //Es el ultimo nodo.\r\n                    ent.tsimbolos.forEach((e) => {\r\n                        let elem = e.valor;\r\n                        if (elem.getTipo() === Tipo.STRING) {\r\n                            salida.push(elem);\r\n                        }\r\n                        else if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                            salida.push(elem);\r\n                        }\r\n                    });\r\n                }\r\n                break;\r\n            case TipoNodo.FUNCION:\r\n                //El nombre de la funcion viene en el valor del nodo. (actualNode.getValor())\r\n                switch (actualNode.getValor().toLocaleLowerCase()) {\r\n                    case \"text()\":\r\n                        //Traer solo el texto que tenga adentro el entorno actual\r\n                        ent.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (elem.getTipo() === Tipo.STRING) {\r\n                                //Es texto, entonces devolver.\r\n                                salida.push(elem);\r\n                            }\r\n                            //Ver si el nodo es de tipo //\r\n                            if (!actualNode.isFromRoot() && elem.getTipo() == Tipo.ETIQUETA) {\r\n                                let auxSal;\r\n                                [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                salida = salida.concat(auxSal);\r\n                            }\r\n                        });\r\n                        break;\r\n                    case \"node()\":\r\n                        //Todo lo que tenga adentro el nodo en el entorno actual\r\n                        ent.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                salida.push(elem);\r\n                            }\r\n                            else if (elem.getTipo() == Tipo.STRING) {\r\n                                salida.push(elem);\r\n                            }\r\n                        });\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoNodo.AXIS:\r\n                switch (actualNode.getTipoAxis()) {\r\n                    case TipoAxis.ANCESTOR:\r\n                        /*\r\n                         ** \tSelects all ancestors (parent, grandparent, etc.) of the current node\r\n                         */\r\n                        let nombreParent = actualNode.getValor();\r\n                        if (nombreParent != \"*\") {\r\n                            //1. Buscar si existe un entorno padre de este nodo que tenga este nombre.\r\n                            let tmpEnt = ent.padre;\r\n                            while (tmpEnt != null) {\r\n                                if (tmpEnt.nombre === nombreParent) {\r\n                                    //2. Si existe, obtener consulta a partir de este entorno\r\n                                    //0. Ver si existen mas nodos\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Aun hay mas nodos despues de este, solo cambiar al entorno encontrado.\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, tmpEnt, elemAux, rompeCiclo);\r\n                                        salida = salida.concat(auxSal);\r\n                                    }\r\n                                    else {\r\n                                        salida.push(tmpEnt);\r\n                                    }\r\n                                    break;\r\n                                }\r\n                                tmpEnt = tmpEnt.padre;\r\n                            }\r\n                        }\r\n                        else {\r\n                            //Obtener todos\r\n                            let tmpEnt = ent.padre;\r\n                            while (tmpEnt.padre != null) {\r\n                                tmpEnt = tmpEnt.padre;\r\n                            }\r\n                            if (pos + 1 < this.listaNodos.length) {\r\n                                //Aun hay mas nodos despues de este, solo cambiar al entorno encontrado.\r\n                                let auxSal;\r\n                                [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, tmpEnt, elemAux, rompeCiclo);\r\n                                salida = salida.concat(auxSal);\r\n                            }\r\n                            else {\r\n                                salida.push(tmpEnt);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoAxis.ANCESTORORSELF:\r\n                        if (actualNode.getValor() != \"*\") {\r\n                            //1. Buscar si existe un entorno padre de este nodo que tenga este nombre.\r\n                            let tmpEnt = ent.padre;\r\n                            if (!actualNode.isFromRoot()) {\r\n                                //Empezar a buscar en todos.\r\n                                ent.tsimbolos.forEach((e) => {\r\n                                    let elem = e.valor;\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                        let auxS;\r\n                                        [auxS, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                        salida = salida.concat(auxS);\r\n                                    }\r\n                                });\r\n                            }\r\n                            while (tmpEnt != null) {\r\n                                if (tmpEnt.nombre === actualNode.getValor()) {\r\n                                    ///0. Ver si tiene predicate\r\n                                    let predicado = actualNode.getPredicado();\r\n                                    if (predicado != undefined) {\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerConsultaPredicado(predicado, pos, ent, elemAux, rompeCiclo, actualNode.getValor(), true);\r\n                                        salida = salida.concat(auxSal);\r\n                                        break;\r\n                                    }\r\n                                    //2. Si existe, obtener consulta a partir de este entorno\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Aun hay mas nodos despues de este, solo cambiar al entorno encontrado.\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, tmpEnt, elemAux, rompeCiclo);\r\n                                        salida = salida.concat(auxSal);\r\n                                    }\r\n                                    else {\r\n                                        salida.push(tmpEnt);\r\n                                    }\r\n                                    //3. Obtener consulta tambien a partir del entorno actual\r\n                                    salida.push(tmpEnt); // <-- ent ?? \r\n                                    break;\r\n                                }\r\n                                tmpEnt = tmpEnt.padre;\r\n                            }\r\n                        }\r\n                        else {\r\n                            //Obtener todos\r\n                            let tmpEnt = ent.padre;\r\n                            while (tmpEnt.padre != null) {\r\n                                tmpEnt = tmpEnt.padre;\r\n                            }\r\n                            if (pos + 1 < this.listaNodos.length) {\r\n                                //Aun hay mas nodos despues de este, solo cambiar al entorno encontrado.\r\n                                let auxSal;\r\n                                [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, tmpEnt, elemAux, rompeCiclo);\r\n                                salida = salida.concat(auxSal);\r\n                            }\r\n                            else {\r\n                                salida.push(tmpEnt);\r\n                            }\r\n                            //3. Obtener consulta tambien a partir del entorno actual\r\n                            salida.push(tmpEnt);\r\n                        }\r\n                        break;\r\n                    case TipoAxis.ATTRIBUTE:\r\n                        // Selects all attributes of the current node\r\n                        //1. Sobre el entorno actual, buscar el atributo con el nombre especificado en getValor()\r\n                        if (actualNode.getValor() === \"*\") {\r\n                            //Obtener todos los atributos del entorno actual\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                if (elem.getTipo() === Tipo.ATRIBUTO) {\r\n                                    //0. Si hay mas nodos despues de este, devolver vacio \"\"\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Revisar si el siguiente es un nodo comun o un nodo AXIS\r\n                                        if (this.listaNodos[pos + 1].getTipo() == TipoNodo.AXIS) {\r\n                                            //Es axis, entonces ir a buscar con el entorno actual\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, ent, elemAux, rompeCiclo);\r\n                                            salida = salida.concat(auxSal);\r\n                                        }\r\n                                        else {\r\n                                            //No es axis, entonces devolver consulta vacia\r\n                                            salida = [];\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        //Ya no hay mas nodos, entonces devolver la consulta sobre este entorno.\r\n                                        salida.push(elem.valor);\r\n                                    }\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() &&\r\n                                    elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida = salida.concat(auxSal);\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            //Obtener solo el atributo con el nombre  tiene actualNode.getValor()\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                if (elem.getTipo() === Tipo.ATRIBUTO) {\r\n                                    if (elem.getNombre() === actualNode.getValor())\r\n                                        if (pos + 1 < this.listaNodos.length) {\r\n                                            //Revisar si el siguiente es un nodo comun o un nodo AXIS\r\n                                            if (this.listaNodos[pos + 1].getTipo() == TipoNodo.AXIS) {\r\n                                                //Es axis, entonces ir a buscar con el entorno actual\r\n                                                let auxSal;\r\n                                                [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, ent, elemAux, rompeCiclo);\r\n                                                salida = salida.concat(auxSal);\r\n                                            }\r\n                                            else {\r\n                                                //No es axis, entonces devolver consulta vacia\r\n                                                salida = [];\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            //Ya no hay mas nodos, entonces devolver la consulta sobre este entorno.\r\n                                            salida.push(elem.valor);\r\n                                        }\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() &&\r\n                                    elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida = salida.concat(auxSal);\r\n                                }\r\n                            });\r\n                        }\r\n                        break;\r\n                    case TipoAxis.CHILD:\r\n                        //Selects all children of the current node\r\n                        //1. Ver que valor tiene nodeActual.getValor()\r\n                        if (actualNode.getValor() === \"*\") {\r\n                            //Traer todos los hijos del contexto actual\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                //2. Revisar si es el ultimo nodo o no.\r\n                                let predicado = actualNode.getPredicado();\r\n                                if (predicado != undefined) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerConsultaPredicado(predicado, pos, ent, elemAux, rompeCiclo, actualNode.getValor(), false);\r\n                                    salida = salida.concat(auxSal);\r\n                                }\r\n                                else {\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Aun hay mas nodos, moverme solo de entorno\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                            salida = salida.concat(auxSal);\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        //Es el ultimo nodo, obtener la salida\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                            salida.push(elem);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() && elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida = salida.concat(auxSal);\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            //Traer el hijo en el valor\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                let predicado = actualNode.getPredicado();\r\n                                //2. Revisar si es el ultimo nodo o no.\r\n                                if (elem.getNombre() === actualNode.getValor()) {\r\n                                    if (predicado != undefined) {\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerConsultaPredicado(predicado, pos, ent, elemAux, rompeCiclo, actualNode.getValor(), false);\r\n                                        salida = salida.concat(auxSal);\r\n                                    }\r\n                                    else {\r\n                                        if (pos + 1 < this.listaNodos.length) {\r\n                                            //Aun hay mas nodos, moverme solo de entorno\r\n                                            if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                                let auxSal;\r\n                                                [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                                salida = salida.concat(auxSal);\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            //Es el ultimo nodo, obtener la salida\r\n                                            if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                                salida.push(elem);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() && elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida = salida.concat(auxSal);\r\n                                }\r\n                            });\r\n                        }\r\n                        rompeCiclo = true;\r\n                        break;\r\n                    case TipoAxis.DESCENDANT:\r\n                        //Selects all descendants (children, grandchildren, etc.) of the current node\r\n                        //1. Ver que valor tiene nodeActual.getValor()\r\n                        if (actualNode.getValor() === \"*\") {\r\n                            //Traer todos los hijos del contexto actual\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                //2. Revisar si es el ultimo nodo o no.\r\n                                if (pos + 1 < this.listaNodos.length) {\r\n                                    //Aun hay mas nodos, moverme solo de entorno\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                        salida = salida.concat(auxSal);\r\n                                        //Obtener tambien la salida de los hijos que pueda tener este nodo\r\n                                        let auxSal2;\r\n                                        [auxSal2, rompeCiclo] = this.obtenerHijosRecursivos(pos + 1, elem.valor, elemAux, false, rompeCiclo);\r\n                                        salida = salida.concat(auxSal2);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    //Es el ultimo nodo, obtener la salida\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerHijosRecursivos(pos + 1, elem.valor, elemAux, true, rompeCiclo);\r\n                                        salida = salida.concat(auxSal);\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            //Traer el hijo en el valor\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                //2. Revisar si es el ultimo nodo o no.\r\n                                if (elem.getNombre() === actualNode.getValor()) {\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Aun hay mas nodos, moverme solo de entorno\r\n                                        if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                            salida = salida.concat(auxSal);\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        //Es el ultimo nodo, obtener la salida\r\n                                        if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                            salida.push(elem);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    //Si no se llaman igual, pero es etiqueta, entrar a buscar a sus hijos :2\r\n                                    if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                        salida = salida.concat(auxSal);\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        break;\r\n                    case TipoAxis.DESCENDANTORSELF:\r\n                        //Selects all descendants (children, grandchildren, etc.) of the current node\r\n                        //1. Ver que valor tiene nodeActual.getValor()\r\n                        if (actualNode.getValor() === \"*\") {\r\n                            //Traer todos los hijos del contexto actual\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                //2. Revisar si es el ultimo nodo o no.\r\n                                if (pos + 1 < this.listaNodos.length) {\r\n                                    //Aun hay mas nodos, moverme solo de entorno\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                        salida = salida.concat(auxSal);\r\n                                        //Obtener tambien la salida de los hijos que pueda tener este nodo\r\n                                        [auxSal, rompeCiclo] = this.obtenerHijosRecursivos(pos + 1, elem.valor, elemAux, false, rompeCiclo);\r\n                                        salida = salida.concat(auxSal);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    //Es el ultimo nodo, obtener la salida\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                        salida.push(elem);\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerHijosRecursivos(pos + 1, elem.valor, elemAux, true, rompeCiclo);\r\n                                        salida = salida.concat(auxSal);\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            //Traer el hijo en el valor\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                //2. Revisar si es el ultimo nodo o no.\r\n                                if (elem.getNombre() === actualNode.getValor()) {\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Aun hay mas nodos, moverme solo de entorno\r\n                                        if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                            salida = salida.concat(auxSal);\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        //Es el ultimo nodo, obtener la salida\r\n                                        if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                            salida.push(elem);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    //Si no se llaman igual, pero es etiqueta, entrar a buscar a sus hijos :2\r\n                                    if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                        //Aun hay mas nodos, moverme solo de entorno\r\n                                        if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                            salida = salida.concat(auxSal);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        break;\r\n                    case TipoAxis.FOLLOWING:\r\n                        //Selects everything in the document after the closing tag of the current node\r\n                        //1. Salir del entorno actual, ir al padre.\r\n                        let tmpPadre = ent.padre;\r\n                        //2. Con el padre buscar a quien se refiere el axis (con getValor())\r\n                        //Obtener todos los elementos que estan despues del especificado.\r\n                        let found = false; //flag para saber cuando ya se encontro el actual\r\n                        let nombreBuscar = ent.nombre;\r\n                        while (tmpPadre != null) {\r\n                            tmpPadre.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                if (found) {\r\n                                    if (actualNode.getValor() === \"*\" ||\r\n                                        actualNode.getValor() === elem.getNombre()) {\r\n                                        //Ver si es el ultimo nodo o no\r\n                                        if (pos + 1 < this.listaNodos.length) {\r\n                                            //Aun hay mas nodos, ir con este entorno a buscar\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                            salida = salida.concat(auxSal);\r\n                                        }\r\n                                        else {\r\n                                            //Escribir elemento\r\n                                            if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                                salida.push(elem);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (!found && elem.getNombre() === nombreBuscar) {\r\n                                    //Se encontro el entorno actual, ahora si escribir a partir del proximo elemento.\r\n                                    found = true;\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() &&\r\n                                    elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida = salida.concat(auxSal);\r\n                                }\r\n                            });\r\n                            nombreBuscar = tmpPadre.nombre;\r\n                            tmpPadre = tmpPadre.padre;\r\n                            found = false;\r\n                        }\r\n                        //rompeCiclo = true;\r\n                        break;\r\n                    case TipoAxis.FOLLOWINGSIBLING:\r\n                        //Selects everything in the document after the closing tag of the current node\r\n                        //1. Salir del entorno actual, ir al padre.\r\n                        let siblingPadre = ent.padre;\r\n                        //2. Con el padre buscar a quien se refiere el axis (con getValor())\r\n                        if (actualNode.getValor() === \"*\") {\r\n                            //Obtener todos los elementos que estan despues del especificado.\r\n                            let found = false; //flag para saber cuando ya se encontro el actual\r\n                            let nombreBuscar = ent.nombre;\r\n                            siblingPadre.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                if (found) {\r\n                                    //Ver si es el ultimo nodo o no\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Aun hay mas nodos, ir con este entorno a buscar\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                        salida = salida.concat(auxSal);\r\n                                    }\r\n                                    else {\r\n                                        //Escribir elemento\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                            salida.push(elem);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (!found && elem.getNombre() === nombreBuscar) {\r\n                                    //Se encontro el entorno actual, ahora si escribir a partir del proximo elemento.\r\n                                    found = true;\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() &&\r\n                                    elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida = salida.concat(auxSal);\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            //Obtener los elementos que tienen el nombre getValor(), que estan despues de mi entorno actual\r\n                            let found = false; //flag para saber cuando ya se encontro el actual\r\n                            let nombreBuscar = ent.nombre;\r\n                            siblingPadre.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                if (found) {\r\n                                    if (elem.getNombre() === actualNode.getValor()) {\r\n                                        //Ver si es el ultimo nodo o no\r\n                                        if (pos + 1 < this.listaNodos.length) {\r\n                                            //Aun hay mas nodos, ir con este entorno a buscar\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                            salida = salida.concat(auxSal);\r\n                                        }\r\n                                        else {\r\n                                            //Escribir elemento\r\n                                            if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                                salida.push(elem);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (!found && elem.getNombre() === nombreBuscar) {\r\n                                    //Se encontro el entorno actual, ahora si escribir a partir del proximo elemento.\r\n                                    found = true;\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() &&\r\n                                    elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida = salida.concat(auxSal);\r\n                                }\r\n                            });\r\n                        }\r\n                        //rompeCiclo = true;\r\n                        break;\r\n                    case TipoAxis.NAMESPACE: //No se implementa.\r\n                        salida = [];\r\n                    case TipoAxis.PARENT:\r\n                        //Selects the parent of the current node\r\n                        //1. Obtener el padre.\r\n                        if (actualNode.getValor() === \"*\" ||\r\n                            actualNode.getValor() === ent.padre.nombre) {\r\n                            if (pos + 1 < this.listaNodos.length) {\r\n                                let auxS;\r\n                                [auxS, rompeCiclo] = this.obtenerSalida(pos + 1, ent.padre, elemAux, rompeCiclo);\r\n                                salida = salida.concat(auxS);\r\n                            }\r\n                            else {\r\n                                salida.push(ent.padre);\r\n                                ent.padre.tsimbolos.forEach((e) => {\r\n                                    let elem = e.valor;\r\n                                    //Ver si el nodo es de tipo //\r\n                                    if (!actualNode.isFromRoot() && elem.getTipo() == Tipo.ETIQUETA) {\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                        salida = salida.concat(auxSal);\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoAxis.PRECEDING || TipoAxis.PRECEDINGSIBLING:\r\n                        //Selects all nodes that appear before the\r\n                        //current node in the document, except ancestors,\r\n                        //attribute nodes and namespace nodes\r\n                        //1. Obtener Padre\r\n                        let tPadre = ent.padre;\r\n                        //2. Recorrer padre y escribir todos los que esten antes del mencionado\r\n                        let antes = true;\r\n                        tPadre.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (antes && ent.nombre === elem.getNombre()) {\r\n                                //Ya se encontro, no escribir mas.\r\n                                antes = false;\r\n                            }\r\n                            if (antes) {\r\n                                if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    if (actualNode.getValor() === \"*\" ||\r\n                                        actualNode.getValor() === elem.getNombre()) {\r\n                                        //Si es asi, escribirlo.\r\n                                        if (pos + 1 < this.listaNodos.length) {\r\n                                            //Hay mas nodos, solo moverme de entorno y avanzar en la posicion de listaNodos\r\n                                            let auxS;\r\n                                            [auxS, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                            salida = salida.concat(auxS);\r\n                                        }\r\n                                        else {\r\n                                            //Es el ultimo nodo, escribir directamente este elemento.\r\n                                            salida.push(elem);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                        break;\r\n                    case TipoAxis.SELF:\r\n                        //Selects the current node\r\n                        //Del elemAux, obtener la consulta\r\n                        if (actualNode.getValor() === \"*\" ||\r\n                            actualNode.getValor() === elemAux.getNombre()) {\r\n                            if (pos + 1 < this.listaNodos.length) {\r\n                                let auxS;\r\n                                [auxS, rompeCiclo] = this.obtenerSalida(pos + 1, ent, elemAux, rompeCiclo);\r\n                                salida = salida.concat(auxS);\r\n                            }\r\n                            else {\r\n                                salida.push(elemAux);\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoNodo.NODOERROR:\r\n                if (pos + 1 < this.listaNodos.length) {\r\n                    //Ignorar este y moverme hacia el siguiente nodo.\r\n                    [salida, rompeCiclo] = this.obtenerSalida(pos + 1, ent, elemAux, rompeCiclo);\r\n                }\r\n                else {\r\n                    salida = [];\r\n                }\r\n        }\r\n        return [salida, rompeCiclo];\r\n    }\r\n    encontrarEntorno(padre, entBuscar) {\r\n        for (let i = 0; i < padre.tsimbolos.length; i++) {\r\n            let elem = padre.tsimbolos[i].valor;\r\n            if (elem.getTipo() == Tipo.ETIQUETA && elem.getNombre() == entBuscar) {\r\n                return elem.valor;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    obtenerConsultaPredicado(predicado, pos, ent, elemAux, rompeCiclo, nombreNodo, isAxis) {\r\n        let salida = [];\r\n        //0. Obtener entorno sobre quien quiero obtener el predicado.\r\n        let actualNode = this.listaNodos[pos];\r\n        let auxEnt;\r\n        if (!isAxis) {\r\n            auxEnt = this.encontrarEntorno(ent, nombreNodo);\r\n        }\r\n        else {\r\n            auxEnt = ent.padre;\r\n        }\r\n        if (auxEnt == null) {\r\n            return [salida, rompeCiclo, []];\r\n        }\r\n        else {\r\n            ent = auxEnt;\r\n        }\r\n        //1. Obtener el valor del predicado. (Para que se le asigne tipo tambien)\r\n        let predValue = predicado.getValor(ent);\r\n        console.log(\"PREDVALUE:\", predValue);\r\n        let aux = [];\r\n        //2. Obtener el tipo del predicado. \r\n        let predTipo = predicado.getTipo();\r\n        if (predValue === null || predValue === undefined) {\r\n            return [salida, rompeCiclo, []];\r\n        }\r\n        switch (predTipo) {\r\n            case TipoPrim.INTEGER:\r\n                //Ver si el numero es coherente (mayor a 0);\r\n                ent = ent.padre;\r\n                if (predValue < 1) {\r\n                    return [salida, rompeCiclo, []];\r\n                }\r\n                //Contar las veces que sean necesarias para obtener el nodo requerido\r\n                //Buscar actualNode n veces.\r\n                let veces = 1;\r\n                ent.tsimbolos.forEach((e) => {\r\n                    let elem = e.valor;\r\n                    if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === actualNode.getValor()) {\r\n                        if (veces == predValue) {\r\n                            //Ya, devolver el nodo.\r\n                            //Ver si es la ultima posicion o no\r\n                            if (pos + 1 < this.listaNodos.length) {\r\n                                let auxSal;\r\n                                [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                salida = salida.concat(auxSal);\r\n                                aux.push(elem);\r\n                            }\r\n                            else {\r\n                                //Es el ultimo, devolver la consulta sobre este entorno.\r\n                                salida.push(elem);\r\n                                aux.push(elem);\r\n                            }\r\n                        }\r\n                        veces++;\r\n                    }\r\n                });\r\n                break;\r\n            case TipoPrim.DOUBLE:\r\n                //Retornar vacio \"\";\r\n                break;\r\n            case TipoPrim.BOOLEAN:\r\n                break;\r\n            case TipoPrim.FUNCION:\r\n                //Un TipoPrim.Funcion devuelve un Entorno temporal que contiene\r\n                //Todas las etiquetas a escribir.\r\n                predValue.tsimbolos.forEach((e) => {\r\n                    let elem = e.valor;\r\n                    //Ver si es el ultimo nodo\r\n                    if (pos + 1 < this.listaNodos.length) {\r\n                        //Aun faltan mas nodos, para cada elemento continuar la consulta con su entorno respectivo\r\n                        let auxSal;\r\n                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                        salida = salida.concat(auxSal);\r\n                        aux.push(elem);\r\n                        if (isAxis) {\r\n                            rompeCiclo = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        //Es el ultimo nodo, devolver la consulta sobre este elemento\r\n                        salida.push(elem);\r\n                        aux.push(elem);\r\n                    }\r\n                });\r\n                break;\r\n        }\r\n        return [salida, rompeCiclo, aux];\r\n    }\r\n    addTabs(nTabs) {\r\n        let tabs = \"\";\r\n        for (let i = 0; i < nTabs; i++) {\r\n            tabs += \"    \";\r\n        }\r\n        return tabs;\r\n    }\r\n    buscarHaciaAdentro(elem, nameEncontrar, pos, elemAux, rompeCiclo) {\r\n        let salida = [];\r\n        elem.valor.tsimbolos.forEach((e) => {\r\n            let ex = e.valor;\r\n            if (ex.getTipo() === Tipo.ETIQUETA) {\r\n                if (ex.getNombre() == nameEncontrar) {\r\n                    if (pos + 1 < this.listaNodos.length) {\r\n                        //Aun hay mas nodos ir a buscar sobre este entorno bru.\r\n                        let auxSal;\r\n                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, ex.valor, elemAux, rompeCiclo);\r\n                        salida = salida.concat(auxSal);\r\n                    }\r\n                    else {\r\n                        //Escribir este elemento\r\n                        salida.push(ex);\r\n                    }\r\n                }\r\n                let auxSal;\r\n                [auxSal, rompeCiclo] = this.buscarHaciaAdentro(ex, nameEncontrar, pos, elemAux, rompeCiclo);\r\n                salida = salida.concat(auxSal);\r\n            }\r\n        });\r\n        return [salida, rompeCiclo];\r\n    }\r\n    obtenerHijosRecursivos(pos, ent, elemAux, isLast, rompeCiclo) {\r\n        let salida = [];\r\n        ent.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                if (isLast) {\r\n                    salida.push(elem);\r\n                    let auxSal;\r\n                    [auxSal, rompeCiclo] = this.obtenerHijosRecursivos(pos, elem.valor, elemAux, isLast, rompeCiclo);\r\n                    salida = salida.concat(auxSal);\r\n                }\r\n                else {\r\n                    //Aun hay mas nodos, entonces evaluar sobre eso.\r\n                    let auxSal;\r\n                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                    salida = salida.concat(auxSal);\r\n                }\r\n            }\r\n        });\r\n        return [salida, rompeCiclo];\r\n    }\r\n    escribirEtiquetaPadre(ent) {\r\n        let salida = \"< \" + ent.nombre;\r\n        let close = true;\r\n        ent.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            //Escribir a partir de aca\r\n            if (elem.getTipo() == Tipo.ATRIBUTO) {\r\n                salida += \"\" + elem.getNombre() + \"=\" + elem.getValor() + \" \";\r\n            }\r\n            if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                if (close) {\r\n                    salida += \">\";\r\n                    close = false;\r\n                }\r\n                salida += this.escribirConsultaObjeto(e.valor, 0);\r\n            }\r\n        });\r\n        return salida;\r\n    }\r\n    getConsultaAtributos(elem, nTabs, atrBuscar) {\r\n        let salida = [];\r\n        let hijosList = elem.valor.tsimbolos;\r\n        hijosList.forEach((e) => {\r\n            let son = e.valor;\r\n            if (son.getTipo() === Tipo.ATRIBUTO) {\r\n                //Es atributo, concatenar a la salida\r\n                if (atrBuscar === \"*\") {\r\n                    salida.push(son);\r\n                }\r\n                else if (atrBuscar === son.getNombre()) {\r\n                    salida.push(son);\r\n                }\r\n            }\r\n            if (son.getTipo() === Tipo.ETIQUETA) {\r\n                salida = salida.concat(this.getConsultaAtributos(son, nTabs, atrBuscar));\r\n            }\r\n        });\r\n        return salida;\r\n    }\r\n    escribirConsultaObjeto(elem, nTabs) {\r\n        let salida = this.addTabs(nTabs) + \"\";\r\n        //Obtener todos los que se llaman nombre y sus hijos.\r\n        //1. Para cada elemento escribir su etiqueta, atributos e hijos o texto\r\n        //2 Escribir nombre:\r\n        salida += \"<\" + elem.nombre;\r\n        let hijosList = elem.valor.tsimbolos;\r\n        //3. Ver si este elemento tiene Atributos\r\n        hijosList.forEach((atr) => {\r\n            let atributo = atr.valor;\r\n            //3.1 Ver si el hijo es atributo\r\n            if (atributo.getTipo() === Tipo.ATRIBUTO) {\r\n                //3.2 Concatenar atributo a la salida ejmplo: category=\"web\"\r\n                salida += \" \" + atributo.nombre + \"=\" + atributo.valor;\r\n            }\r\n        });\r\n        if (elem.getTipo() === Tipo.ETIQUETA_UNIQUE) {\r\n            salida += \"/>\\n\";\r\n        }\r\n        else {\r\n            salida += \">\\n\";\r\n        }\r\n        //4. Ver si el elemento tiene hijos adentro\r\n        hijosList.forEach((h) => {\r\n            let hijo = h.valor;\r\n            if (hijo.getTipo() === Tipo.STRING) {\r\n                salida += this.concatHijoTexto(hijo, nTabs + 1);\r\n            }\r\n            else if (hijo.getTipo() === Tipo.ETIQUETA) {\r\n                //3.3 Escribir la info de este hijo\r\n                salida += this.escribirConsultaObjeto(hijo, nTabs + 1);\r\n            }\r\n        });\r\n        //2.4 Cerrar la etiqueta actual\r\n        if (elem.getTipo() != Tipo.ETIQUETA_UNIQUE) {\r\n            salida += this.addTabs(nTabs) + \"</\" + elem.nombre + \">\\n\";\r\n        }\r\n        return salida;\r\n    }\r\n    concatHijoTexto(son, nTabs) {\r\n        let salida = this.addTabs(nTabs) + \"\";\r\n        salida += \"\" + son.getValor() + \" \";\r\n        return salida + \"\\n\";\r\n    }\r\n}\r\n","export class Simbolo {\r\n    constructor(tipo, nombre, valor, linea, columna) {\r\n        this.tipo = tipo;\r\n        this.nombre = nombre;\r\n        this.valor = valor;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.posicion = 0;\r\n    }\r\n    getTipo() {\r\n        return this.tipo;\r\n    }\r\n    getNombre() {\r\n        return this.nombre;\r\n    }\r\n    getValor() {\r\n        return this.valor;\r\n    }\r\n    getLinea() {\r\n        return this.linea;\r\n    }\r\n    getColumna() {\r\n        return this.columna;\r\n    }\r\n    getPosicion() {\r\n        return this.posicion;\r\n    }\r\n    setPosicion(posicion) {\r\n        this.posicion = posicion;\r\n    }\r\n}\r\n","import { Primitiva3D } from \"./Primitiva3D\";\r\nexport class Operacion3D {\r\n    constructor(tipo, tipoOperacion, op_izq, op_der, codigo3D, fila, columna) {\r\n        this.tipo = tipo;\r\n        this.codigo3D = codigo3D;\r\n        this.fila = fila;\r\n        this.tipoOperacion = tipoOperacion;\r\n        this.columna = columna;\r\n        this.op_der = op_der;\r\n        this.op_izq = op_izq;\r\n        if (this.tipoOperacion == TipoOperacion3D.MENOSUNARIO) {\r\n            if (this.op_izq instanceof Primitiva3D) {\r\n                this.op_izq.valor = this.op_izq.getValor() * -1;\r\n                this.op_izq.codigo3D = \"-\" + this.op_izq.valor;\r\n            }\r\n        }\r\n    }\r\n    getCodigo3D() {\r\n        this.codigo3D = this.op_izq.getCodigo3D();\r\n        if (this.op_der != null) {\r\n            this.codigo3D += \" \" + this.getOperandoString() + \" \";\r\n            this.codigo3D += this.op_der.getCodigo3D();\r\n        }\r\n        return this.codigo3D;\r\n    }\r\n    getOperandoString() {\r\n        switch (this.tipoOperacion) {\r\n            case TipoOperacion3D.SUMA:\r\n                return \"+\";\r\n            case TipoOperacion3D.RESTA:\r\n                return \"-\";\r\n            case TipoOperacion3D.MULTIPLICACION:\r\n                return \"*\";\r\n            case TipoOperacion3D.DIVISION:\r\n                return \"/\";\r\n            case TipoOperacion3D.MOD:\r\n                return \"%\";\r\n            case TipoOperacion3D.MAYORQUE:\r\n                return \">\";\r\n            case TipoOperacion3D.MENORQUE:\r\n                return \"<\";\r\n            case TipoOperacion3D.MAYORIGUALQUE:\r\n                return \">=\";\r\n            case TipoOperacion3D.MENORIGUALQUE:\r\n                return \"<=\";\r\n            case TipoOperacion3D.IGUALIGUAL:\r\n                return \"==\";\r\n            case TipoOperacion3D.DIFERENTEQUE:\r\n                return \"!=\";\r\n            case TipoOperacion3D.MENOSUNARIO:\r\n                return \"-\";\r\n            default:\r\n                return \"?\";\r\n        }\r\n    }\r\n    getTipoOperacion() {\r\n        return this.tipoOperacion;\r\n    }\r\n    getTipoExpresion() {\r\n        return this.tipo;\r\n    }\r\n    getValorRelacional() {\r\n        switch (this.tipoOperacion) {\r\n            case TipoOperacion3D.MAYORQUE:\r\n                if (this.op_der) {\r\n                    return this.op_izq.getValor() > this.op_der.getValor();\r\n                }\r\n            case TipoOperacion3D.MAYORIGUALQUE:\r\n                if (this.op_der) {\r\n                    return this.op_izq.getValor() >= this.op_der.getValor();\r\n                }\r\n            case TipoOperacion3D.IGUALIGUAL:\r\n                if (this.op_der) {\r\n                    return this.op_izq.getValor() == this.op_der.getValor();\r\n                }\r\n            case TipoOperacion3D.DIFERENTEQUE:\r\n                if (this.op_der) {\r\n                    return this.op_izq.getValor() != this.op_der.getValor();\r\n                }\r\n            case TipoOperacion3D.MENORQUE:\r\n                if (this.op_der) {\r\n                    return this.op_izq.getValor() < this.op_der.getValor();\r\n                }\r\n            case TipoOperacion3D.MENORIGUALQUE:\r\n                if (this.op_der) {\r\n                    return this.op_izq.getValor() <= this.op_der.getValor();\r\n                }\r\n            default:\r\n                console.log(\"Tipo condicion Incorrecta: \", this.tipoOperacion);\r\n                return false;\r\n        }\r\n    }\r\n    /*\r\n        getTipoOriginal(tipoOp: TipoOperacion3D): TipoOperacion3D{\r\n            switch(tipoOp)\r\n    \r\n        }*/\r\n    negarCondicion() {\r\n        switch (this.tipoOperacion) {\r\n            case TipoOperacion3D.MAYORQUE:\r\n                return TipoOperacion3D.MENORQUE;\r\n            case TipoOperacion3D.MAYORIGUALQUE:\r\n                return TipoOperacion3D.MENORIGUALQUE;\r\n            case TipoOperacion3D.IGUALIGUAL:\r\n                return TipoOperacion3D.DIFERENTEQUE;\r\n            case TipoOperacion3D.DIFERENTEQUE:\r\n                return TipoOperacion3D.IGUALIGUAL;\r\n            case TipoOperacion3D.MENORQUE:\r\n                return TipoOperacion3D.MAYORQUE;\r\n            case TipoOperacion3D.MENORIGUALQUE:\r\n                return TipoOperacion3D.MAYORIGUALQUE;\r\n            default:\r\n                console.log(\"Tipo condicion Incorrecta: \", this.tipoOperacion);\r\n                return null;\r\n        }\r\n    }\r\n}\r\nexport var TipoOperacion3D;\r\n(function (TipoOperacion3D) {\r\n    TipoOperacion3D[TipoOperacion3D[\"SUMA\"] = 0] = \"SUMA\";\r\n    TipoOperacion3D[TipoOperacion3D[\"RESTA\"] = 1] = \"RESTA\";\r\n    TipoOperacion3D[TipoOperacion3D[\"MULTIPLICACION\"] = 2] = \"MULTIPLICACION\";\r\n    TipoOperacion3D[TipoOperacion3D[\"DIVISION\"] = 3] = \"DIVISION\";\r\n    TipoOperacion3D[TipoOperacion3D[\"MOD\"] = 4] = \"MOD\";\r\n    TipoOperacion3D[TipoOperacion3D[\"MAYORQUE\"] = 5] = \"MAYORQUE\";\r\n    TipoOperacion3D[TipoOperacion3D[\"MENORQUE\"] = 6] = \"MENORQUE\";\r\n    TipoOperacion3D[TipoOperacion3D[\"IGUALIGUAL\"] = 7] = \"IGUALIGUAL\";\r\n    TipoOperacion3D[TipoOperacion3D[\"DIFERENTEQUE\"] = 8] = \"DIFERENTEQUE\";\r\n    TipoOperacion3D[TipoOperacion3D[\"MAYORIGUALQUE\"] = 9] = \"MAYORIGUALQUE\";\r\n    TipoOperacion3D[TipoOperacion3D[\"MENORIGUALQUE\"] = 10] = \"MENORIGUALQUE\";\r\n    TipoOperacion3D[TipoOperacion3D[\"MENOSUNARIO\"] = 11] = \"MENOSUNARIO\";\r\n})(TipoOperacion3D || (TipoOperacion3D = {}));\r\n","export class TranslateXQuery {\r\n    constructor(instruccion, xqueryTabla, xmlTabla, translateXPath) {\r\n        this.contSQ = 0;\r\n        this.contHQ = 0;\r\n        this.xQueryHeap = [];\r\n        this.xQueryStack = [];\r\n        this.strTraduccion = \"\";\r\n        this.xmlHeap = [];\r\n        this.xmlStack = [];\r\n        this.instruccion = instruccion;\r\n        this.xQueryTabla = xqueryTabla;\r\n        this.translateXPath = translateXPath;\r\n        this.xmlTabla = xmlTabla;\r\n        this.contT = 0;\r\n        this.funcionesUtilizadas = [];\r\n    }\r\n    getFuncionesUtilizadas() {\r\n        let funciones = \"\";\r\n        this.funcionesUtilizadas = this.funcionesUtilizadas.reverse();\r\n        this.funcionesUtilizadas.forEach((func) => {\r\n            switch (func) {\r\n                case NativaXQuery.FROMHEAPTOXQHEAP:\r\n                    funciones += this.getFromHeapToXQHeap();\r\n                    break;\r\n                case NativaXQuery.IMPRIMIRATRIBUTOXQ:\r\n                    funciones += this.getImprimirAtributo();\r\n                    break;\r\n                case NativaXQuery.IMPRIMIRCONSULTAXQ:\r\n                    funciones += this.getImprimirConsulta();\r\n                    break;\r\n                case NativaXQuery.IMPRIMIRETIQUETAXQ:\r\n                    funciones += this.getImprimirEtiqueta();\r\n                    break;\r\n                case NativaXQuery.IMPRIMIRTEXTOXQ:\r\n                    funciones += this.getImprimirTexto();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        return funciones;\r\n    }\r\n    getDeclaraTempsXQuery() {\r\n        //Ver cuantos temporales fueron utlizados.\r\n        let temps = \"\";\r\n        if (this.contT > 0) {\r\n            let i = 0;\r\n            temps = \"double tq\" + i;\r\n            i++;\r\n            while (i < this.contT) {\r\n                temps += \", tq\" + i;\r\n                i++;\r\n            }\r\n            temps += \";\\n\";\r\n        }\r\n        return temps;\r\n    }\r\n    iniciarTraduccion() {\r\n        return this.instruccion.getCodigo3Dir(this.xQueryTabla, this.xmlTabla, this.translateXPath, this);\r\n    }\r\n    StringToHeap(nombre, id) {\r\n        //XQStack[(int)0] = 30\r\n        let tradNodo = '\\n\\t /* VARIABLE \"' + id + '\" EN HEAP de XQUERY*/ \\n';\r\n        let temporal = 'tq' + this.contT;\r\n        tradNodo += '\\t' + temporal + ' = HQ;\\n';\r\n        tradNodo += '\\tXQHeap[(int)HQ] = -3; \\n'\r\n            + '\\tHQ = HQ + 1; \\n';\r\n        nombre.split('').forEach((element) => {\r\n            tradNodo = tradNodo\r\n                + '\\tXQHeap[(int)HQ] = ' + element.charCodeAt(0) + '; \\n'\r\n                + '\\tHQ = HQ + 1; \\n';\r\n            this.xQueryHeap.push(element.charCodeAt(0));\r\n            this.contHQ++;\r\n        });\r\n        tradNodo += '\\tXQHeap[(int)HQ] = -3; \\n'\r\n            + '\\tHQ = HQ + 1; \\n';\r\n        tradNodo += '\\tXQStack[(int)SQ] = ' + temporal + ';\\n';\r\n        this.contSQ++;\r\n        return tradNodo;\r\n    }\r\n    getFromHeapToXQHeap() {\r\n        //Escribir nombre de la funcion\r\n        let code = 'void fromHeapToXQHeap(){\\n';\r\n        //Guardar en un temporal el inicio del simbolo en el heap del Xq\r\n        //0. tq0 = HQ\r\n        code += '\\t/*--- TQ' + this.contT + ' TIENE EL VALOR CON EL QUE FINALIZA EL AMBITO --- */ \\n';\r\n        let segundoTemp = 'tq' + this.contT;\r\n        this.contT = this.contT + 1;\r\n        //Un segundo temporal para guardar el valor con el que se finaliza el ambito.\r\n        //1. tq2 = heap[(int)H];\r\n        code += \"\\t\" + segundoTemp + \" = heap[(int)H];\\n\";\r\n        //2. Empezar a copiar lo que hay en el heap del xml hacia el heap del Xq\r\n        code += '\\tXQHeap[(int)HQ] = heap[(int)H];\\n';\r\n        //3. Sumar los contadores del heap del xml y el heap de XPATH\r\n        code += '\\t HQ = HQ + 1;\\n\\t H = H+1;\\n';\r\n        //Tercer temporal para ir copiando del heap xml hacia el heap del query\r\n        let tercerTemp = 'tq' + this.contT;\r\n        this.contT = this.contT + 1;\r\n        //Empezar con la primera etiqueta\r\n        code += '\\tL1:\\n'\r\n            + '\\t\\t' + tercerTemp + ' = heap[(int)H];\\n'\r\n            + '\\t\\tif(' + tercerTemp + ' == ' + segundoTemp + ') goto L2;\\n'\r\n            + '\\t\\tXQHeap[(int)HQ] = ' + tercerTemp + ';\\n';\r\n        //4. Sumar los contadores del heap del xml y el heap de Xquery\r\n        code += '\\t\\t HQ = HQ + 1;\\n\\t\\t H = H+1;\\n';\r\n        //5. Regresar a primer etiqueta para seguir copiando.\r\n        code += '\\t\\tgoto L1;\\n';\r\n        //6. Escribir el contenido de la etiqueta 2.\r\n        code += '\\tL2: \\n'\r\n            + '\\t\\t/*--- Ya se completo el ambito en el heap del xpath ---*/\\n'\r\n            + '\\t\\tXQHeap[(int)HQ] = heap[(int)H];\\n'\r\n            + '\\t\\t H = H + 1;\\n';\r\n        //7. Return.       \r\n        code += '\\treturn;\\n';\r\n        code += '}\\n';\r\n        return code;\r\n    }\r\n    getImprimirConsulta() {\r\n        let code = \"void imprimirConsultaXQ(){\\n\";\r\n        code += \"\\t/* --- tq\" + this.contT + \" TIENE EL VALOR CON EL QUE FINALIZA LA CONSULTA -- */\\n\";\r\n        let primerTemp = 'tq' + this.contT;\r\n        this.contT = this.contT + 1;\r\n        //Guardar el valor con el que termina la consulta.\r\n        code += '\\tHQ = HQ + 1;\\n';\r\n        //Etiqueta 0, para ciclar hasta encontrar un -13.\r\n        code += '\\tL0:\\n'\r\n            + '\\t' + primerTemp + ' = XQHeap[(int)HQ];\\n'\r\n            + '\\t\\t\\if(' + primerTemp + ' == -13) goto L5;\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Empezar con la primera et para verificar que tipo de consulta es\r\n        code += '\\tL1:\\n'; //Este verifica si es etiqueta <\r\n        code += '\\t\\t /* -- Ver si es etiqueta -- */\\n';\r\n        code += '\\t\\t if(' + primerTemp + ' > -5) goto L2;\\n';\r\n        code += '\\t\\timprimirEtiquetaXQ();\\n';\r\n        code += '\\t\\tprintf(\"%c\", (char) 10);\\n';\r\n        code += '\\t\\tgoto L0;\\n';\r\n        //La segunda etiqueta verifica si es atributo o texto.\r\n        code += '\\tL2:\\n';\r\n        code += '\\t\\t /* -- Ver si es atributo(-2) o texto(-3) -- */\\n';\r\n        code += '\\t\\tif(' + primerTemp + ' == -2) goto L3;\\n';\r\n        code += '\\t\\tif(' + primerTemp + ' == -3) goto L4;\\n';\r\n        code += '\\t\\tgoto L5;\\n';\r\n        //La tercera etiqueta llama al metodo para imprimir atributo.\r\n        code += '\\tL3: \\n'\r\n            + '\\t\\tHQ = HQ + 2;\\n'\r\n            + '\\t\\timprimirAtributoXQ();\\n'\r\n            + '\\t\\printf(\"%c\", (char) 10);\\n'\r\n            + '\\t\\tgoto L0;\\n';\r\n        //La cuarta etiqueta llama al metodo para imprimir texto\r\n        code += '\\tL4: \\n'\r\n            + '\\t\\tHQ = HQ + 1;\\n'\r\n            + '\\t\\timprimirTextoXQ();\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 10);\\n'\r\n            + '\\t\\tgoto L0;\\n';\r\n        //La quinta etiqueta es el fin del metodo.\r\n        code += '\\tL5: \\n'\r\n            + '\\tprintf(\"%c\", (char) 10);\\n'\r\n            + '\\treturn;\\n'\r\n            + '}\\n';\r\n        return code;\r\n    }\r\n    getImprimirEtiqueta() {\r\n        let code = \"void imprimirEtiquetaXQ() {\\n\";\r\n        let primerTemp = \"tq\" + this.contT; //tq5\r\n        this.contT = this.contT + 1;\r\n        code += \"\\t\" + primerTemp + ' = XQHeap[(int)HQ];\\n';\r\n        code += '\\tHQ = HQ + 1;\\n';\r\n        let segundoTemp = \"tq\" + this.contT;\r\n        this.contT = this.contT + 1;\r\n        code += '\\t' + segundoTemp + ' = 0;\\n'; //tq11\r\n        let tercerTemp = \"tq\" + this.contT;\r\n        this.contT = this.contT + 1;\r\n        code += '\\t' + tercerTemp + ' = HQ;\\n'; //tq10\r\n        //Empezar a imprimir la etiqueta.\r\n        code += '\\tprintf(\"%c\", (int) 60); //Ascii <\\n';\r\n        let cuartoTemp = \"tq\" + this.contT; // tq6\r\n        this.contT = this.contT + 1;\r\n        //Primer etiqueta, verifica si ya se acabo el ambito.\r\n        code += '\\tL1:\\n'\r\n            + '\\t\\t' + cuartoTemp + ' = XQHeap[(int)HQ];\\n'\r\n            + '\\t\\tif(' + cuartoTemp + ' == ' + primerTemp + ') goto L2;\\n'\r\n            + '\\t\\tgoto L3;\\n';\r\n        //Etiqueta L3, verifica si es atributo (-2)\r\n        code += '\\tL3:\\n'\r\n            + '\\t\\tif(' + cuartoTemp + ' != -2) goto L4;\\n'\r\n            + '\\t\\tHQ = HQ + 1;\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 32); // Espacio\\n'\r\n            + '\\t\\timprimirAtributoXQ();\\n'\r\n            + '\\t\\tHQ = HQ + 1;\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Etiqueta L4, verifica si es texto (-3)\r\n        code += '\\tL4:\\n'\r\n            + '\\t\\t//Ver si es texto\\n'\r\n            + '\\t\\tif(' + cuartoTemp + ' != -3) goto L5;\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 62); //Ascii >\\n'\r\n            + '\\t\\tHQ = HQ + 1;\\n'\r\n            + '\\t\\t' + segundoTemp + ' = 1;\\n'\r\n            + '\\t\\timprimirTextoXQ();\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Etiqueta L5, verifica si es -1 (ya termino el id de la etiqueta)\r\n        code += '\\tL5:\\n'\r\n            + '\\t\\tif(' + cuartoTemp + ' != -1) goto L6;\\n'\r\n            + '\\t\\tHQ = HQ + 1;\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Etiqueta L6\r\n        code += '\\tL6:\\n'\r\n            + '\\t\\t//Revisar si hay otra etiqueta\\n'\r\n            + '\\t\\tif(' + cuartoTemp + ' < ' + primerTemp + ') goto L7;\\n'\r\n            + '\\t\\t//Aun no, solo imprimir caracter. (Revisar antes si es fin de ambito -13)\\n'\r\n            + '\\t\\tif(' + cuartoTemp + ' == -13) goto L2;\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) ' + cuartoTemp + ');\\n'\r\n            + '\\t\\tHQ = HQ + 1;\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Etiqueta L7, imprimir el entorno de la etiqueta interior.\r\n        let quintoTemp = \"tq\" + this.contT; // tq13\r\n        this.contT = this.contT + 1;\r\n        code += '\\tL7:\\n'\r\n            + '\\t\\tif(' + cuartoTemp + ' == -13) goto L2;\\n'\r\n            + '\\t\\tif(' + segundoTemp + ' == 0) goto L10;\\n'\r\n            + '\\t\\tXQStack[(int)SQ] = ' + primerTemp + ';\\n'\r\n            + '\\t\\tSQ = SQ + 1;\\n'\r\n            + '\\t\\tXQStack[(int)SQ] = ' + tercerTemp + ';\\n'\r\n            + '\\t\\tSQ = SQ + 1;\\n'\r\n            + '\\t\\timprimirEtiquetaXQ();\\n'\r\n            + '\\t\\t' + primerTemp + ' = XQStack[(int)SQ];\\n'\r\n            + '\\t\\t' + quintoTemp + ' = SQ + 1;\\n'\r\n            + '\\t\\t' + segundoTemp + ' = 1;\\n'\r\n            + '\\t\\t' + tercerTemp + ' = XQStack[(int)' + quintoTemp + '];\\n'\r\n            + '\\t\\tHQ = HQ + 1;\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Etiqueta L10, imprime caracter de cierre. >\r\n        code += '\\tL10:\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 62); //Ascii >\\n'\r\n            + '\\t\\t' + segundoTemp + ' = 1;\\n'\r\n            + '\\t\\tgoto L7;\\n';\r\n        //Etiqueta L2: Escribe una etiqueta de cierra </cierre>\r\n        code += '\\tL2:\\n'\r\n            + '\\t\\t//EScribir etiqueta de cierre.\\n'\r\n            + '\\t\\tif(' + segundoTemp + '== 0) goto L11;\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 60); //Ascii <\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 47); //Ascii /\\n'\r\n            + '\\t\\tgoto L8;\\n';\r\n        //Etiqueta L11: Imprime caracter de cierre. >\r\n        code += '\\tL11:\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 62); //Ascii >\\n'\r\n            + '\\t\\t' + segundoTemp + ' = 1;\\n'\r\n            + '\\t\\tgoto L2;\\n';\r\n        //Etiqueta L8: Escribe id de cierre </ cierre >\r\n        code += '\\tL8:\\n'\r\n            + '\\t\\t' + cuartoTemp + ' = XQHeap[(int)' + tercerTemp + '];\\n'\r\n            + '\\t\\tif(' + cuartoTemp + ' == -1) goto L9;\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) ' + cuartoTemp + ');\\n'\r\n            + '\\t\\t' + tercerTemp + ' = ' + tercerTemp + ' + 1;\\n'\r\n            + '\\t\\tgoto L8;\\n';\r\n        //Etiqueta L9: imprimire caracter de cierre > y termina el metodo :D\r\n        code += '\\tL9:\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 62); //Ascii >\\n'\r\n            + '\\tSQ = SQ - 2;\\n'\r\n            + '\\treturn;\\n';\r\n        code += \"}\\n\";\r\n        return code;\r\n    }\r\n    getImprimirAtributo() {\r\n        let code = \"void imprimirAtributoXQ(){\\n\";\r\n        let primerTemp = 'tq' + this.contT;\r\n        this.contT = this.contT + 1;\r\n        code += '\\tL1:\\n'\r\n            + '\\t\\t' + primerTemp + ' = XQHeap[(int)HQ];\\n'\r\n            + '\\t\\tif(' + primerTemp + ' == -2) goto L2;\\n'\r\n            + '\\t\\tprintf(\"%c\", (char)' + primerTemp + ');\\n'\r\n            + '\\t\\tHQ = HQ + 1;\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Etiqueta L2, imprimir espacio = y el valor del atributo\r\n        code += '\\tL2:\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 32); // Espacio\\n'\r\n            + '\\t\\tprintf(\"%c\", (char)61); // = \\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 32); // Espacio\\n'\r\n            + '\\t\\tHQ = HQ + 2;\\n';\r\n        //Etiqueta L3, imprime el valor del atributo.\r\n        code += '\\tL3:\\n';\r\n        code += '\\t\\t' + primerTemp + ' = XQHeap[(int)HQ];\\n';\r\n        code += '\\t\\tif(' + primerTemp + ' == -3) goto L4;\\n';\r\n        code += '\\t\\tprintf(\"%c\", (char)' + primerTemp + ');\\n';\r\n        code += '\\t\\tHQ = HQ + 1;\\n';\r\n        code += '\\t\\tgoto L3;\\n';\r\n        //Etiqueta L4; Imprime espacio y termina el metodo.\r\n        code += '\\tL4:\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 32);// Espacio\\n'\r\n            + '\\treturn;\\n';\r\n        code += '}\\n';\r\n        return code;\r\n    }\r\n    getImprimirTexto() {\r\n        let code = \"void imprimirTextoXQ(){\\n\";\r\n        code += \"\\t//Texto termina con -3\\n\";\r\n        let primerTemp = 'tq' + this.contT;\r\n        this.contT = this.contT + 1;\r\n        code += '\\tL1:\\n'\r\n            + '\\t\\t' + primerTemp + ' = XQHeap[(int)HQ];\\n'\r\n            + '\\t\\tif(' + primerTemp + ' == -3) goto L2;\\n'\r\n            + '\\t\\tprintf(\"%c\", (char)' + primerTemp + ');\\n'\r\n            + '\\t\\tHQ = HQ + 1;\\n'\r\n            + '\\t\\tgoto L1;\\n'\r\n            + '\\tL2:\\n'\r\n            + '\\t\\tHQ = HQ + 1;\\n'\r\n            + '\\treturn;\\n';\r\n        code += \"}\\n\";\r\n        return code;\r\n    }\r\n}\r\nexport var NativaXQuery;\r\n(function (NativaXQuery) {\r\n    NativaXQuery[NativaXQuery[\"FROMHEAPTOXQHEAP\"] = 0] = \"FROMHEAPTOXQHEAP\";\r\n    NativaXQuery[NativaXQuery[\"IMPRIMIRCONSULTAXQ\"] = 1] = \"IMPRIMIRCONSULTAXQ\";\r\n    NativaXQuery[NativaXQuery[\"IMPRIMIRETIQUETAXQ\"] = 2] = \"IMPRIMIRETIQUETAXQ\";\r\n    NativaXQuery[NativaXQuery[\"IMPRIMIRTEXTOXQ\"] = 3] = \"IMPRIMIRTEXTOXQ\";\r\n    NativaXQuery[NativaXQuery[\"IMPRIMIRATRIBUTOXQ\"] = 4] = \"IMPRIMIRATRIBUTOXQ\";\r\n})(NativaXQuery || (NativaXQuery = {}));\r\n","export var TipoInstruccion3D;\r\n(function (TipoInstruccion3D) {\r\n    TipoInstruccion3D[TipoInstruccion3D[\"ASIGNORMAL\"] = 0] = \"ASIGNORMAL\";\r\n    TipoInstruccion3D[TipoInstruccion3D[\"ASIGARREGLO\"] = 1] = \"ASIGARREGLO\";\r\n    TipoInstruccion3D[TipoInstruccion3D[\"ARREGLOASIG\"] = 2] = \"ARREGLOASIG\";\r\n    TipoInstruccion3D[TipoInstruccion3D[\"ARREGLOASIGARREGLO\"] = 3] = \"ARREGLOASIGARREGLO\";\r\n    TipoInstruccion3D[TipoInstruccion3D[\"ETIQUETA\"] = 4] = \"ETIQUETA\";\r\n    TipoInstruccion3D[TipoInstruccion3D[\"GOTO\"] = 5] = \"GOTO\";\r\n    TipoInstruccion3D[TipoInstruccion3D[\"LLAMADA\"] = 6] = \"LLAMADA\";\r\n    TipoInstruccion3D[TipoInstruccion3D[\"PRINTF\"] = 7] = \"PRINTF\";\r\n    TipoInstruccion3D[TipoInstruccion3D[\"IF\"] = 8] = \"IF\";\r\n    TipoInstruccion3D[TipoInstruccion3D[\"RETURN\"] = 9] = \"RETURN\";\r\n    TipoInstruccion3D[TipoInstruccion3D[\"REPRESENTACION\"] = 10] = \"REPRESENTACION\";\r\n})(TipoInstruccion3D || (TipoInstruccion3D = {}));\r\n","import { Entorno } from \"../AST/Entorno\";\r\nimport { Tipo } from \"../AST/Tipo\";\r\nimport { TipoPrim } from \"./Primitiva\";\r\nimport errores from '../Global/ListaError';\r\nexport class Operacion {\r\n    constructor(operacion, op_izq, op_der, linea, columna, isXQuery) {\r\n        this.linea = linea;\r\n        this.isXQuery = isXQuery;\r\n        this.columna = columna;\r\n        this.op_izq = op_izq;\r\n        this.op_der = op_der;\r\n        this.operacion = operacion;\r\n    }\r\n    getTipo(ent) {\r\n        return this.tipo;\r\n    }\r\n    get3Dir(ent) {\r\n        let x = this.op_izq.get3Dir(ent);\r\n        let y;\r\n        if (this.op_der != null) {\r\n            y = this.op_der.get3Dir(ent);\r\n        }\r\n        let w = [];\r\n        w.push(x);\r\n        w.push(this.operacion);\r\n        w.push(y);\r\n        return w;\r\n    }\r\n    getValorInicial(ent) {\r\n        return \"\";\r\n    }\r\n    getValor(entorno) {\r\n        if (this.operacion === TipoOperacion.PAR) {\r\n            //Devolver la expresion del parentesis\r\n            let res = this.op_izq.getValor(entorno);\r\n            this.tipo = this.op_izq.getTipo(entorno);\r\n            return res;\r\n        }\r\n        let opIzq;\r\n        let opDer;\r\n        let resultado;\r\n        let valIzq;\r\n        let typeIzq;\r\n        let valDer;\r\n        let typeDer;\r\n        if (this.op_izq.getTipo(entorno) != TipoPrim.ATRIBUTO && this.op_izq.getTipo(entorno) != TipoPrim.CONSULTA) {\r\n            valIzq = this.op_izq.getValor(entorno);\r\n        }\r\n        typeIzq = this.op_izq.getTipo(entorno);\r\n        if (this.op_der.getTipo(entorno) != TipoPrim.ATRIBUTO) {\r\n            valDer = this.op_der.getValor(entorno);\r\n        }\r\n        typeDer = this.op_der.getTipo(entorno);\r\n        if (valIzq === null) {\r\n            if (this.op_izq.getValorInicial(entorno) === entorno.nombre) {\r\n                valIzq = entorno.obtenerSimbolo(this.op_izq.getValorInicial(entorno));\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n        }\r\n        switch (this.operacion) {\r\n            case TipoOperacion.SUMA:\r\n                this.tipo = this.tipoDominanteAritmetica(typeIzq, typeDer);\r\n                if (this.tipo === TipoPrim.ERROR)\r\n                    return resultado;\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseInt(valIzq);\r\n                                opDer = parseInt(valDer);\r\n                                resultado = opIzq + opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq + opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede sumar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede sumar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq + opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq + opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede sumar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede sumar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    default:\r\n                        errores.agregarError('semantico', 'No se puede sumar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                        return ('Error semantico: No se puede sumar ' + this.getStringTipo(typeIzq) + ' con '\r\n                            + this.getStringTipo(typeDer)\r\n                            + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                }\r\n            case TipoOperacion.RESTA:\r\n                this.tipo = this.tipoDominanteAritmetica(typeIzq, typeDer);\r\n                if (this.tipo === TipoPrim.ERROR)\r\n                    return resultado;\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseInt(valIzq);\r\n                                opDer = parseInt(valDer);\r\n                                resultado = opIzq - opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq - opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede restar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede restar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq - opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq - opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede restar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede restar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    default:\r\n                        errores.agregarError('semantico', 'No se puede restar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                        return ('Error semantico: No se puede restar ' + this.getStringTipo(typeIzq) + ' con '\r\n                            + this.getStringTipo(typeDer)\r\n                            + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                }\r\n            case TipoOperacion.MULTIPLICACION:\r\n                this.tipo = this.tipoDominanteAritmetica(typeIzq, typeDer);\r\n                if (this.tipo === TipoPrim.ERROR)\r\n                    return resultado;\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseInt(valIzq);\r\n                                opDer = parseInt(valDer);\r\n                                resultado = opIzq * opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq * opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede multiplicar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede multiplicar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq * opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq * opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede multiplicar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede multiplicar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    default:\r\n                        errores.agregarError('semantico', 'No se puede multiplicar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                        return ('Error semantico: No se puede multiplicar ' + this.getStringTipo(typeIzq) + ' con '\r\n                            + this.getStringTipo(typeDer)\r\n                            + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                }\r\n            case TipoOperacion.DIVISION:\r\n                this.tipo = this.tipoDominanteAritmetica(typeIzq, typeDer);\r\n                if (this.tipo === TipoPrim.ERROR)\r\n                    return resultado;\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseInt(valIzq);\r\n                                opDer = parseInt(valDer);\r\n                                if (opDer != 0) {\r\n                                    resultado = opIzq / opDer;\r\n                                    return resultado;\r\n                                }\r\n                                errores.agregarError('semantico', 'El denominador debe ser diferente de 0', this.linea, this.columna);\r\n                                return ('Error semantico: El denominador debe ser diferente de 0 en la linea '\r\n                                    + this.linea + ' y columna ' + this.columna);\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                if (opDer != 0) {\r\n                                    resultado = opIzq / opDer;\r\n                                    return resultado;\r\n                                }\r\n                                errores.agregarError('semantico', 'El denominador debe ser diferente de 0', this.linea, this.columna);\r\n                                return ('Error semantico: El denominador debe ser diferente de 0 en la linea '\r\n                                    + this.linea + ' y columna ' + this.columna);\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                if (opDer != 0) {\r\n                                    resultado = opIzq / opDer;\r\n                                    return resultado;\r\n                                }\r\n                                errores.agregarError('semantico', 'El denominador debe ser diferente de 0', this.linea, this.columna);\r\n                                return ('Error semantico: El denominador debe ser diferente de 0 en la linea '\r\n                                    + this.linea + ' y columna ' + this.columna);\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                if (opDer != 0) {\r\n                                    resultado = opIzq / opDer;\r\n                                    return resultado;\r\n                                }\r\n                                errores.agregarError('semantico', 'El denominador debe ser diferente de 0', this.linea, this.columna);\r\n                                return ('Error semantico: El denominador debe ser diferente de 0 en la linea '\r\n                                    + this.linea + ' y columna ' + this.columna);\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    default:\r\n                        errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                        return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                            + this.getStringTipo(typeDer)\r\n                            + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                }\r\n            case TipoOperacion.MOD:\r\n                this.tipo = this.tipoDominanteAritmetica(typeIzq, typeDer);\r\n                if (this.tipo === TipoPrim.ERROR)\r\n                    return resultado;\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseInt(valIzq);\r\n                                opDer = parseInt(valDer);\r\n                                if (opDer != 0) {\r\n                                    resultado = opIzq % opDer;\r\n                                    return resultado;\r\n                                }\r\n                                errores.agregarError('semantico', 'El denominador debe ser diferente de 0', this.linea, this.columna);\r\n                                return ('Error semantico: El denominador debe ser diferente de 0 en la linea '\r\n                                    + this.linea + ' y columna ' + this.columna);\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                if (opDer != 0) {\r\n                                    resultado = opIzq % opDer;\r\n                                    return resultado;\r\n                                }\r\n                                errores.agregarError('semantico', 'El denominador debe ser diferente de 0', this.linea, this.columna);\r\n                                return ('Error semantico: El denominador debe ser diferente de 0 en la linea '\r\n                                    + this.linea + ' y columna ' + this.columna);\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq + opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq + opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    default:\r\n                        errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                        return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                            + this.getStringTipo(typeDer)\r\n                            + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                }\r\n            case TipoOperacion.MAYORQUE:\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                break;\r\n                            case TipoPrim.DOUBLE:\r\n                                break;\r\n                            case TipoPrim.FUNCION:\r\n                                //Ver si es position()\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                if (valDer.toLowerCase() == \"position()\") {\r\n                                    // ej: 3 > position()\r\n                                    let izq = parseInt(valIzq);\r\n                                    //Devolver los entornos que abarcan esto.\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (izq > indice && elem.getNombre() === entorno.nombre) {\r\n                                            //Si es mayor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                }\r\n                                else {\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                                }\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MAYORQUE, TipoPrim.INTEGER);\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeIzq) {\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MAYORQUE, TipoPrim.DOUBLE);\r\n                            default:\r\n                                break;\r\n                        }\r\n                    case TipoPrim.CADENA:\r\n                        break;\r\n                    case TipoPrim.ATRIBUTO:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionAtributoCadena(entorno, TipoOperacion.MAYORQUE);\r\n                        }\r\n                        break;\r\n                    case TipoPrim.FUNCION:\r\n                        //Ver si es position()\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        if (valIzq.toLowerCase() == \"position()\") {\r\n                            switch (typeDer) {\r\n                                case TipoPrim.INTEGER:\r\n                                    //position > 3\r\n                                    let der = parseInt(valDer);\r\n                                    //Devolver un entorno con los simbolos encontrados\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (indice > der && elem.getNombre() == entorno.nombre) {\r\n                                            //Si es mayor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() == entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                default:\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                            }\r\n                        }\r\n                        else {\r\n                            errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                            return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                + this.getStringTipo(typeDer)\r\n                                + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    case TipoPrim.IDENTIFIER:\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MAYORQUE, TipoPrim.INTEGER);\r\n                            case TipoPrim.DOUBLE:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MAYORQUE, TipoPrim.DOUBLE);\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionIdCadena(valIzq, valDer, entorno, TipoOperacion.MAYORQUE);\r\n                            case TipoPrim.IDENTIFIER:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoOperacion.MENORQUE:\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                break;\r\n                            case TipoPrim.DOUBLE:\r\n                                break;\r\n                            case TipoPrim.FUNCION:\r\n                                //Ver si es position()\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                if (valDer.toLowerCase() == \"position()\") {\r\n                                    //Ejemplo: 3 < position()\r\n                                    let izq = parseInt(valIzq);\r\n                                    //Devolver los entornos que abarcan esto.\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (izq < indice && elem.getNombre() == entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                }\r\n                                else {\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                                }\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MENORQUE, TipoPrim.INTEGER);\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeIzq) {\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MENORQUE, TipoPrim.DOUBLE);\r\n                            default:\r\n                                break;\r\n                        }\r\n                    case TipoPrim.CADENA:\r\n                        break;\r\n                    case TipoPrim.ATRIBUTO:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionAtributoCadena(entorno, TipoOperacion.MENORQUE);\r\n                        }\r\n                        break;\r\n                    case TipoPrim.FUNCION:\r\n                        //Ver si es position()\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        if (valIzq.toLowerCase() == \"position()\") {\r\n                            switch (typeDer) {\r\n                                case TipoPrim.INTEGER:\r\n                                    //Ej: position() < 3\r\n                                    let der = parseInt(valDer);\r\n                                    //En un entorno temporal, devolver los que corresponden a la busqueda\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (indice < der && elem.getNombre() === entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                default:\r\n                                    errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoPrim.IDENTIFIER:\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MENORQUE, TipoPrim.INTEGER);\r\n                            case TipoPrim.DOUBLE:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MENORQUE, TipoPrim.DOUBLE);\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionIdCadena(valIzq, valDer, entorno, TipoOperacion.MENORQUE);\r\n                            case TipoPrim.IDENTIFIER:\r\n                                break;\r\n                        }\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoOperacion.MAYORIGUALQUE:\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                break;\r\n                            case TipoPrim.DOUBLE:\r\n                                break;\r\n                            case TipoPrim.FUNCION:\r\n                                //Ver si es position()\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                if (valDer.toLowerCase() == \"position()\") {\r\n                                    //Ejemplo: 3 >= position()\r\n                                    let izq = parseInt(valIzq);\r\n                                    //Devolver los entornos que abarcan esto.\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (izq >= indice && elem.getNombre() == entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                }\r\n                                else {\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                                }\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MAYORIGUALQUE, TipoPrim.INTEGER);\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeIzq) {\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MAYORIGUALQUE, TipoPrim.DOUBLE);\r\n                            default:\r\n                                break;\r\n                        }\r\n                    case TipoPrim.CADENA:\r\n                        break;\r\n                    case TipoPrim.ATRIBUTO:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionAtributoCadena(entorno, TipoOperacion.MAYORIGUALQUE);\r\n                        }\r\n                        break;\r\n                    case TipoPrim.FUNCION:\r\n                        //Ver si es position()\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        if (valIzq.toLowerCase() == \"position()\") {\r\n                            switch (typeDer) {\r\n                                case TipoPrim.INTEGER:\r\n                                    //Ej: position() >= 3\r\n                                    let der = parseInt(valDer);\r\n                                    //En un entorno temporal, devolver los que corresponden a la busqueda\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (indice >= der && elem.getNombre() === entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                default:\r\n                                    errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoPrim.IDENTIFIER:\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MAYORIGUALQUE, TipoPrim.INTEGER);\r\n                            case TipoPrim.DOUBLE:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MAYORIGUALQUE, TipoPrim.DOUBLE);\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionIdCadena(valIzq, valDer, entorno, TipoOperacion.MAYORIGUALQUE);\r\n                            case TipoPrim.IDENTIFIER:\r\n                                break;\r\n                        }\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoOperacion.MENORIGUALQUE:\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                break;\r\n                            case TipoPrim.DOUBLE:\r\n                                break;\r\n                            case TipoPrim.FUNCION:\r\n                                //Ver si es position()\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                if (valDer.toLowerCase() == \"position()\") {\r\n                                    //Ejemplo: 3 < position()\r\n                                    let izq = parseInt(valIzq);\r\n                                    //Devolver los entornos que abarcan esto.\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (izq <= indice && elem.getNombre() == entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                }\r\n                                else {\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                                }\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MENORIGUALQUE, TipoPrim.INTEGER);\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeIzq) {\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MENORIGUALQUE, TipoPrim.DOUBLE);\r\n                            default:\r\n                                break;\r\n                        }\r\n                    case TipoPrim.CADENA:\r\n                        break;\r\n                    case TipoPrim.ATRIBUTO:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionAtributoCadena(entorno, TipoOperacion.MENORIGUALQUE);\r\n                        }\r\n                        break;\r\n                    case TipoPrim.FUNCION:\r\n                        //Ver si es position()\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        if (valIzq.toLowerCase() == \"position()\") {\r\n                            switch (typeDer) {\r\n                                case TipoPrim.INTEGER:\r\n                                    //Ej: position() < 3\r\n                                    let der = parseInt(valDer);\r\n                                    //En un entorno temporal, devolver los que corresponden a la busqueda\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (indice <= der && elem.getNombre() === entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                default:\r\n                                    errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoPrim.IDENTIFIER:\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MENORIGUALQUE, TipoPrim.INTEGER);\r\n                            case TipoPrim.DOUBLE:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MENORIGUALQUE, TipoPrim.DOUBLE);\r\n                            case TipoPrim.IDENTIFIER:\r\n                                break;\r\n                        }\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoOperacion.IGUAL:\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                break;\r\n                            case TipoPrim.DOUBLE:\r\n                                break;\r\n                            case TipoPrim.FUNCION:\r\n                                //Ver si es position()\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                if (valDer.toLowerCase() == \"position()\") {\r\n                                    //Ejemplo: 3 = position()\r\n                                    let izq = parseInt(valIzq);\r\n                                    //Devolver los entornos que abarcan esto.\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (izq === indice && elem.getNombre() == entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                }\r\n                                else {\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                                }\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.IGUAL, TipoPrim.INTEGER);\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeIzq) {\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.IGUAL, TipoPrim.DOUBLE);\r\n                            default:\r\n                                break;\r\n                        }\r\n                    case TipoPrim.CADENA:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.ATRIBUTO:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                valIzq = this.op_izq.getValor(entorno);\r\n                                valDer = this.op_der.getValorInicial(entorno);\r\n                                //Esta operacion devuelve un entorno temporan con los elementos encontrados\r\n                                let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                //Obtener entorno padre.\r\n                                let padre = entorno.padre;\r\n                                //Con el padre buscar todos las etiquetas que tengan nombre entorno.nombre\r\n                                padre.tsimbolos.forEach((e) => {\r\n                                    let elem = e.valor;\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                        //Se encontro, ver si este elemento tiene el atributo\r\n                                        //  que se encuentre en valDer\r\n                                        let flag = false;\r\n                                        elem.valor.tsimbolos.forEach((c2) => {\r\n                                            let tmp = c2.valor;\r\n                                            if (tmp.getTipo() === Tipo.ATRIBUTO && (valDer === \"*\" || tmp.getNombre() === valDer)) {\r\n                                                //Por ultimo comparar, si el valor del atributo\r\n                                                //Es igual a la cadena\r\n                                                if (valIzq === tmp.getValor()) {\r\n                                                    //Cadena === valoratributo\r\n                                                    //Se agrega el simbolo. (elem)\r\n                                                    if (!flag) {\r\n                                                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                                        flag = true;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                });\r\n                                return entTemporal;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.ATRIBUTO:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionAtributoCadena(entorno, TipoOperacion.IGUAL);\r\n                            case TipoPrim.ATRIBUTO:\r\n                                //Atributo con Atributo:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                valDer = this.op_der.getValorInicial(entorno);\r\n                                //ValIzq es el nombre del atributo que se quiere buscar.\r\n                                valIzq = this.op_izq.getValorInicial(entorno);\r\n                                //Esta operacion devuelve un entorno temporan con los elementos encontrados\r\n                                let entTemporalAT = new Entorno(\"Temporal\", null, null);\r\n                                //Obtener entorno padre.\r\n                                let padreAT = entorno.padre;\r\n                                //Con el padre buscar todos las etiquetas que tengan nombre entorno.nombre\r\n                                padreAT.tsimbolos.forEach((e) => {\r\n                                    let elem = e.valor;\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                        //Se encontro, ver si este elemento tiene el atributo\r\n                                        //  que se encuentre en valDer\r\n                                        let flag = false;\r\n                                        elem.valor.tsimbolos.forEach((c2) => {\r\n                                            let tmp = c2.valor;\r\n                                            if (tmp.getTipo() === Tipo.ATRIBUTO && (valIzq === \"*\" || tmp.getNombre() === valIzq)) {\r\n                                                //Por ultimo comparar, si el valor del atributo\r\n                                                //Es igual a la cadena\r\n                                                if (valDer === valIzq) {\r\n                                                    //Cadena === valoratributo\r\n                                                    //Se agrega el simbolo. (elem)\r\n                                                    if (!flag) {\r\n                                                        entTemporalAT.agregarSimbolo(elem.getNombre(), elem);\r\n                                                        flag = true;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                });\r\n                                return entTemporalAT;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.FUNCION:\r\n                        //Ver si es position()\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        if (valIzq.toLowerCase() == \"position()\") {\r\n                            switch (typeDer) {\r\n                                case TipoPrim.INTEGER:\r\n                                    //Ej: position() < 3\r\n                                    let der = parseInt(valDer);\r\n                                    //En un entorno temporal, devolver los que corresponden a la busqueda\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (indice === der && elem.getNombre() === entorno.nombre) {\r\n                                            //Si son iguales, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                default:\r\n                                    errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoPrim.IDENTIFIER:\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.IGUAL, TipoPrim.INTEGER);\r\n                            case TipoPrim.DOUBLE:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.IGUAL, TipoPrim.DOUBLE);\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionIdCadena(valIzq, valDer, entorno, TipoOperacion.IGUAL);\r\n                            case TipoPrim.IDENTIFIER:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.CONSULTA:\r\n                        //Merge /hola/@hola = \"asd\" <-- \r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                        switch (typeDer) {\r\n                            case TipoPrim.CADENA:\r\n                                let l = this.op_izq.getValorInicial(entorno);\r\n                                let fromR = l[l.length - 1].isFromRoot();\r\n                                let lastNodeName = l[l.length - 1].getNombre();\r\n                                let entConsultaTemp = this.op_izq.getValor(entorno);\r\n                                entTemporal = this.resolverConsultaRecursiva(entConsultaTemp, valDer, lastNodeName, fromR, TipoOperacion.IGUAL);\r\n                                return entTemporal;\r\n                            default:\r\n                                return null;\r\n                        }\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoOperacion.DIFERENTEQUE:\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                break;\r\n                            case TipoPrim.DOUBLE:\r\n                                break;\r\n                            case TipoPrim.FUNCION:\r\n                                //Ver si es position()\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                if (valDer.toLowerCase() == \"position()\") {\r\n                                    //Ejemplo: 3 != position()\r\n                                    let izq = parseInt(valIzq);\r\n                                    //Devolver los entornos que abarcan esto.\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (izq != indice && elem.getNombre() == entorno.nombre) {\r\n                                            //Si es diferente de !=, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                }\r\n                                else {\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                                }\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.DIFERENTEQUE, TipoPrim.INTEGER);\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeIzq) {\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.DIFERENTEQUE, TipoPrim.DOUBLE);\r\n                            default:\r\n                                break;\r\n                        }\r\n                    case TipoPrim.CADENA:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.ATRIBUTO:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                valIzq = this.op_izq.getValor(entorno);\r\n                                valDer = this.op_der.getValorInicial(entorno);\r\n                                //Esta operacion devuelve un entorno temporan con los elementos encontrados\r\n                                let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                //Obtener entorno padre.\r\n                                let padre = entorno.padre;\r\n                                //Con el padre buscar todos las etiquetas que tengan nombre entorno.nombre\r\n                                padre.tsimbolos.forEach((e) => {\r\n                                    let elem = e.valor;\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                        //Se encontro, ver si este elemento tiene el atributo\r\n                                        //  que se encuentre en valDer\r\n                                        elem.valor.tsimbolos.forEach((c2) => {\r\n                                            let tmp = c2.valor;\r\n                                            if (tmp.getTipo() === Tipo.ATRIBUTO && (valDer === \"*\" || tmp.getNombre() === valDer)) {\r\n                                                //Por ultimo comparar, si el valor del atributo\r\n                                                //Es igual a la cadena\r\n                                                if (valIzq != tmp.getValor()) {\r\n                                                    //Cadena === valoratributo\r\n                                                    //Se agrega el simbolo. (elem)\r\n                                                    entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                });\r\n                                return entTemporal;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.ATRIBUTO:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionAtributoCadena(entorno, TipoOperacion.DIFERENTEQUE);\r\n                        }\r\n                        break;\r\n                    case TipoPrim.FUNCION:\r\n                        //Ver si es position()\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        if (valIzq.toLowerCase() == \"position()\") {\r\n                            switch (typeDer) {\r\n                                case TipoPrim.INTEGER:\r\n                                    //Ej: position() < 3\r\n                                    let der = parseInt(valDer);\r\n                                    //En un entorno temporal, devolver los que corresponden a la busqueda\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (indice != der && elem.getNombre() === entorno.nombre) {\r\n                                            //Si es diferente de , meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                default:\r\n                                    errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoPrim.IDENTIFIER:\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                if (this.isXQuery != undefined && this.isXQuery) {\r\n                                    return this.XQresolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.DIFERENTEQUE, TipoPrim.INTEGER);\r\n                                }\r\n                                else {\r\n                                    return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.DIFERENTEQUE, TipoPrim.INTEGER);\r\n                                }\r\n                            case TipoPrim.DOUBLE:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.DIFERENTEQUE, TipoPrim.DOUBLE);\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionIdCadena(valIzq, valDer, entorno, TipoOperacion.DIFERENTEQUE);\r\n                            case TipoPrim.IDENTIFIER:\r\n                                break;\r\n                        }\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoOperacion.AND:\r\n                break;\r\n            case TipoOperacion.OR:\r\n                break;\r\n        }\r\n    }\r\n    getStringTipo(operadorTipo) {\r\n        switch (operadorTipo) {\r\n            case TipoPrim.INTEGER:\r\n                return 'entero';\r\n            case TipoPrim.DOUBLE:\r\n                return 'doble';\r\n            case TipoPrim.CADENA:\r\n                return 'cadena';\r\n            case TipoPrim.IDENTIFIER:\r\n                return 'id';\r\n            case TipoPrim.ATRIBUTO:\r\n                return 'atributo';\r\n            case TipoPrim.DOT:\r\n                return 'dot';\r\n            case TipoPrim.BOOLEAN:\r\n                return 'boolean';\r\n            case TipoPrim.FUNCION:\r\n                return \"Funcion mae\";\r\n            case TipoPrim.CONSULTA:\r\n                return \"Consulta\";\r\n            default:\r\n                return \"ERROR\";\r\n        }\r\n    }\r\n    buscarTexto(elem) {\r\n        for (let i = 0; i < elem.valor.tsimbolos.length; i++) {\r\n            let xd = elem.valor.tsimbolos[i].valor;\r\n            if (xd.getTipo() === Tipo.STRING) {\r\n                return xd.getValor();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    tipoDominanteAritmetica(ex1, ex2) {\r\n        if (ex1 == TipoPrim.ERROR || ex2 == TipoPrim.ERROR)\r\n            return TipoPrim.ERROR;\r\n        if (ex1 == TipoPrim.DOUBLE || ex2 == TipoPrim.DOUBLE)\r\n            return TipoPrim.DOUBLE;\r\n        else if (ex1 == TipoPrim.INTEGER || ex2 == TipoPrim.INTEGER)\r\n            return TipoPrim.INTEGER;\r\n        return TipoPrim.ERROR;\r\n    }\r\n    tipoDominanteOperacion(ex1, ex2) {\r\n        if (ex1 == TipoPrim.ERROR || ex2 == TipoPrim.ERROR)\r\n            return TipoPrim.ERROR;\r\n        if (ex1 == TipoPrim.DOUBLE || ex2 == TipoPrim.DOUBLE)\r\n            return TipoPrim.DOUBLE;\r\n        else if (ex1 == TipoPrim.INTEGER || ex2 == TipoPrim.INTEGER)\r\n            return TipoPrim.INTEGER;\r\n        return TipoPrim.ERROR;\r\n    }\r\n    XQresolverOperacionIdNumero(valIzq, valDer, entorno, relacional, TipoNumero) {\r\n        let der;\r\n        if (TipoNumero === TipoPrim.INTEGER) {\r\n            der = parseInt(valDer);\r\n        }\r\n        else {\r\n            der = parseFloat(valDer);\r\n        }\r\n        let izq = valIzq.getNombre();\r\n        //Devolver un entorno con los simbolos encontrados\r\n        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n        //1. Obtener entorno padre.\r\n        //2. Sobre el padre, buscar el que tenga nombre entorno.nombre\r\n        entorno.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            if (elem.getNombre() === izq) {\r\n                //Buscar el texto de este elemento.\r\n                let texto = this.buscarTexto(elem);\r\n                //Ver si el texto se puede castear a NUMERO\r\n                if (texto != null) {\r\n                    let numCompare = +texto;\r\n                    //Comparar los numeros\r\n                    switch (relacional) {\r\n                        case TipoOperacion.MAYORQUE:\r\n                            if (numCompare > der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                        case TipoOperacion.MENORQUE:\r\n                            if (numCompare < der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                        case TipoOperacion.MAYORIGUALQUE:\r\n                            if (numCompare >= der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                        case TipoOperacion.MENORIGUALQUE:\r\n                            if (numCompare <= der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                        case TipoOperacion.IGUAL:\r\n                            if (numCompare === der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                        case TipoOperacion.DIFERENTEQUE:\r\n                            if (numCompare != der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return entTemporal;\r\n    }\r\n    resolverOperacionIdNumero(valIzq, valDer, entorno, relacional, TipoNumero) {\r\n        if (this.isXQuery != undefined && this.isXQuery) {\r\n            return this.XQresolverOperacionIdNumero(valIzq, valDer, entorno, relacional, TipoNumero);\r\n        }\r\n        let der;\r\n        if (TipoNumero === TipoPrim.INTEGER) {\r\n            der = parseInt(valDer);\r\n        }\r\n        else {\r\n            der = parseFloat(valDer);\r\n        }\r\n        let izq = valIzq.getNombre();\r\n        //Devolver un entorno con los simbolos encontrados\r\n        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n        //1. Obtener entorno padre.\r\n        let padre = entorno.padre;\r\n        //2. Sobre el padre, buscar el que tenga nombre entorno.nombre\r\n        padre.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                //Se encontro, ahora buscar en los simbolos de este elem\r\n                //si se encuentra el identificador (valIzq)\r\n                elem.valor.tsimbolos.forEach((insd) => {\r\n                    let elin = insd.valor;\r\n                    if (elin.getNombre() === izq) {\r\n                        //Buscar el texto de este elemento.\r\n                        let texto = this.buscarTexto(elin);\r\n                        //Ver si el texto se puede castear a NUMERO\r\n                        if (texto != null) {\r\n                            let numCompare = +texto;\r\n                            //Comparar los numeros\r\n                            switch (relacional) {\r\n                                case TipoOperacion.MAYORQUE:\r\n                                    if (numCompare > der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MENORQUE:\r\n                                    if (numCompare < der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MAYORIGUALQUE:\r\n                                    if (numCompare >= der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MENORIGUALQUE:\r\n                                    if (numCompare <= der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.IGUAL:\r\n                                    if (numCompare === der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.DIFERENTEQUE:\r\n                                    if (numCompare != der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return entTemporal;\r\n    }\r\n    resolverOperacionIdCadena(valIzq, valDer, entorno, relacional) {\r\n        if (this.isXQuery != undefined && this.isXQuery) {\r\n            return this.XQresolverOperacionIdCadena(valIzq, valDer, entorno, relacional);\r\n        }\r\n        let der = valDer;\r\n        let izq = valIzq.getNombre();\r\n        //Devolver un entorno con los simbolos encontrados\r\n        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n        //1. Obtener entorno padre.\r\n        let padre = entorno.padre;\r\n        //2. Sobre el padre, buscar el que tenga nombre entorno.nombre\r\n        padre.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                //Se encontro, ahora buscar en los simbolos de este elem\r\n                //si se encuentra el identificador (valIzq)\r\n                elem.valor.tsimbolos.forEach((insd) => {\r\n                    let elin = insd.valor;\r\n                    if (elin.getNombre() === izq) {\r\n                        //Buscar el texto de este elemento.\r\n                        let texto = this.buscarTexto(elin);\r\n                        der = der.replace(\"\\\"\", \"\");\r\n                        if (texto != null) {\r\n                            //Comparar los textos\r\n                            switch (relacional) {\r\n                                case TipoOperacion.MAYORQUE:\r\n                                    if (texto > der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MENORQUE:\r\n                                    if (texto < der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MAYORIGUALQUE:\r\n                                    if (texto >= der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MENORIGUALQUE:\r\n                                    if (texto <= der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.IGUAL:\r\n                                    if (texto === der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.DIFERENTEQUE:\r\n                                    if (texto != der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return entTemporal;\r\n    }\r\n    XQresolverOperacionIdCadena(valIzq, valDer, entorno, relacional) {\r\n        let der = valDer;\r\n        let izq = valIzq.getNombre();\r\n        //Devolver un entorno con los simbolos encontrados\r\n        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n        entorno.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            //si se encuentra el identificador (valIzq)\r\n            if (elem.getNombre() === izq) {\r\n                //Buscar el texto de este elemento.\r\n                let texto = this.buscarTexto(elem);\r\n                der = der.replace(\"\\\"\", \"\");\r\n                der = der.replace(\"\\\"\", \"\");\r\n                der = der.replace(\"'\", \"\");\r\n                der = der.replace(\"\\'\", \"\");\r\n                if (texto != null) {\r\n                    //Comparar los textos\r\n                    switch (relacional) {\r\n                        case TipoOperacion.MAYORQUE:\r\n                            if (texto > der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                        case TipoOperacion.MENORQUE:\r\n                            if (texto < der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                        case TipoOperacion.MAYORIGUALQUE:\r\n                            if (texto >= der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                        case TipoOperacion.MENORIGUALQUE:\r\n                            if (texto <= der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                        case TipoOperacion.IGUAL:\r\n                            if (texto == der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                        case TipoOperacion.DIFERENTEQUE:\r\n                            if (texto != der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return entTemporal;\r\n    }\r\n    resolverOperacionAtributoCadena(entorno, relacional) {\r\n        this.tipo = TipoPrim.FUNCION;\r\n        if (this.isXQuery != undefined && this.isXQuery) {\r\n            return this.XQresolverOperacionAtributoCadena(entorno, relacional);\r\n        }\r\n        let valDer = this.op_der.getValor(entorno);\r\n        //ValIzq es el nombre del atributo que se quiere buscar.\r\n        let valIzq = this.op_izq.getValorInicial(entorno);\r\n        //Esta operacion devuelve un entorno temporan con los elementos encontrados\r\n        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n        //Obtener entorno padre.\r\n        let padre = entorno.padre;\r\n        //Con el padre buscar todos las etiquetas que tengan nombre entorno.nombre\r\n        padre.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                //Se encontro, ver si este elemento tiene el atributo\r\n                //  que se encuentre en valDer\r\n                let flag = false;\r\n                elem.valor.tsimbolos.forEach((c2) => {\r\n                    let tmp = c2.valor;\r\n                    if (tmp.getTipo() === Tipo.ATRIBUTO && (valIzq === \"*\" || tmp.getNombre() === valIzq)) {\r\n                        //Por ultimo comparar, si el valor del atributo\r\n                        //Es igual a la cadena\r\n                        switch (relacional) {\r\n                            case TipoOperacion.MAYORQUE:\r\n                                if (valDer > tmp.getValor()) {\r\n                                    //Cadena === valoratributo\r\n                                    //Se agrega el simbolo. (elem)\r\n                                    if (!flag) {\r\n                                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                        flag = true;\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case TipoOperacion.MENORQUE:\r\n                                if (valDer < tmp.getValor()) {\r\n                                    //Cadena === valoratributo\r\n                                    //Se agrega el simbolo. (elem)\r\n                                    if (!flag) {\r\n                                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                        flag = true;\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case TipoOperacion.MAYORIGUALQUE:\r\n                                if (valDer >= tmp.getValor()) {\r\n                                    //Cadena === valoratributo\r\n                                    //Se agrega el simbolo. (elem)\r\n                                    if (!flag) {\r\n                                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                        flag = true;\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case TipoOperacion.MENORIGUALQUE:\r\n                                if (valDer <= tmp.getValor()) {\r\n                                    //Cadena === valoratributo\r\n                                    //Se agrega el simbolo. (elem)\r\n                                    if (!flag) {\r\n                                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                        flag = true;\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case TipoOperacion.IGUAL:\r\n                                if (valDer === tmp.getValor()) {\r\n                                    //Cadena === valoratributo\r\n                                    //Se agrega el simbolo. (elem)\r\n                                    if (!flag) {\r\n                                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                        flag = true;\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case TipoOperacion.DIFERENTEQUE:\r\n                                if (valDer != tmp.getValor()) {\r\n                                    //Cadena === valoratributo\r\n                                    //Se agrega el simbolo. (elem)\r\n                                    if (!flag) {\r\n                                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                        flag = true;\r\n                                    }\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return entTemporal;\r\n    }\r\n    XQresolverOperacionAtributoCadena(entorno, relacional) {\r\n        this.tipo = TipoPrim.FUNCION;\r\n        //let der: string = valDer;\r\n        let der = this.op_der.getValor(entorno);\r\n        //let izq = valIzq.getNombre()\r\n        let izq = this.op_izq.getValorInicial(entorno);\r\n        //Devolver un entorno con los simbolos encontrados\r\n        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n        entorno.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            //si se encuentra el identificador (valIzq)\r\n            if (elem.getNombre() === izq) {\r\n                //Buscar el texto de este elemento.\r\n                let texto = elem.valor;\r\n                der = der.replace(\"\\\"\", \"\");\r\n                der = der.replace(\"\\\"\", \"\");\r\n                der = der.replace(\"'\", \"\");\r\n                der = der.replace(\"\\'\", \"\");\r\n                texto = texto.replace(\"\\\"\", \"\");\r\n                texto = texto.replace(\"\\\"\", \"\");\r\n                texto = texto.replace(\"\\\"\", \"\");\r\n                texto = texto.replace(\"\\\"\", \"\");\r\n                switch (relacional) {\r\n                    case TipoOperacion.MAYORQUE:\r\n                        if (texto > der) {\r\n                            //Si lo es, meter al entorno temporal.\r\n                            entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                        }\r\n                        break;\r\n                    case TipoOperacion.MENORQUE:\r\n                        if (texto < der) {\r\n                            //Si lo es, meter al entorno temporal.\r\n                            entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                        }\r\n                        break;\r\n                    case TipoOperacion.MAYORIGUALQUE:\r\n                        if (texto >= der) {\r\n                            //Si lo es, meter al entorno temporal.\r\n                            entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                        }\r\n                        break;\r\n                    case TipoOperacion.MENORIGUALQUE:\r\n                        if (texto <= der) {\r\n                            //Si lo es, meter al entorno temporal.\r\n                            entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                        }\r\n                        break;\r\n                    case TipoOperacion.IGUAL:\r\n                        if (texto === der) {\r\n                            //Si lo es, meter al entorno temporal.\r\n                            entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                        }\r\n                        break;\r\n                    case TipoOperacion.DIFERENTEQUE:\r\n                        if (texto != der) {\r\n                            //Si lo es, meter al entorno temporal.\r\n                            entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n        return entTemporal;\r\n    }\r\n    resolverConsultaRecursiva(entConsultaTemp, valDer, lastNodeName, isFromRoot, op) {\r\n        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n        //Sobre estos ver quienes tienen valDer\r\n        let flag = false;\r\n        entConsultaTemp.tsimbolos.forEach((e) => {\r\n            let elemEnt = e.valor;\r\n            flag = false;\r\n            elemEnt.valor.tsimbolos.forEach((c1) => {\r\n                let elem = c1.valor;\r\n                if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                    elem.valor.tsimbolos.forEach((c2) => {\r\n                        let elemfinal = c2.valor;\r\n                        if (op === TipoOperacion.IGUAL) {\r\n                            if (elemfinal.getTipo() === Tipo.ATRIBUTO && (lastNodeName === \"*\" || elemfinal.getNombre() === lastNodeName) && elemfinal.getValor() === valDer) {\r\n                                if (!flag) {\r\n                                    entTemporal.agregarSimbolo(elemEnt.nombre, elemEnt);\r\n                                    flag = true;\r\n                                }\r\n                            }\r\n                            else if (elem.getTipo() === Tipo.ETIQUETA && !isFromRoot) {\r\n                                //Buscar recursivamente atributos.\r\n                                let found = this.buscarAtributosRecursivamente(elem, valDer, lastNodeName, op);\r\n                                if (found) {\r\n                                    if (!flag) {\r\n                                        entTemporal.agregarSimbolo(elemEnt.nombre, elemEnt);\r\n                                        flag = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (op === TipoOperacion.DIFERENTEQUE) {\r\n                            if (elemfinal.getTipo() === Tipo.ATRIBUTO && (lastNodeName === \"*\" || elemfinal.getNombre() === lastNodeName) && elemfinal.getValor() !== valDer) {\r\n                                if (!flag) {\r\n                                    entTemporal.agregarSimbolo(elemEnt.nombre, elemEnt);\r\n                                }\r\n                            }\r\n                            else if (elem.getTipo() === Tipo.ETIQUETA && !isFromRoot) {\r\n                                //Buscar recursivamente atributos.\r\n                                let found = this.buscarAtributosRecursivamente(elem, valDer, lastNodeName, op);\r\n                                if (found) {\r\n                                    if (!flag) {\r\n                                        entTemporal.agregarSimbolo(elemEnt.nombre, elemEnt);\r\n                                        flag = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        return entTemporal;\r\n    }\r\n    buscarAtributosRecursivamente(elem, valDer, lastNodeName, op) {\r\n        for (let i = 0; i < elem.valor.tsimbolos.length; i++) {\r\n            let at = elem.valor.tsimbolos[i].valor;\r\n            if (op === TipoOperacion.IGUAL) {\r\n                if (at.getTipo() === Tipo.ATRIBUTO && (lastNodeName === \"*\" || at.getNombre() === lastNodeName) && at.getValor() === valDer) {\r\n                    return true;\r\n                }\r\n                else if (at.getTipo() === Tipo.ETIQUETA) {\r\n                    //Buscar recursivamente atributos.\r\n                    let found = this.buscarAtributosRecursivamente(at, valDer, lastNodeName, op);\r\n                    if (found) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            else if (op === TipoOperacion.DIFERENTEQUE) {\r\n                if (at.getTipo() === Tipo.ATRIBUTO && (lastNodeName === \"*\" || at.getNombre() === lastNodeName) && at.getValor() !== valDer) {\r\n                    return true;\r\n                }\r\n                else if (at.getTipo() === Tipo.ETIQUETA) {\r\n                    //Buscar recursivamente atributos.\r\n                    let found = this.buscarAtributosRecursivamente(at, valDer, lastNodeName, op);\r\n                    if (found) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    resolverOperacionNumeroId(valIzq, valDer, entorno, relacional, TipoNumero) {\r\n        let izq;\r\n        if (TipoNumero === TipoPrim.INTEGER) {\r\n            izq = parseInt(valIzq);\r\n        }\r\n        else {\r\n            izq = parseFloat(valIzq);\r\n        }\r\n        let der = valDer.getNombre();\r\n        //Devolver un entorno con los simbolos encontrados\r\n        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n        //1. Obtener entorno padre.\r\n        let padre = entorno.padre;\r\n        //2. Sobre el padre, buscar el que tenga nombre entorno.nombre\r\n        padre.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                //Se encontro, ahora buscar en los simbolos de este elem\r\n                //si se encuentra el identificador (valIzq)\r\n                elem.valor.tsimbolos.forEach((insd) => {\r\n                    let elin = insd.valor;\r\n                    if (elin.getNombre() === der) {\r\n                        //Buscar el texto de este elemento.\r\n                        let texto = this.buscarTexto(elin);\r\n                        //Ver si el texto se puede castear a NUMERO\r\n                        if (texto != null) {\r\n                            let numCompare = +texto;\r\n                            //Comparar los numeros\r\n                            switch (relacional) {\r\n                                case TipoOperacion.MAYORQUE:\r\n                                    if (izq > numCompare) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MENORQUE:\r\n                                    if (izq < numCompare) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MAYORIGUALQUE:\r\n                                    if (izq >= numCompare) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MENORIGUALQUE:\r\n                                    if (izq <= numCompare) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.IGUAL:\r\n                                    if (izq === numCompare) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.DIFERENTEQUE:\r\n                                    if (izq != numCompare) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return entTemporal;\r\n    }\r\n}\r\nexport var TipoOperacion;\r\n(function (TipoOperacion) {\r\n    TipoOperacion[TipoOperacion[\"SUMA\"] = 0] = \"SUMA\";\r\n    TipoOperacion[TipoOperacion[\"RESTA\"] = 1] = \"RESTA\";\r\n    TipoOperacion[TipoOperacion[\"MULTIPLICACION\"] = 2] = \"MULTIPLICACION\";\r\n    TipoOperacion[TipoOperacion[\"DIVISION\"] = 3] = \"DIVISION\";\r\n    TipoOperacion[TipoOperacion[\"MAYORQUE\"] = 4] = \"MAYORQUE\";\r\n    TipoOperacion[TipoOperacion[\"MENORQUE\"] = 5] = \"MENORQUE\";\r\n    TipoOperacion[TipoOperacion[\"MAYORIGUALQUE\"] = 6] = \"MAYORIGUALQUE\";\r\n    TipoOperacion[TipoOperacion[\"MENORIGUALQUE\"] = 7] = \"MENORIGUALQUE\";\r\n    TipoOperacion[TipoOperacion[\"IGUAL\"] = 8] = \"IGUAL\";\r\n    TipoOperacion[TipoOperacion[\"DIFERENTEQUE\"] = 9] = \"DIFERENTEQUE\";\r\n    TipoOperacion[TipoOperacion[\"OR\"] = 10] = \"OR\";\r\n    TipoOperacion[TipoOperacion[\"AND\"] = 11] = \"AND\";\r\n    TipoOperacion[TipoOperacion[\"NOT\"] = 12] = \"NOT\";\r\n    TipoOperacion[TipoOperacion[\"MOD\"] = 13] = \"MOD\";\r\n    TipoOperacion[TipoOperacion[\"PAR\"] = 14] = \"PAR\";\r\n    TipoOperacion[TipoOperacion[\"XQEQ\"] = 15] = \"XQEQ\";\r\n    TipoOperacion[TipoOperacion[\"XQGT\"] = 16] = \"XQGT\";\r\n    TipoOperacion[TipoOperacion[\"XQLT\"] = 17] = \"XQLT\";\r\n    TipoOperacion[TipoOperacion[\"XQNE\"] = 18] = \"XQNE\";\r\n    TipoOperacion[TipoOperacion[\"XQLE\"] = 19] = \"XQLE\";\r\n    TipoOperacion[TipoOperacion[\"XQGE\"] = 20] = \"XQGE\"; // Greather equal then\r\n})(TipoOperacion || (TipoOperacion = {}));\r\n","import { TipoInstruccion3D } from \"./Instruccion3D\";\r\nexport class Asignacion3D {\r\n    constructor(tipo, identificador, expresion, codigo3d, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.codigo3D = codigo3d;\r\n        this.expresion = expresion;\r\n        this.identificador = identificador;\r\n        this.eliminada = false;\r\n        this.optimizada = false;\r\n    }\r\n    isOptimizada() {\r\n        return this.optimizada;\r\n    }\r\n    setOptimizada(optimizada) {\r\n        this.optimizada = optimizada;\r\n    }\r\n    isEliminada() {\r\n        return this.eliminada;\r\n    }\r\n    setEliminada(eliminada) {\r\n        this.eliminada = eliminada;\r\n    }\r\n    getTipoInstruccion() {\r\n        return this.tipo;\r\n    }\r\n    setCodigo3D(codigo) {\r\n        this.codigo3D = codigo;\r\n    }\r\n    getCodigo3D() {\r\n        if (this.tipo === TipoInstruccion3D.ASIGNORMAL) {\r\n            this.codigo3D = this.identificador + \" = \" + this.expresion.getCodigo3D() + \";\";\r\n        }\r\n        return this.codigo3D;\r\n    }\r\n}\r\n","export var TipoExpresion3D;\r\n(function (TipoExpresion3D) {\r\n    TipoExpresion3D[TipoExpresion3D[\"PRIMITIVA\"] = 0] = \"PRIMITIVA\";\r\n    TipoExpresion3D[TipoExpresion3D[\"OPERACION\"] = 1] = \"OPERACION\";\r\n})(TipoExpresion3D || (TipoExpresion3D = {}));\r\n","class CST {\r\n    constructor() {\r\n        this.id = 0;\r\n        this.pila = [];\r\n        this.raiz = null;\r\n    }\r\n    agregarPila(nodo) {\r\n        this.pila.push(nodo);\r\n    }\r\n    obtenerUltimoNodo() {\r\n        return this.pila.pop();\r\n    }\r\n    setRaiz(root) {\r\n        this.raiz = root;\r\n    }\r\n    getRaiz() {\r\n        return this.raiz;\r\n    }\r\n    getId() {\r\n        this.id = this.id + 1;\r\n        return this.id;\r\n    }\r\n}\r\nconst cstXmlAsc = new CST();\r\nconst cstXmlDesc = new CST();\r\nconst cstXpathAsc = new CST();\r\nconst cstXpathDesc = new CST();\r\nexport { cstXmlAsc, cstXmlDesc, cstXpathAsc, cstXpathDesc };\r\n","export class Etiqueta3D {\r\n    constructor(tipo, identificador, codigo3d, fila, columna) {\r\n        this.tipo = tipo;\r\n        this.fila = fila;\r\n        this.identificador = identificador;\r\n        this.codigo3D = codigo3d;\r\n        this.columna = columna;\r\n        this.eliminada = false;\r\n        this.optimizada = false;\r\n    }\r\n    isOptimizada() {\r\n        return this.optimizada;\r\n    }\r\n    setOptimizada(optimizada) {\r\n        this.optimizada = optimizada;\r\n    }\r\n    isEliminada() {\r\n        return this.eliminada;\r\n    }\r\n    setEliminada(eliminada) {\r\n        this.eliminada = eliminada;\r\n    }\r\n    getCodigo3D() {\r\n        return this.codigo3D;\r\n    }\r\n    setCodigo3D(codigo) {\r\n        this.codigo3D = codigo;\r\n    }\r\n    getTipoInstruccion() {\r\n        return this.tipo;\r\n    }\r\n}\r\n","import { Simbolo } from \"../AST/Simbolo\";\r\nimport { Tipo } from \"../AST/Tipo\";\r\nimport errores from '../Global/ListaError';\r\nexport class Atributo {\r\n    constructor(id, valor, linea, columna) {\r\n        this.identificador = id;\r\n        this.valor = valor;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n    ejecutar(entorno) {\r\n        /* Se debe verificar que no exista el atributo */\r\n        if (!entorno.existeSimbolo(this.identificador)) {\r\n            entorno.agregarSimbolo(this.identificador, new Simbolo(Tipo.ATRIBUTO, this.identificador, this.valor, this.linea, this.columna));\r\n        }\r\n        else {\r\n            /*  Error semantico */\r\n            errores.agregarError('semantico', 'Ya existe el simbolo ' + this.identificador, this.linea, this.columna);\r\n        }\r\n    }\r\n}\r\n","import { Entorno } from '../AST/Entorno';\r\nimport { Simbolo } from '../AST/Simbolo';\r\nimport { Tipo } from '../AST/Tipo';\r\nexport class Objeto {\r\n    constructor(id, texto, linea, columna, listaAtributos, listaO, isUnica) {\r\n        this.identificador = id;\r\n        this.texto = texto;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.listaAtributos = listaAtributos;\r\n        this.listaObjetos = listaO;\r\n        this.isUnica = isUnica;\r\n    }\r\n    ejecutar(entorno) {\r\n        let local = new Entorno(this.identificador, entorno, entorno.global);\r\n        local.agregarSimbolo('Etiqueta unica', new Simbolo(Tipo.ETIQUETA_UNIQUE, 'Etiqueta unica', this.isUnica, this.linea, this.columna));\r\n        this.listaAtributos.forEach((elem) => {\r\n            elem.ejecutar(local);\r\n        });\r\n        this.listaObjetos.forEach((obj) => {\r\n            obj.ejecutar(local);\r\n        });\r\n        if (this.texto !== '')\r\n            local.agregarSimbolo('Texto', new Simbolo(Tipo.STRING, 'Texto', this.texto, this.linea, this.columna));\r\n        entorno.agregarSimbolo(this.identificador, new Simbolo(this.isUnica ? Tipo.ETIQUETA_UNIQUE : Tipo.ETIQUETA, this.identificador, local, this.linea, this.columna));\r\n    }\r\n}\r\n","import { TipoExpresion3D } from \"../Expresiones3D/Expresion3D\";\r\nimport { Operacion3D } from \"../Expresiones3D/Operacion3D\";\r\nexport class If3D {\r\n    constructor(tipo, condicion, gotoEtiqueta, codigo3d, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.codigo3D = codigo3d;\r\n        this.condicion = condicion;\r\n        this.gotoEtiqueta = gotoEtiqueta;\r\n        this.eliminada = false;\r\n        this.optimizada = false;\r\n    }\r\n    isOptimizada() {\r\n        return this.optimizada;\r\n    }\r\n    setOptimizada(optimizada) {\r\n        this.optimizada = optimizada;\r\n    }\r\n    isEliminada() {\r\n        return this.eliminada;\r\n    }\r\n    setEliminada(eliminada) {\r\n        this.eliminada = eliminada;\r\n    }\r\n    getTipoInstruccion() {\r\n        return this.tipo;\r\n    }\r\n    negarCondicion() {\r\n        if (this.condicion instanceof Operacion3D) {\r\n            let negada = this.condicion.negarCondicion();\r\n            if (negada) {\r\n                let x = new Operacion3D(TipoExpresion3D.OPERACION, negada, this.condicion.op_izq, this.condicion.op_der, this.condicion.codigo3D, -1, -1);\r\n                let y = Object.create(x);\r\n                this.condicion = Object.create(y);\r\n                return y;\r\n            }\r\n        }\r\n    }\r\n    setCodigo3D(codigo) {\r\n        this.codigo3D = codigo;\r\n    }\r\n    getCodigo3D() {\r\n        this.codigo3D = \"if (\" + this.condicion.getCodigo3D() + \")\";\r\n        this.codigo3D += \" \" + this.gotoEtiqueta.getCodigo3D();\r\n        return this.codigo3D;\r\n    }\r\n}\r\n","export class Goto3D {\r\n    constructor(tipo, identificador, codigo3d, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.codigo3D = codigo3d;\r\n        this.identificador = identificador;\r\n        this.eliminada = false;\r\n        this.optimizada = false;\r\n    }\r\n    isOptimizada() {\r\n        return this.optimizada;\r\n    }\r\n    setOptimizada(optimizada) {\r\n        this.optimizada = optimizada;\r\n    }\r\n    isEliminada() {\r\n        return this.eliminada;\r\n    }\r\n    setEliminada(eliminada) {\r\n        this.eliminada = eliminada;\r\n    }\r\n    getTipoInstruccion() {\r\n        return this.tipo;\r\n    }\r\n    changeReferencia(nuevoId) {\r\n        this.identificador = nuevoId;\r\n    }\r\n    getReferencia() {\r\n        return this.identificador;\r\n    }\r\n    setCodigo3D(codigo) {\r\n        this.codigo3D = codigo;\r\n    }\r\n    getCodigo3D() {\r\n        this.codigo3D = \"goto \" + this.identificador + \";\";\r\n        return this.codigo3D;\r\n    }\r\n}\r\n","export class Predicate {\r\n    constructor(expresion, linea, columna) {\r\n        this.expresion = expresion;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n    getTipo() {\r\n        return this.tipo;\r\n    }\r\n    get3Dir(ent) {\r\n        return this.expresion.get3Dir(ent);\r\n    }\r\n    getValor(ent) {\r\n        let resultado = this.expresion.getValor(ent);\r\n        this.tipo = this.expresion.getTipo(ent);\r\n        return resultado;\r\n    }\r\n    getValorInicial(ent) {\r\n    }\r\n}\r\n","export class Main {\r\n    constructor(tipo, listaInstrucciones, codigo3D, fila, columna) {\r\n        this.fila = fila;\r\n        this.codigo3Dir = codigo3D;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.listaInstrucciones = listaInstrucciones;\r\n    }\r\n    getCodigo3Dir() {\r\n        let auxCode = \"void main() {\\n\";\r\n        this.listaInstrucciones.forEach((instruccion) => {\r\n            auxCode += \"    \" + instruccion.getCodigo3D() + \"\\n\";\r\n        });\r\n        auxCode += \"}\";\r\n        return auxCode;\r\n    }\r\n    setCodigo3Dir(codigo) {\r\n        this.codigo3Dir = codigo;\r\n    }\r\n    optimizar() {\r\n        return \"\";\r\n    }\r\n}\r\n","export class Metodo {\r\n    constructor(tipo, listaInstrucciones, codigo3D, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.codigo3Dir = codigo3D;\r\n        this.listaInstrucciones = listaInstrucciones;\r\n        ;\r\n    }\r\n    getCodigo3Dir() {\r\n        //this.codigo3Dir  tiene el nombre del metodo (identificador)\r\n        let auxCode = \"void \" + this.codigo3Dir + \"() {\\n\";\r\n        this.listaInstrucciones.forEach((instruccion) => {\r\n            auxCode += \"    \" + instruccion.getCodigo3D() + \"\\n\";\r\n        });\r\n        auxCode += \"}\";\r\n        return auxCode;\r\n    }\r\n    setCodigo3Dir(codigo) {\r\n        this.codigo3Dir = codigo;\r\n    }\r\n    optimizar() {\r\n    }\r\n}\r\n","\"use strict\";\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XPath_GramaticaDesc = (function () {\r\n    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)\r\n        ; return o; }, $V0 = [5, 7], $V1 = [2, 8], $V2 = [1, 4], $V3 = [1, 16], $V4 = [1, 7], $V5 = [1, 9], $V6 = [1, 8], $V7 = [1, 15], $V8 = [1, 14], $V9 = [1, 12], $Va = [1, 13], $Vb = [5, 7, 12, 16, 20, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55], $Vc = [2, 41], $Vd = [1, 25], $Ve = [5, 7, 16, 20, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55], $Vf = [1, 31], $Vg = [1, 34], $Vh = [1, 35], $Vi = [1, 36], $Vj = [1, 37], $Vk = [1, 38], $Vl = [1, 39], $Vm = [1, 40], $Vn = [1, 41], $Vo = [1, 42], $Vp = [1, 43], $Vq = [1, 44], $Vr = [1, 45], $Vs = [1, 46], $Vt = [1, 60], $Vu = [1, 58], $Vv = [1, 59], $Vw = [1, 62], $Vx = [1, 54], $Vy = [1, 55], $Vz = [1, 56], $VA = [1, 57], $VB = [1, 80], $VC = [1, 81], $VD = [1, 82], $VE = [1, 83], $VF = [1, 84], $VG = [1, 85], $VH = [1, 86], $VI = [1, 87], $VJ = [1, 88], $VK = [1, 89], $VL = [1, 90], $VM = [1, 91], $VN = [1, 92], $VO = [16, 20, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55], $VP = [1, 99], $VQ = [1, 102], $VR = [1, 100], $VS = [1, 101], $VT = [16, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55], $VU = [16, 45, 46, 47, 48, 49, 50, 51, 52, 55];\r\n    var parser = { trace: function trace() { },\r\n        yy: {},\r\n        symbols_: { \"error\": 2, \"START\": 3, \"LISTACONSULTAS\": 4, \"EOF\": 5, \"CONSULTA\": 6, \"andSelect\": 7, \"identifier\": 8, \"LISTANODOS\": 9, \"MASTIPOS\": 10, \"NODO\": 11, \"diag\": 12, \"TIPONODO\": 13, \"corA\": 14, \"EXPRESION\": 15, \"corC\": 16, \"AXES\": 17, \"attr\": 18, \"PREDICATE\": 19, \"asterisco\": 20, \"dot\": 21, \"FUNCIONES\": 22, \"ancestor\": 23, \"dospuntos\": 24, \"NODETEST\": 25, \"ancestorSelf\": 26, \"attribute\": 27, \"child\": 28, \"descendant\": 29, \"descendantSelf\": 30, \"following\": 31, \"followingSib\": 32, \"namespace\": 33, \"parent\": 34, \"preced\": 35, \"precedSib\": 36, \"self\": 37, \"textFunc\": 38, \"nodeFunc\": 39, \"PRIMITIVA\": 40, \"OPERACION\": 41, \"mas\": 42, \"menos\": 43, \"div\": 44, \"lte\": 45, \"lt\": 46, \"gte\": 47, \"gt\": 48, \"igual\": 49, \"nequal\": 50, \"or\": 51, \"and\": 52, \"mod\": 53, \"parA\": 54, \"parC\": 55, \"DoubleLiteral\": 56, \"IntegerLiteral\": 57, \"cadena\": 58, \"cadena2\": 59, \"lastFunc\": 60, \"positionFunc\": 61, \"$accept\": 0, \"$end\": 1 },\r\n        terminals_: { 2: \"error\", 5: \"EOF\", 7: \"andSelect\", 8: \"identifier\", 12: \"diag\", 14: \"corA\", 16: \"corC\", 18: \"attr\", 20: \"asterisco\", 21: \"dot\", 23: \"ancestor\", 24: \"dospuntos\", 26: \"ancestorSelf\", 27: \"attribute\", 28: \"child\", 29: \"descendant\", 30: \"descendantSelf\", 31: \"following\", 32: \"followingSib\", 33: \"namespace\", 34: \"parent\", 35: \"preced\", 36: \"precedSib\", 37: \"self\", 38: \"textFunc\", 39: \"nodeFunc\", 42: \"mas\", 43: \"menos\", 44: \"div\", 45: \"lte\", 46: \"lt\", 47: \"gte\", 48: \"gt\", 49: \"igual\", 50: \"nequal\", 51: \"or\", 52: \"and\", 53: \"mod\", 54: \"parA\", 55: \"parC\", 56: \"DoubleLiteral\", 57: \"IntegerLiteral\", 58: \"cadena\", 59: \"cadena2\", 60: \"lastFunc\", 61: \"positionFunc\" },\r\n        productions_: [0, [3, 2], [4, 3], [4, 1], [6, 2], [6, 2], [6, 1], [9, 2], [9, 0], [11, 2], [11, 3], [11, 2], [11, 3], [13, 1], [13, 4], [13, 1], [13, 1], [10, 3], [10, 3], [10, 2], [10, 3], [10, 2], [10, 1], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [25, 2], [25, 2], [25, 2], [25, 2], [19, 3], [19, 0], [15, 1], [15, 1], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [40, 1], [40, 1], [40, 1], [40, 1], [40, 2], [40, 2], [40, 1], [40, 2], [40, 1], [22, 1], [22, 1], [22, 1], [22, 1]],\r\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n            /* this == yyval */\r\n            var $0 = $$.length - 1;\r\n            switch (yystate) {\r\n                case 1:\r\n                    this.$ = $$[$0 - 1];\r\n                    return this.$;\r\n                    break;\r\n                case 2:\r\n                    this.$ = [new Consulta($$[$0 - 2], _$[$0 - 2].first_line, _$[$0 - 2].first_column)];\r\n                    this.$ = this.$.concat($$[$0]);\r\n                    break;\r\n                case 3:\r\n                    this.$ = [new Consulta($$[$0], _$[$0].first_line, _$[$0].first_column)];\r\n                    break;\r\n                case 4:\r\n                    this.$ = [new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column)];\r\n                    if ($$[$0].length > 0) {\r\n                        this.$ = this.$.concat($$[$0]);\r\n                    }\r\n                    break;\r\n                case 5:\r\n                    this.$ = [$$[$0 - 1]];\r\n                    if ($$[$0].length > 0) {\r\n                        this.$ = this.$.concat($$[$0]);\r\n                    }\r\n                    break;\r\n                case 6:\r\n                case 69:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 7:\r\n                    this.$ = [$$[$0 - 1]];\r\n                    this.$ = this.$.concat($$[$0]);\r\n                    break;\r\n                case 8:\r\n                    this.$ = [];\r\n                    break;\r\n                case 9:\r\n                    $$[$0].fromRoot = true;\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 10:\r\n                    $$[$0].fromRoot = false;\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 11:\r\n                    console.log('Entra a error sintactico de one diag');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = new Nodo($$[$0], TipoNodo.NODOERROR, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 12:\r\n                    console.log('Entra a error sintactico de two diags');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    this.$ = new Nodo($$[$0], TipoNodo.NODOERROR, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 13:\r\n                    this.$ = new Nodo($$[$0], TipoNodo.IDENTIFIER, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 14:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.IDENTIFIER, _$[$0 - 3].first_line, _$[$0 - 3].first_column, new Predicate($$[$0 - 1], _$[$0 - 1].first_line, _$[$0 - 1].first_column));\r\n                    break;\r\n                case 15:\r\n                case 16:\r\n                case 42:\r\n                case 67:\r\n                case 68:\r\n                case 70:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 17:\r\n                case 18:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.ATRIBUTO, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 19:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.DOT, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 20:\r\n                    this.$ = new Nodo($$[$0 - 2] + $$[$0 - 1], TipoNodo.DOTDOT, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 21:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 22:\r\n                    this.$ = new Nodo($$[$0], TipoNodo.FUNCION, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 23:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.ANCESTOR, $$[$0]);\r\n                    break;\r\n                case 24:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.ANCESTORORSELF, $$[$0]);\r\n                    break;\r\n                case 25:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.ATTRIBUTE, $$[$0]);\r\n                    break;\r\n                case 26:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.CHILD, $$[$0]);\r\n                    break;\r\n                case 27:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.DESCENDANT, $$[$0]);\r\n                    break;\r\n                case 28:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.DESCENDANTORSELF, $$[$0]);\r\n                    break;\r\n                case 29:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.FOLLOWING, $$[$0]);\r\n                    break;\r\n                case 30:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.FOLLOWINGSIBLING, $$[$0]);\r\n                    break;\r\n                case 31:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.NAMESPACE, $$[$0]);\r\n                    break;\r\n                case 32:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.PARENT, $$[$0]);\r\n                    break;\r\n                case 33:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.PRECEDING, $$[$0]);\r\n                    break;\r\n                case 34:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.PRECEDINGSIBLING, $$[$0]);\r\n                    break;\r\n                case 35:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.SELF, $$[$0]);\r\n                    break;\r\n                case 36:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    break;\r\n                case 37:\r\n                case 38:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.FUNCION, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.FUNCION, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    break;\r\n                case 39:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    break;\r\n                case 40:\r\n                    this.$ = $$[$0 - 1];\r\n                    break;\r\n                case 41:\r\n                    this.$ = [];\r\n                    break;\r\n                case 43:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 44:\r\n                    this.$ = new Operacion(TipoOperacion.MULTIPLICACION, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 45:\r\n                    this.$ = new Operacion(TipoOperacion.SUMA, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 46:\r\n                    this.$ = new Operacion(TipoOperacion.RESTA, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 47:\r\n                    this.$ = new Operacion(TipoOperacion.DIVISION, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 48:\r\n                    this.$ = new Operacion(TipoOperacion.MENORIGUALQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 49:\r\n                    this.$ = new Operacion(TipoOperacion.MENORQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 50:\r\n                    this.$ = new Operacion(TipoOperacion.MAYORIGUALQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 51:\r\n                    this.$ = new Operacion(TipoOperacion.MAYORQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 52:\r\n                    this.$ = new Operacion(TipoOperacion.IGUAL, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 53:\r\n                    this.$ = new Operacion(TipoOperacion.DIFERENTEQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 54:\r\n                    this.$ = new Operacion(TipoOperacion.OR, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 55:\r\n                    this.$ = new Operacion(TipoOperacion.AND, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 56:\r\n                    this.$ = new Operacion(TipoOperacion.MOD, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 57:\r\n                    this.$ = new Operacion(TipoOperacion.PAR, $$[$0 - 1], null, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 58:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.DOUBLE, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 59:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.INTEGER, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 60:\r\n                case 61:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.CADENA, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 62:\r\n                case 63:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.ATRIBUTO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 64:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.DOT, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 65:\r\n                    if ($$[$0].length > 0) {\r\n                        this.$ = [new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column)];\r\n                        this.$ = this.$.concat($$[$0]);\r\n                        this.$ = new Primitiva(this.$, TipoPrim.CONSULTA, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    else {\r\n                        this.$ = new Primitiva($$[$0 - 1], TipoPrim.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    break;\r\n                case 66:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.FUNCION, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n            }\r\n        },\r\n        table: [o($V0, $V1, { 3: 1, 4: 2, 6: 3, 10: 5, 9: 6, 22: 10, 11: 11, 8: $V2, 12: $V3, 18: $V4, 20: $V5, 21: $V6, 38: $V7, 39: $V8, 60: $V9, 61: $Va }), { 1: [3] }, { 5: [1, 17] }, { 5: [2, 3], 7: [1, 18] }, o($V0, $V1, { 11: 11, 9: 19, 12: $V3 }), o($V0, $V1, { 11: 11, 9: 20, 12: $V3 }), o($V0, [2, 6]), { 8: [1, 21], 20: [1, 22] }, o($Vb, $Vc, { 19: 23, 14: $Vd, 21: [1, 24] }), o($Vb, $Vc, { 19: 26, 14: $Vd }), o($Vb, [2, 22]), o($Ve, $V1, { 11: 11, 9: 27, 12: $V3 }), o($Vb, [2, 67]), o($Vb, [2, 68]), o($Vb, [2, 69]), o($Vb, [2, 70]), { 2: [1, 30], 8: $Vf, 10: 32, 12: [1, 29], 13: 28, 17: 33, 18: $V4, 20: $V5, 21: $V6, 22: 10, 23: $Vg, 26: $Vh, 27: $Vi, 28: $Vj, 29: $Vk, 30: $Vl, 31: $Vm, 32: $Vn, 33: $Vo, 34: $Vp, 35: $Vq, 36: $Vr, 37: $Vs, 38: $V7, 39: $V8, 60: $V9, 61: $Va }, { 1: [2, 1] }, o($V0, $V1, { 6: 3, 10: 5, 9: 6, 22: 10, 11: 11, 4: 47, 8: $V2, 12: $V3, 18: $V4, 20: $V5, 21: $V6, 38: $V7, 39: $V8, 60: $V9, 61: $Va }), o($V0, [2, 4]), o($V0, [2, 5]), o($Vb, $Vc, { 19: 48, 14: $Vd }), o($Vb, $Vc, { 19: 49, 14: $Vd }), o($Vb, [2, 19]), o($Vb, $Vc, { 19: 50, 14: $Vd }), { 8: $Vt, 15: 51, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, o($Vb, [2, 21]), o($Ve, [2, 7]), o($Vb, [2, 9]), { 2: [1, 64], 8: $Vf, 10: 32, 13: 63, 17: 33, 18: $V4, 20: $V5, 21: $V6, 22: 10, 23: $Vg, 26: $Vh, 27: $Vi, 28: $Vj, 29: $Vk, 30: $Vl, 31: $Vm, 32: $Vn, 33: $Vo, 34: $Vp, 35: $Vq, 36: $Vr, 37: $Vs, 38: $V7, 39: $V8, 60: $V9, 61: $Va }, o($Vb, [2, 11]), o($Vb, [2, 13], { 14: [1, 65] }), o($Vb, [2, 15]), o($Vb, [2, 16]), { 24: [1, 66] }, { 24: [1, 67] }, { 24: [1, 68] }, { 24: [1, 69] }, { 24: [1, 70] }, { 24: [1, 71] }, { 24: [1, 72] }, { 24: [1, 73] }, { 24: [1, 74] }, { 24: [1, 75] }, { 24: [1, 76] }, { 24: [1, 77] }, { 24: [1, 78] }, { 5: [2, 2] }, o($Vb, [2, 17]), o($Vb, [2, 18]), o($Vb, [2, 20]), { 16: [1, 79], 20: $VB, 42: $VC, 43: $VD, 44: $VE, 45: $VF, 46: $VG, 47: $VH, 48: $VI, 49: $VJ, 50: $VK, 51: $VL, 52: $VM, 53: $VN }, o($VO, [2, 42]), o($VO, [2, 43]), o($VO, [2, 58]), o($VO, [2, 59]), o($VO, [2, 60]), o($VO, [2, 61]), { 8: [1, 93], 20: [1, 94] }, o($VO, [2, 64]), o($VO, $V1, { 11: 11, 9: 95, 12: $V3 }), o($VO, [2, 66]), { 8: $Vt, 15: 96, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, o($Vb, [2, 10]), o($Vb, [2, 12]), { 8: $Vt, 15: 97, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $VP, 20: $VQ, 25: 98, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 103, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 104, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 105, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 106, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 107, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 108, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 109, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 110, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 111, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 112, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 113, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 114, 38: $VR, 39: $VS }, o($Vb, [2, 40]), { 8: $Vt, 15: 115, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 116, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 117, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 118, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 119, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 120, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 121, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 122, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 123, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 124, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 125, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 126, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 127, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, o($VO, [2, 62]), o($VO, [2, 63]), o($VO, [2, 65]), { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 45: $VF, 46: $VG, 47: $VH, 48: $VI, 49: $VJ, 50: $VK, 51: $VL, 52: $VM, 53: $VN, 55: [1, 128] }, { 16: [1, 129], 20: $VB, 42: $VC, 43: $VD, 44: $VE, 45: $VF, 46: $VG, 47: $VH, 48: $VI, 49: $VJ, 50: $VK, 51: $VL, 52: $VM, 53: $VN }, o($Vb, [2, 23]), o($Vb, $Vc, { 19: 130, 14: $Vd }), o($Vb, $Vc, { 19: 131, 14: $Vd }), o($Vb, $Vc, { 19: 132, 14: $Vd }), o($Vb, $Vc, { 19: 133, 14: $Vd }), o($Vb, [2, 24]), o($Vb, [2, 25]), o($Vb, [2, 26]), o($Vb, [2, 27]), o($Vb, [2, 28]), o($Vb, [2, 29]), o($Vb, [2, 30]), o($Vb, [2, 31]), o($Vb, [2, 32]), o($Vb, [2, 33]), o($Vb, [2, 34]), o($Vb, [2, 35]), o($VO, [2, 44]), o($VT, [2, 45], { 20: $VB, 44: $VE, 53: $VN }), o($VT, [2, 46], { 20: $VB, 44: $VE, 53: $VN }), o($VO, [2, 47]), o($VU, [2, 48], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 53: $VN }), o($VU, [2, 49], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 53: $VN }), o($VU, [2, 50], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 53: $VN }), o($VU, [2, 51], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 53: $VN }), o($VU, [2, 52], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 53: $VN }), o($VU, [2, 53], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 53: $VN }), o([16, 51, 55], [2, 54], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 45: $VF, 46: $VG, 47: $VH, 48: $VI, 49: $VJ, 50: $VK, 52: $VM, 53: $VN }), o([16, 51, 52, 55], [2, 55], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 45: $VF, 46: $VG, 47: $VH, 48: $VI, 49: $VJ, 50: $VK, 53: $VN }), o($VO, [2, 56]), o($VO, [2, 57]), o($Vb, [2, 14]), o($Vb, [2, 36]), o($Vb, [2, 37]), o($Vb, [2, 38]), o($Vb, [2, 39])],\r\n        defaultActions: { 17: [2, 1], 47: [2, 2] },\r\n        parseError: function parseError(str, hash) {\r\n            if (hash.recoverable) {\r\n                this.trace(str);\r\n            }\r\n            else {\r\n                var error = new Error(str);\r\n                error.hash = hash;\r\n                throw error;\r\n            }\r\n        },\r\n        parse: function parse(input) {\r\n            var self = this, stack = [0], tstack = [], // token stack\r\n            vstack = [null], // semantic value stack\r\n            lstack = [], // location stack\r\n            table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n            var args = lstack.slice.call(arguments, 1);\r\n            //this.reductionCount = this.shiftCount = 0;\r\n            var lexer = Object.create(this.lexer);\r\n            var sharedState = { yy: {} };\r\n            // copy state\r\n            for (var k in this.yy) {\r\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n                    sharedState.yy[k] = this.yy[k];\r\n                }\r\n            }\r\n            lexer.setInput(input, sharedState.yy);\r\n            sharedState.yy.lexer = lexer;\r\n            sharedState.yy.parser = this;\r\n            if (typeof lexer.yylloc == 'undefined') {\r\n                lexer.yylloc = {};\r\n            }\r\n            var yyloc = lexer.yylloc;\r\n            lstack.push(yyloc);\r\n            var ranges = lexer.options && lexer.options.ranges;\r\n            if (typeof sharedState.yy.parseError === 'function') {\r\n                this.parseError = sharedState.yy.parseError;\r\n            }\r\n            else {\r\n                this.parseError = Object.getPrototypeOf(this).parseError;\r\n            }\r\n            function popStack(n) {\r\n                stack.length = stack.length - 2 * n;\r\n                vstack.length = vstack.length - n;\r\n                lstack.length = lstack.length - n;\r\n            }\r\n            _token_stack: var lex = function () {\r\n                var token;\r\n                token = lexer.lex() || EOF;\r\n                // if token isn't its numeric value, convert\r\n                if (typeof token !== 'number') {\r\n                    token = self.symbols_[token] || token;\r\n                }\r\n                return token;\r\n            };\r\n            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n            while (true) {\r\n                // retreive state number from top of stack\r\n                state = stack[stack.length - 1];\r\n                // use default actions if available\r\n                if (this.defaultActions[state]) {\r\n                    action = this.defaultActions[state];\r\n                }\r\n                else {\r\n                    if (symbol === null || typeof symbol == 'undefined') {\r\n                        symbol = lex();\r\n                    }\r\n                    // read action for current state and first input\r\n                    action = table[state] && table[state][symbol];\r\n                }\r\n                _handle_error: \r\n                // handle parse error\r\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                    var error_rule_depth;\r\n                    var errStr = '';\r\n                    // Return the rule stack depth where the nearest error rule can be found.\r\n                    // Return FALSE when no error recovery rule was found.\r\n                    function locateNearestErrorRecoveryRule(state) {\r\n                        var stack_probe = stack.length - 1;\r\n                        var depth = 0;\r\n                        // try to recover from error\r\n                        for (;;) {\r\n                            // check for error recovery rule in this state\r\n                            if ((TERROR.toString()) in table[state]) {\r\n                                return depth;\r\n                            }\r\n                            if (state === 0 || stack_probe < 2) {\r\n                                return false; // No suitable error recovery rule available.\r\n                            }\r\n                            stack_probe -= 2; // popStack(1): [symbol, action]\r\n                            state = stack[stack_probe];\r\n                            ++depth;\r\n                        }\r\n                    }\r\n                    if (!recovering) {\r\n                        // first see if there's any chance at hitting an error recovery rule:\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                        // Report error\r\n                        expected = [];\r\n                        for (p in table[state]) {\r\n                            if (this.terminals_[p] && p > TERROR) {\r\n                                expected.push(\"'\" + this.terminals_[p] + \"'\");\r\n                            }\r\n                        }\r\n                        if (lexer.showPosition) {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \":\\n\" + lexer.showPosition() + \"\\nExpecting \" + expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\r\n                        }\r\n                        else {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \": Unexpected \" +\r\n                                (symbol == EOF ? \"end of input\" :\r\n                                    (\"'\" + (this.terminals_[symbol] || symbol) + \"'\"));\r\n                        }\r\n                        this.parseError(errStr, {\r\n                            text: lexer.match,\r\n                            token: this.terminals_[symbol] || symbol,\r\n                            line: lexer.yylineno,\r\n                            loc: yyloc,\r\n                            expected: expected,\r\n                            recoverable: (error_rule_depth !== false)\r\n                        });\r\n                    }\r\n                    else if (preErrorSymbol !== EOF) {\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                    }\r\n                    // just recovered from another error\r\n                    if (recovering == 3) {\r\n                        if (symbol === EOF || preErrorSymbol === EOF) {\r\n                            throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                        }\r\n                        // discard current lookahead and grab another\r\n                        yyleng = lexer.yyleng;\r\n                        yytext = lexer.yytext;\r\n                        yylineno = lexer.yylineno;\r\n                        yyloc = lexer.yylloc;\r\n                        symbol = lex();\r\n                    }\r\n                    // try to recover from error\r\n                    if (error_rule_depth === false) {\r\n                        throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n                    }\r\n                    popStack(error_rule_depth);\r\n                    preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n                    symbol = TERROR; // insert generic error symbol as new lookahead\r\n                    state = stack[stack.length - 1];\r\n                    action = table[state] && table[state][TERROR];\r\n                    recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n                }\r\n                // this shouldn't happen, unless resolve defaults are off\r\n                if (action[0] instanceof Array && action.length > 1) {\r\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n                }\r\n                switch (action[0]) {\r\n                    case 1: // shift\r\n                        //this.shiftCount++;\r\n                        stack.push(symbol);\r\n                        vstack.push(lexer.yytext);\r\n                        lstack.push(lexer.yylloc);\r\n                        stack.push(action[1]); // push state\r\n                        symbol = null;\r\n                        if (!preErrorSymbol) { // normal execution/no error\r\n                            yyleng = lexer.yyleng;\r\n                            yytext = lexer.yytext;\r\n                            yylineno = lexer.yylineno;\r\n                            yyloc = lexer.yylloc;\r\n                            if (recovering > 0) {\r\n                                recovering--;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // error just occurred, resume old lookahead f/ before error\r\n                            symbol = preErrorSymbol;\r\n                            preErrorSymbol = null;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        // reduce\r\n                        //this.reductionCount++;\r\n                        len = this.productions_[action[1]][1];\r\n                        // perform semantic action\r\n                        yyval.$ = vstack[vstack.length - len]; // default to $$ = $1\r\n                        // default location, uses first token for firsts, last for lasts\r\n                        yyval._$ = {\r\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                            last_line: lstack[lstack.length - 1].last_line,\r\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                            last_column: lstack[lstack.length - 1].last_column\r\n                        };\r\n                        if (ranges) {\r\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\r\n                        }\r\n                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n                        if (typeof r !== 'undefined') {\r\n                            return r;\r\n                        }\r\n                        // pop off stack\r\n                        if (len) {\r\n                            stack = stack.slice(0, -1 * len * 2);\r\n                            vstack = vstack.slice(0, -1 * len);\r\n                            lstack = lstack.slice(0, -1 * len);\r\n                        }\r\n                        stack.push(this.productions_[action[1]][0]); // push nonterminal (reduce)\r\n                        vstack.push(yyval.$);\r\n                        lstack.push(yyval._$);\r\n                        // goto new state = table[STATE][NONTERMINAL]\r\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n                        stack.push(newState);\r\n                        break;\r\n                    case 3:\r\n                        // accept\r\n                        return true;\r\n                }\r\n            }\r\n            return true;\r\n        } };\r\n    //const Nodo = require(\"./AST/nodo_arbol\");\r\n    //var raiz;\r\n    const { Primitiva } = require(\"../Expresiones/Primitiva\");\r\n    const { Operacion } = require(\"../Expresiones/Operacion\");\r\n    const { Consulta } = require(\"../XPath/Consulta\");\r\n    const { Nodo } = require(\"../XPath/Nodo\");\r\n    const { Predicate } = require(\"../XPath/Predicate\");\r\n    const { TipoPrim } = require(\"../Expresiones/Primitiva\");\r\n    const { TipoOperacion } = require(\"../Expresiones/Operacion\");\r\n    const { TipoNodo } = require(\"../XPath/Nodo\");\r\n    const { TipoAxis } = require(\"../XPath/Nodo\");\r\n    const errores = require('../Global/ListaError');\r\n    /* generated by jison-lex 0.3.4 */\r\n    var lexer = (function () {\r\n        var lexer = ({\r\n            EOF: 1,\r\n            parseError: function parseError(str, hash) {\r\n                if (this.yy.parser) {\r\n                    this.yy.parser.parseError(str, hash);\r\n                }\r\n                else {\r\n                    throw new Error(str);\r\n                }\r\n            },\r\n            // resets the lexer, sets new input\r\n            setInput: function (input, yy) {\r\n                this.yy = yy || this.yy || {};\r\n                this._input = input;\r\n                this._more = this._backtrack = this.done = false;\r\n                this.yylineno = this.yyleng = 0;\r\n                this.yytext = this.matched = this.match = '';\r\n                this.conditionStack = ['INITIAL'];\r\n                this.yylloc = {\r\n                    first_line: 1,\r\n                    first_column: 0,\r\n                    last_line: 1,\r\n                    last_column: 0\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [0, 0];\r\n                }\r\n                this.offset = 0;\r\n                return this;\r\n            },\r\n            // consumes and returns one char from the input\r\n            input: function () {\r\n                var ch = this._input[0];\r\n                this.yytext += ch;\r\n                this.yyleng++;\r\n                this.offset++;\r\n                this.match += ch;\r\n                this.matched += ch;\r\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno++;\r\n                    this.yylloc.last_line++;\r\n                }\r\n                else {\r\n                    this.yylloc.last_column++;\r\n                }\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range[1]++;\r\n                }\r\n                this._input = this._input.slice(1);\r\n                return ch;\r\n            },\r\n            // unshifts one char (or a string) into the input\r\n            unput: function (ch) {\r\n                var len = ch.length;\r\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n                this._input = ch + this._input;\r\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n                //this.yyleng -= len;\r\n                this.offset -= len;\r\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n                this.match = this.match.substr(0, this.match.length - 1);\r\n                this.matched = this.matched.substr(0, this.matched.length - 1);\r\n                if (lines.length - 1) {\r\n                    this.yylineno -= lines.length - 1;\r\n                }\r\n                var r = this.yylloc.range;\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: lines ?\r\n                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                            + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n                        this.yylloc.first_column - len\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n                }\r\n                this.yyleng = this.yytext.length;\r\n                return this;\r\n            },\r\n            // When called from action, caches matched text and appends it on next action\r\n            more: function () {\r\n                this._more = true;\r\n                return this;\r\n            },\r\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n            reject: function () {\r\n                if (this.options.backtrack_lexer) {\r\n                    this._backtrack = true;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n                return this;\r\n            },\r\n            // retain first n characters of the match\r\n            less: function (n) {\r\n                this.unput(this.match.slice(n));\r\n            },\r\n            // displays already matched input, i.e. for error messages\r\n            pastInput: function () {\r\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\r\n            },\r\n            // displays upcoming input, i.e. for error messages\r\n            upcomingInput: function () {\r\n                var next = this.match;\r\n                if (next.length < 20) {\r\n                    next += this._input.substr(0, 20 - next.length);\r\n                }\r\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n            },\r\n            // displays the character position where the lexing error occurred, i.e. for error messages\r\n            showPosition: function () {\r\n                var pre = this.pastInput();\r\n                var c = new Array(pre.length + 1).join(\"-\");\r\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n            },\r\n            // test the lexed token: return FALSE when not a match, otherwise return token\r\n            test_match: function (match, indexed_rule) {\r\n                var token, lines, backup;\r\n                if (this.options.backtrack_lexer) {\r\n                    // save context\r\n                    backup = {\r\n                        yylineno: this.yylineno,\r\n                        yylloc: {\r\n                            first_line: this.yylloc.first_line,\r\n                            last_line: this.last_line,\r\n                            first_column: this.yylloc.first_column,\r\n                            last_column: this.yylloc.last_column\r\n                        },\r\n                        yytext: this.yytext,\r\n                        match: this.match,\r\n                        matches: this.matches,\r\n                        matched: this.matched,\r\n                        yyleng: this.yyleng,\r\n                        offset: this.offset,\r\n                        _more: this._more,\r\n                        _input: this._input,\r\n                        yy: this.yy,\r\n                        conditionStack: this.conditionStack.slice(0),\r\n                        done: this.done\r\n                    };\r\n                    if (this.options.ranges) {\r\n                        backup.yylloc.range = this.yylloc.range.slice(0);\r\n                    }\r\n                }\r\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno += lines.length;\r\n                }\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.last_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.last_column,\r\n                    last_column: lines ?\r\n                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                        this.yylloc.last_column + match[0].length\r\n                };\r\n                this.yytext += match[0];\r\n                this.match += match[0];\r\n                this.matches = match;\r\n                this.yyleng = this.yytext.length;\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n                }\r\n                this._more = false;\r\n                this._backtrack = false;\r\n                this._input = this._input.slice(match[0].length);\r\n                this.matched += match[0];\r\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n                if (this.done && this._input) {\r\n                    this.done = false;\r\n                }\r\n                if (token) {\r\n                    return token;\r\n                }\r\n                else if (this._backtrack) {\r\n                    // recover context\r\n                    for (var k in backup) {\r\n                        this[k] = backup[k];\r\n                    }\r\n                    return false; // rule action called reject() implying the next rule should be tested instead.\r\n                }\r\n                return false;\r\n            },\r\n            // return next match in input\r\n            next: function () {\r\n                if (this.done) {\r\n                    return this.EOF;\r\n                }\r\n                if (!this._input) {\r\n                    this.done = true;\r\n                }\r\n                var token, match, tempMatch, index;\r\n                if (!this._more) {\r\n                    this.yytext = '';\r\n                    this.match = '';\r\n                }\r\n                var rules = this._currentRules();\r\n                for (var i = 0; i < rules.length; i++) {\r\n                    tempMatch = this._input.match(this.rules[rules[i]]);\r\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                        match = tempMatch;\r\n                        index = i;\r\n                        if (this.options.backtrack_lexer) {\r\n                            token = this.test_match(tempMatch, rules[i]);\r\n                            if (token !== false) {\r\n                                return token;\r\n                            }\r\n                            else if (this._backtrack) {\r\n                                match = false;\r\n                                continue; // rule action called reject() implying a rule MISmatch.\r\n                            }\r\n                            else {\r\n                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else if (!this.options.flex) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (match) {\r\n                    token = this.test_match(match, rules[index]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    }\r\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                    return false;\r\n                }\r\n                if (this._input === \"\") {\r\n                    return this.EOF;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n            },\r\n            // return next match that has a token\r\n            lex: function lex() {\r\n                var r = this.next();\r\n                if (r) {\r\n                    return r;\r\n                }\r\n                else {\r\n                    return this.lex();\r\n                }\r\n            },\r\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n            begin: function begin(condition) {\r\n                this.conditionStack.push(condition);\r\n            },\r\n            // pop the previously active lexer condition state off the condition stack\r\n            popState: function popState() {\r\n                var n = this.conditionStack.length - 1;\r\n                if (n > 0) {\r\n                    return this.conditionStack.pop();\r\n                }\r\n                else {\r\n                    return this.conditionStack[0];\r\n                }\r\n            },\r\n            // produce the lexer rule set which is active for the currently active lexer condition state\r\n            _currentRules: function _currentRules() {\r\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n                }\r\n                else {\r\n                    return this.conditions[\"INITIAL\"].rules;\r\n                }\r\n            },\r\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n            topState: function topState(n) {\r\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n                if (n >= 0) {\r\n                    return this.conditionStack[n];\r\n                }\r\n                else {\r\n                    return \"INITIAL\";\r\n                }\r\n            },\r\n            // alias for begin(condition)\r\n            pushState: function pushState(condition) {\r\n                this.begin(condition);\r\n            },\r\n            // return the number of states currently on the stack\r\n            stateStackSize: function stateStackSize() {\r\n                return this.conditionStack.length;\r\n            },\r\n            options: { \"case-insensitive\": true },\r\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n                var YYSTATE = YY_START;\r\n                switch ($avoiding_name_collisions) {\r\n                    case 0: /* skip whitespace */\r\n                        break;\r\n                    case 1:\r\n                        return 49;\r\n                        break;\r\n                    case 2:\r\n                        return 12;\r\n                        break;\r\n                    case 3:\r\n                        return \"dot\";\r\n                        break;\r\n                    case 4:\r\n                        return \"attr\";\r\n                        break;\r\n                    case 5:\r\n                        return \"corA\";\r\n                        break;\r\n                    case 6:\r\n                        return \"corC\";\r\n                        break;\r\n                    case 7:\r\n                        return \"andSelect\";\r\n                        break;\r\n                    case 8:\r\n                        return \"dospuntos\";\r\n                        break;\r\n                    case 9:\r\n                        return \"parA\";\r\n                        break;\r\n                    case 10:\r\n                        return \"parC\";\r\n                        break;\r\n                    case 11:\r\n                        return 20;\r\n                        break;\r\n                    case 12:\r\n                        return \"mas\";\r\n                        break;\r\n                    case 13:\r\n                        return \"menos\";\r\n                        break;\r\n                    case 14:\r\n                        return \"div\";\r\n                        break;\r\n                    case 15:\r\n                        return 45;\r\n                        break;\r\n                    case 16:\r\n                        return \"gte\";\r\n                        break;\r\n                    case 17:\r\n                        return 46;\r\n                        break;\r\n                    case 18:\r\n                        return 48;\r\n                        break;\r\n                    case 19:\r\n                        return \"nequal\";\r\n                        break;\r\n                    case 20:\r\n                        return \"or\";\r\n                        break;\r\n                    case 21:\r\n                        return \"and\";\r\n                        break;\r\n                    case 22:\r\n                        return \"mod\";\r\n                        break;\r\n                    case 23:\r\n                        return \"ancestorSelf\";\r\n                        break;\r\n                    case 24:\r\n                        return \"ancestor\";\r\n                        break;\r\n                    case 25:\r\n                        return \"attribute\";\r\n                        break;\r\n                    case 26:\r\n                        return \"child\";\r\n                        break;\r\n                    case 27:\r\n                        return \"descendantSelf\";\r\n                        break;\r\n                    case 28:\r\n                        return \"descendant\";\r\n                        break;\r\n                    case 29:\r\n                        return \"followingSib\";\r\n                        break;\r\n                    case 30:\r\n                        return \"following\";\r\n                        break;\r\n                    case 31:\r\n                        return \"namespace\";\r\n                        break;\r\n                    case 32:\r\n                        return \"parent\";\r\n                        break;\r\n                    case 33:\r\n                        return \"precedSib\";\r\n                        break;\r\n                    case 34:\r\n                        return \"preced\";\r\n                        break;\r\n                    case 35:\r\n                        return \"self\";\r\n                        break;\r\n                    case 36:\r\n                        return \"lastFunc\";\r\n                        break;\r\n                    case 37:\r\n                        return \"positionFunc\";\r\n                        break;\r\n                    case 38:\r\n                        return \"nodeFunc\";\r\n                        break;\r\n                    case 39:\r\n                        return \"textFunc\";\r\n                        break;\r\n                    case 40:\r\n                        return 56;\r\n                        break;\r\n                    case 41:\r\n                        return 57;\r\n                        break;\r\n                    case 42:\r\n                        return 8;\r\n                        break;\r\n                    case 43:\r\n                        return 58;\r\n                        break;\r\n                    case 44:\r\n                        return 59;\r\n                        break;\r\n                    case 45:\r\n                        console.error('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                        break;\r\n                    case 46:\r\n                        return 5;\r\n                        break;\r\n                }\r\n            },\r\n            rules: [/^(?:\\s+)/i, /^(?:=)/i, /^(?:\\/)/i, /^(?:\\.)/i, /^(?:@)/i, /^(?:\\[)/i, /^(?:\\])/i, /^(?:\\|)/i, /^(?:::)/i, /^(?:\\()/i, /^(?:\\))/i, /^(?:\\*)/i, /^(?:\\+)/i, /^(?:-)/i, /^(?:div\\b)/i, /^(?:<=)/i, /^(?:>=)/i, /^(?:<)/i, /^(?:>)/i, /^(?:!=)/i, /^(?:or\\b)/i, /^(?:and\\b)/i, /^(?:mod\\b)/i, /^(?:ancestor-or-self\\b)/i, /^(?:ancestor\\b)/i, /^(?:attribute\\b)/i, /^(?:child\\b)/i, /^(?:descendant-or-self\\b)/i, /^(?:descendant\\b)/i, /^(?:following-sibling\\b)/i, /^(?:following\\b)/i, /^(?:namespace\\b)/i, /^(?:parent\\b)/i, /^(?:preceding-sibling\\b)/i, /^(?:preceding\\b)/i, /^(?:self\\b)/i, /^(?:last\\(\\))/i, /^(?:position\\(\\))/i, /^(?:node\\(\\))/i, /^(?:text\\(\\))/i, /^(?:(([0-9]+\\.[0-9]*)|(\\.[0-9]+)))/i, /^(?:[0-9]+)/i, /^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ.-]*)/i, /^(?:(\"((\\\\([\\'\\\"\\\\]))|([^\\\"\\\\]+))*\"))/i, /^(?:('((\\\\([\\'\\\"\\\\]))|([^\\'\\\\]))*'))/i, /^(?:.)/i, /^(?:$)/i],\r\n            conditions: { \"comment\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], \"inclusive\": true }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], \"inclusive\": true } }\r\n        });\r\n        return lexer;\r\n    })();\r\n    parser.lexer = lexer;\r\n    function Parser() {\r\n        this.yy = {};\r\n    }\r\n    Parser.prototype = parser;\r\n    parser.Parser = Parser;\r\n    return new Parser;\r\n})();\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\n    exports.parser = XPath_GramaticaDesc;\r\n    exports.Parser = XPath_GramaticaDesc.Parser;\r\n    exports.parse = function () { return XPath_GramaticaDesc.parse.apply(XPath_GramaticaDesc, arguments); };\r\n    exports.main = function commonjsMain(args) {\r\n        if (!args[1]) {\r\n            console.log('Usage: ' + args[0] + ' FILE');\r\n            process.exit(1);\r\n        }\r\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n        return exports.parser.parse(source);\r\n    };\r\n    if (typeof module !== 'undefined' && require.main === module) {\r\n        exports.main(process.argv.slice(1));\r\n    }\r\n}\r\n","export class Nodo {\r\n    constructor(id, valor, padre, hijos) {\r\n        this.id = id;\r\n        this.valor = valor;\r\n        this.padre = padre;\r\n        this.hijos = hijos;\r\n        this.hijos.forEach((hijo) => {\r\n            hijo.setPadre(this);\r\n        });\r\n    }\r\n    agregarHijo(hijo) {\r\n        this.hijos.push(hijo);\r\n    }\r\n    setPadre(padre) {\r\n        this.padre = padre;\r\n    }\r\n}\r\n","import { NativaXQuery } from \"../Traduccion/TranslateXQuery\";\r\nimport { Consulta } from \"../XPath/Consulta\";\r\nexport class Return {\r\n    constructor(tipoRet, identificador, listaNodos, html, ifthen, funcion, linea, columna) {\r\n        this.tipo = tipoRet;\r\n        this.funcion = funcion;\r\n        this.html = html;\r\n        this.listaNodos = listaNodos;\r\n        this.identificador = identificador;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.ifthen = ifthen;\r\n    }\r\n    getCodigo3Dir(XQueryEnt, xmlEnt, traductorXPath, traductorXQuery) {\r\n        let code = \"\";\r\n        if (this.tipo === TipoReturn.NORMAL && this.identificador != undefined) {\r\n            //Return normal solo obtener el simbolo.\r\n            let simbolo = XQueryEnt.obtenerSimbolo(this.identificador);\r\n            if (simbolo != null) {\r\n                if (traductorXQuery.funcionesUtilizadas.indexOf(NativaXQuery.IMPRIMIRTEXTOXQ) === -1) {\r\n                    //Agregar a la lista de funciones que se utilizaran.\r\n                    traductorXQuery.funcionesUtilizadas.push(NativaXQuery.IMPRIMIRTEXTOXQ);\r\n                }\r\n                if (traductorXQuery.funcionesUtilizadas.indexOf(NativaXQuery.IMPRIMIRATRIBUTOXQ) === -1) {\r\n                    //Agregar a la lista de funciones que se utilizaran.\r\n                    traductorXQuery.funcionesUtilizadas.push(NativaXQuery.IMPRIMIRATRIBUTOXQ);\r\n                }\r\n                if (traductorXQuery.funcionesUtilizadas.indexOf(NativaXQuery.IMPRIMIRETIQUETAXQ) === -1) {\r\n                    //Agregar a la lista de funciones que se utilizaran.\r\n                    traductorXQuery.funcionesUtilizadas.push(NativaXQuery.IMPRIMIRETIQUETAXQ);\r\n                }\r\n                if (traductorXQuery.funcionesUtilizadas.indexOf(NativaXQuery.IMPRIMIRCONSULTAXQ) === -1) {\r\n                    //Agregar a la lista de funciones que se utilizaran.\r\n                    traductorXQuery.funcionesUtilizadas.push(NativaXQuery.IMPRIMIRCONSULTAXQ);\r\n                }\r\n                traductorXQuery.funcionesUtilizadas = traductorXQuery.funcionesUtilizadas.reverse();\r\n                if (this.listaNodos != undefined && this.listaNodos.length > 0) {\r\n                    console.log(\"Tsimb: \", simbolo);\r\n                    //2.5 Poner un -13 de referencia para saber donde inicia  y termina este simbolo del XQUERY\r\n                    code += '\\t/*--- INICIA REDEFINICION EN RETURN ---*/';\r\n                    ///TEmporal para saber donde guardar en el stack e iniciar impresion.\r\n                    let temporal = 'tq' + traductorXQuery.contT;\r\n                    code += '\\n\\t' + temporal + \" = HQ;\\n\";\r\n                    traductorXQuery.contT++;\r\n                    code += '\\tXQHeap[(int)HQ] = -13;\\n';\r\n                    code += '\\t HQ = HQ + 1;\\n';\r\n                    let temp = new Consulta(this.listaNodos, this.linea, this.columna);\r\n                    simbolo.valor.forEach((respAnterior) => {\r\n                        let nuevaSalida = temp.ejecutar(respAnterior.valor);\r\n                        console.log(\"NUEVALISAD: \", nuevaSalida);\r\n                        nuevaSalida.forEach((s) => {\r\n                            if (!(typeof s === \"string\")) {\r\n                                //Es una lista de simbolos.\r\n                                code += \"\\t/*--- TRASLADANDO \" + s.nombre + \" HACIA EL HEAP DEL XQUERY --- */\\n\";\r\n                                code += '\\t H = stack[(int)' + s.posicion + ']; \\n';\r\n                                //H tiene la posicion del heap (xml) donde inicia el simbolo.\r\n                                //2. Llamar a funcion para que escribe el simbolo en el heap del xpath.\r\n                                code += '\\tfromHeapToXQHeap();\\n';\r\n                                if (traductorXQuery.funcionesUtilizadas.indexOf(NativaXQuery.FROMHEAPTOXQHEAP) === -1) {\r\n                                    //Agregar a la lista de funciones que se utilizaran.\r\n                                    traductorXQuery.funcionesUtilizadas.push(NativaXQuery.FROMHEAPTOXQHEAP);\r\n                                }\r\n                            }\r\n                            else {\r\n                                //Es cadena...\r\n                                code += traductorXQuery.StringToHeap(s, simbolo.getNombre());\r\n                            }\r\n                        });\r\n                    });\r\n                    //2.5 Poner un -13 de referencia para saber donde inicia  y termina este simbolo del XQUERY\r\n                    code += '\\t/*--- TERMINA REDEFINICION EN RETURN ---*/\\n';\r\n                    code += '\\tXQHeap[(int)HQ] = -13;\\n';\r\n                    code += '\\t HQ = HQ + 1;\\n';\r\n                    //Guardar en el stack el inicio de este simbolo.\r\n                    code += '\\n\\tXQStack[(int)SQ] = ' + temporal + ';\\n';\r\n                    code += '\\tSQ = SQ + 1;\\n';\r\n                    simbolo.setPosicion(traductorXQuery.contSQ);\r\n                    traductorXQuery.contSQ++;\r\n                }\r\n                code += \"\\n\\t/* IMPRIMIR EL RETURN */\\n\";\r\n                code += \"\\ttq\" + traductorXQuery.contT + \" = XQStack[(int)\" + simbolo.posicion + \"];\\n\";\r\n                code += \"\\tHQ = tq\" + traductorXQuery.contT + \";\\n\";\r\n                traductorXQuery.contT = traductorXQuery.contT + 1;\r\n                //code += '\\tSP = SP + 1;\\n'\r\n                code += \"\\t imprimirConsultaXQ();\\n\";\r\n            }\r\n        }\r\n        else if (this.tipo === TipoReturn.FUNCIONXQUERY && this.funcion != undefined) {\r\n            let prueba = this.funcion.getValor(XQueryEnt);\r\n            console.log(\"Prueba: \", prueba);\r\n        }\r\n        return code;\r\n    }\r\n    ejecutar(XQEnt, xmlEnt) {\r\n        //Ej: return $x/book\r\n        //1. Buscar variable $id\r\n        let pruebaReturn = \"\";\r\n        let listaReturn = [];\r\n        if (this.tipo === TipoReturn.NORMAL && this.identificador != undefined) {\r\n            console.log(\"Return normal.\");\r\n            let ListaSimb = XQEnt.obtenerSimbolo(this.identificador);\r\n            if (ListaSimb != null) {\r\n                if (this.listaNodos != undefined && this.listaNodos.length > 0) {\r\n                    let temp = new Consulta(this.listaNodos, this.linea, this.columna);\r\n                    ListaSimb.valor.forEach((simb) => {\r\n                        let auxEntorno = simb.valor;\r\n                        listaReturn = listaReturn.concat((temp.ejecutar(auxEntorno)));\r\n                    });\r\n                    pruebaReturn += temp.simbolosToString(listaReturn);\r\n                }\r\n                else {\r\n                    let temp = new Consulta([], this.linea, this.columna);\r\n                    if (ListaSimb.valor[0] instanceof Array) {\r\n                        ListaSimb.valor.forEach((sx) => {\r\n                            let elx = sx;\r\n                            pruebaReturn += temp.simbolosToString(elx);\r\n                        });\r\n                    }\r\n                    else {\r\n                        pruebaReturn += temp.simbolosToString(ListaSimb.valor);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                console.log(\"ERROR - El simbolo: $\", this.identificador, \" no existe.\");\r\n            }\r\n        }\r\n        else if (this.tipo === TipoReturn.FUNCIONXQUERY && this.funcion != undefined) {\r\n            let temp = new Consulta([], this.linea, this.columna);\r\n            pruebaReturn += temp.simbolosToString(this.funcion.getValor(XQEnt).valor);\r\n        }\r\n        else if (this.tipo === TipoReturn.IFTHENELSE && this.ifthen != undefined) {\r\n            let nue = this.ifthen.ejecutar(XQEnt, xmlEnt);\r\n            let temp = new Consulta([], this.linea, this.columna);\r\n            pruebaReturn += temp.simbolosToString(nue);\r\n        }\r\n        return pruebaReturn;\r\n    }\r\n}\r\nexport var TipoReturn;\r\n(function (TipoReturn) {\r\n    TipoReturn[TipoReturn[\"NORMAL\"] = 0] = \"NORMAL\";\r\n    TipoReturn[TipoReturn[\"HTML\"] = 1] = \"HTML\";\r\n    TipoReturn[TipoReturn[\"IFTHENELSE\"] = 2] = \"IFTHENELSE\";\r\n    TipoReturn[TipoReturn[\"FUNCIONXQUERY\"] = 3] = \"FUNCIONXQUERY\";\r\n})(TipoReturn || (TipoReturn = {}));\r\n","import { Simbolo } from \"../AST/Simbolo\";\r\nimport { Tipo } from \"../AST/Tipo\";\r\nimport { NativaXQuery } from \"../Traduccion/TranslateXQuery\";\r\nexport class DeclaracionFor {\r\n    constructor(tipo, identificador, consultas, linea, columna, at, desde, hasta, listaEnteros) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.listaEnteros = listaEnteros;\r\n        this.tipo = tipo;\r\n        this.identificador = identificador;\r\n        this.consultas = consultas;\r\n        this.desde = desde;\r\n        this.hasta = hasta;\r\n        this.at = at;\r\n    }\r\n    getCodigo3Dir(XQueryEnt, xmlEnt, traductorXPath, traductorXQuery) {\r\n        let code = \"\";\r\n        switch (this.tipo) {\r\n            case TipoFor.NORMAL:\r\n                //Declarar temp donde voy a guardar $id en el stack\r\n                let temporal = 'tq' + traductorXQuery.contT;\r\n                code += '\\n\\t' + temporal + \" = HQ;\\n\";\r\n                traductorXQuery.contT++;\r\n                //Obtener la consulta.\r\n                if (this.consultas != null) {\r\n                    this.consultas.forEach((con) => {\r\n                        let resp = con.ejecutar(xmlEnt);\r\n                        let id = XQueryEnt.obtenerSimbolo(this.identificador);\r\n                        id.setPosicion(traductorXQuery.contSQ);\r\n                        traductorXQuery.contSQ++;\r\n                        //2.5 Poner un -13 de referencia para saber donde inicia  y termina este simbolo del XQUERY\r\n                        code += '\\tXQHeap[(int)HQ] = -13;\\n';\r\n                        code += '\\t HQ = HQ + 1;\\n';\r\n                        resp.forEach((s) => {\r\n                            if (!(typeof s === \"string\")) {\r\n                                //Es una lista de simbolos.\r\n                                code += \"\\t/*--- TRASLADANDO \" + s.nombre + \" HACIA EL HEAP DEL XQUERY --- */\\n\";\r\n                                code += '\\t H = stack[(int)' + s.posicion + ']; \\n';\r\n                                //H tiene la posicion del heap (xml) donde inicia el simbolo.\r\n                                //2. Llamar a funcion para que escribe el simbolo en el heap del xpath.\r\n                                code += '\\tfromHeapToXQHeap();\\n';\r\n                                if (traductorXQuery.funcionesUtilizadas.indexOf(NativaXQuery.FROMHEAPTOXQHEAP) === -1) {\r\n                                    //Agregar a la lista de funciones que se utilizaran.\r\n                                    traductorXQuery.funcionesUtilizadas.push(NativaXQuery.FROMHEAPTOXQHEAP);\r\n                                }\r\n                            }\r\n                            else {\r\n                                //Es cadena...\r\n                                code += traductorXQuery.StringToHeap(s, this.identificador);\r\n                            }\r\n                        });\r\n                        //2.5 Poner un -13 de referencia para saber donde inicia  y termina este simbolo del XQUERY\r\n                        code += '\\tXQHeap[(int)HQ] = -13;\\n';\r\n                        code += '\\t HQ = HQ + 1;\\n';\r\n                        code += '\\t/*--- GUARDAR EN STACK DE XQUERY --*/\\n';\r\n                        code += '\\t\\nXQStack[(int)SQ] = ' + temporal + ';\\n';\r\n                        code += '\\tSQ = SQ + 1;\\n';\r\n                    });\r\n                }\r\n                break;\r\n        }\r\n        return code;\r\n    }\r\n    getTipo() {\r\n        return this.tipo;\r\n    }\r\n    TipoToString() {\r\n        switch (this.tipo) {\r\n            case TipoFor.NORMAL:\r\n                return \"Normal\";\r\n            case TipoFor.ITERATIVO:\r\n                return \"Iterativo\";\r\n            case TipoFor.AT:\r\n                return \"At\";\r\n        }\r\n    }\r\n    ejecutar(XQueryEnt, xmlEnt) {\r\n        let listaSimbolos = [];\r\n        let newSimb;\r\n        switch (this.tipo) {\r\n            case TipoFor.NORMAL:\r\n                //ej: $x in /bookstore/book/asd\r\n                console.log(\"for Normal\");\r\n                if (this.consultas != null) {\r\n                    this.consultas.forEach((consulta) => {\r\n                        listaSimbolos = listaSimbolos.concat(consulta.ejecutar(xmlEnt));\r\n                    });\r\n                }\r\n                //A la variable $x (identificador) asignarle estos simbolos.\r\n                newSimb = new Simbolo(Tipo.XQ_VAR, this.identificador, listaSimbolos, this.linea, this.columna);\r\n                XQueryEnt.agregarSimbolo(this.identificador, newSimb);\r\n                break;\r\n            case TipoFor.ITERATIVO:\r\n                //ej: $x in (3 to 5) o $x in (3, 4, 10, 200, 2, 1)\r\n                if (this.desde && this.hasta != null) {\r\n                    for (let i = this.desde; i <= this.hasta; i++) {\r\n                        listaSimbolos.push(i);\r\n                    }\r\n                    let newSimb = new Simbolo(Tipo.XQ_VAR, this.identificador, listaSimbolos, this.linea, this.columna);\r\n                    XQueryEnt.agregarSimbolo(this.identificador, newSimb);\r\n                }\r\n                else if (this.listaEnteros != undefined) {\r\n                    let newSimb = new Simbolo(Tipo.XQ_VAR, this.identificador, this.listaEnteros, this.linea, this.columna);\r\n                    XQueryEnt.agregarSimbolo(this.identificador, newSimb);\r\n                }\r\n                break;\r\n            case TipoFor.AT:\r\n                //ej: $x at $i in /bookstore/book/asd <-- $i, counts the iteration.\r\n                let contador = 0;\r\n                if (this.consultas != null) {\r\n                    this.consultas.forEach((consulta) => {\r\n                        let resp = consulta.ejecutar(xmlEnt);\r\n                        contador += resp.length;\r\n                        listaSimbolos = listaSimbolos.concat(resp);\r\n                    });\r\n                }\r\n                //A la variable '$i' asignarle la longitud de mis consultas de resultado.\r\n                let simbI = new Simbolo(Tipo.XQ_NUMB, this.identificador, contador, this.linea, this.columna);\r\n                //A la variable $x (identificador) asignarle estos simbolos.\r\n                newSimb = new Simbolo(Tipo.XQ_VAR, this.identificador, listaSimbolos, this.linea, this.columna);\r\n                XQueryEnt.agregarSimbolo(this.identificador, newSimb);\r\n                break;\r\n        }\r\n    }\r\n}\r\nexport var TipoFor;\r\n(function (TipoFor) {\r\n    TipoFor[TipoFor[\"NORMAL\"] = 0] = \"NORMAL\";\r\n    TipoFor[TipoFor[\"ITERATIVO\"] = 1] = \"ITERATIVO\";\r\n    TipoFor[TipoFor[\"AT\"] = 2] = \"AT\";\r\n})(TipoFor || (TipoFor = {}));\r\n","import { Simbolo } from \"../AST/Simbolo\";\r\nimport { Tipo } from \"../AST/Tipo\";\r\nimport { Consulta } from \"../XPath/Consulta\";\r\nexport class FuncionXQuery {\r\n    constructor(tipoFuncion, identificador, listaNodos, linea, columna, desde, hasta, otraFuncion) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.tipo = tipoFuncion;\r\n        this.identificador = identificador;\r\n        this.listaNodos = listaNodos;\r\n        this.desde = desde;\r\n        this.hasta = hasta;\r\n        this.otraFuncion = otraFuncion;\r\n    }\r\n    getTipo() {\r\n        return this.tipo;\r\n    }\r\n    get3Dir(XQueryEnt) {\r\n        let code = \"\\t*/--- FUNCION XQUERY --*/\\n\";\r\n        let s = this.getValor(XQueryEnt);\r\n        console.log(\"S: \", s);\r\n        return code;\r\n    }\r\n    getSobreEntornoXML(entorno) {\r\n        let ls = [];\r\n        if (this.identificador != undefined) {\r\n            if (this.listaNodos != undefined && this.listaNodos.length > 0) {\r\n                let consTemp = new Consulta(this.listaNodos, this.linea, this.columna);\r\n                let temp = consTemp.ejecutar(entorno);\r\n                temp.forEach((s) => {\r\n                    let test = s.valor;\r\n                    if (this.tipo != TipoFuncionXQ.DATA) {\r\n                        //Para cada et buscar si tiene texto.\r\n                        this.reemplazarTexto(test);\r\n                    }\r\n                    ls = ls.concat(this.getOnlyTextos(test));\r\n                });\r\n            }\r\n            else {\r\n                if (this.tipo != TipoFuncionXQ.DATA) {\r\n                    //Para cada et buscar si tiene texto.\r\n                    this.reemplazarTexto(entorno);\r\n                }\r\n                ls = ls.concat(this.getOnlyTextos(entorno));\r\n            }\r\n        }\r\n        else if (this.otraFuncion != undefined) {\r\n            //Es del tipo substring(upper-case($x/hola), 2, 3)\r\n            //Resolver funcion interior.\r\n            let interior = this.otraFuncion.getSobreEntornoXML(entorno);\r\n            //Para el resultado del interior, aplicar la funcion principal\r\n            interior.forEach((s) => {\r\n                let x = s.valor;\r\n                if (!(typeof x.valor === \"string\")) {\r\n                    if (this.tipo != TipoFuncionXQ.DATA) {\r\n                        //Para cada et buscar si tiene texto.\r\n                        s.valor = this.aplicarFuncionTexto(x);\r\n                    }\r\n                    ls = ls.concat(s);\r\n                }\r\n            });\r\n        }\r\n        return ls;\r\n    }\r\n    getValorInicial(XQueryEnt) {\r\n        if (this.identificador != undefined) {\r\n            //0. Lista Redefinida.\r\n            let listaRedefinida = [];\r\n            //1. Obtener simbolo\r\n            let ls = XQueryEnt.obtenerSimbolo(this.identificador);\r\n            console.log(\"LS: \", ls);\r\n            //2. Obtener consulta completa (listaNodos)\r\n            if (ls != null) {\r\n                if (this.listaNodos != undefined && this.listaNodos.length > 0) {\r\n                    let consTemp = new Consulta(this.listaNodos, this.linea, this.columna);\r\n                    ls.valor.forEach((s) => {\r\n                        let auxEntorno = s.valor;\r\n                        listaRedefinida = listaRedefinida.concat(consTemp.ejecutar(auxEntorno));\r\n                    });\r\n                    let nuevoSimbolo = new Simbolo(Tipo.XQ_VAR, this.identificador, listaRedefinida, this.linea, this.columna);\r\n                    XQueryEnt.sobreEscribirSimbolo(this.identificador, nuevoSimbolo);\r\n                }\r\n                else {\r\n                    listaRedefinida = ls;\r\n                }\r\n            }\r\n            else {\r\n                console.log(\"Simbolo no existe: $\", this.identificador);\r\n            }\r\n            return XQueryEnt.obtenerSimbolo(this.identificador);\r\n        }\r\n    }\r\n    getValor(XQueryEnt) {\r\n        if (this.identificador != undefined) {\r\n            let listaS = this.getValorInicial(XQueryEnt);\r\n            if (this.tipo != TipoFuncionXQ.DATA) {\r\n                listaS.valor.forEach((s) => {\r\n                    let et = s.valor;\r\n                    //Para cada et buscar si tiene texto.\r\n                    this.reemplazarTexto(et);\r\n                });\r\n            }\r\n            let nuevaLista = [];\r\n            listaS.valor.forEach((s) => {\r\n                let et = s.valor;\r\n                nuevaLista = nuevaLista.concat(this.getOnlyTextos(et));\r\n            });\r\n            let nuevoSimbolo = new Simbolo(Tipo.XQ_VAR, this.identificador, nuevaLista, this.linea, this.columna);\r\n            XQueryEnt.sobreEscribirSimbolo(this.identificador, nuevoSimbolo);\r\n            listaS = XQueryEnt.obtenerSimbolo(this.identificador);\r\n            return listaS;\r\n        }\r\n        else if (this.otraFuncion != undefined) {\r\n            let ls = [];\r\n            let interior = this.otraFuncion.getValor(XQueryEnt);\r\n            //Para el resultado del interior, aplicar la funcion principal\r\n            interior.valor.forEach((s) => {\r\n                let x = s.valor;\r\n                if (!(typeof x.valor === \"string\")) {\r\n                    if (this.tipo != TipoFuncionXQ.DATA) {\r\n                        //Para cada et buscar si tiene texto.\r\n                        s.valor = this.aplicarFuncionTexto(x);\r\n                    }\r\n                    ls = ls.concat(s);\r\n                }\r\n            });\r\n            let nuevoSimbolo = new Simbolo(Tipo.XQ_VAR, interior.nombre, ls, this.linea, this.columna);\r\n            XQueryEnt.sobreEscribirSimbolo(interior.nombre, nuevoSimbolo);\r\n            return XQueryEnt.obtenerSimbolo(interior.nombre);\r\n        }\r\n    }\r\n    getOnlyTextos(etiqueta) {\r\n        let listaTextos = [];\r\n        for (let i = 0; i < etiqueta.tsimbolos.length; i++) {\r\n            if (etiqueta.tsimbolos[i].valor.getTipo() === Tipo.STRING) {\r\n                listaTextos.push(etiqueta.tsimbolos[i].valor);\r\n            }\r\n            else if (etiqueta.tsimbolos[i].valor.getTipo() === Tipo.ETIQUETA) {\r\n                listaTextos = listaTextos.concat(this.getOnlyTextos(etiqueta.tsimbolos[i].valor.valor));\r\n            }\r\n        }\r\n        return listaTextos;\r\n    }\r\n    aplicarFuncionTexto(str) {\r\n        switch (this.getTipo()) {\r\n            case TipoFuncionXQ.UPPERCASE:\r\n                return str.toUpperCase();\r\n            case TipoFuncionXQ.SUBSTRING:\r\n                if (this.desde != undefined && this.hasta != undefined) {\r\n                    return str.substring(this.desde - 1, this.hasta + 1);\r\n                }\r\n                break;\r\n            case TipoFuncionXQ.LOWERCASE:\r\n                return str.toLowerCase();\r\n            case TipoFuncionXQ.STRING:\r\n                return str.toString();\r\n            case TipoFuncionXQ.NUMBER:\r\n                return +str;\r\n            default:\r\n                return str;\r\n        }\r\n    }\r\n    reemplazarTexto(etiqueta) {\r\n        for (let i = 0; i < etiqueta.tsimbolos.length; i++) {\r\n            if (etiqueta.tsimbolos[i].valor.getTipo() === Tipo.STRING) {\r\n                let x = etiqueta.tsimbolos[i].valor;\r\n                //Ver que tipo de funcion es para saber que hacer.\r\n                let y = this.aplicarFuncionTexto(x.valor);\r\n                etiqueta.tsimbolos[i].valor.valor = y;\r\n            }\r\n            else if (etiqueta.tsimbolos[i].valor.getTipo() === Tipo.ETIQUETA) {\r\n                this.reemplazarTexto(etiqueta.tsimbolos[i].valor.valor);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport var TipoFuncionXQ;\r\n(function (TipoFuncionXQ) {\r\n    TipoFuncionXQ[TipoFuncionXQ[\"UPPERCASE\"] = 0] = \"UPPERCASE\";\r\n    TipoFuncionXQ[TipoFuncionXQ[\"SUBSTRING\"] = 1] = \"SUBSTRING\";\r\n    TipoFuncionXQ[TipoFuncionXQ[\"DATA\"] = 2] = \"DATA\";\r\n    TipoFuncionXQ[TipoFuncionXQ[\"LOWERCASE\"] = 3] = \"LOWERCASE\";\r\n    TipoFuncionXQ[TipoFuncionXQ[\"NUMBER\"] = 4] = \"NUMBER\";\r\n    TipoFuncionXQ[TipoFuncionXQ[\"STRING\"] = 5] = \"STRING\";\r\n})(TipoFuncionXQ || (TipoFuncionXQ = {}));\r\n","\"use strict\";\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XML_GramaticaAsc = (function () {\r\n    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)\r\n        ; return o; }, $V0 = [1, 10], $V1 = [1, 9], $V2 = [2, 5, 6], $V3 = [1, 13], $V4 = [1, 14], $V5 = [1, 19], $V6 = [2, 12], $V7 = [1, 18], $V8 = [2, 7, 10, 13, 14], $V9 = [1, 38], $Va = [1, 34], $Vb = [1, 35], $Vc = [1, 36], $Vd = [1, 37], $Ve = [1, 39], $Vf = [1, 40], $Vg = [1, 41], $Vh = [1, 42], $Vi = [1, 43], $Vj = [1, 44], $Vk = [2, 6, 8, 13, 22, 23, 24, 25, 26, 27, 28, 29, 30], $Vl = [2, 31];\r\n    var parser = { trace: function trace() { },\r\n        yy: {},\r\n        symbols_: { \"error\": 2, \"START\": 3, \"ENCABEZADO\": 4, \"EOF\": 5, \"lt\": 6, \"interrog\": 7, \"xml\": 8, \"LISTAATRIBUTOS\": 9, \"gt\": 10, \"LISTAELEMENTOS\": 11, \"ELEMENTO\": 12, \"identifier\": 13, \"diag\": 14, \"TEXTCONTENT\": 15, \"ATRIBUTOS\": 16, \"ATRIBUTO\": 17, \"asig\": 18, \"cadena\": 19, \"cadena2\": 20, \"TEXT\": 21, \"content\": 22, \"DoubleLiteral\": 23, \"IntegerLiteral\": 24, \"apos\": 25, \"less\": 26, \"greater\": 27, \"ampersand\": 28, \"apostrophe\": 29, \"quot\": 30, \"$accept\": 0, \"$end\": 1 },\r\n        terminals_: { 2: \"error\", 5: \"EOF\", 6: \"lt\", 7: \"interrog\", 8: \"xml\", 10: \"gt\", 13: \"identifier\", 14: \"diag\", 18: \"asig\", 19: \"cadena\", 20: \"cadena2\", 22: \"content\", 23: \"DoubleLiteral\", 24: \"IntegerLiteral\", 25: \"apos\", 26: \"less\", 27: \"greater\", 28: \"ampersand\", 29: \"apostrophe\", 30: \"quot\" },\r\n        productions_: [0, [3, 2], [4, 7], [4, 2], [11, 2], [11, 1], [12, 5], [12, 9], [12, 9], [12, 8], [12, 2], [9, 1], [9, 0], [16, 2], [16, 1], [17, 3], [17, 3], [17, 1], [15, 2], [15, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1]],\r\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n            /* this == yyval */\r\n            var $0 = $$.length - 1;\r\n            switch (yystate) {\r\n                case 1:\r\n                    /* CONSTRUCCION DE CST */\r\n                    let raiz = new Nodo(cst.cstXmlAsc.getId(), 'START', null, [cst.cstXmlAsc.obtenerUltimoNodo()]);\r\n                    cst.cstXmlAsc.setRaiz(raiz);\r\n                    return $$[$0 - 1];\r\n                    break;\r\n                case 2:\r\n                    $$[$0].unshift(new Objeto($$[$0 - 4], '', _$[$0 - 6].first_line, _$[$0 - 6].first_column, $$[$0 - 3], [], true));\r\n                    this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let elementos = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    let atributosE = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ENCABEZADO', null, [new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), '<', null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'interrog', null, [new Nodo(cst.cstXmlAsc.getId(), '?', null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'xml', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 4].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        atributosE,\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'interrog', null, [new Nodo(cst.cstXmlAsc.getId(), '?', null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), '>', null, [])]),\r\n                        elementos]));\r\n                    break;\r\n                case 3:\r\n                    errores.default.agregarError('sintáctico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ENCABEZADO', null, [cst.cstXmlAsc.obtenerUltimoNodo()]));\r\n                    break;\r\n                case 4:\r\n                    if ($$[$0 - 1] !== null) {\r\n                        if ($$[$0] !== null)\r\n                            $$[$0 - 1].push($$[$0]);\r\n                        this.$ = $$[$0 - 1];\r\n                    }\r\n                    else if ($$[$0] !== null)\r\n                        this.$ = [$$[$0 - 1]];\r\n                    else\r\n                        this.$ = [];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let elem = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    let listaElem = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'LISTAELEMENTOS', null, [listaElem, elem]));\r\n                    break;\r\n                case 5:\r\n                    if ($$[$0] !== null)\r\n                        this.$ = [$$[$0]];\r\n                    else\r\n                        this.$ = [];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let padreLE = new Nodo(cst.cstXmlAsc.getId(), 'LISTAELEMENTOS', null, [cst.cstXmlAsc.obtenerUltimoNodo()]);\r\n                    cst.cstXmlAsc.agregarPila(padreLE);\r\n                    break;\r\n                case 6:\r\n                    this.$ = new Objeto($$[$0 - 3], '', _$[$0 - 4].first_line, _$[$0 - 4].first_column, $$[$0 - 2], [], true);\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ELEMENTO', null, [new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 4].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 3].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        cst.cstXmlAsc.obtenerUltimoNodo(),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'diag', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 1].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 7:\r\n                    console.log(Objeto);\r\n                    if ($$[$0 - 7] === $$[$0 - 1]) {\r\n                        this.$ = new Objeto($$[$0 - 7], $$[$0 - 4].toString().replaceAll(\"\\\"\", \"\"), _$[$0 - 8].first_line, _$[$0 - 8].first_column, $$[$0 - 6], [], false);\r\n                    }\r\n                    else {\r\n                        console.log(errores.default);\r\n                        console.log('Linea 111: Error semantico: Las etiquetas deben ser iguales:\\n' + $$[$0 - 7] + \"!=\" + $$[$0 - 1] + \" \\natributos: \" + $$[$0 - 6] + \"\\ntexto: \\n\" + $$[$0 - 4]);\r\n                        errores.default.agregarError('semantico', 'Las etiquetas deben ser iguales', _$[$0 - 8].first_line, _$[$0 - 8].first_column);\r\n                        this.$ = null;\r\n                    }\r\n                    /* CONSTRUCCION DE CST */\r\n                    var elemText = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    var elemAtr = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ELEMENTO', null, [new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 8].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 7].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        elemAtr,\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 5].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        elemText,\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 3].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'diag', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 2].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 1].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 8:\r\n                    if ($$[$0 - 7] === $$[$0 - 1]) {\r\n                        this.$ = new Objeto($$[$0 - 7], '', _$[$0 - 8].first_line, _$[$0 - 8].first_column, $$[$0 - 6], $$[$0 - 4], false);\r\n                    }\r\n                    else {\r\n                        console.log(errores.default);\r\n                        console.log('Linea 120: Error semantico: Las etiquetas deben ser iguales');\r\n                        errores.default.agregarError('semantico', 'Las etiquetas deben ser iguales', _$[$0 - 8].first_line, _$[$0 - 8].first_column);\r\n                        this.$ = null;\r\n                    }\r\n                    /* CONSTRUCCION DE CST */\r\n                    let elem1 = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    let atr1 = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ELEMENTO', null, [new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 8].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 7].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        atr1,\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 5].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        elem1,\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 3].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'diag', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 2].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 1].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 9:\r\n                    if ($$[$0 - 6] === $$[$0 - 1]) {\r\n                        this.$ = new Objeto($$[$0 - 6], '', _$[$0 - 7].first_line, _$[$0 - 7].first_column, $$[$0 - 5], [], false);\r\n                    }\r\n                    else {\r\n                        console.log(errores.default);\r\n                        console.log('Linea 129: Error semantico: Las etiquetas deben ser iguales');\r\n                        errores.default.agregarError('semantico', 'Las etiquetas deben ser iguales', _$[$0 - 7].first_line, _$[$0 - 7].first_column);\r\n                        this.$ = null;\r\n                    }\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ELEMENTO', null, [new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 7].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 6].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        cst.cstXmlAsc.obtenerUltimoNodo(),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 4].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 3].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'diag', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 2].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 1].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 10:\r\n                    console.log('Entra a error sintactico');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = null;\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ELEMENTO', null, []));\r\n                    break;\r\n                case 11:\r\n                    this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'LISTAATRIBUTOS', null, [cst.cstXmlAsc.obtenerUltimoNodo()]));\r\n                    break;\r\n                case 12:\r\n                    this.$ = [];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'LISTAATRIBUTOS', null, [new Nodo(cst.cstXmlAsc.getId(), 'epsilon', null, [])]));\r\n                    break;\r\n                case 13:\r\n                    $$[$0 - 1].push($$[$0]);\r\n                    this.$ = $$[$0 - 1];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let atr2 = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    let atrs2 = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ATRIBUTOS', null, [atrs2, atr2]));\r\n                    break;\r\n                case 14:\r\n                    this.$ = [$$[$0]];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ATRIBUTOS', null, [cst.cstXmlAsc.obtenerUltimoNodo()]));\r\n                    break;\r\n                case 15:\r\n                case 16:\r\n                    this.$ = new Atributo($$[$0 - 2].toString().replaceAll(\"\\\"\", \"\"), $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ATRIBUTO', null, [new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 2].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'asignacion', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 1].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'cadena', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 17:\r\n                    console.log('Entra a error Atribut sintactico');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0].first_line, _$[$0].first_column);\r\n                    this.$ = new Atributo(\"\", \"\", _$[$0].first_line, _$[$0].first_column);\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ATRIBUTO', null, []));\r\n                    break;\r\n                case 18:\r\n                    $$[$0 - 1] = $$[$0 - 1] + \" \" + $$[$0];\r\n                    this.$ = $$[$0 - 1];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let text2 = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    let textContent2 = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXTCONTENT', null, [textContent2, text2]));\r\n                    break;\r\n                case 19:\r\n                    this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXTCONTENT', null, [cst.cstXmlAsc.obtenerUltimoNodo()]));\r\n                    break;\r\n                case 20:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 21:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'content', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 22:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'double', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 23:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'integer', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 24:\r\n                    this.$ = $$[$0].toString();\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 25:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'comilla simple', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 26:\r\n                    this.$ = \"<\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'menor que', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 27:\r\n                    this.$ = \">\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'mayor que', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 28:\r\n                    this.$ = \"&\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'ampersand', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 29:\r\n                    this.$ = \"'\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'apostrofe', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 30:\r\n                    this.$ = \"''\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'comilla doble', null, [new Nodo(cst.cstXmlAsc.getId(), '\"', null, [])])]));\r\n                    break;\r\n                case 31:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, []));\r\n                    break;\r\n            }\r\n        },\r\n        table: [{ 2: [1, 4], 3: 1, 4: 2, 6: [1, 3] }, { 1: [3] }, { 5: [1, 5] }, { 7: [1, 6] }, { 2: $V0, 6: $V1, 11: 7, 12: 8 }, { 1: [2, 1] }, { 8: [1, 11] }, { 2: $V0, 5: [2, 3], 6: $V1, 12: 12 }, o($V2, [2, 5]), { 13: $V3 }, { 10: $V4 }, { 2: $V5, 7: $V6, 9: 15, 13: $V7, 16: 16, 17: 17 }, o($V2, [2, 4]), o([10, 14], $V6, { 16: 16, 17: 17, 9: 20, 2: $V5, 13: $V7 }), o($V2, [2, 10]), { 7: [1, 21] }, o([7, 10, 14], [2, 11], { 17: 22, 2: $V5, 13: $V7 }), o($V8, [2, 14]), { 18: [1, 23] }, o($V8, [2, 17]), { 10: [1, 25], 14: [1, 24] }, { 10: [1, 26] }, o($V8, [2, 13]), { 19: [1, 27], 20: [1, 28] }, { 10: [1, 29] }, { 2: [1, 45], 6: [1, 32], 8: $V9, 11: 31, 12: 8, 13: $Va, 15: 30, 21: 33, 22: $Vb, 23: $Vc, 24: $Vd, 25: $Ve, 26: $Vf, 27: $Vg, 28: $Vh, 29: $Vi, 30: $Vj }, { 2: $V0, 6: $V1, 11: 46, 12: 8 }, o($V8, [2, 15]), o($V8, [2, 16]), o($V2, [2, 6]), { 2: [1, 49], 6: [1, 47], 8: $V9, 13: $Va, 21: 48, 22: $Vb, 23: $Vc, 24: $Vd, 25: $Ve, 26: $Vf, 27: $Vg, 28: $Vh, 29: $Vi, 30: $Vj }, { 2: $V0, 6: [1, 50], 12: 12 }, { 13: $V3, 14: [1, 51] }, o($Vk, [2, 19]), o($Vk, [2, 20]), o($Vk, [2, 21]), o($Vk, [2, 22]), o($Vk, [2, 23]), o($Vk, [2, 24]), o($Vk, [2, 25]), o($Vk, [2, 26]), o($Vk, [2, 27]), o($Vk, [2, 28]), o($Vk, [2, 29]), o($Vk, [2, 30]), o($Vk, $Vl, { 10: $V4 }), { 2: $V0, 5: [2, 2], 6: $V1, 12: 12 }, { 14: [1, 52] }, o($Vk, [2, 18]), o($Vk, $Vl), { 13: $V3, 14: [1, 53] }, { 13: [1, 54] }, { 13: [1, 55] }, { 13: [1, 56] }, { 10: [1, 57] }, { 10: [1, 58] }, { 10: [1, 59] }, o($V2, [2, 9]), o($V2, [2, 7]), o($V2, [2, 8])],\r\n        defaultActions: { 5: [2, 1] },\r\n        parseError: function parseError(str, hash) {\r\n            if (hash.recoverable) {\r\n                this.trace(str);\r\n            }\r\n            else {\r\n                var error = new Error(str);\r\n                error.hash = hash;\r\n                throw error;\r\n            }\r\n        },\r\n        parse: function parse(input) {\r\n            var self = this, stack = [0], tstack = [], // token stack\r\n            vstack = [null], // semantic value stack\r\n            lstack = [], // location stack\r\n            table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n            var args = lstack.slice.call(arguments, 1);\r\n            //this.reductionCount = this.shiftCount = 0;\r\n            var lexer = Object.create(this.lexer);\r\n            var sharedState = { yy: {} };\r\n            // copy state\r\n            for (var k in this.yy) {\r\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n                    sharedState.yy[k] = this.yy[k];\r\n                }\r\n            }\r\n            lexer.setInput(input, sharedState.yy);\r\n            sharedState.yy.lexer = lexer;\r\n            sharedState.yy.parser = this;\r\n            if (typeof lexer.yylloc == 'undefined') {\r\n                lexer.yylloc = {};\r\n            }\r\n            var yyloc = lexer.yylloc;\r\n            lstack.push(yyloc);\r\n            var ranges = lexer.options && lexer.options.ranges;\r\n            if (typeof sharedState.yy.parseError === 'function') {\r\n                this.parseError = sharedState.yy.parseError;\r\n            }\r\n            else {\r\n                this.parseError = Object.getPrototypeOf(this).parseError;\r\n            }\r\n            function popStack(n) {\r\n                stack.length = stack.length - 2 * n;\r\n                vstack.length = vstack.length - n;\r\n                lstack.length = lstack.length - n;\r\n            }\r\n            _token_stack: var lex = function () {\r\n                var token;\r\n                token = lexer.lex() || EOF;\r\n                // if token isn't its numeric value, convert\r\n                if (typeof token !== 'number') {\r\n                    token = self.symbols_[token] || token;\r\n                }\r\n                return token;\r\n            };\r\n            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n            while (true) {\r\n                // retreive state number from top of stack\r\n                state = stack[stack.length - 1];\r\n                // use default actions if available\r\n                if (this.defaultActions[state]) {\r\n                    action = this.defaultActions[state];\r\n                }\r\n                else {\r\n                    if (symbol === null || typeof symbol == 'undefined') {\r\n                        symbol = lex();\r\n                    }\r\n                    // read action for current state and first input\r\n                    action = table[state] && table[state][symbol];\r\n                }\r\n                _handle_error: \r\n                // handle parse error\r\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                    var error_rule_depth;\r\n                    var errStr = '';\r\n                    // Return the rule stack depth where the nearest error rule can be found.\r\n                    // Return FALSE when no error recovery rule was found.\r\n                    function locateNearestErrorRecoveryRule(state) {\r\n                        var stack_probe = stack.length - 1;\r\n                        var depth = 0;\r\n                        // try to recover from error\r\n                        for (;;) {\r\n                            // check for error recovery rule in this state\r\n                            if ((TERROR.toString()) in table[state]) {\r\n                                return depth;\r\n                            }\r\n                            if (state === 0 || stack_probe < 2) {\r\n                                return false; // No suitable error recovery rule available.\r\n                            }\r\n                            stack_probe -= 2; // popStack(1): [symbol, action]\r\n                            state = stack[stack_probe];\r\n                            ++depth;\r\n                        }\r\n                    }\r\n                    if (!recovering) {\r\n                        // first see if there's any chance at hitting an error recovery rule:\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                        // Report error\r\n                        expected = [];\r\n                        for (p in table[state]) {\r\n                            if (this.terminals_[p] && p > TERROR) {\r\n                                expected.push(\"'\" + this.terminals_[p] + \"'\");\r\n                            }\r\n                        }\r\n                        if (lexer.showPosition) {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \":\\n\" + lexer.showPosition() + \"\\nExpecting \" + expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\r\n                        }\r\n                        else {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \": Unexpected \" +\r\n                                (symbol == EOF ? \"end of input\" :\r\n                                    (\"'\" + (this.terminals_[symbol] || symbol) + \"'\"));\r\n                        }\r\n                        this.parseError(errStr, {\r\n                            text: lexer.match,\r\n                            token: this.terminals_[symbol] || symbol,\r\n                            line: lexer.yylineno,\r\n                            loc: yyloc,\r\n                            expected: expected,\r\n                            recoverable: (error_rule_depth !== false)\r\n                        });\r\n                    }\r\n                    else if (preErrorSymbol !== EOF) {\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                    }\r\n                    // just recovered from another error\r\n                    if (recovering == 3) {\r\n                        if (symbol === EOF || preErrorSymbol === EOF) {\r\n                            throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                        }\r\n                        // discard current lookahead and grab another\r\n                        yyleng = lexer.yyleng;\r\n                        yytext = lexer.yytext;\r\n                        yylineno = lexer.yylineno;\r\n                        yyloc = lexer.yylloc;\r\n                        symbol = lex();\r\n                    }\r\n                    // try to recover from error\r\n                    if (error_rule_depth === false) {\r\n                        throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n                    }\r\n                    popStack(error_rule_depth);\r\n                    preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n                    symbol = TERROR; // insert generic error symbol as new lookahead\r\n                    state = stack[stack.length - 1];\r\n                    action = table[state] && table[state][TERROR];\r\n                    recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n                }\r\n                // this shouldn't happen, unless resolve defaults are off\r\n                if (action[0] instanceof Array && action.length > 1) {\r\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n                }\r\n                switch (action[0]) {\r\n                    case 1: // shift\r\n                        //this.shiftCount++;\r\n                        stack.push(symbol);\r\n                        vstack.push(lexer.yytext);\r\n                        lstack.push(lexer.yylloc);\r\n                        stack.push(action[1]); // push state\r\n                        symbol = null;\r\n                        if (!preErrorSymbol) { // normal execution/no error\r\n                            yyleng = lexer.yyleng;\r\n                            yytext = lexer.yytext;\r\n                            yylineno = lexer.yylineno;\r\n                            yyloc = lexer.yylloc;\r\n                            if (recovering > 0) {\r\n                                recovering--;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // error just occurred, resume old lookahead f/ before error\r\n                            symbol = preErrorSymbol;\r\n                            preErrorSymbol = null;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        // reduce\r\n                        //this.reductionCount++;\r\n                        len = this.productions_[action[1]][1];\r\n                        // perform semantic action\r\n                        yyval.$ = vstack[vstack.length - len]; // default to $$ = $1\r\n                        // default location, uses first token for firsts, last for lasts\r\n                        yyval._$ = {\r\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                            last_line: lstack[lstack.length - 1].last_line,\r\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                            last_column: lstack[lstack.length - 1].last_column\r\n                        };\r\n                        if (ranges) {\r\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\r\n                        }\r\n                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n                        if (typeof r !== 'undefined') {\r\n                            return r;\r\n                        }\r\n                        // pop off stack\r\n                        if (len) {\r\n                            stack = stack.slice(0, -1 * len * 2);\r\n                            vstack = vstack.slice(0, -1 * len);\r\n                            lstack = lstack.slice(0, -1 * len);\r\n                        }\r\n                        stack.push(this.productions_[action[1]][0]); // push nonterminal (reduce)\r\n                        vstack.push(yyval.$);\r\n                        lstack.push(yyval._$);\r\n                        // goto new state = table[STATE][NONTERMINAL]\r\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n                        stack.push(newState);\r\n                        break;\r\n                    case 3:\r\n                        // accept\r\n                        return true;\r\n                }\r\n            }\r\n            return true;\r\n        } };\r\n    //const Nodo = require(\"./AST/nodo_arbol\");\r\n    //var raiz;\r\n    const { Objeto } = require(\"../XML/Objeto\");\r\n    const { Atributo } = require(\"../XML/Atributo\");\r\n    const errores = require('../Global/ListaError');\r\n    const { Nodo } = require('../Reporte/Nodo');\r\n    const cst = require('../Reporte/CST');\r\n    /* generated by jison-lex 0.3.4 */\r\n    var lexer = (function () {\r\n        var lexer = ({\r\n            EOF: 1,\r\n            parseError: function parseError(str, hash) {\r\n                if (this.yy.parser) {\r\n                    this.yy.parser.parseError(str, hash);\r\n                }\r\n                else {\r\n                    throw new Error(str);\r\n                }\r\n            },\r\n            // resets the lexer, sets new input\r\n            setInput: function (input, yy) {\r\n                this.yy = yy || this.yy || {};\r\n                this._input = input;\r\n                this._more = this._backtrack = this.done = false;\r\n                this.yylineno = this.yyleng = 0;\r\n                this.yytext = this.matched = this.match = '';\r\n                this.conditionStack = ['INITIAL'];\r\n                this.yylloc = {\r\n                    first_line: 1,\r\n                    first_column: 0,\r\n                    last_line: 1,\r\n                    last_column: 0\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [0, 0];\r\n                }\r\n                this.offset = 0;\r\n                return this;\r\n            },\r\n            // consumes and returns one char from the input\r\n            input: function () {\r\n                var ch = this._input[0];\r\n                this.yytext += ch;\r\n                this.yyleng++;\r\n                this.offset++;\r\n                this.match += ch;\r\n                this.matched += ch;\r\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno++;\r\n                    this.yylloc.last_line++;\r\n                }\r\n                else {\r\n                    this.yylloc.last_column++;\r\n                }\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range[1]++;\r\n                }\r\n                this._input = this._input.slice(1);\r\n                return ch;\r\n            },\r\n            // unshifts one char (or a string) into the input\r\n            unput: function (ch) {\r\n                var len = ch.length;\r\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n                this._input = ch + this._input;\r\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n                //this.yyleng -= len;\r\n                this.offset -= len;\r\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n                this.match = this.match.substr(0, this.match.length - 1);\r\n                this.matched = this.matched.substr(0, this.matched.length - 1);\r\n                if (lines.length - 1) {\r\n                    this.yylineno -= lines.length - 1;\r\n                }\r\n                var r = this.yylloc.range;\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: lines ?\r\n                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                            + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n                        this.yylloc.first_column - len\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n                }\r\n                this.yyleng = this.yytext.length;\r\n                return this;\r\n            },\r\n            // When called from action, caches matched text and appends it on next action\r\n            more: function () {\r\n                this._more = true;\r\n                return this;\r\n            },\r\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n            reject: function () {\r\n                if (this.options.backtrack_lexer) {\r\n                    this._backtrack = true;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n                return this;\r\n            },\r\n            // retain first n characters of the match\r\n            less: function (n) {\r\n                this.unput(this.match.slice(n));\r\n            },\r\n            // displays already matched input, i.e. for error messages\r\n            pastInput: function () {\r\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\r\n            },\r\n            // displays upcoming input, i.e. for error messages\r\n            upcomingInput: function () {\r\n                var next = this.match;\r\n                if (next.length < 20) {\r\n                    next += this._input.substr(0, 20 - next.length);\r\n                }\r\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n            },\r\n            // displays the character position where the lexing error occurred, i.e. for error messages\r\n            showPosition: function () {\r\n                var pre = this.pastInput();\r\n                var c = new Array(pre.length + 1).join(\"-\");\r\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n            },\r\n            // test the lexed token: return FALSE when not a match, otherwise return token\r\n            test_match: function (match, indexed_rule) {\r\n                var token, lines, backup;\r\n                if (this.options.backtrack_lexer) {\r\n                    // save context\r\n                    backup = {\r\n                        yylineno: this.yylineno,\r\n                        yylloc: {\r\n                            first_line: this.yylloc.first_line,\r\n                            last_line: this.last_line,\r\n                            first_column: this.yylloc.first_column,\r\n                            last_column: this.yylloc.last_column\r\n                        },\r\n                        yytext: this.yytext,\r\n                        match: this.match,\r\n                        matches: this.matches,\r\n                        matched: this.matched,\r\n                        yyleng: this.yyleng,\r\n                        offset: this.offset,\r\n                        _more: this._more,\r\n                        _input: this._input,\r\n                        yy: this.yy,\r\n                        conditionStack: this.conditionStack.slice(0),\r\n                        done: this.done\r\n                    };\r\n                    if (this.options.ranges) {\r\n                        backup.yylloc.range = this.yylloc.range.slice(0);\r\n                    }\r\n                }\r\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno += lines.length;\r\n                }\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.last_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.last_column,\r\n                    last_column: lines ?\r\n                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                        this.yylloc.last_column + match[0].length\r\n                };\r\n                this.yytext += match[0];\r\n                this.match += match[0];\r\n                this.matches = match;\r\n                this.yyleng = this.yytext.length;\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n                }\r\n                this._more = false;\r\n                this._backtrack = false;\r\n                this._input = this._input.slice(match[0].length);\r\n                this.matched += match[0];\r\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n                if (this.done && this._input) {\r\n                    this.done = false;\r\n                }\r\n                if (token) {\r\n                    return token;\r\n                }\r\n                else if (this._backtrack) {\r\n                    // recover context\r\n                    for (var k in backup) {\r\n                        this[k] = backup[k];\r\n                    }\r\n                    return false; // rule action called reject() implying the next rule should be tested instead.\r\n                }\r\n                return false;\r\n            },\r\n            // return next match in input\r\n            next: function () {\r\n                if (this.done) {\r\n                    return this.EOF;\r\n                }\r\n                if (!this._input) {\r\n                    this.done = true;\r\n                }\r\n                var token, match, tempMatch, index;\r\n                if (!this._more) {\r\n                    this.yytext = '';\r\n                    this.match = '';\r\n                }\r\n                var rules = this._currentRules();\r\n                for (var i = 0; i < rules.length; i++) {\r\n                    tempMatch = this._input.match(this.rules[rules[i]]);\r\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                        match = tempMatch;\r\n                        index = i;\r\n                        if (this.options.backtrack_lexer) {\r\n                            token = this.test_match(tempMatch, rules[i]);\r\n                            if (token !== false) {\r\n                                return token;\r\n                            }\r\n                            else if (this._backtrack) {\r\n                                match = false;\r\n                                continue; // rule action called reject() implying a rule MISmatch.\r\n                            }\r\n                            else {\r\n                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else if (!this.options.flex) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (match) {\r\n                    token = this.test_match(match, rules[index]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    }\r\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                    return false;\r\n                }\r\n                if (this._input === \"\") {\r\n                    return this.EOF;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n            },\r\n            // return next match that has a token\r\n            lex: function lex() {\r\n                var r = this.next();\r\n                if (r) {\r\n                    return r;\r\n                }\r\n                else {\r\n                    return this.lex();\r\n                }\r\n            },\r\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n            begin: function begin(condition) {\r\n                this.conditionStack.push(condition);\r\n            },\r\n            // pop the previously active lexer condition state off the condition stack\r\n            popState: function popState() {\r\n                var n = this.conditionStack.length - 1;\r\n                if (n > 0) {\r\n                    return this.conditionStack.pop();\r\n                }\r\n                else {\r\n                    return this.conditionStack[0];\r\n                }\r\n            },\r\n            // produce the lexer rule set which is active for the currently active lexer condition state\r\n            _currentRules: function _currentRules() {\r\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n                }\r\n                else {\r\n                    return this.conditions[\"INITIAL\"].rules;\r\n                }\r\n            },\r\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n            topState: function topState(n) {\r\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n                if (n >= 0) {\r\n                    return this.conditionStack[n];\r\n                }\r\n                else {\r\n                    return \"INITIAL\";\r\n                }\r\n            },\r\n            // alias for begin(condition)\r\n            pushState: function pushState(condition) {\r\n                this.begin(condition);\r\n            },\r\n            // return the number of states currently on the stack\r\n            stateStackSize: function stateStackSize() {\r\n                return this.conditionStack.length;\r\n            },\r\n            options: {},\r\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n                var YYSTATE = YY_START;\r\n                switch ($avoiding_name_collisions) {\r\n                    case 0: /* skip whitespace */\r\n                        break;\r\n                    case 1:\r\n                        this.begin('comment');\r\n                        break;\r\n                    case 2:\r\n                        this.popState();\r\n                        break;\r\n                    case 3: /* skip comment content*/\r\n                        break;\r\n                    case 4:\r\n                        return 6;\r\n                        break;\r\n                    case 5:\r\n                        return 10;\r\n                        break;\r\n                    case 6:\r\n                        return 18;\r\n                        break;\r\n                    case 7:\r\n                        return 14;\r\n                        break;\r\n                    case 8:\r\n                        return 7;\r\n                        break;\r\n                    case 9:\r\n                        return 25;\r\n                        break;\r\n                    case 10:\r\n                        return \"xml\";\r\n                        break;\r\n                    case 11:\r\n                        return 26;\r\n                        break;\r\n                    case 12:\r\n                        return 27;\r\n                        break;\r\n                    case 13:\r\n                        return 28;\r\n                        break;\r\n                    case 14:\r\n                        return \"apostrophe\";\r\n                        break;\r\n                    case 15:\r\n                        return \"quot\";\r\n                        break;\r\n                    case 16:\r\n                        return 23;\r\n                        break;\r\n                    case 17:\r\n                        return 24;\r\n                        break;\r\n                    case 18:\r\n                        return 13;\r\n                        break;\r\n                    case 19:\r\n                        return 19;\r\n                        break;\r\n                    case 20:\r\n                        return 20;\r\n                        break;\r\n                    case 21:\r\n                        return 22;\r\n                        break;\r\n                    case 22:\r\n                        return 5;\r\n                        break;\r\n                    case 23:\r\n                        console.log(errores.default);\r\n                        errores.default.agregarError('lexico', 'Simbolo inesperado ' + yy_.yytext, yy_.yylloc.first_line, yy_.yylloc.first_column);\r\n                        break;\r\n                }\r\n            },\r\n            rules: [/^(?:\\s+)/, /^(?:<!--)/, /^(?:-->)/, /^(?:.)/, /^(?:<)/, /^(?:>)/, /^(?:=)/, /^(?:\\/)/, /^(?:\\?)/, /^(?:')/, /^(?:[xX][mM][lL])/, /^(?:&lt;)/, /^(?:&gt;)/, /^(?:&amp;)/, /^(?:&apos;)/, /^(?:&quot;)/, /^(?:(([0-9]+\\.[0-9]*)|(\\.[0-9]+)))/, /^(?:[0-9]+)/, /^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ.-]*)/, /^(?:(\"((\\\\([\\'\\\"\\\\]))|([^\\\"\\\\]+))*\"))/, /^(?:('((\\\\([\\'\\\"\\\\]))|([^\\'\\\\]))*'))/, /^(?:([^<]))/, /^(?:$)/, /^(?:.)/],\r\n            conditions: { \"comment\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], \"inclusive\": true }, \"INITIAL\": { \"rules\": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], \"inclusive\": true } }\r\n        });\r\n        return lexer;\r\n    })();\r\n    parser.lexer = lexer;\r\n    function Parser() {\r\n        this.yy = {};\r\n    }\r\n    Parser.prototype = parser;\r\n    parser.Parser = Parser;\r\n    return new Parser;\r\n})();\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\n    exports.parser = XML_GramaticaAsc;\r\n    exports.Parser = XML_GramaticaAsc.Parser;\r\n    exports.parse = function () { return XML_GramaticaAsc.parse.apply(XML_GramaticaAsc, arguments); };\r\n    exports.main = function commonjsMain(args) {\r\n        if (!args[1]) {\r\n            console.log('Usage: ' + args[0] + ' FILE');\r\n            process.exit(1);\r\n        }\r\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n        return exports.parser.parse(source);\r\n    };\r\n    if (typeof module !== 'undefined' && require.main === module) {\r\n        exports.main(process.argv.slice(1));\r\n    }\r\n}\r\n","\"use strict\";\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XQuery_GramaticaAsc = (function () {\r\n    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)\r\n        ; return o; }, $V0 = [1, 9], $V1 = [1, 10], $V2 = [1, 11], $V3 = [1, 12], $V4 = [1, 15], $V5 = [37, 40, 43, 50, 64], $V6 = [1, 23], $V7 = [1, 33], $V8 = [1, 36], $V9 = [1, 29], $Va = [1, 30], $Vb = [1, 31], $Vc = [1, 32], $Vd = [1, 34], $Ve = [1, 42], $Vf = [19, 37, 40, 43, 50, 64], $Vg = [19, 26, 37, 40, 43, 50, 64], $Vh = [5, 19, 37, 40, 43, 50, 64], $Vi = [2, 92], $Vj = [1, 66], $Vk = [15, 44, 94, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], $Vl = [2, 154], $Vm = [1, 87], $Vn = [1, 90], $Vo = [1, 92], $Vp = [1, 91], $Vq = [1, 93], $Vr = [1, 94], $Vs = [1, 85], $Vt = [1, 86], $Vu = [1, 98], $Vv = [1, 97], $Vw = [1, 95], $Vx = [1, 96], $Vy = [19, 37, 40, 43, 44, 50, 64, 94, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], $Vz = [1, 103], $VA = [19, 26, 37, 40, 43, 50, 64, 88], $VB = [1, 110], $VC = [1, 113], $VD = [1, 115], $VE = [1, 114], $VF = [5, 15, 19, 26, 37, 40, 43, 44, 50, 58, 64, 76, 88, 94, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], $VG = [1, 122], $VH = [1, 125], $VI = [1, 126], $VJ = [1, 127], $VK = [1, 128], $VL = [1, 129], $VM = [1, 130], $VN = [1, 131], $VO = [1, 132], $VP = [1, 133], $VQ = [1, 134], $VR = [1, 135], $VS = [1, 136], $VT = [1, 137], $VU = [1, 160], $VV = [1, 152], $VW = [1, 153], $VX = [1, 154], $VY = [1, 155], $VZ = [1, 156], $V_ = [1, 157], $V$ = [1, 158], $V01 = [1, 159], $V11 = [1, 161], $V21 = [1, 162], $V31 = [1, 163], $V41 = [1, 164], $V51 = [1, 165], $V61 = [1, 166], $V71 = [1, 167], $V81 = [1, 168], $V91 = [1, 169], $Va1 = [1, 170], $Vb1 = [15, 19, 37, 40, 43, 44, 50, 64, 94, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], $Vc1 = [5, 15, 19, 26, 37, 38, 40, 43, 44, 50, 58, 64, 76, 88, 94, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], $Vd1 = [2, 125], $Ve1 = [1, 191], $Vf1 = [5, 15, 19, 26, 37, 40, 43, 44, 50, 58, 64, 76, 94, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], $Vg1 = [2, 153], $Vh1 = [1, 241], $Vi1 = [1, 246], $Vj1 = [15, 26], $Vk1 = [2, 52], $Vl1 = [1, 251], $Vm1 = [19, 44, 94, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], $Vn1 = [1, 282], $Vo1 = [1, 287], $Vp1 = [1, 283], $Vq1 = [15, 19, 37, 40, 43, 44, 50, 64, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131], $Vr1 = [15, 19, 37, 40, 43, 44, 50, 64, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131], $Vs1 = [1, 303], $Vt1 = [1, 306], $Vu1 = [1, 304], $Vv1 = [1, 305], $Vw1 = [2, 67], $Vx1 = [5, 15, 19, 37, 40, 43, 50, 58, 64, 76], $Vy1 = [1, 351], $Vz1 = [1, 352], $VA1 = [1, 353], $VB1 = [1, 354], $VC1 = [1, 355], $VD1 = [1, 361], $VE1 = [15, 17, 26];\r\n    var parser = { trace: function trace() { },\r\n        yy: {},\r\n        symbols_: { \"error\": 2, \"START\": 3, \"DEFINICIONXQUERY\": 4, \"EOF\": 5, \"FLWOR\": 6, \"USERFUNCTION\": 7, \"declare\": 8, \"function\": 9, \"PREFIX\": 10, \"dospuntos\": 11, \"identifier\": 12, \"parA\": 13, \"ARGUMENTOS\": 14, \"parC\": 15, \"TIPOFUNCION\": 16, \"corA\": 17, \"LISTAINSTR\": 18, \"corC\": 19, \"CUERPOFUNCION\": 20, \"OPCIONAL\": 21, \"RETURNTYPE\": 22, \"as\": 23, \"DATATYPE\": 24, \"LISTAARGS\": 25, \"coma\": 26, \"PARAM\": 27, \"dolar\": 28, \"decimal\": 29, \"string\": 30, \"boolean\": 31, \"double\": 32, \"integer\": 33, \"local\": 34, \"LISTAOP\": 35, \"LISTAOPCIONALES\": 36, \"where\": 37, \"diag\": 38, \"EXPRESION\": 39, \"order\": 40, \"by\": 41, \"LISTASORT\": 42, \"let\": 43, \"igual\": 44, \"LISTACONSULTAS\": 45, \"IntegerLiteral\": 46, \"to\": 47, \"LISTAENTEROS\": 48, \"PRIMITIVAXPATH\": 49, \"for\": 50, \"LISTADECLARACIONES\": 51, \"DECLARACIONFOR\": 52, \"in\": 53, \"at\": 54, \"LISTAVARIABLECALL\": 55, \"VARIABLECALL\": 56, \"llaveA\": 57, \"llaveC\": 58, \"LISTANODOS\": 59, \"TEXTCONTENT\": 60, \"TEXT\": 61, \"content\": 62, \"DoubleLiteral\": 63, \"return\": 64, \"FUNCIONXQUERY\": 65, \"IFDEF\": 66, \"LLAMADAFUNCION\": 67, \"LISTALLAMADA\": 68, \"VARLLAMADA\": 69, \"identifer\": 70, \"NODO\": 71, \"if\": 72, \"then\": 73, \"TIPOIF\": 74, \"LISTAELSEIF\": 75, \"else\": 76, \"ELSEIF\": 77, \"CONDICION\": 78, \"DECRETURN\": 79, \"LISTAATRIBUTOS\": 80, \"ATRIBUTOS\": 81, \"ATRIBUTO\": 82, \"asig\": 83, \"cadena\": 84, \"cadena2\": 85, \"SORT\": 86, \"CONSULTA\": 87, \"andSelect\": 88, \"MASTIPOS\": 89, \"TIPONODO\": 90, \"AXES\": 91, \"attr\": 92, \"PREDICATE\": 93, \"asterisco\": 94, \"dot\": 95, \"FUNCIONES\": 96, \"ancestor\": 97, \"NODETEST\": 98, \"ancestorSelf\": 99, \"attribute\": 100, \"child\": 101, \"descendant\": 102, \"descendantSelf\": 103, \"following\": 104, \"followingSib\": 105, \"namespace\": 106, \"parent\": 107, \"preced\": 108, \"precedSib\": 109, \"self\": 110, \"textFunc\": 111, \"nodeFunc\": 112, \"PRIMITIVA\": 113, \"OPERACION\": 114, \"mas\": 115, \"menos\": 116, \"div\": 117, \"lte\": 118, \"lt\": 119, \"gte\": 120, \"gt\": 121, \"nequal\": 122, \"or\": 123, \"and\": 124, \"mod\": 125, \"reserv_eq\": 126, \"reserv_ne\": 127, \"reserv_lt\": 128, \"reserv_le\": 129, \"reserv_gt\": 130, \"reserv_ge\": 131, \"data\": 132, \"upper-case\": 133, \"substring\": 134, \"lower-case\": 135, \"number\": 136, \"lastFunc\": 137, \"positionFunc\": 138, \"$accept\": 0, \"$end\": 1 },\r\n        terminals_: { 2: \"error\", 5: \"EOF\", 8: \"declare\", 9: \"function\", 11: \"dospuntos\", 12: \"identifier\", 13: \"parA\", 15: \"parC\", 17: \"corA\", 19: \"corC\", 23: \"as\", 26: \"coma\", 28: \"dolar\", 29: \"decimal\", 30: \"string\", 31: \"boolean\", 32: \"double\", 33: \"integer\", 34: \"local\", 37: \"where\", 38: \"diag\", 40: \"order\", 41: \"by\", 43: \"let\", 44: \"igual\", 46: \"IntegerLiteral\", 47: \"to\", 50: \"for\", 53: \"in\", 54: \"at\", 57: \"llaveA\", 58: \"llaveC\", 62: \"content\", 63: \"DoubleLiteral\", 64: \"return\", 70: \"identifer\", 72: \"if\", 73: \"then\", 76: \"else\", 83: \"asig\", 84: \"cadena\", 85: \"cadena2\", 88: \"andSelect\", 92: \"attr\", 94: \"asterisco\", 95: \"dot\", 97: \"ancestor\", 99: \"ancestorSelf\", 100: \"attribute\", 101: \"child\", 102: \"descendant\", 103: \"descendantSelf\", 104: \"following\", 105: \"followingSib\", 106: \"namespace\", 107: \"parent\", 108: \"preced\", 109: \"precedSib\", 110: \"self\", 111: \"textFunc\", 112: \"nodeFunc\", 115: \"mas\", 116: \"menos\", 117: \"div\", 118: \"lte\", 119: \"lt\", 120: \"gte\", 121: \"gt\", 122: \"nequal\", 123: \"or\", 124: \"and\", 125: \"mod\", 126: \"reserv_eq\", 127: \"reserv_ne\", 128: \"reserv_lt\", 129: \"reserv_le\", 130: \"reserv_gt\", 131: \"reserv_ge\", 132: \"data\", 133: \"upper-case\", 134: \"substring\", 135: \"lower-case\", 136: \"number\", 137: \"lastFunc\", 138: \"positionFunc\" },\r\n        productions_: [0, [3, 2], [4, 1], [4, 1], [7, 12], [18, 2], [18, 1], [20, 1], [20, 1], [16, 4], [16, 0], [14, 1], [14, 0], [25, 3], [25, 1], [27, 4], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [10, 1], [6, 2], [35, 1], [35, 0], [36, 2], [36, 1], [21, 5], [21, 6], [21, 3], [21, 6], [21, 10], [21, 8], [21, 6], [21, 2], [51, 3], [51, 1], [52, 4], [52, 8], [52, 6], [52, 7], [55, 2], [55, 1], [56, 3], [56, 5], [60, 2], [60, 1], [61, 1], [61, 1], [61, 1], [61, 1], [48, 3], [48, 1], [22, 4], [22, 2], [22, 2], [22, 4], [22, 2], [67, 6], [68, 3], [68, 1], [69, 2], [69, 1], [66, 12], [66, 13], [66, 9], [75, 2], [75, 0], [77, 10], [74, 3], [74, 3], [74, 1], [74, 2], [78, 1], [79, 1], [79, 3], [79, 1], [80, 1], [80, 0], [81, 2], [81, 1], [82, 3], [82, 3], [42, 3], [42, 1], [86, 3], [45, 3], [45, 1], [87, 2], [87, 2], [87, 1], [59, 2], [59, 0], [71, 2], [71, 3], [71, 2], [71, 3], [90, 1], [90, 4], [90, 1], [90, 1], [89, 3], [89, 3], [89, 2], [89, 3], [89, 2], [89, 1], [91, 4], [91, 4], [91, 4], [91, 4], [91, 4], [91, 4], [91, 4], [91, 4], [91, 4], [91, 4], [91, 4], [91, 4], [91, 4], [98, 2], [98, 2], [98, 2], [98, 2], [93, 3], [93, 0], [39, 1], [39, 1], [39, 1], [114, 3], [114, 3], [114, 3], [114, 3], [114, 3], [114, 3], [114, 3], [114, 3], [114, 3], [114, 3], [114, 3], [114, 3], [114, 3], [114, 3], [114, 3], [114, 3], [114, 3], [114, 3], [114, 3], [114, 3], [49, 1], [49, 1], [49, 1], [49, 1], [49, 2], [113, 0], [113, 2], [113, 2], [113, 1], [113, 2], [113, 1], [113, 1], [65, 6], [65, 6], [65, 10], [65, 6], [65, 6], [65, 6], [65, 4], [65, 4], [65, 8], [65, 4], [65, 4], [65, 4], [96, 1], [96, 1], [96, 1], [96, 1]],\r\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n            /* this == yyval */\r\n            var $0 = $$.length - 1;\r\n            switch (yystate) {\r\n                case 1:\r\n                    this.$ = $$[$0 - 1];\r\n                    return this.$;\r\n                    break;\r\n                case 2:\r\n                case 3:\r\n                case 7:\r\n                case 8:\r\n                case 11:\r\n                case 16:\r\n                case 17:\r\n                case 18:\r\n                case 19:\r\n                case 20:\r\n                case 21:\r\n                case 23:\r\n                case 46:\r\n                case 57:\r\n                case 62:\r\n                case 71:\r\n                case 73:\r\n                case 77:\r\n                case 90:\r\n                case 128:\r\n                case 175:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 4:\r\n                    this.$ = $$[$0 - 11];\r\n                    break;\r\n                case 5:\r\n                case 25:\r\n                case 41:\r\n                case 66:\r\n                case 79:\r\n                    $$[$0 - 1].push($$[$0]);\r\n                    this.$ = $$[$0 - 1];\r\n                    break;\r\n                case 6:\r\n                case 26:\r\n                case 42:\r\n                    this.$ = [$$[$0]];\r\n                    break;\r\n                case 9:\r\n                case 15:\r\n                    this.$ = $$[$0 - 3];\r\n                    break;\r\n                case 10:\r\n                    this.$ = null;\r\n                    break;\r\n                case 12:\r\n                    this.$ = [];\r\n                    break;\r\n                case 13:\r\n                    $$[$0 - 2].push($$[$0 - 2]);\r\n                    this.$ = $$[$0 - 2];\r\n                    break;\r\n                case 14:\r\n                case 52:\r\n                case 60:\r\n                case 80:\r\n                case 84:\r\n                    this.$ = [$$[$0]];\r\n                    break;\r\n                case 22:\r\n                    this.$ = new Flwor($$[$0 - 1], $$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 24:\r\n                case 67:\r\n                case 78:\r\n                case 125:\r\n                    this.$ = [];\r\n                    break;\r\n                case 27:\r\n                    this.$ = new Where($$[$0 - 2], $$[$0], true, _$[$0 - 4].first_line, _$[$0 - 4].first_column);\r\n                    break;\r\n                case 28:\r\n                    this.$ = new Where($$[$0 - 3], $$[$0], false, _$[$0 - 5].first_line, _$[$0 - 5].first_column);\r\n                    break;\r\n                case 29:\r\n                    this.$ = new OrderBy($$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 30:\r\n                    this.$ = new Let($$[$0 - 3], $$[$0], _$[$0 - 5].first_line, _$[$0 - 5].first_column);\r\n                    break;\r\n                case 31:\r\n                    this.$ = new Let($$[$0 - 7], null, _$[$0 - 9].first_line, _$[$0 - 9].first_column, +$$[$0 - 3], +$$[$0 - 1]);\r\n                    break;\r\n                case 32:\r\n                    this.$ = new Let($$[$0 - 5], null, _$[$0 - 7].first_line, _$[$0 - 7].first_column, undefined, undefined, $$[$0 - 1]);\r\n                    break;\r\n                case 33:\r\n                    this.$ = new Let($$[$0 - 3], null, _$[$0 - 5].first_line, _$[$0 - 5].first_column, undefined, undefined, undefined, $$[$0]);\r\n                    break;\r\n                case 34:\r\n                    this.$ = new For($$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 35:\r\n                    $$[$0 - 2].push($$[$0 - 1]);\r\n                    this.$ = $$[$0 - 2];\r\n                    break;\r\n                case 36:\r\n                    this.$ = [$$[$0]];\r\n                    break;\r\n                case 37:\r\n                    this.$ = new DeclaracionFor(TipoFor.NORMAL, $$[$0 - 2], $$[$0], _$[$0 - 3].first_line, _$[$0 - 3].first_column);\r\n                    break;\r\n                case 38:\r\n                    this.$ = new DeclaracionFor(TipoFor.ITERATIVO, $$[$0 - 6], null, _$[$0 - 7].first_line, _$[$0 - 7].first_column, undefined, +$$[$0 - 3], +$$[$0 - 1]);\r\n                    break;\r\n                case 39:\r\n                    this.$ = new DeclaracionFor(TipoFor.ITERATIVO, $$[$0 - 4], null, _$[$0 - 5].first_line, _$[$0 - 5].first_column, undefined, undefined, undefined, $$[$0 - 1]);\r\n                    break;\r\n                case 40:\r\n                    this.$ = new DeclaracionFor(TipoFor.AT, $$[$0 - 5], $$[$0], _$[$0 - 6].first_line, _$[$0 - 6].first_column, $$[$0 - 2]);\r\n                    break;\r\n                case 43:\r\n                    this.$ = new VarCall(undefined, undefined, $$[$0 - 1], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 44:\r\n                    this.$ = new VarCall($$[$0 - 2], $$[$0 - 1], undefined, _$[$0 - 4].first_line, _$[$0 - 4].first_column);\r\n                    break;\r\n                case 45:\r\n                    $$[$0 - 1] = $$[$0 - 1] + \" \" + $$[$0];\r\n                    this.$ = $$[$0 - 1];\r\n                    break;\r\n                case 47:\r\n                case 48:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    break;\r\n                case 49:\r\n                case 50:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    break;\r\n                case 51:\r\n                case 83:\r\n                    $$[$0 - 2].push($$[$0]);\r\n                    this.$ = $$[$0 - 2];\r\n                    break;\r\n                case 53:\r\n                    this.$ = new Return(TipoReturn.NORMAL, $$[$0 - 1], $$[$0], undefined, undefined, undefined, _$[$0 - 3].first_line, _$[$0 - 3].first_column);\r\n                    break;\r\n                case 54:\r\n                    this.$ = new Return(TipoReturn.FUNCIONXQUERY, undefined, undefined, undefined, undefined, $$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 55:\r\n                    this.$ = new Return(TipoReturn.IFTHENELSE, undefined, undefined, undefined, $$[$0], undefined, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 56:\r\n                case 61:\r\n                case 69:\r\n                    this.$ = $$[$0 - 1];\r\n                    break;\r\n                case 58:\r\n                    this.$ = \"Llamada\";\r\n                    break;\r\n                case 59:\r\n                    $$[$0 - 2].push($$[$0]);\r\n                    this.$ = $$[$0 - 2];\r\n                    break;\r\n                case 63:\r\n                    this.$ = new IfThenElse($$[$0 - 8], $$[$0 - 6], $$[$0 - 3], $$[$0 - 2], $$[$0], true, _$[$0 - 11].first_line, _$[$0 - 11].first_column);\r\n                    break;\r\n                case 64:\r\n                    this.$ = new IfThenElse($$[$0 - 9], $$[$0 - 6], $$[$0 - 3], $$[$0 - 2], $$[$0], false, _$[$0 - 12].first_line, _$[$0 - 12].first_column);\r\n                    break;\r\n                case 65:\r\n                    new IfThenElse(undefined, $$[$0 - 6], $$[$0 - 3], $$[$0 - 2], $$[$0], false, _$[$0 - 8].first_line, _$[$0 - 8].first_column);\r\n                    break;\r\n                case 68:\r\n                    this.$ = new ElseIf($$[$0 - 5], $$[$0 - 3], $$[$0], _$[$0 - 9].first_line, _$[$0 - 9].first_column);\r\n                    break;\r\n                case 70:\r\n                case 124:\r\n                    this.$ = $$[$0 - 1];\r\n                    break;\r\n                case 72:\r\n                    this.$ = new CondicionIf(undefined, undefined, undefined, undefined, true, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 74:\r\n                    this.$ = new CondicionIf(undefined, undefined, undefined, $$[$0], false, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 75:\r\n                    this.$ = new CondicionIf($$[$0 - 1], $$[$0], undefined, undefined, false, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 76:\r\n                    this.$ = new CondicionIf(undefined, undefined, undefined, undefined, false, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 81:\r\n                case 82:\r\n                    this.$ = new Atributo($$[$0 - 2].toString().replaceAll(\"\\\"\", \"\"), $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 85:\r\n                    this.$ = new Sort($$[$0 - 1], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 86:\r\n                    this.$ = [new Consulta($$[$0 - 2], _$[$0 - 2].first_line, _$[$0 - 2].first_column)];\r\n                    this.$ = this.$.concat($$[$0]);\r\n                    break;\r\n                case 87:\r\n                    this.$ = [new Consulta($$[$0], _$[$0].first_line, _$[$0].first_column)];\r\n                    break;\r\n                case 88:\r\n                    this.$ = [new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column)];\r\n                    if ($$[$0].length > 0) {\r\n                        this.$ = this.$.concat($$[$0]);\r\n                    }\r\n                    break;\r\n                case 89:\r\n                    this.$ = [$$[$0 - 1]];\r\n                    if ($$[$0].length > 0) {\r\n                        this.$ = this.$.concat($$[$0]);\r\n                    }\r\n                    break;\r\n                case 91:\r\n                    this.$ = [$$[$0 - 1]];\r\n                    this.$ = this.$.concat($$[$0]);\r\n                    break;\r\n                case 92:\r\n                    this.$ = [];\r\n                    break;\r\n                case 93:\r\n                    $$[$0].fromRoot = true;\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 94:\r\n                    $$[$0].fromRoot = false;\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 95:\r\n                    console.log('Entra a error sintactico de one diag');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = new Nodo($$[$0], TipoNodo.NODOERROR, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 96:\r\n                    console.log('Entra a error sintactico de two diags');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    this.$ = new Nodo($$[$0], TipoNodo.NODOERROR, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 97:\r\n                    this.$ = new Nodo($$[$0], TipoNodo.IDENTIFIER, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 98:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.IDENTIFIER, _$[$0 - 3].first_line, _$[$0 - 3].first_column, new Predicate($$[$0 - 1], _$[$0 - 1].first_line, _$[$0 - 1].first_column));\r\n                    break;\r\n                case 99:\r\n                case 100:\r\n                case 126:\r\n                case 173:\r\n                case 174:\r\n                case 176:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 101:\r\n                case 102:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.ATRIBUTO, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 103:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.DOT, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 104:\r\n                    this.$ = new Nodo($$[$0 - 2] + $$[$0 - 1], TipoNodo.DOTDOT, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 105:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 106:\r\n                    this.$ = new Nodo($$[$0], TipoNodo.FUNCION, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 107:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.ANCESTOR, $$[$0 - 1]);\r\n                    break;\r\n                case 108:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.ANCESTORORSELF, $$[$0 - 1]);\r\n                    break;\r\n                case 109:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.ATTRIBUTE, $$[$0 - 1]);\r\n                    break;\r\n                case 110:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.CHILD, $$[$0 - 1]);\r\n                    break;\r\n                case 111:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.DESCENDANT, $$[$0 - 1]);\r\n                    break;\r\n                case 112:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.DESCENDANTORSELF, $$[$0 - 1]);\r\n                    break;\r\n                case 113:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.FOLLOWING, $$[$0 - 1]);\r\n                    break;\r\n                case 114:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.FOLLOWINGSIBLING, $$[$0 - 1]);\r\n                    break;\r\n                case 115:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.NAMESPACE, $$[$0 - 1]);\r\n                    break;\r\n                case 116:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.PARENT, $$[$0 - 1]);\r\n                    break;\r\n                case 117:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.PRECEDING, $$[$0 - 1]);\r\n                    break;\r\n                case 118:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.PRECEDINGSIBLING, $$[$0 - 1]);\r\n                    break;\r\n                case 119:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.SELF, $$[$0 - 1]);\r\n                    break;\r\n                case 120:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    break;\r\n                case 121:\r\n                case 122:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.FUNCION, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.FUNCION, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    break;\r\n                case 123:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    break;\r\n                case 127:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 129:\r\n                    this.$ = new Operacion(TipoOperacion.MULTIPLICACION, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 130:\r\n                    this.$ = new Operacion(TipoOperacion.SUMA, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 131:\r\n                    this.$ = new Operacion(TipoOperacion.RESTA, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 132:\r\n                    this.$ = new Operacion(TipoOperacion.DIVISION, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 133:\r\n                case 145:\r\n                    this.$ = new Operacion(TipoOperacion.MENORIGUALQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 134:\r\n                case 144:\r\n                    this.$ = new Operacion(TipoOperacion.MENORQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 135:\r\n                case 147:\r\n                    this.$ = new Operacion(TipoOperacion.MAYORIGUALQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 136:\r\n                case 146:\r\n                    this.$ = new Operacion(TipoOperacion.MAYORQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 137:\r\n                case 142:\r\n                    this.$ = new Operacion(TipoOperacion.IGUAL, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 138:\r\n                case 143:\r\n                    this.$ = new Operacion(TipoOperacion.DIFERENTEQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 139:\r\n                    this.$ = new Operacion(TipoOperacion.OR, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 140:\r\n                    this.$ = new Operacion(TipoOperacion.AND, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 141:\r\n                    this.$ = new Operacion(TipoOperacion.MOD, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 148:\r\n                    this.$ = new Operacion(TipoOperacion.PAR, $$[$0 - 1], null, _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 149:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.DOUBLE, _$[$0].first_line, _$[$0].first_column, true);\r\n                    break;\r\n                case 150:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.INTEGER, _$[$0].first_line, _$[$0].first_column, true);\r\n                    break;\r\n                case 151:\r\n                case 152:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.CADENA, _$[$0].first_line, _$[$0].first_column, true);\r\n                    break;\r\n                case 153:\r\n                    this.$ = new Primitiva($$[$0 - 1], TipoPrim.XQUERYIDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column, true);\r\n                    break;\r\n                case 155:\r\n                case 156:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.ATRIBUTO, _$[$0 - 1].first_line, _$[$0 - 1].first_column, true);\r\n                    break;\r\n                case 157:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.DOT, _$[$0].first_line, _$[$0].first_column, true);\r\n                    break;\r\n                case 158:\r\n                    if ($$[$0].length > 0) {\r\n                        this.$ = [new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column)];\r\n                        this.$ = this.$.concat($$[$0]);\r\n                        this.$ = new Primitiva(this.$, TipoPrim.CONSULTA, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    else {\r\n                        this.$ = new Primitiva($$[$0 - 1], TipoPrim.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    break;\r\n                case 159:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.FUNCION, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 160:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.FUNCIONXQUERY, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 161:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.DATA, $$[$0 - 2], $$[$0 - 1], _$[$0 - 5].first_line, _$[$0 - 5].first_column);\r\n                    break;\r\n                case 162:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.UPPERCASE, $$[$0 - 2], $$[$0 - 1], _$[$0 - 5].first_line, _$[$0 - 5].first_column);\r\n                    break;\r\n                case 163:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.SUBSTRING, $$[$0 - 6], $$[$0 - 5], _$[$0 - 9].first_line, _$[$0 - 9].first_column, +$$[$0 - 3], +$$[$0 - 1]);\r\n                    break;\r\n                case 164:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.LOWERCASE, $$[$0 - 2], $$[$0 - 1], _$[$0 - 5].first_line, _$[$0 - 5].first_column);\r\n                    break;\r\n                case 165:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.STRING, $$[$0 - 2], $$[$0 - 1], _$[$0 - 5].first_line, _$[$0 - 5].first_column);\r\n                    break;\r\n                case 166:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.NUMBER, $$[$0 - 2], $$[$0 - 1], _$[$0 - 5].first_line, _$[$0 - 5].first_column);\r\n                    break;\r\n                case 167:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.DATA, undefined, undefined, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, undefined, $$[$0 - 1]);\r\n                    break;\r\n                case 168:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.UPPERCASE, undefined, undefined, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, undefined, $$[$0 - 1]);\r\n                    break;\r\n                case 169:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.SUBSTRING, undefined, undefined, _$[$0 - 7].first_line, _$[$0 - 7].first_column, +$$[$0 - 3], +$$[$0 - 1], $$[$0 - 5]);\r\n                    break;\r\n                case 170:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.LOWERCASE, undefined, undefined, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, undefined, $$[$0 - 1]);\r\n                    break;\r\n                case 171:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.STRING, undefined, undefined, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, undefined, $$[$0 - 1]);\r\n                    break;\r\n                case 172:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.NUMBER, undefined, undefined, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, undefined, $$[$0 - 1]);\r\n                    break;\r\n            }\r\n        },\r\n        table: [{ 3: 1, 4: 2, 6: 3, 7: 4, 8: [1, 6], 21: 8, 35: 5, 36: 7, 37: $V0, 40: $V1, 43: $V2, 50: $V3, 64: [2, 24] }, { 1: [3] }, { 5: [1, 13] }, { 5: [2, 2] }, { 5: [2, 3] }, { 22: 14, 64: $V4 }, { 9: [1, 16] }, { 21: 17, 37: $V0, 40: $V1, 43: $V2, 50: $V3, 64: [2, 23] }, o($V5, [2, 26]), { 28: [1, 18] }, { 41: [1, 19] }, { 28: [1, 20] }, { 28: $V6, 51: 21, 52: 22 }, { 1: [2, 1] }, { 5: [2, 22] }, { 13: [1, 27], 28: [1, 24], 30: $V7, 34: $V8, 65: 25, 66: 26, 67: 28, 72: [1, 35], 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd }, { 10: 37, 34: [1, 38] }, o($V5, [2, 25]), { 12: [1, 39] }, { 28: $Ve, 42: 40, 86: 41 }, { 12: [1, 43] }, o($Vf, [2, 34], { 26: [1, 44] }), o($Vg, [2, 36]), { 12: [1, 45] }, { 12: [1, 46] }, o($Vh, [2, 54]), o($Vh, [2, 55]), { 34: $V8, 67: 47 }, o($Vh, [2, 57]), { 13: [1, 48] }, { 13: [1, 49] }, { 13: [1, 50] }, { 13: [1, 51] }, { 13: [1, 52] }, { 13: [1, 53] }, { 13: [1, 54] }, { 11: [1, 55] }, { 11: [1, 56] }, { 11: [2, 21] }, { 38: [1, 57] }, o($Vf, [2, 29], { 26: [1, 58] }), o($Vg, [2, 84]), { 12: [1, 59] }, { 11: [1, 60] }, { 28: $V6, 52: 61 }, { 53: [1, 62], 54: [1, 63] }, o($Vh, $Vi, { 59: 64, 71: 65, 38: $Vj }), { 15: [1, 67] }, { 28: [1, 68], 30: $V7, 65: 69, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd }, { 28: [1, 70], 30: $V7, 65: 71, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd }, { 28: [1, 72], 30: $V7, 65: 73, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd }, { 28: [1, 74], 30: $V7, 65: 75, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd }, { 28: [1, 76], 30: $V7, 65: 77, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd }, { 28: [1, 78], 30: $V7, 65: 79, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd }, o($Vk, $Vl, { 39: 81, 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 12: $Vm, 13: $Vn, 28: [1, 80], 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), { 12: [1, 99] }, { 12: [1, 100] }, o($Vy, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 101, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 38: [1, 102], 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), { 28: $Ve, 86: 104 }, o($Vg, $Vi, { 71: 65, 59: 105, 38: $Vj }), { 44: [1, 106] }, o($Vg, [2, 35]), o($VA, $Vi, { 71: 65, 45: 107, 87: 109, 89: 111, 59: 112, 96: 116, 12: $VB, 13: [1, 108], 38: $Vj, 92: $VC, 94: $VD, 95: $VE, 111: $Vu, 112: $Vv, 137: $Vw, 138: $Vx }), { 28: [1, 117] }, o($Vh, [2, 53]), o($VF, $Vi, { 71: 65, 59: 118, 38: $Vj }), { 2: [1, 121], 12: $VG, 38: [1, 120], 89: 123, 90: 119, 91: 124, 92: $VC, 94: $VD, 95: $VE, 96: 116, 97: $VH, 99: $VI, 100: $VJ, 101: $VK, 102: $VL, 103: $VM, 104: $VN, 105: $VO, 106: $VP, 107: $VQ, 108: $VR, 109: $VS, 110: $VT, 111: $Vu, 112: $Vv, 137: $Vw, 138: $Vx }, o($Vh, [2, 56]), { 12: [1, 138] }, { 15: [1, 139] }, { 12: [1, 140] }, { 15: [1, 141] }, { 12: [1, 142] }, { 26: [1, 143] }, { 12: [1, 144] }, { 15: [1, 145] }, { 12: [1, 146] }, { 15: [1, 147] }, { 12: [1, 148] }, { 15: [1, 149] }, { 12: [1, 150] }, { 15: [1, 151], 44: $VU, 94: $VV, 115: $VW, 116: $VX, 117: $VY, 118: $VZ, 119: $V_, 120: $V$, 121: $V01, 122: $V11, 123: $V21, 124: $V31, 125: $V41, 126: $V51, 127: $V61, 128: $V71, 129: $V81, 130: $V91, 131: $Va1 }, o($Vb1, [2, 126]), o($Vb1, [2, 127]), o($Vb1, [2, 128]), { 12: [1, 171], 94: [1, 172] }, o($Vb1, [2, 157]), o($Vb1, $Vi, { 71: 65, 59: 173, 38: $Vj }), o($Vb1, [2, 159]), o($Vb1, [2, 160]), o($Vk, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 174, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vb1, [2, 149]), o($Vb1, [2, 150]), o($Vb1, [2, 151]), o($Vb1, [2, 152]), o($Vc1, [2, 173]), o($Vc1, [2, 174]), o($Vc1, [2, 175]), o($Vc1, [2, 176]), { 13: [1, 175] }, { 13: [1, 176] }, o($Vf, [2, 27], { 44: $VU, 94: $VV, 115: $VW, 116: $VX, 117: $VY, 118: $VZ, 119: $V_, 120: $V$, 121: $V01, 122: $V11, 123: $V21, 124: $V31, 125: $V41, 126: $V51, 127: $V61, 128: $V71, 129: $V81, 130: $V91, 131: $Va1 }), o($Vy, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 177, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), { 12: [1, 178] }, o($Vg, [2, 83]), o($Vg, [2, 85]), o([19, 37, 40, 43, 50, 64, 88], $Vi, { 71: 65, 87: 109, 89: 111, 59: 112, 96: 116, 45: 179, 49: 181, 12: $VB, 13: [1, 180], 28: $Vz, 38: $Vj, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $VC, 94: $VD, 95: $VE, 111: $Vu, 112: $Vv, 137: $Vw, 138: $Vx }), o($Vg, [2, 37]), { 46: [1, 182], 48: 183 }, o($Vg, [2, 87], { 88: [1, 184] }), o($VA, $Vi, { 71: 65, 59: 185, 38: $Vj }), o($VA, $Vi, { 71: 65, 59: 186, 38: $Vj }), o($VA, [2, 90]), { 12: [1, 187], 94: [1, 188] }, o($Vc1, $Vd1, { 93: 189, 17: $Ve1, 95: [1, 190] }), o($Vc1, $Vd1, { 93: 192, 17: $Ve1 }), o($Vc1, [2, 106]), { 12: [1, 193] }, o($VF, [2, 91]), o($Vc1, [2, 93]), { 2: [1, 195], 12: $VG, 89: 123, 90: 194, 91: 124, 92: $VC, 94: $VD, 95: $VE, 96: 116, 97: $VH, 99: $VI, 100: $VJ, 101: $VK, 102: $VL, 103: $VM, 104: $VN, 105: $VO, 106: $VP, 107: $VQ, 108: $VR, 109: $VS, 110: $VT, 111: $Vu, 112: $Vv, 137: $Vw, 138: $Vx }, o($Vc1, [2, 95]), o($Vc1, [2, 97], { 17: [1, 196] }), o($Vc1, [2, 99]), o($Vc1, [2, 100]), { 11: [1, 197] }, { 11: [1, 198] }, { 11: [1, 199] }, { 11: [1, 200] }, { 11: [1, 201] }, { 11: [1, 202] }, { 11: [1, 203] }, { 11: [1, 204] }, { 11: [1, 205] }, { 11: [1, 206] }, { 11: [1, 207] }, { 11: [1, 208] }, { 11: [1, 209] }, { 15: $Vi, 38: $Vj, 59: 210, 71: 65 }, o($Vf1, [2, 167]), { 15: $Vi, 38: $Vj, 59: 211, 71: 65 }, o($Vf1, [2, 168]), { 26: $Vi, 38: $Vj, 59: 212, 71: 65 }, { 46: [1, 213] }, { 15: $Vi, 38: $Vj, 59: 214, 71: 65 }, o($Vf1, [2, 170]), { 15: $Vi, 38: $Vj, 59: 215, 71: 65 }, o($Vf1, [2, 171]), { 15: $Vi, 38: $Vj, 59: 216, 71: 65 }, o($Vf1, [2, 172]), o($Vk, $Vg1, { 38: [1, 217] }), { 73: [1, 218] }, o($Vb1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 219, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vb1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 220, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vb1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 221, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vb1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 222, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vb1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 223, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vb1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 224, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vb1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 225, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vb1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 226, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vb1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 227, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vb1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 228, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vb1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 229, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vb1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 230, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vb1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 231, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vb1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 232, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vb1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 233, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vb1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 234, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vb1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 235, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vb1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 236, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vb1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 237, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vb1, [2, 155]), o($Vb1, [2, 156]), o($Vb1, [2, 158]), { 15: [1, 238], 44: $VU, 94: $VV, 115: $VW, 116: $VX, 117: $VY, 118: $VZ, 119: $V_, 120: $V$, 121: $V01, 122: $V11, 123: $V21, 124: $V31, 125: $V41, 126: $V51, 127: $V61, 128: $V71, 129: $V81, 130: $V91, 131: $Va1 }, { 28: $Vh1, 38: $Vj, 68: 239, 69: 240, 71: 242 }, { 14: 243, 15: [2, 12], 25: 244, 27: 245, 28: $Vi1 }, o($Vf, [2, 28], { 44: $VU, 94: $VV, 115: $VW, 116: $VX, 117: $VY, 118: $VZ, 119: $V_, 120: $V$, 121: $V01, 122: $V11, 123: $V21, 124: $V31, 125: $V41, 126: $V51, 127: $V61, 128: $V71, 129: $V81, 130: $V91, 131: $Va1 }), o($Vb1, $Vg1), o($Vf, [2, 30]), { 46: [1, 247], 48: 248 }, o($Vf, [2, 33]), o($Vj1, $Vk1, { 47: [1, 249] }), { 15: [1, 250], 26: $Vl1 }, o($VA, $Vi, { 71: 65, 87: 109, 89: 111, 59: 112, 96: 116, 45: 252, 12: $VB, 38: $Vj, 92: $VC, 94: $VD, 95: $VE, 111: $Vu, 112: $Vv, 137: $Vw, 138: $Vx }), o($VA, [2, 88]), o($VA, [2, 89]), o($Vc1, $Vd1, { 93: 253, 17: $Ve1 }), o($Vc1, $Vd1, { 93: 254, 17: $Ve1 }), o($Vc1, [2, 103]), o($Vc1, $Vd1, { 93: 255, 17: $Ve1 }), o($Vm1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 256, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), o($Vc1, [2, 105]), { 53: [1, 257] }, o($Vc1, [2, 94]), o($Vc1, [2, 96]), o($Vm1, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 258, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), { 11: [1, 259] }, { 11: [1, 260] }, { 11: [1, 261] }, { 11: [1, 262] }, { 11: [1, 263] }, { 11: [1, 264] }, { 11: [1, 265] }, { 11: [1, 266] }, { 11: [1, 267] }, { 11: [1, 268] }, { 11: [1, 269] }, { 11: [1, 270] }, { 11: [1, 271] }, { 15: [1, 272] }, { 15: [1, 273] }, { 26: [1, 274] }, { 26: [1, 275] }, { 15: [1, 276] }, { 15: [1, 277] }, { 15: [1, 278] }, o($Vk, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 279, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 38: [1, 280], 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), { 13: $Vn1, 28: $Vo1, 30: $V7, 34: $V8, 57: $Vp1, 65: 286, 67: 288, 74: 281, 78: 284, 79: 285, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd }, o($Vb1, [2, 129]), o($Vq1, [2, 130], { 94: $VV, 117: $VY, 125: $V41 }), o($Vq1, [2, 131], { 94: $VV, 117: $VY, 125: $V41 }), o($Vb1, [2, 132]), o($Vr1, [2, 133], { 94: $VV, 115: $VW, 116: $VX, 117: $VY, 125: $V41 }), o($Vr1, [2, 134], { 94: $VV, 115: $VW, 116: $VX, 117: $VY, 125: $V41 }), o($Vr1, [2, 135], { 94: $VV, 115: $VW, 116: $VX, 117: $VY, 125: $V41 }), o($Vr1, [2, 136], { 94: $VV, 115: $VW, 116: $VX, 117: $VY, 125: $V41 }), o($Vr1, [2, 137], { 94: $VV, 115: $VW, 116: $VX, 117: $VY, 125: $V41 }), o($Vr1, [2, 138], { 94: $VV, 115: $VW, 116: $VX, 117: $VY, 125: $V41 }), o([15, 19, 37, 40, 43, 50, 64, 123], [2, 139], { 44: $VU, 94: $VV, 115: $VW, 116: $VX, 117: $VY, 118: $VZ, 119: $V_, 120: $V$, 121: $V01, 122: $V11, 124: $V31, 125: $V41, 126: $V51, 127: $V61, 128: $V71, 129: $V81, 130: $V91, 131: $Va1 }), o([15, 19, 37, 40, 43, 50, 64, 123, 124], [2, 140], { 44: $VU, 94: $VV, 115: $VW, 116: $VX, 117: $VY, 118: $VZ, 119: $V_, 120: $V$, 121: $V01, 122: $V11, 125: $V41, 126: $V51, 127: $V61, 128: $V71, 129: $V81, 130: $V91, 131: $Va1 }), o($Vb1, [2, 141]), o($Vr1, [2, 142], { 94: $VV, 115: $VW, 116: $VX, 117: $VY, 125: $V41 }), o($Vr1, [2, 143], { 94: $VV, 115: $VW, 116: $VX, 117: $VY, 125: $V41 }), o($Vr1, [2, 144], { 94: $VV, 115: $VW, 116: $VX, 117: $VY, 125: $V41 }), o($Vr1, [2, 145], { 94: $VV, 115: $VW, 116: $VX, 117: $VY, 125: $V41 }), o($Vr1, [2, 146], { 94: $VV, 115: $VW, 116: $VX, 117: $VY, 125: $V41 }), o($Vr1, [2, 147], { 94: $VV, 115: $VW, 116: $VX, 117: $VY, 125: $V41 }), o($Vb1, [2, 148]), { 15: [1, 289], 26: [1, 290] }, o($Vj1, [2, 60]), { 70: [1, 291] }, o($Vj1, [2, 62]), { 15: [1, 292] }, { 15: [2, 11], 26: [1, 293] }, o($Vj1, [2, 14]), { 12: [1, 294] }, o($Vj1, $Vk1, { 47: [1, 295] }), { 15: [1, 296], 26: $Vl1 }, { 46: [1, 297] }, o($Vg, [2, 39]), { 46: [1, 298] }, o($Vg, [2, 86]), o($Vc1, [2, 101]), o($Vc1, [2, 102]), o($Vc1, [2, 104]), { 19: [1, 299], 44: $VU, 94: $VV, 115: $VW, 116: $VX, 117: $VY, 118: $VZ, 119: $V_, 120: $V$, 121: $V01, 122: $V11, 123: $V21, 124: $V31, 125: $V41, 126: $V51, 127: $V61, 128: $V71, 129: $V81, 130: $V91, 131: $Va1 }, o($VA, $Vi, { 71: 65, 87: 109, 89: 111, 59: 112, 96: 116, 45: 300, 12: $VB, 38: $Vj, 92: $VC, 94: $VD, 95: $VE, 111: $Vu, 112: $Vv, 137: $Vw, 138: $Vx }), { 19: [1, 301], 44: $VU, 94: $VV, 115: $VW, 116: $VX, 117: $VY, 118: $VZ, 119: $V_, 120: $V$, 121: $V01, 122: $V11, 123: $V21, 124: $V31, 125: $V41, 126: $V51, 127: $V61, 128: $V71, 129: $V81, 130: $V91, 131: $Va1 }, { 12: $Vs1, 94: $Vt1, 98: 302, 111: $Vu1, 112: $Vv1 }, { 12: $Vs1, 94: $Vt1, 98: 307, 111: $Vu1, 112: $Vv1 }, { 12: $Vs1, 94: $Vt1, 98: 308, 111: $Vu1, 112: $Vv1 }, { 12: $Vs1, 94: $Vt1, 98: 309, 111: $Vu1, 112: $Vv1 }, { 12: $Vs1, 94: $Vt1, 98: 310, 111: $Vu1, 112: $Vv1 }, { 12: $Vs1, 94: $Vt1, 98: 311, 111: $Vu1, 112: $Vv1 }, { 12: $Vs1, 94: $Vt1, 98: 312, 111: $Vu1, 112: $Vv1 }, { 12: $Vs1, 94: $Vt1, 98: 313, 111: $Vu1, 112: $Vv1 }, { 12: $Vs1, 94: $Vt1, 98: 314, 111: $Vu1, 112: $Vv1 }, { 12: $Vs1, 94: $Vt1, 98: 315, 111: $Vu1, 112: $Vv1 }, { 12: $Vs1, 94: $Vt1, 98: 316, 111: $Vu1, 112: $Vv1 }, { 12: $Vs1, 94: $Vt1, 98: 317, 111: $Vu1, 112: $Vv1 }, { 12: $Vs1, 94: $Vt1, 98: 318, 111: $Vu1, 112: $Vv1 }, o($Vf1, [2, 161]), o($Vf1, [2, 162]), { 46: [1, 319] }, { 46: [1, 320] }, o($Vf1, [2, 164]), o($Vf1, [2, 165]), o($Vf1, [2, 166]), { 15: [1, 321], 44: $VU, 94: $VV, 115: $VW, 116: $VX, 117: $VY, 118: $VZ, 119: $V_, 120: $V$, 121: $V01, 122: $V11, 123: $V21, 124: $V31, 125: $V41, 126: $V51, 127: $V61, 128: $V71, 129: $V81, 130: $V91, 131: $Va1 }, o($Vk, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 322, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), { 75: 323, 76: $Vw1 }, { 13: $Vn1, 15: [1, 325], 28: $Vo1, 30: $V7, 34: $V8, 57: $Vp1, 65: 286, 67: 288, 74: 324, 78: 284, 79: 285, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd }, { 13: $Vn1, 28: $Vo1, 30: $V7, 34: $V8, 57: $Vp1, 65: 286, 67: 288, 74: 326, 78: 284, 79: 285, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd }, o($Vx1, [2, 71]), o($Vx1, [2, 73]), o($Vx1, [2, 74]), { 12: [1, 327] }, o($Vx1, [2, 76]), o($Vx1, [2, 58]), { 28: $Vh1, 38: $Vj, 69: 328, 71: 242 }, o($Vj1, [2, 61]), { 16: 329, 17: [2, 10], 23: [1, 330] }, { 27: 331, 28: $Vi1 }, { 23: [1, 332] }, { 46: [1, 333] }, o($Vf, [2, 32]), { 15: [1, 334] }, o($Vj1, [2, 51]), o($Vc1, [2, 124]), o($Vg, [2, 40]), o($Vc1, [2, 98]), o($Vc1, [2, 107]), o($Vc1, $Vd1, { 93: 335, 17: $Ve1 }), o($Vc1, $Vd1, { 93: 336, 17: $Ve1 }), o($Vc1, $Vd1, { 93: 337, 17: $Ve1 }), o($Vc1, $Vd1, { 93: 338, 17: $Ve1 }), o($Vc1, [2, 108]), o($Vc1, [2, 109]), o($Vc1, [2, 110]), o($Vc1, [2, 111]), o($Vc1, [2, 112]), o($Vc1, [2, 113]), o($Vc1, [2, 114]), o($Vc1, [2, 115]), o($Vc1, [2, 116]), o($Vc1, [2, 117]), o($Vc1, [2, 118]), o($Vc1, [2, 119]), { 26: [1, 339] }, { 15: [1, 340] }, { 73: [1, 341] }, { 15: [1, 342], 44: $VU, 94: $VV, 115: $VW, 116: $VX, 117: $VY, 118: $VZ, 119: $V_, 120: $V$, 121: $V01, 122: $V11, 123: $V21, 124: $V31, 125: $V41, 126: $V51, 127: $V61, 128: $V71, 129: $V81, 130: $V91, 131: $Va1 }, { 76: [1, 343], 77: 344 }, { 15: [1, 345] }, o($Vx1, [2, 72]), { 58: [1, 346] }, o($Vx1, $Vi, { 71: 65, 59: 347, 38: $Vj }), o($Vj1, [2, 59]), { 17: [1, 348] }, { 12: [1, 349] }, o($Vj1, [2, 13]), { 24: 350, 29: $Vy1, 30: $Vz1, 31: $VA1, 32: $VB1, 33: $VC1 }, { 15: [1, 356] }, o($Vg, [2, 38]), o($Vc1, [2, 120]), o($Vc1, [2, 121]), o($Vc1, [2, 122]), o($Vc1, [2, 123]), { 46: [1, 357] }, o($Vf1, [2, 169]), { 13: $Vn1, 28: $Vo1, 30: $V7, 34: $V8, 57: $Vp1, 65: 286, 67: 288, 74: 358, 78: 284, 79: 285, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd }, { 73: [1, 359] }, { 13: $Vn1, 28: $Vo1, 30: $V7, 34: $V8, 57: $Vp1, 65: 286, 67: 288, 72: $VD1, 74: 360, 78: 284, 79: 285, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd }, { 76: [2, 66] }, o($Vx1, [2, 69]), o($Vx1, [2, 70]), o($Vx1, [2, 75]), { 18: 362, 20: 363, 21: 364, 22: 365, 37: $V0, 40: $V1, 43: $V2, 50: $V3, 64: $V4 }, { 11: [1, 366] }, o($Vj1, [2, 15]), o($VE1, [2, 16]), o($VE1, [2, 17]), o($VE1, [2, 18]), o($VE1, [2, 19]), o($VE1, [2, 20]), o($Vf, [2, 31]), { 15: [1, 367] }, { 75: 368, 76: $Vw1 }, { 13: $Vn1, 28: $Vo1, 30: $V7, 34: $V8, 57: $Vp1, 65: 286, 67: 288, 74: 369, 78: 284, 79: 285, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd }, o($Vh, [2, 65]), { 13: [1, 370] }, { 19: [1, 371], 20: 372, 21: 364, 22: 365, 37: $V0, 40: $V1, 43: $V2, 50: $V3, 64: $V4 }, o($Vf, [2, 6]), o($Vf, [2, 7]), o($Vf, [2, 8]), { 24: 373, 29: $Vy1, 30: $Vz1, 31: $VA1, 32: $VB1, 33: $VC1 }, o($Vf1, [2, 163]), { 76: [1, 374], 77: 344 }, { 75: 375, 76: $Vw1 }, { 28: [1, 376] }, { 5: [2, 4] }, o($Vf, [2, 5]), { 17: [2, 9] }, { 13: $Vn1, 28: $Vo1, 30: $V7, 34: $V8, 57: $Vp1, 65: 286, 67: 288, 72: $VD1, 74: 377, 78: 284, 79: 285, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd }, { 76: [1, 378], 77: 344 }, { 12: [1, 379] }, o($Vh, [2, 63]), { 13: $Vn1, 28: $Vo1, 30: $V7, 34: $V8, 57: $Vp1, 65: 286, 67: 288, 72: $VD1, 74: 380, 78: 284, 79: 285, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd }, { 38: [1, 381] }, o($Vh, [2, 64]), o($Vk, $Vl, { 113: 82, 114: 83, 49: 84, 96: 88, 65: 89, 39: 382, 12: $Vm, 13: $Vn, 28: $Vz, 30: $V7, 46: $Vo, 63: $Vp, 84: $Vq, 85: $Vr, 92: $Vs, 95: $Vt, 111: $Vu, 112: $Vv, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd, 137: $Vw, 138: $Vx }), { 15: [1, 383], 44: $VU, 94: $VV, 115: $VW, 116: $VX, 117: $VY, 118: $VZ, 119: $V_, 120: $V$, 121: $V01, 122: $V11, 123: $V21, 124: $V31, 125: $V41, 126: $V51, 127: $V61, 128: $V71, 129: $V81, 130: $V91, 131: $Va1 }, { 73: [1, 384] }, { 13: $Vn1, 28: $Vo1, 30: $V7, 34: $V8, 57: $Vp1, 65: 286, 67: 288, 74: 385, 78: 284, 79: 285, 132: $V9, 133: $Va, 134: $Vb, 135: $Vc, 136: $Vd }, { 76: [2, 68] }],\r\n        defaultActions: { 3: [2, 2], 4: [2, 3], 13: [2, 1], 14: [2, 22], 38: [2, 21], 344: [2, 66], 371: [2, 4], 373: [2, 9], 385: [2, 68] },\r\n        parseError: function parseError(str, hash) {\r\n            if (hash.recoverable) {\r\n                this.trace(str);\r\n            }\r\n            else {\r\n                var error = new Error(str);\r\n                error.hash = hash;\r\n                throw error;\r\n            }\r\n        },\r\n        parse: function parse(input) {\r\n            var self = this, stack = [0], tstack = [], // token stack\r\n            vstack = [null], // semantic value stack\r\n            lstack = [], // location stack\r\n            table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n            var args = lstack.slice.call(arguments, 1);\r\n            //this.reductionCount = this.shiftCount = 0;\r\n            var lexer = Object.create(this.lexer);\r\n            var sharedState = { yy: {} };\r\n            // copy state\r\n            for (var k in this.yy) {\r\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n                    sharedState.yy[k] = this.yy[k];\r\n                }\r\n            }\r\n            lexer.setInput(input, sharedState.yy);\r\n            sharedState.yy.lexer = lexer;\r\n            sharedState.yy.parser = this;\r\n            if (typeof lexer.yylloc == 'undefined') {\r\n                lexer.yylloc = {};\r\n            }\r\n            var yyloc = lexer.yylloc;\r\n            lstack.push(yyloc);\r\n            var ranges = lexer.options && lexer.options.ranges;\r\n            if (typeof sharedState.yy.parseError === 'function') {\r\n                this.parseError = sharedState.yy.parseError;\r\n            }\r\n            else {\r\n                this.parseError = Object.getPrototypeOf(this).parseError;\r\n            }\r\n            function popStack(n) {\r\n                stack.length = stack.length - 2 * n;\r\n                vstack.length = vstack.length - n;\r\n                lstack.length = lstack.length - n;\r\n            }\r\n            _token_stack: var lex = function () {\r\n                var token;\r\n                token = lexer.lex() || EOF;\r\n                // if token isn't its numeric value, convert\r\n                if (typeof token !== 'number') {\r\n                    token = self.symbols_[token] || token;\r\n                }\r\n                return token;\r\n            };\r\n            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n            while (true) {\r\n                // retreive state number from top of stack\r\n                state = stack[stack.length - 1];\r\n                // use default actions if available\r\n                if (this.defaultActions[state]) {\r\n                    action = this.defaultActions[state];\r\n                }\r\n                else {\r\n                    if (symbol === null || typeof symbol == 'undefined') {\r\n                        symbol = lex();\r\n                    }\r\n                    // read action for current state and first input\r\n                    action = table[state] && table[state][symbol];\r\n                }\r\n                _handle_error: \r\n                // handle parse error\r\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                    var error_rule_depth;\r\n                    var errStr = '';\r\n                    // Return the rule stack depth where the nearest error rule can be found.\r\n                    // Return FALSE when no error recovery rule was found.\r\n                    function locateNearestErrorRecoveryRule(state) {\r\n                        var stack_probe = stack.length - 1;\r\n                        var depth = 0;\r\n                        // try to recover from error\r\n                        for (;;) {\r\n                            // check for error recovery rule in this state\r\n                            if ((TERROR.toString()) in table[state]) {\r\n                                return depth;\r\n                            }\r\n                            if (state === 0 || stack_probe < 2) {\r\n                                return false; // No suitable error recovery rule available.\r\n                            }\r\n                            stack_probe -= 2; // popStack(1): [symbol, action]\r\n                            state = stack[stack_probe];\r\n                            ++depth;\r\n                        }\r\n                    }\r\n                    if (!recovering) {\r\n                        // first see if there's any chance at hitting an error recovery rule:\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                        // Report error\r\n                        expected = [];\r\n                        for (p in table[state]) {\r\n                            if (this.terminals_[p] && p > TERROR) {\r\n                                expected.push(\"'\" + this.terminals_[p] + \"'\");\r\n                            }\r\n                        }\r\n                        if (lexer.showPosition) {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \":\\n\" + lexer.showPosition() + \"\\nExpecting \" + expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\r\n                        }\r\n                        else {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \": Unexpected \" +\r\n                                (symbol == EOF ? \"end of input\" :\r\n                                    (\"'\" + (this.terminals_[symbol] || symbol) + \"'\"));\r\n                        }\r\n                        this.parseError(errStr, {\r\n                            text: lexer.match,\r\n                            token: this.terminals_[symbol] || symbol,\r\n                            line: lexer.yylineno,\r\n                            loc: yyloc,\r\n                            expected: expected,\r\n                            recoverable: (error_rule_depth !== false)\r\n                        });\r\n                    }\r\n                    else if (preErrorSymbol !== EOF) {\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                    }\r\n                    // just recovered from another error\r\n                    if (recovering == 3) {\r\n                        if (symbol === EOF || preErrorSymbol === EOF) {\r\n                            throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                        }\r\n                        // discard current lookahead and grab another\r\n                        yyleng = lexer.yyleng;\r\n                        yytext = lexer.yytext;\r\n                        yylineno = lexer.yylineno;\r\n                        yyloc = lexer.yylloc;\r\n                        symbol = lex();\r\n                    }\r\n                    // try to recover from error\r\n                    if (error_rule_depth === false) {\r\n                        throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n                    }\r\n                    popStack(error_rule_depth);\r\n                    preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n                    symbol = TERROR; // insert generic error symbol as new lookahead\r\n                    state = stack[stack.length - 1];\r\n                    action = table[state] && table[state][TERROR];\r\n                    recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n                }\r\n                // this shouldn't happen, unless resolve defaults are off\r\n                if (action[0] instanceof Array && action.length > 1) {\r\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n                }\r\n                switch (action[0]) {\r\n                    case 1: // shift\r\n                        //this.shiftCount++;\r\n                        stack.push(symbol);\r\n                        vstack.push(lexer.yytext);\r\n                        lstack.push(lexer.yylloc);\r\n                        stack.push(action[1]); // push state\r\n                        symbol = null;\r\n                        if (!preErrorSymbol) { // normal execution/no error\r\n                            yyleng = lexer.yyleng;\r\n                            yytext = lexer.yytext;\r\n                            yylineno = lexer.yylineno;\r\n                            yyloc = lexer.yylloc;\r\n                            if (recovering > 0) {\r\n                                recovering--;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // error just occurred, resume old lookahead f/ before error\r\n                            symbol = preErrorSymbol;\r\n                            preErrorSymbol = null;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        // reduce\r\n                        //this.reductionCount++;\r\n                        len = this.productions_[action[1]][1];\r\n                        // perform semantic action\r\n                        yyval.$ = vstack[vstack.length - len]; // default to $$ = $1\r\n                        // default location, uses first token for firsts, last for lasts\r\n                        yyval._$ = {\r\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                            last_line: lstack[lstack.length - 1].last_line,\r\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                            last_column: lstack[lstack.length - 1].last_column\r\n                        };\r\n                        if (ranges) {\r\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\r\n                        }\r\n                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n                        if (typeof r !== 'undefined') {\r\n                            return r;\r\n                        }\r\n                        // pop off stack\r\n                        if (len) {\r\n                            stack = stack.slice(0, -1 * len * 2);\r\n                            vstack = vstack.slice(0, -1 * len);\r\n                            lstack = lstack.slice(0, -1 * len);\r\n                        }\r\n                        stack.push(this.productions_[action[1]][0]); // push nonterminal (reduce)\r\n                        vstack.push(yyval.$);\r\n                        lstack.push(yyval._$);\r\n                        // goto new state = table[STATE][NONTERMINAL]\r\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n                        stack.push(newState);\r\n                        break;\r\n                    case 3:\r\n                        // accept\r\n                        return true;\r\n                }\r\n            }\r\n            return true;\r\n        } };\r\n    //const Nodo = require(\"./AST/nodo_arbol\");\r\n    //var raiz;\r\n    const { Primitiva } = require(\"../Expresiones/Primitiva\");\r\n    const { Operacion } = require(\"../Expresiones/Operacion\");\r\n    const { Consulta } = require(\"../XPath/Consulta\");\r\n    const { Nodo } = require(\"../XPath/Nodo\");\r\n    const { Predicate } = require(\"../XPath/Predicate\");\r\n    const { TipoPrim } = require(\"../Expresiones/Primitiva\");\r\n    const { TipoOperacion } = require(\"../Expresiones/Operacion\");\r\n    const { TipoNodo } = require(\"../XPath/Nodo\");\r\n    const { TipoAxis } = require(\"../XPath/Nodo\");\r\n    const errores = require('../Global/ListaError');\r\n    //IMPORTS XQUERY\r\n    const { Flwor } = require(\"../XQuery/Flwor\");\r\n    const { Return } = require(\"../XQuery/Return\");\r\n    const { TipoReturn } = require(\"../XQuery/Return\");\r\n    const { Where } = require(\"../XQuery/Where\");\r\n    const { For } = require(\"../XQuery/For\");\r\n    const { Let } = require(\"../XQuery/Let\");\r\n    const { OrderBy } = require(\"../XQuery/OrderBy\");\r\n    const { TipoFor } = require(\"../XQuery/DeclaracionFor\");\r\n    const { DeclaracionFor } = require(\"../XQuery/DeclaracionFor\");\r\n    const { Sort } = require(\"../XQuery/Sort\");\r\n    const { CondicionIf } = require(\"../XQuery/CondicionIf\");\r\n    const { FuncionXQuery } = require(\"../XQuery/FuncionXQuery\");\r\n    const { Html } = require(\"../XQuery/Html\");\r\n    const { IfThenElse } = require(\"../XQuery/IfThenElse\");\r\n    const { ElseIf } = require(\"../XQuery/ElseIf\");\r\n    const { VarCall } = require(\"../XQuery/VarCall\");\r\n    const { TipoFuncionXQ } = require(\"../XQuery/FuncionXQuery\");\r\n    const { Atributo } = require(\"../XML/Atributo\");\r\n    /* generated by jison-lex 0.3.4 */\r\n    var lexer = (function () {\r\n        var lexer = ({\r\n            EOF: 1,\r\n            parseError: function parseError(str, hash) {\r\n                if (this.yy.parser) {\r\n                    this.yy.parser.parseError(str, hash);\r\n                }\r\n                else {\r\n                    throw new Error(str);\r\n                }\r\n            },\r\n            // resets the lexer, sets new input\r\n            setInput: function (input, yy) {\r\n                this.yy = yy || this.yy || {};\r\n                this._input = input;\r\n                this._more = this._backtrack = this.done = false;\r\n                this.yylineno = this.yyleng = 0;\r\n                this.yytext = this.matched = this.match = '';\r\n                this.conditionStack = ['INITIAL'];\r\n                this.yylloc = {\r\n                    first_line: 1,\r\n                    first_column: 0,\r\n                    last_line: 1,\r\n                    last_column: 0\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [0, 0];\r\n                }\r\n                this.offset = 0;\r\n                return this;\r\n            },\r\n            // consumes and returns one char from the input\r\n            input: function () {\r\n                var ch = this._input[0];\r\n                this.yytext += ch;\r\n                this.yyleng++;\r\n                this.offset++;\r\n                this.match += ch;\r\n                this.matched += ch;\r\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno++;\r\n                    this.yylloc.last_line++;\r\n                }\r\n                else {\r\n                    this.yylloc.last_column++;\r\n                }\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range[1]++;\r\n                }\r\n                this._input = this._input.slice(1);\r\n                return ch;\r\n            },\r\n            // unshifts one char (or a string) into the input\r\n            unput: function (ch) {\r\n                var len = ch.length;\r\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n                this._input = ch + this._input;\r\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n                //this.yyleng -= len;\r\n                this.offset -= len;\r\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n                this.match = this.match.substr(0, this.match.length - 1);\r\n                this.matched = this.matched.substr(0, this.matched.length - 1);\r\n                if (lines.length - 1) {\r\n                    this.yylineno -= lines.length - 1;\r\n                }\r\n                var r = this.yylloc.range;\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: lines ?\r\n                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                            + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n                        this.yylloc.first_column - len\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n                }\r\n                this.yyleng = this.yytext.length;\r\n                return this;\r\n            },\r\n            // When called from action, caches matched text and appends it on next action\r\n            more: function () {\r\n                this._more = true;\r\n                return this;\r\n            },\r\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n            reject: function () {\r\n                if (this.options.backtrack_lexer) {\r\n                    this._backtrack = true;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n                return this;\r\n            },\r\n            // retain first n characters of the match\r\n            less: function (n) {\r\n                this.unput(this.match.slice(n));\r\n            },\r\n            // displays already matched input, i.e. for error messages\r\n            pastInput: function () {\r\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\r\n            },\r\n            // displays upcoming input, i.e. for error messages\r\n            upcomingInput: function () {\r\n                var next = this.match;\r\n                if (next.length < 20) {\r\n                    next += this._input.substr(0, 20 - next.length);\r\n                }\r\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n            },\r\n            // displays the character position where the lexing error occurred, i.e. for error messages\r\n            showPosition: function () {\r\n                var pre = this.pastInput();\r\n                var c = new Array(pre.length + 1).join(\"-\");\r\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n            },\r\n            // test the lexed token: return FALSE when not a match, otherwise return token\r\n            test_match: function (match, indexed_rule) {\r\n                var token, lines, backup;\r\n                if (this.options.backtrack_lexer) {\r\n                    // save context\r\n                    backup = {\r\n                        yylineno: this.yylineno,\r\n                        yylloc: {\r\n                            first_line: this.yylloc.first_line,\r\n                            last_line: this.last_line,\r\n                            first_column: this.yylloc.first_column,\r\n                            last_column: this.yylloc.last_column\r\n                        },\r\n                        yytext: this.yytext,\r\n                        match: this.match,\r\n                        matches: this.matches,\r\n                        matched: this.matched,\r\n                        yyleng: this.yyleng,\r\n                        offset: this.offset,\r\n                        _more: this._more,\r\n                        _input: this._input,\r\n                        yy: this.yy,\r\n                        conditionStack: this.conditionStack.slice(0),\r\n                        done: this.done\r\n                    };\r\n                    if (this.options.ranges) {\r\n                        backup.yylloc.range = this.yylloc.range.slice(0);\r\n                    }\r\n                }\r\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno += lines.length;\r\n                }\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.last_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.last_column,\r\n                    last_column: lines ?\r\n                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                        this.yylloc.last_column + match[0].length\r\n                };\r\n                this.yytext += match[0];\r\n                this.match += match[0];\r\n                this.matches = match;\r\n                this.yyleng = this.yytext.length;\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n                }\r\n                this._more = false;\r\n                this._backtrack = false;\r\n                this._input = this._input.slice(match[0].length);\r\n                this.matched += match[0];\r\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n                if (this.done && this._input) {\r\n                    this.done = false;\r\n                }\r\n                if (token) {\r\n                    return token;\r\n                }\r\n                else if (this._backtrack) {\r\n                    // recover context\r\n                    for (var k in backup) {\r\n                        this[k] = backup[k];\r\n                    }\r\n                    return false; // rule action called reject() implying the next rule should be tested instead.\r\n                }\r\n                return false;\r\n            },\r\n            // return next match in input\r\n            next: function () {\r\n                if (this.done) {\r\n                    return this.EOF;\r\n                }\r\n                if (!this._input) {\r\n                    this.done = true;\r\n                }\r\n                var token, match, tempMatch, index;\r\n                if (!this._more) {\r\n                    this.yytext = '';\r\n                    this.match = '';\r\n                }\r\n                var rules = this._currentRules();\r\n                for (var i = 0; i < rules.length; i++) {\r\n                    tempMatch = this._input.match(this.rules[rules[i]]);\r\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                        match = tempMatch;\r\n                        index = i;\r\n                        if (this.options.backtrack_lexer) {\r\n                            token = this.test_match(tempMatch, rules[i]);\r\n                            if (token !== false) {\r\n                                return token;\r\n                            }\r\n                            else if (this._backtrack) {\r\n                                match = false;\r\n                                continue; // rule action called reject() implying a rule MISmatch.\r\n                            }\r\n                            else {\r\n                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else if (!this.options.flex) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (match) {\r\n                    token = this.test_match(match, rules[index]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    }\r\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                    return false;\r\n                }\r\n                if (this._input === \"\") {\r\n                    return this.EOF;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n            },\r\n            // return next match that has a token\r\n            lex: function lex() {\r\n                var r = this.next();\r\n                if (r) {\r\n                    return r;\r\n                }\r\n                else {\r\n                    return this.lex();\r\n                }\r\n            },\r\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n            begin: function begin(condition) {\r\n                this.conditionStack.push(condition);\r\n            },\r\n            // pop the previously active lexer condition state off the condition stack\r\n            popState: function popState() {\r\n                var n = this.conditionStack.length - 1;\r\n                if (n > 0) {\r\n                    return this.conditionStack.pop();\r\n                }\r\n                else {\r\n                    return this.conditionStack[0];\r\n                }\r\n            },\r\n            // produce the lexer rule set which is active for the currently active lexer condition state\r\n            _currentRules: function _currentRules() {\r\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n                }\r\n                else {\r\n                    return this.conditions[\"INITIAL\"].rules;\r\n                }\r\n            },\r\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n            topState: function topState(n) {\r\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n                if (n >= 0) {\r\n                    return this.conditionStack[n];\r\n                }\r\n                else {\r\n                    return \"INITIAL\";\r\n                }\r\n            },\r\n            // alias for begin(condition)\r\n            pushState: function pushState(condition) {\r\n                this.begin(condition);\r\n            },\r\n            // return the number of states currently on the stack\r\n            stateStackSize: function stateStackSize() {\r\n                return this.conditionStack.length;\r\n            },\r\n            options: { \"case-insensitive\": true },\r\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n                var YYSTATE = YY_START;\r\n                switch ($avoiding_name_collisions) {\r\n                    case 0: /* skip whitespace */\r\n                        break;\r\n                    case 1:\r\n                        this.begin('comment');\r\n                        break;\r\n                    case 2:\r\n                        this.popState();\r\n                        break;\r\n                    case 3: /* skip comment content*/\r\n                        break;\r\n                    case 4:\r\n                        return 28;\r\n                        break;\r\n                    case 5:\r\n                        return 44;\r\n                        break;\r\n                    case 6:\r\n                        return 38;\r\n                        break;\r\n                    case 7:\r\n                        return \"dot\";\r\n                        break;\r\n                    case 8:\r\n                        return \"attr\";\r\n                        break;\r\n                    case 9:\r\n                        return \"corA\";\r\n                        break;\r\n                    case 10:\r\n                        return \"corC\";\r\n                        break;\r\n                    case 11:\r\n                        return \"andSelect\";\r\n                        break;\r\n                    case 12:\r\n                        return \"dospuntos\";\r\n                        break;\r\n                    case 13:\r\n                        return \"parA\";\r\n                        break;\r\n                    case 14:\r\n                        return \"parC\";\r\n                        break;\r\n                    case 15:\r\n                        return \"llaveA\";\r\n                        break;\r\n                    case 16:\r\n                        return \"llaveC\";\r\n                        break;\r\n                    case 17:\r\n                        return \"coma\";\r\n                        break;\r\n                    case 18:\r\n                        return 94;\r\n                        break;\r\n                    case 19:\r\n                        return \"mas\";\r\n                        break;\r\n                    case 20:\r\n                        return \"menos\";\r\n                        break;\r\n                    case 21:\r\n                        return \"div\";\r\n                        break;\r\n                    case 22:\r\n                        return 118;\r\n                        break;\r\n                    case 23:\r\n                        return \"gte\";\r\n                        break;\r\n                    case 24:\r\n                        return 119;\r\n                        break;\r\n                    case 25:\r\n                        return 121;\r\n                        break;\r\n                    case 26:\r\n                        return \"nequal\";\r\n                        break;\r\n                    case 27:\r\n                        return \"or\";\r\n                        break;\r\n                    case 28:\r\n                        return \"and\";\r\n                        break;\r\n                    case 29:\r\n                        return \"mod\";\r\n                        break;\r\n                    case 30:\r\n                        return \"for\";\r\n                        break;\r\n                    case 31:\r\n                        return \"in\";\r\n                        break;\r\n                    case 32:\r\n                        return \"to\";\r\n                        break;\r\n                    case 33:\r\n                        return \"at\";\r\n                        break;\r\n                    case 34:\r\n                        return \"let\";\r\n                        break;\r\n                    case 35:\r\n                        return \"where\";\r\n                        break;\r\n                    case 36:\r\n                        return \"order\";\r\n                        break;\r\n                    case 37:\r\n                        return \"by\";\r\n                        break;\r\n                    case 38:\r\n                        return \"return\";\r\n                        break;\r\n                    case 39:\r\n                        return \"if\";\r\n                        break;\r\n                    case 40:\r\n                        return \"else\";\r\n                        break;\r\n                    case 41:\r\n                        return \"then\";\r\n                        break;\r\n                    case 42:\r\n                        return \"reserv_eq\";\r\n                        break;\r\n                    case 43:\r\n                        return \"reserv_gt\";\r\n                        break;\r\n                    case 44:\r\n                        return \"reserv_ge\";\r\n                        break;\r\n                    case 45:\r\n                        return \"reserv_ne\";\r\n                        break;\r\n                    case 46:\r\n                        return \"reserv_le\";\r\n                        break;\r\n                    case 47:\r\n                        return \"reserv_lt\";\r\n                        break;\r\n                    case 48:\r\n                        return \"ancestorSelf\";\r\n                        break;\r\n                    case 49:\r\n                        return \"ancestor\";\r\n                        break;\r\n                    case 50:\r\n                        return \"attribute\";\r\n                        break;\r\n                    case 51:\r\n                        return \"child\";\r\n                        break;\r\n                    case 52:\r\n                        return \"descendantSelf\";\r\n                        break;\r\n                    case 53:\r\n                        return \"descendant\";\r\n                        break;\r\n                    case 54:\r\n                        return \"followingSib\";\r\n                        break;\r\n                    case 55:\r\n                        return \"following\";\r\n                        break;\r\n                    case 56:\r\n                        return \"namespace\";\r\n                        break;\r\n                    case 57:\r\n                        return \"parent\";\r\n                        break;\r\n                    case 58:\r\n                        return \"precedSib\";\r\n                        break;\r\n                    case 59:\r\n                        return \"preced\";\r\n                        break;\r\n                    case 60:\r\n                        return \"self\";\r\n                        break;\r\n                    case 61:\r\n                        return \"data\";\r\n                        break;\r\n                    case 62:\r\n                        return \"upper-case\";\r\n                        break;\r\n                    case 63:\r\n                        return \"substring\";\r\n                        break;\r\n                    case 64:\r\n                        return \"lower-case\";\r\n                        break;\r\n                    case 65:\r\n                        return \"number\";\r\n                        break;\r\n                    case 66:\r\n                        return \"declare\";\r\n                        break;\r\n                    case 67:\r\n                        return \"function\";\r\n                        break;\r\n                    case 68:\r\n                        return \"local\";\r\n                        break;\r\n                    case 69:\r\n                        return \"decimal\";\r\n                        break;\r\n                    case 70:\r\n                        return \"string\";\r\n                        break;\r\n                    case 71:\r\n                        return \"boolean\";\r\n                        break;\r\n                    case 72:\r\n                        return \"as\";\r\n                        break;\r\n                    case 73:\r\n                        return \"xs\";\r\n                        break;\r\n                    case 74:\r\n                        return \"lastFunc\";\r\n                        break;\r\n                    case 75:\r\n                        return \"positionFunc\";\r\n                        break;\r\n                    case 76:\r\n                        return \"nodeFunc\";\r\n                        break;\r\n                    case 77:\r\n                        return \"textFunc\";\r\n                        break;\r\n                    case 78:\r\n                        return 63;\r\n                        break;\r\n                    case 79:\r\n                        return 46;\r\n                        break;\r\n                    case 80:\r\n                        return 12;\r\n                        break;\r\n                    case 81:\r\n                        return 84;\r\n                        break;\r\n                    case 82:\r\n                        return 85;\r\n                        break;\r\n                    case 83:\r\n                        console.error('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                        break;\r\n                    case 84:\r\n                        return 5;\r\n                        break;\r\n                }\r\n            },\r\n            rules: [/^(?:\\s+)/i, /^(?:\\(:)/i, /^(?::\\))/i, /^(?:.)/i, /^(?:\\$)/i, /^(?:=)/i, /^(?:\\/)/i, /^(?:\\.)/i, /^(?:@)/i, /^(?:\\[)/i, /^(?:\\])/i, /^(?:\\|)/i, /^(?::)/i, /^(?:\\()/i, /^(?:\\))/i, /^(?:\\{)/i, /^(?:\\})/i, /^(?:,)/i, /^(?:\\*)/i, /^(?:\\+)/i, /^(?:-)/i, /^(?:div\\b)/i, /^(?:<=)/i, /^(?:>=)/i, /^(?:<)/i, /^(?:>)/i, /^(?:!=)/i, /^(?:or\\b)/i, /^(?:and\\b)/i, /^(?:mod\\b)/i, /^(?:for\\b)/i, /^(?:in\\b)/i, /^(?:to\\b)/i, /^(?:at\\b)/i, /^(?:let\\b)/i, /^(?:where\\b)/i, /^(?:order\\b)/i, /^(?:by\\b)/i, /^(?:return\\b)/i, /^(?:if\\b)/i, /^(?:else\\b)/i, /^(?:then\\b)/i, /^(?:eq\\b)/i, /^(?:gt\\b)/i, /^(?:ge\\b)/i, /^(?:ne\\b)/i, /^(?:le\\b)/i, /^(?:lt\\b)/i, /^(?:ancestor-or-self\\b)/i, /^(?:ancestor\\b)/i, /^(?:attribute\\b)/i, /^(?:child\\b)/i, /^(?:descendant-or-self\\b)/i, /^(?:descendant\\b)/i, /^(?:following-sibling\\b)/i, /^(?:following\\b)/i, /^(?:namespace\\b)/i, /^(?:parent\\b)/i, /^(?:preceding-sibling\\b)/i, /^(?:preceding\\b)/i, /^(?:self\\b)/i, /^(?:data\\b)/i, /^(?:upper-case\\b)/i, /^(?:substring\\b)/i, /^(?:lower-case\\b)/i, /^(?:number\\b)/i, /^(?:declare\\b)/i, /^(?:function\\b)/i, /^(?:local\\b)/i, /^(?:decimal\\b)/i, /^(?:string\\b)/i, /^(?:boolean\\b)/i, /^(?:as\\b)/i, /^(?:xs\\b)/i, /^(?:last\\(\\))/i, /^(?:position\\(\\))/i, /^(?:node\\(\\))/i, /^(?:text\\(\\))/i, /^(?:(([0-9]+\\.[0-9]*)|(\\.[0-9]+)))/i, /^(?:[0-9]+)/i, /^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ.-]*)/i, /^(?:(\"((\\\\([\\'\\\"\\\\]))|([^\\\"\\\\]+))*\"))/i, /^(?:('((\\\\([\\'\\\"\\\\]))|([^\\'\\\\]))*'))/i, /^(?:.)/i, /^(?:$)/i],\r\n            conditions: { \"comment\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], \"inclusive\": true }, \"INITIAL\": { \"rules\": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], \"inclusive\": true } }\r\n        });\r\n        return lexer;\r\n    })();\r\n    parser.lexer = lexer;\r\n    function Parser() {\r\n        this.yy = {};\r\n    }\r\n    Parser.prototype = parser;\r\n    parser.Parser = Parser;\r\n    return new Parser;\r\n})();\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\n    exports.parser = XQuery_GramaticaAsc;\r\n    exports.Parser = XQuery_GramaticaAsc.Parser;\r\n    exports.parse = function () { return XQuery_GramaticaAsc.parse.apply(XQuery_GramaticaAsc, arguments); };\r\n    exports.main = function commonjsMain(args) {\r\n        if (!args[1]) {\r\n            console.log('Usage: ' + args[0] + ' FILE');\r\n            process.exit(1);\r\n        }\r\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n        return exports.parser.parse(source);\r\n    };\r\n    if (typeof module !== 'undefined' && require.main === module) {\r\n        exports.main(process.argv.slice(1));\r\n    }\r\n}\r\n","\"use strict\";\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XML_GramaticaDesc = (function () {\r\n    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)\r\n        ; return o; }, $V0 = [2, 5], $V1 = [1, 9], $V2 = [1, 13], $V3 = [1, 17], $V4 = [2, 9], $V5 = [1, 16], $V6 = [5, 6], $V7 = [7, 10, 21], $V8 = [2, 7, 10, 14, 21], $V9 = [1, 46], $Va = [2, 21], $Vb = [1, 39], $Vc = [1, 35], $Vd = [1, 36], $Ve = [1, 37], $Vf = [1, 38], $Vg = [1, 40], $Vh = [1, 41], $Vi = [1, 42], $Vj = [1, 43], $Vk = [1, 44], $Vl = [1, 45], $Vm = [2, 6, 8, 14, 25, 26, 27, 28, 29, 30, 31, 32, 33], $Vn = [1, 52];\r\n    var parser = { trace: function trace() { },\r\n        yy: {},\r\n        symbols_: { \"error\": 2, \"START\": 3, \"ENCABEZADO\": 4, \"EOF\": 5, \"lt\": 6, \"interrog\": 7, \"xml\": 8, \"LISTAATRIBUTOS\": 9, \"gt\": 10, \"LISTAELEMENTOS\": 11, \"ELEMENTO\": 12, \"ELEM\": 13, \"identifier\": 14, \"TIPOELEM\": 15, \"ATRIBUTO\": 16, \"asig\": 17, \"TIPOCADENA\": 18, \"cadena\": 19, \"cadena2\": 20, \"diag\": 21, \"TEXTCONTENT\": 22, \"MOREELEMENTS\": 23, \"TEXT\": 24, \"content\": 25, \"DoubleLiteral\": 26, \"IntegerLiteral\": 27, \"apos\": 28, \"less\": 29, \"greater\": 30, \"ampersand\": 31, \"apostrophe\": 32, \"quot\": 33, \"$accept\": 0, \"$end\": 1 },\r\n        terminals_: { 2: \"error\", 5: \"EOF\", 6: \"lt\", 7: \"interrog\", 8: \"xml\", 10: \"gt\", 14: \"identifier\", 17: \"asig\", 19: \"cadena\", 20: \"cadena2\", 21: \"diag\", 25: \"content\", 26: \"DoubleLiteral\", 27: \"IntegerLiteral\", 28: \"apos\", 29: \"less\", 30: \"greater\", 31: \"ampersand\", 32: \"apostrophe\", 33: \"quot\" },\r\n        productions_: [0, [3, 2], [4, 7], [4, 2], [11, 2], [11, 0], [12, 2], [13, 3], [9, 2], [9, 0], [16, 3], [16, 2], [16, 2], [18, 1], [18, 1], [15, 2], [15, 4], [15, 3], [23, 3], [23, 3], [22, 2], [22, 0], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1]],\r\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n            /* this == yyval */\r\n            var $0 = $$.length - 1;\r\n            switch (yystate) {\r\n                case 1:\r\n                    let raiz = new Nodo(cst.cstXmlDesc.getId(), 'START', null, [cst.cstXmlDesc.obtenerUltimoNodo()]);\r\n                    cst.cstXmlDesc.setRaiz(raiz);\r\n                    return $$[$0 - 1];\r\n                    break;\r\n                case 2:\r\n                    $$[$0].unshift(new Objeto($$[$0 - 4], '', _$[$0 - 6].first_line, _$[$0 - 6].first_column, $$[$0 - 3], [], true));\r\n                    this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let listaElem2 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let listAtrs3 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'ENCABEZADO', null, [new Nodo(cst.cstXmlDesc.getId(), 'lt', null, [new Nodo(cst.cstXmlDesc.getId(), '<', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'interrog', null, [new Nodo(cst.cstXmlDesc.getId(), '?', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'xml', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0 - 4].toString(), null, [])]),\r\n                        listAtrs3,\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'interrog', null, [new Nodo(cst.cstXmlDesc.getId(), '?', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'gt', null, [new Nodo(cst.cstXmlDesc.getId(), '>', null, [])]),\r\n                        listaElem2]));\r\n                    break;\r\n                case 3:\r\n                    errores.default.agregarError('sintáctico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'ENCABEZADO', null, [new Nodo(cst.cstXmlDesc.getId(), 'error', null, []),\r\n                        cst.cstXmlDesc.obtenerUltimoNodo()]));\r\n                    break;\r\n                case 4:\r\n                    $$[$0 - 1] = $$[$0 - 1].concat($$[$0]);\r\n                    this.$ = $$[$0 - 1];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let listaElem = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let elem2 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'LISTAELEMENTOS', null, [elem2, listaElem]));\r\n                    break;\r\n                case 5:\r\n                    this.$ = [];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'LISTAELEMENTOS', null, [new Nodo(cst.cstXmlDesc.getId(), 'epsilon', null, [])]));\r\n                    break;\r\n                case 6:\r\n                    this.$ = [$$[$0]];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'ELEMENTO', null, [new Nodo(cst.cstXmlDesc.getId(), 'lt', null, [new Nodo(cst.cstXmlDesc.getId(), '<', null, [])]),\r\n                        cst.cstXmlDesc.obtenerUltimoNodo()]));\r\n                    break;\r\n                case 7:\r\n                    let newObj = null;\r\n                    if ($$[$0] !== null) {\r\n                        if ($$[$0].idCierre === '' && $$[$0].texto === '' && $$[$0].content === null) { /** Etiqueta unica */\r\n                            newObj = new Objeto($$[$0 - 2], '', _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 1], [], true);\r\n                        }\r\n                        else if ($$[$0].idCierre !== '') { /** Etiqueta doble */\r\n                            if ($$[$0 - 2] === $$[$0].idCierre) {\r\n                                //newObj = new Objeto($$[$0-2], $$[$0].texto, _$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], $$[$0].content !=== null?$$[$0].content:[], false);\r\n                                if ($$[$0].content !== null) /** El contenido es mas objetos */\r\n                                    newObj = new Objeto($$[$0 - 2], '', _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 1], $$[$0].content, false);\r\n                                else if ($$[$0].texto !== '') /** El contenido es un texto */\r\n                                    newObj = new Objeto($$[$0 - 2], $$[$0].texto, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 1], [], false);\r\n                                else\r\n                                    newObj = new Objeto($$[$0 - 2], '', _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 1], [], false);\r\n                            }\r\n                            else {\r\n                                console.log('Linea 85: Error semantico: Las etiquetas deben ser iguales');\r\n                                errores.default.agregarError('semantico', 'Las etiquetas deben ser iguales', _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                            }\r\n                        }\r\n                    }\r\n                    this.$ = newObj;\r\n                    /* CONSTRUCCION DE CST */\r\n                    let tElement = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let listAtrs2 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'ELEM', null, [new Nodo(cst.cstXmlDesc.getId(), 'identifier', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0 - 2].toString(), null, [])]),\r\n                        listAtrs2, tElement]));\r\n                    break;\r\n                case 8:\r\n                    if ($$[$0 - 1] !== null) {\r\n                        $$[$0 - 1] = $$[$0 - 1].concat($$[$0]);\r\n                        this.$ = $$[$0 - 1];\r\n                    }\r\n                    else\r\n                        this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let listAtrs = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let atr = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'LISTAATRIBUTOS', null, [atr, listAtrs]));\r\n                    break;\r\n                case 9:\r\n                    this.$ = [];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'LISTAATRIBUTOS', null, [new Nodo(cst.cstXmlDesc.getId(), 'epsilon', null, [])]));\r\n                    break;\r\n                case 10:\r\n                    this.$ = [new Atributo($$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column)];\r\n                    break;\r\n                case 11:\r\n                    console.log('Entra a error sintactico de atributo');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = null;\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'ATRIBUTO', null, [new Nodo(cst.cstXmlDesc.getId(), 'identifier', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0 - 1].toString(), null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'asignacion', null, [new Nodo(cst.cstXmlDesc.getId(), '=', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), cst.cstXmlDesc.obtenerUltimoNodo(), null, [])]));\r\n                    break;\r\n                case 12:\r\n                    console.log('Entra a error sintactico de atributo 2');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = null;\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'ATRIBUTO', null, [new Nodo(cst.cstXmlDesc.getId(), 'error', null, []),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'lt', null, [new Nodo(cst.cstXmlDesc.getId(), '<', null, [])])]));\r\n                    break;\r\n                case 13:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TIPOCADENA', null, [new Nodo(cst.cstXmlDesc.getId(), 'cadena', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 14:\r\n                    this.$ = $$[$0].toString().replaceAll(\"'\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TIPOCADENA', null, [new Nodo(cst.cstXmlDesc.getId(), 'cadena', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"'\", \"\"), null, [])])]));\r\n                    break;\r\n                case 15:\r\n                    this.$ = { 'texto': '', 'content': null, 'idCierre': '' };\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TIPOELEM', null, [new Nodo(cst.cstXmlDesc.getId(), 'diag', null, [new Nodo(cst.cstXmlDesc.getId(), '/', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'gt', null, [new Nodo(cst.cstXmlDesc.getId(), '>', null, [])])]));\r\n                    break;\r\n                case 16:\r\n                    if ($$[$0].idCierre !== '') {\r\n                        if ($$[$0 - 2] !== '') /* Etiqueta con texto*/\r\n                            $$[$0].texto = $$[$0 - 2];\r\n                        this.$ = $$[$0];\r\n                    }\r\n                    /* CONSTRUCCION DE CST */\r\n                    let mElem2 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let textContent2 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TIPOELEM', null, [new Nodo(cst.cstXmlDesc.getId(), 'gt', null, [new Nodo(cst.cstXmlDesc.getId(), '>', null, [])]),\r\n                        textContent2,\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'lt', null, [new Nodo(cst.cstXmlDesc.getId(), '<', null, [])]),\r\n                        mElem2]));\r\n                    break;\r\n                case 17:\r\n                    console.log('Entra a error sintactico de TIPOELEM');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    this.$ = null;\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TIPOELEM', null, [new Nodo(cst.cstXmlDesc.getId(), 'diag', null, [new Nodo(cst.cstXmlDesc.getId(), '/', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'error', null, []),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'gt', null, [new Nodo(cst.cstXmlDesc.getId(), '>', null, [])])]));\r\n                    break;\r\n                case 18:\r\n                    this.$ = { 'texto': '', 'content': null, 'idCierre': $$[$0 - 1] };\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'MOREELEMENTS', null, [new Nodo(cst.cstXmlDesc.getId(), 'diag', null, [new Nodo(cst.cstXmlDesc.getId(), '/', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'identifier', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0 - 1].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'gt', null, [new Nodo(cst.cstXmlDesc.getId(), '>', null, [])])]));\r\n                    break;\r\n                case 19:\r\n                    if ($$[$0].idCierre !== '') { /** Se esta cerrando una etiqueta y se comienza a subir **/\r\n                        if ($$[$0 - 2] instanceof Objeto) {\r\n                            if ($$[$0].content === null)\r\n                                this.$ = { 'texto': '', 'content': [$$[$0 - 2]], 'idCierre': $$[$0].idCierre };\r\n                            else {\r\n                                $$[$0].content.unshift($$[$0 - 2]);\r\n                                this.$ = { 'texto': '', 'content': $$[$0].content, 'idCierre': $$[$0].idCierre };\r\n                            }\r\n                        }\r\n                        else if ($$[$0 - 2] === null) {\r\n                            this.$ = $$[$0];\r\n                        }\r\n                        else {\r\n                        }\r\n                    }\r\n                    /* CONSTRUCCION DE CST */\r\n                    let mElem1 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let elem1 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'MOREELEMENTS', null, [elem1,\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'lt', null, [new Nodo(cst.cstXmlDesc.getId(), '<', null, [])]),\r\n                        mElem1]));\r\n                    break;\r\n                case 20:\r\n                    $$[$0 - 1] = $$[$0 - 1] + $$[$0];\r\n                    this.$ = $$[$0 - 1];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let textContent = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let t1 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXTCONTENT', null, [t1, textContent]));\r\n                    break;\r\n                case 21:\r\n                    this.$ = '';\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXTCONTENT', null, [new Nodo(cst.cstXmlDesc.getId(), 'epsilon', null, [])]));\r\n                    break;\r\n                case 22:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'identificador', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 23:\r\n                    this.$ = $$[$0].toString();\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'content', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 24:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'double', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 25:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'integer', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 26:\r\n                    this.$ = $$[$0].toString();\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'identificador', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 27:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'comilla simple', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 28:\r\n                    this.$ = \"<\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'menor que', null, [new Nodo(cst.cstXmlDesc.getId(), \"<\", null, [])])]));\r\n                    break;\r\n                case 29:\r\n                    this.$ = \">\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'mayor que', null, [new Nodo(cst.cstXmlDesc.getId(), \">\", null, [])])]));\r\n                    break;\r\n                case 30:\r\n                    this.$ = \"&\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'ampersand', null, [new Nodo(cst.cstXmlDesc.getId(), \"&\", null, [])])]));\r\n                    break;\r\n                case 31:\r\n                    this.$ = \"'\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'apostrofe', null, [new Nodo(cst.cstXmlDesc.getId(), \"'\", null, [])])]));\r\n                    break;\r\n                case 32:\r\n                    this.$ = \"\\\"\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'comilla doble', null, [new Nodo(cst.cstXmlDesc.getId(), '\"', null, [])])]));\r\n                    break;\r\n                case 33:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, []));\r\n                    break;\r\n            }\r\n        },\r\n        table: [{ 2: [1, 4], 3: 1, 4: 2, 6: [1, 3] }, { 1: [3] }, { 5: [1, 5] }, { 7: [1, 6] }, { 5: $V0, 6: $V1, 11: 7, 12: 8 }, { 1: [2, 1] }, { 8: [1, 10] }, { 5: [2, 3] }, { 5: $V0, 6: $V1, 11: 11, 12: 8 }, { 13: 12, 14: $V2 }, { 2: $V3, 7: $V4, 9: 14, 14: $V5, 16: 15 }, { 5: [2, 4] }, o($V6, [2, 6]), o([10, 21], $V4, { 16: 15, 9: 18, 2: $V3, 14: $V5 }), { 7: [1, 19] }, o($V7, $V4, { 16: 15, 9: 20, 2: $V3, 14: $V5 }), { 17: [1, 21] }, { 6: [1, 23], 10: [1, 22] }, { 10: [1, 26], 15: 24, 21: [1, 25] }, { 10: [1, 27] }, o($V7, [2, 8]), { 18: 28, 19: [1, 29], 20: [1, 30] }, o($V8, [2, 11]), o($V8, [2, 12]), o($V6, [2, 7]), { 2: [1, 32], 10: [1, 31] }, { 2: $V9, 6: $Va, 8: $Vb, 14: $Vc, 22: 33, 24: 34, 25: $Vd, 26: $Ve, 27: $Vf, 28: $Vg, 29: $Vh, 30: $Vi, 31: $Vj, 32: $Vk, 33: $Vl }, { 5: $V0, 6: $V1, 11: 47, 12: 8 }, o($V8, [2, 10]), o($V8, [2, 13]), o($V8, [2, 14]), o($V6, [2, 15]), { 10: [1, 48] }, { 6: [1, 49] }, { 2: $V9, 6: $Va, 8: $Vb, 14: $Vc, 22: 50, 24: 34, 25: $Vd, 26: $Ve, 27: $Vf, 28: $Vg, 29: $Vh, 30: $Vi, 31: $Vj, 32: $Vk, 33: $Vl }, o($Vm, [2, 22]), o($Vm, [2, 23]), o($Vm, [2, 24]), o($Vm, [2, 25]), o($Vm, [2, 26]), o($Vm, [2, 27]), o($Vm, [2, 28]), o($Vm, [2, 29]), o($Vm, [2, 30]), o($Vm, [2, 31]), o($Vm, [2, 32]), o($Vm, [2, 33]), { 5: [2, 2] }, o($V6, [2, 17]), { 13: 53, 14: $V2, 21: $Vn, 23: 51 }, { 6: [2, 20] }, o($V6, [2, 16]), { 14: [1, 54] }, { 6: [1, 55] }, { 10: [1, 56] }, { 13: 53, 14: $V2, 21: $Vn, 23: 57 }, o($V6, [2, 18]), o($V6, [2, 19])],\r\n        defaultActions: { 5: [2, 1], 7: [2, 3], 11: [2, 4], 47: [2, 2], 50: [2, 20] },\r\n        parseError: function parseError(str, hash) {\r\n            if (hash.recoverable) {\r\n                this.trace(str);\r\n            }\r\n            else {\r\n                var error = new Error(str);\r\n                error.hash = hash;\r\n                throw error;\r\n            }\r\n        },\r\n        parse: function parse(input) {\r\n            var self = this, stack = [0], tstack = [], // token stack\r\n            vstack = [null], // semantic value stack\r\n            lstack = [], // location stack\r\n            table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n            var args = lstack.slice.call(arguments, 1);\r\n            //this.reductionCount = this.shiftCount = 0;\r\n            var lexer = Object.create(this.lexer);\r\n            var sharedState = { yy: {} };\r\n            // copy state\r\n            for (var k in this.yy) {\r\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n                    sharedState.yy[k] = this.yy[k];\r\n                }\r\n            }\r\n            lexer.setInput(input, sharedState.yy);\r\n            sharedState.yy.lexer = lexer;\r\n            sharedState.yy.parser = this;\r\n            if (typeof lexer.yylloc == 'undefined') {\r\n                lexer.yylloc = {};\r\n            }\r\n            var yyloc = lexer.yylloc;\r\n            lstack.push(yyloc);\r\n            var ranges = lexer.options && lexer.options.ranges;\r\n            if (typeof sharedState.yy.parseError === 'function') {\r\n                this.parseError = sharedState.yy.parseError;\r\n            }\r\n            else {\r\n                this.parseError = Object.getPrototypeOf(this).parseError;\r\n            }\r\n            function popStack(n) {\r\n                stack.length = stack.length - 2 * n;\r\n                vstack.length = vstack.length - n;\r\n                lstack.length = lstack.length - n;\r\n            }\r\n            _token_stack: var lex = function () {\r\n                var token;\r\n                token = lexer.lex() || EOF;\r\n                // if token isn't its numeric value, convert\r\n                if (typeof token !== 'number') {\r\n                    token = self.symbols_[token] || token;\r\n                }\r\n                return token;\r\n            };\r\n            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n            while (true) {\r\n                // retreive state number from top of stack\r\n                state = stack[stack.length - 1];\r\n                // use default actions if available\r\n                if (this.defaultActions[state]) {\r\n                    action = this.defaultActions[state];\r\n                }\r\n                else {\r\n                    if (symbol === null || typeof symbol == 'undefined') {\r\n                        symbol = lex();\r\n                    }\r\n                    // read action for current state and first input\r\n                    action = table[state] && table[state][symbol];\r\n                }\r\n                _handle_error: \r\n                // handle parse error\r\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                    var error_rule_depth;\r\n                    var errStr = '';\r\n                    // Return the rule stack depth where the nearest error rule can be found.\r\n                    // Return FALSE when no error recovery rule was found.\r\n                    function locateNearestErrorRecoveryRule(state) {\r\n                        var stack_probe = stack.length - 1;\r\n                        var depth = 0;\r\n                        // try to recover from error\r\n                        for (;;) {\r\n                            // check for error recovery rule in this state\r\n                            if ((TERROR.toString()) in table[state]) {\r\n                                return depth;\r\n                            }\r\n                            if (state === 0 || stack_probe < 2) {\r\n                                return false; // No suitable error recovery rule available.\r\n                            }\r\n                            stack_probe -= 2; // popStack(1): [symbol, action]\r\n                            state = stack[stack_probe];\r\n                            ++depth;\r\n                        }\r\n                    }\r\n                    if (!recovering) {\r\n                        // first see if there's any chance at hitting an error recovery rule:\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                        // Report error\r\n                        expected = [];\r\n                        for (p in table[state]) {\r\n                            if (this.terminals_[p] && p > TERROR) {\r\n                                expected.push(\"'\" + this.terminals_[p] + \"'\");\r\n                            }\r\n                        }\r\n                        if (lexer.showPosition) {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \":\\n\" + lexer.showPosition() + \"\\nExpecting \" + expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\r\n                        }\r\n                        else {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \": Unexpected \" +\r\n                                (symbol == EOF ? \"end of input\" :\r\n                                    (\"'\" + (this.terminals_[symbol] || symbol) + \"'\"));\r\n                        }\r\n                        this.parseError(errStr, {\r\n                            text: lexer.match,\r\n                            token: this.terminals_[symbol] || symbol,\r\n                            line: lexer.yylineno,\r\n                            loc: yyloc,\r\n                            expected: expected,\r\n                            recoverable: (error_rule_depth !== false)\r\n                        });\r\n                    }\r\n                    else if (preErrorSymbol !== EOF) {\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                    }\r\n                    // just recovered from another error\r\n                    if (recovering == 3) {\r\n                        if (symbol === EOF || preErrorSymbol === EOF) {\r\n                            throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                        }\r\n                        // discard current lookahead and grab another\r\n                        yyleng = lexer.yyleng;\r\n                        yytext = lexer.yytext;\r\n                        yylineno = lexer.yylineno;\r\n                        yyloc = lexer.yylloc;\r\n                        symbol = lex();\r\n                    }\r\n                    // try to recover from error\r\n                    if (error_rule_depth === false) {\r\n                        throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n                    }\r\n                    popStack(error_rule_depth);\r\n                    preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n                    symbol = TERROR; // insert generic error symbol as new lookahead\r\n                    state = stack[stack.length - 1];\r\n                    action = table[state] && table[state][TERROR];\r\n                    recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n                }\r\n                // this shouldn't happen, unless resolve defaults are off\r\n                if (action[0] instanceof Array && action.length > 1) {\r\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n                }\r\n                switch (action[0]) {\r\n                    case 1: // shift\r\n                        //this.shiftCount++;\r\n                        stack.push(symbol);\r\n                        vstack.push(lexer.yytext);\r\n                        lstack.push(lexer.yylloc);\r\n                        stack.push(action[1]); // push state\r\n                        symbol = null;\r\n                        if (!preErrorSymbol) { // normal execution/no error\r\n                            yyleng = lexer.yyleng;\r\n                            yytext = lexer.yytext;\r\n                            yylineno = lexer.yylineno;\r\n                            yyloc = lexer.yylloc;\r\n                            if (recovering > 0) {\r\n                                recovering--;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // error just occurred, resume old lookahead f/ before error\r\n                            symbol = preErrorSymbol;\r\n                            preErrorSymbol = null;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        // reduce\r\n                        //this.reductionCount++;\r\n                        len = this.productions_[action[1]][1];\r\n                        // perform semantic action\r\n                        yyval.$ = vstack[vstack.length - len]; // default to $$ = $1\r\n                        // default location, uses first token for firsts, last for lasts\r\n                        yyval._$ = {\r\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                            last_line: lstack[lstack.length - 1].last_line,\r\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                            last_column: lstack[lstack.length - 1].last_column\r\n                        };\r\n                        if (ranges) {\r\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\r\n                        }\r\n                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n                        if (typeof r !== 'undefined') {\r\n                            return r;\r\n                        }\r\n                        // pop off stack\r\n                        if (len) {\r\n                            stack = stack.slice(0, -1 * len * 2);\r\n                            vstack = vstack.slice(0, -1 * len);\r\n                            lstack = lstack.slice(0, -1 * len);\r\n                        }\r\n                        stack.push(this.productions_[action[1]][0]); // push nonterminal (reduce)\r\n                        vstack.push(yyval.$);\r\n                        lstack.push(yyval._$);\r\n                        // goto new state = table[STATE][NONTERMINAL]\r\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n                        stack.push(newState);\r\n                        break;\r\n                    case 3:\r\n                        // accept\r\n                        return true;\r\n                }\r\n            }\r\n            return true;\r\n        } };\r\n    //const Nodo = require(\"./AST/nodo_arbol\");\r\n    //var raiz;\r\n    const { Objeto } = require(\"../XML/Objeto\");\r\n    const { Atributo } = require(\"../XML/Atributo\");\r\n    const errores = require('../Global/ListaError');\r\n    const { Nodo } = require('../Reporte/Nodo');\r\n    const cst = require('../Reporte/CST');\r\n    /* generated by jison-lex 0.3.4 */\r\n    var lexer = (function () {\r\n        var lexer = ({\r\n            EOF: 1,\r\n            parseError: function parseError(str, hash) {\r\n                if (this.yy.parser) {\r\n                    this.yy.parser.parseError(str, hash);\r\n                }\r\n                else {\r\n                    throw new Error(str);\r\n                }\r\n            },\r\n            // resets the lexer, sets new input\r\n            setInput: function (input, yy) {\r\n                this.yy = yy || this.yy || {};\r\n                this._input = input;\r\n                this._more = this._backtrack = this.done = false;\r\n                this.yylineno = this.yyleng = 0;\r\n                this.yytext = this.matched = this.match = '';\r\n                this.conditionStack = ['INITIAL'];\r\n                this.yylloc = {\r\n                    first_line: 1,\r\n                    first_column: 0,\r\n                    last_line: 1,\r\n                    last_column: 0\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [0, 0];\r\n                }\r\n                this.offset = 0;\r\n                return this;\r\n            },\r\n            // consumes and returns one char from the input\r\n            input: function () {\r\n                var ch = this._input[0];\r\n                this.yytext += ch;\r\n                this.yyleng++;\r\n                this.offset++;\r\n                this.match += ch;\r\n                this.matched += ch;\r\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno++;\r\n                    this.yylloc.last_line++;\r\n                }\r\n                else {\r\n                    this.yylloc.last_column++;\r\n                }\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range[1]++;\r\n                }\r\n                this._input = this._input.slice(1);\r\n                return ch;\r\n            },\r\n            // unshifts one char (or a string) into the input\r\n            unput: function (ch) {\r\n                var len = ch.length;\r\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n                this._input = ch + this._input;\r\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n                //this.yyleng -= len;\r\n                this.offset -= len;\r\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n                this.match = this.match.substr(0, this.match.length - 1);\r\n                this.matched = this.matched.substr(0, this.matched.length - 1);\r\n                if (lines.length - 1) {\r\n                    this.yylineno -= lines.length - 1;\r\n                }\r\n                var r = this.yylloc.range;\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: lines ?\r\n                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                            + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n                        this.yylloc.first_column - len\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n                }\r\n                this.yyleng = this.yytext.length;\r\n                return this;\r\n            },\r\n            // When called from action, caches matched text and appends it on next action\r\n            more: function () {\r\n                this._more = true;\r\n                return this;\r\n            },\r\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n            reject: function () {\r\n                if (this.options.backtrack_lexer) {\r\n                    this._backtrack = true;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n                return this;\r\n            },\r\n            // retain first n characters of the match\r\n            less: function (n) {\r\n                this.unput(this.match.slice(n));\r\n            },\r\n            // displays already matched input, i.e. for error messages\r\n            pastInput: function () {\r\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\r\n            },\r\n            // displays upcoming input, i.e. for error messages\r\n            upcomingInput: function () {\r\n                var next = this.match;\r\n                if (next.length < 20) {\r\n                    next += this._input.substr(0, 20 - next.length);\r\n                }\r\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n            },\r\n            // displays the character position where the lexing error occurred, i.e. for error messages\r\n            showPosition: function () {\r\n                var pre = this.pastInput();\r\n                var c = new Array(pre.length + 1).join(\"-\");\r\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n            },\r\n            // test the lexed token: return FALSE when not a match, otherwise return token\r\n            test_match: function (match, indexed_rule) {\r\n                var token, lines, backup;\r\n                if (this.options.backtrack_lexer) {\r\n                    // save context\r\n                    backup = {\r\n                        yylineno: this.yylineno,\r\n                        yylloc: {\r\n                            first_line: this.yylloc.first_line,\r\n                            last_line: this.last_line,\r\n                            first_column: this.yylloc.first_column,\r\n                            last_column: this.yylloc.last_column\r\n                        },\r\n                        yytext: this.yytext,\r\n                        match: this.match,\r\n                        matches: this.matches,\r\n                        matched: this.matched,\r\n                        yyleng: this.yyleng,\r\n                        offset: this.offset,\r\n                        _more: this._more,\r\n                        _input: this._input,\r\n                        yy: this.yy,\r\n                        conditionStack: this.conditionStack.slice(0),\r\n                        done: this.done\r\n                    };\r\n                    if (this.options.ranges) {\r\n                        backup.yylloc.range = this.yylloc.range.slice(0);\r\n                    }\r\n                }\r\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno += lines.length;\r\n                }\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.last_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.last_column,\r\n                    last_column: lines ?\r\n                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                        this.yylloc.last_column + match[0].length\r\n                };\r\n                this.yytext += match[0];\r\n                this.match += match[0];\r\n                this.matches = match;\r\n                this.yyleng = this.yytext.length;\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n                }\r\n                this._more = false;\r\n                this._backtrack = false;\r\n                this._input = this._input.slice(match[0].length);\r\n                this.matched += match[0];\r\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n                if (this.done && this._input) {\r\n                    this.done = false;\r\n                }\r\n                if (token) {\r\n                    return token;\r\n                }\r\n                else if (this._backtrack) {\r\n                    // recover context\r\n                    for (var k in backup) {\r\n                        this[k] = backup[k];\r\n                    }\r\n                    return false; // rule action called reject() implying the next rule should be tested instead.\r\n                }\r\n                return false;\r\n            },\r\n            // return next match in input\r\n            next: function () {\r\n                if (this.done) {\r\n                    return this.EOF;\r\n                }\r\n                if (!this._input) {\r\n                    this.done = true;\r\n                }\r\n                var token, match, tempMatch, index;\r\n                if (!this._more) {\r\n                    this.yytext = '';\r\n                    this.match = '';\r\n                }\r\n                var rules = this._currentRules();\r\n                for (var i = 0; i < rules.length; i++) {\r\n                    tempMatch = this._input.match(this.rules[rules[i]]);\r\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                        match = tempMatch;\r\n                        index = i;\r\n                        if (this.options.backtrack_lexer) {\r\n                            token = this.test_match(tempMatch, rules[i]);\r\n                            if (token !== false) {\r\n                                return token;\r\n                            }\r\n                            else if (this._backtrack) {\r\n                                match = false;\r\n                                continue; // rule action called reject() implying a rule MISmatch.\r\n                            }\r\n                            else {\r\n                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else if (!this.options.flex) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (match) {\r\n                    token = this.test_match(match, rules[index]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    }\r\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                    return false;\r\n                }\r\n                if (this._input === \"\") {\r\n                    return this.EOF;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n            },\r\n            // return next match that has a token\r\n            lex: function lex() {\r\n                var r = this.next();\r\n                if (r) {\r\n                    return r;\r\n                }\r\n                else {\r\n                    return this.lex();\r\n                }\r\n            },\r\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n            begin: function begin(condition) {\r\n                this.conditionStack.push(condition);\r\n            },\r\n            // pop the previously active lexer condition state off the condition stack\r\n            popState: function popState() {\r\n                var n = this.conditionStack.length - 1;\r\n                if (n > 0) {\r\n                    return this.conditionStack.pop();\r\n                }\r\n                else {\r\n                    return this.conditionStack[0];\r\n                }\r\n            },\r\n            // produce the lexer rule set which is active for the currently active lexer condition state\r\n            _currentRules: function _currentRules() {\r\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n                }\r\n                else {\r\n                    return this.conditions[\"INITIAL\"].rules;\r\n                }\r\n            },\r\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n            topState: function topState(n) {\r\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n                if (n >= 0) {\r\n                    return this.conditionStack[n];\r\n                }\r\n                else {\r\n                    return \"INITIAL\";\r\n                }\r\n            },\r\n            // alias for begin(condition)\r\n            pushState: function pushState(condition) {\r\n                this.begin(condition);\r\n            },\r\n            // return the number of states currently on the stack\r\n            stateStackSize: function stateStackSize() {\r\n                return this.conditionStack.length;\r\n            },\r\n            options: {},\r\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n                var YYSTATE = YY_START;\r\n                switch ($avoiding_name_collisions) {\r\n                    case 0:\r\n                        this.begin('comment');\r\n                        break;\r\n                    case 1:\r\n                        this.popState();\r\n                        break;\r\n                    case 2: /* skip comment content*/\r\n                        break;\r\n                    case 3: /* skip whitespace */\r\n                        break;\r\n                    case 4:\r\n                        return 6;\r\n                        break;\r\n                    case 5:\r\n                        return 10;\r\n                        break;\r\n                    case 6:\r\n                        return 17;\r\n                        break;\r\n                    case 7:\r\n                        return 21;\r\n                        break;\r\n                    case 8:\r\n                        return 7;\r\n                        break;\r\n                    case 9:\r\n                        return 28;\r\n                        break;\r\n                    case 10:\r\n                        return \"xml\";\r\n                        break;\r\n                    case 11:\r\n                        return 29;\r\n                        break;\r\n                    case 12:\r\n                        return 30;\r\n                        break;\r\n                    case 13:\r\n                        return 31;\r\n                        break;\r\n                    case 14:\r\n                        return \"apostrophe\";\r\n                        break;\r\n                    case 15:\r\n                        return \"quot\";\r\n                        break;\r\n                    case 16:\r\n                        return 26;\r\n                        break;\r\n                    case 17:\r\n                        return 27;\r\n                        break;\r\n                    case 18:\r\n                        return 14;\r\n                        break;\r\n                    case 19:\r\n                        return 19;\r\n                        break;\r\n                    case 20:\r\n                        return 20;\r\n                        break;\r\n                    case 21:\r\n                        return 25;\r\n                        break;\r\n                    case 22:\r\n                        return 5;\r\n                        break;\r\n                    case 23:\r\n                        errores.default.agregarError('lexico', 'Simbolo inesperado ' + yy_.yytext, yy_.yylloc.first_line, yy_.yylloc.first_column);\r\n                        break;\r\n                }\r\n            },\r\n            rules: [/^(?:<!--)/, /^(?:-->)/, /^(?:.)/, /^(?:\\s+)/, /^(?:<)/, /^(?:>)/, /^(?:=)/, /^(?:\\/)/, /^(?:\\?)/, /^(?:')/, /^(?:[xX][mM][lL])/, /^(?:&lt;)/, /^(?:&gt;)/, /^(?:&amp;)/, /^(?:&apos;)/, /^(?:&quot;)/, /^(?:(([0-9]+\\.[0-9]*)|(\\.[0-9]+)))/, /^(?:[0-9]+)/, /^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ.-]*)/, /^(?:(\"((\\\\([\\'\\\"\\\\]))|([^\\\"\\\\]+))*\"))/, /^(?:('((\\\\([\\'\\\"\\\\]))|([^\\'\\\\]))*'))/, /^(?:([^<]))/, /^(?:$)/, /^(?:.)/],\r\n            conditions: { \"comment\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], \"inclusive\": true }, \"INITIAL\": { \"rules\": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], \"inclusive\": true } }\r\n        });\r\n        return lexer;\r\n    })();\r\n    parser.lexer = lexer;\r\n    function Parser() {\r\n        this.yy = {};\r\n    }\r\n    Parser.prototype = parser;\r\n    parser.Parser = Parser;\r\n    return new Parser;\r\n})();\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\n    exports.parser = XML_GramaticaDesc;\r\n    exports.Parser = XML_GramaticaDesc.Parser;\r\n    exports.parse = function () { return XML_GramaticaDesc.parse.apply(XML_GramaticaDesc, arguments); };\r\n    exports.main = function commonjsMain(args) {\r\n        if (!args[1]) {\r\n            console.log('Usage: ' + args[0] + ' FILE');\r\n            process.exit(1);\r\n        }\r\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n        return exports.parser.parse(source);\r\n    };\r\n    if (typeof module !== 'undefined' && require.main === module) {\r\n        exports.main(process.argv.slice(1));\r\n    }\r\n}\r\n","\"use strict\";\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XPath_GramaticaAsc = (function () {\r\n    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)\r\n        ; return o; }, $V0 = [1, 4], $V1 = [1, 16], $V2 = [1, 7], $V3 = [1, 9], $V4 = [1, 8], $V5 = [1, 15], $V6 = [1, 14], $V7 = [1, 12], $V8 = [1, 13], $V9 = [5, 6], $Va = [5, 6, 12, 16, 20, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56], $Vb = [2, 39], $Vc = [1, 26], $Vd = [1, 31], $Ve = [1, 34], $Vf = [1, 35], $Vg = [1, 36], $Vh = [1, 37], $Vi = [1, 38], $Vj = [1, 39], $Vk = [1, 40], $Vl = [1, 41], $Vm = [1, 42], $Vn = [1, 43], $Vo = [1, 44], $Vp = [1, 45], $Vq = [1, 46], $Vr = [1, 58], $Vs = [1, 59], $Vt = [1, 60], $Vu = [1, 62], $Vv = [1, 54], $Vw = [1, 55], $Vx = [1, 56], $Vy = [1, 57], $Vz = [1, 80], $VA = [1, 81], $VB = [1, 82], $VC = [1, 83], $VD = [1, 84], $VE = [1, 85], $VF = [1, 86], $VG = [1, 87], $VH = [1, 88], $VI = [1, 89], $VJ = [1, 90], $VK = [1, 91], $VL = [1, 92], $VM = [16, 20, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56], $VN = [1, 99], $VO = [1, 102], $VP = [1, 100], $VQ = [1, 101], $VR = [16, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56], $VS = [16, 46, 47, 48, 49, 50, 51, 52, 53, 56];\r\n    var parser = { trace: function trace() { },\r\n        yy: {},\r\n        symbols_: { \"error\": 2, \"START\": 3, \"LISTACONSULTAS\": 4, \"EOF\": 5, \"andSelect\": 6, \"CONSULTA\": 7, \"identifier\": 8, \"LISTANODOS\": 9, \"MASTIPOS\": 10, \"NODO\": 11, \"diag\": 12, \"TIPONODO\": 13, \"corA\": 14, \"EXPRESION\": 15, \"corC\": 16, \"AXES\": 17, \"attr\": 18, \"PREDICATE\": 19, \"asterisco\": 20, \"dot\": 21, \"FUNCIONES\": 22, \"ancestor\": 23, \"dospuntos\": 24, \"NODETEST\": 25, \"ancestorSelf\": 26, \"attribute\": 27, \"child\": 28, \"descendant\": 29, \"descendantSelf\": 30, \"following\": 31, \"followingSib\": 32, \"namespace\": 33, \"parent\": 34, \"preced\": 35, \"precedSib\": 36, \"self\": 37, \"textFunc\": 38, \"nodeFunc\": 39, \"LISTAEXPRESIONES\": 40, \"PRIMITIVA\": 41, \"OPERACION\": 42, \"mas\": 43, \"menos\": 44, \"div\": 45, \"lte\": 46, \"lt\": 47, \"gte\": 48, \"gt\": 49, \"igual\": 50, \"nequal\": 51, \"or\": 52, \"and\": 53, \"mod\": 54, \"parA\": 55, \"parC\": 56, \"DoubleLiteral\": 57, \"IntegerLiteral\": 58, \"cadena\": 59, \"cadena2\": 60, \"lastFunc\": 61, \"positionFunc\": 62, \"$accept\": 0, \"$end\": 1 },\r\n        terminals_: { 2: \"error\", 5: \"EOF\", 6: \"andSelect\", 8: \"identifier\", 12: \"diag\", 14: \"corA\", 16: \"corC\", 18: \"attr\", 20: \"asterisco\", 21: \"dot\", 23: \"ancestor\", 24: \"dospuntos\", 26: \"ancestorSelf\", 27: \"attribute\", 28: \"child\", 29: \"descendant\", 30: \"descendantSelf\", 31: \"following\", 32: \"followingSib\", 33: \"namespace\", 34: \"parent\", 35: \"preced\", 36: \"precedSib\", 37: \"self\", 38: \"textFunc\", 39: \"nodeFunc\", 43: \"mas\", 44: \"menos\", 45: \"div\", 46: \"lte\", 47: \"lt\", 48: \"gte\", 49: \"gt\", 50: \"igual\", 51: \"nequal\", 52: \"or\", 53: \"and\", 54: \"mod\", 55: \"parA\", 56: \"parC\", 57: \"DoubleLiteral\", 58: \"IntegerLiteral\", 59: \"cadena\", 60: \"cadena2\", 61: \"lastFunc\", 62: \"positionFunc\" },\r\n        productions_: [0, [3, 2], [4, 3], [4, 1], [7, 1], [7, 2], [7, 2], [7, 1], [7, 1], [9, 2], [9, 1], [11, 2], [11, 3], [11, 2], [11, 3], [13, 1], [13, 4], [13, 1], [13, 1], [10, 3], [10, 3], [10, 2], [10, 3], [10, 2], [10, 1], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [19, 3], [19, 0], [25, 2], [25, 2], [25, 2], [25, 2], [40, 2], [40, 1], [15, 1], [15, 1], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [41, 1], [41, 1], [41, 1], [41, 1], [41, 1], [41, 2], [41, 2], [41, 1], [41, 2], [41, 1], [22, 1], [22, 1], [22, 1], [22, 1]],\r\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n            /* this == yyval */\r\n            var $0 = $$.length - 1;\r\n            switch (yystate) {\r\n                case 1:\r\n                    this.$ = $$[$0 - 1];\r\n                    return this.$;\r\n                    break;\r\n                case 2:\r\n                    $$[$0 - 2].push(new Consulta($$[$0], _$[$0].first_line, _$[$0].first_column));\r\n                    this.$ = $$[$0 - 2];\r\n                    break;\r\n                case 3:\r\n                    this.$ = [new Consulta($$[$0], _$[$0].first_line, _$[$0].first_column)];\r\n                    break;\r\n                case 4:\r\n                    this.$ = [new Nodo($$[$0], TipoNodo.IDENTIFIER, _$[$0].first_line, _$[$0].first_column)];\r\n                    break;\r\n                case 5:\r\n                    this.$ = [new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column)];\r\n                    this.$ = this.$.concat($$[$0]);\r\n                    break;\r\n                case 6:\r\n                    this.$ = [$$[$0 - 1]];\r\n                    this.$ = this.$.concat($$[$0]);\r\n                    break;\r\n                case 7:\r\n                case 47:\r\n                case 74:\r\n                case 75:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 8:\r\n                    this.$ = [$$[$0]];\r\n                    break;\r\n                case 9:\r\n                    $$[$0 - 1].push($$[$0]);\r\n                    this.$ = $$[$0 - 1];\r\n                    break;\r\n                case 10:\r\n                    this.$ = [$$[$0]];\r\n                    break;\r\n                case 11:\r\n                    if (this.$ != null) {\r\n                        $$[$0].fromRoot = true;\r\n                        this.$ = $$[$0];\r\n                    }\r\n                    break;\r\n                case 12:\r\n                    if (this.$ != null) {\r\n                        $$[$0].fromRoot = false;\r\n                        this.$ = $$[$0];\r\n                    }\r\n                    break;\r\n                case 13:\r\n                    console.log('Entra a error sintactico de one diag');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = new Nodo($$[$0], TipoNodo.NODOERROR, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 14:\r\n                    console.log('Entra a error sintactico de two diags');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    this.$ = new Nodo($$[$0], TipoNodo.NODOERROR, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 15:\r\n                    this.$ = new Nodo($$[$0], TipoNodo.IDENTIFIER, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 16:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.IDENTIFIER, _$[$0 - 3].first_line, _$[$0 - 3].first_column, new Predicate($$[$0 - 1], _$[$0 - 3].first_line, _$[$0 - 3].first_column));\r\n                    break;\r\n                case 17:\r\n                case 18:\r\n                case 46:\r\n                case 72:\r\n                case 73:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 19:\r\n                case 20:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.ATRIBUTO, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 21:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.DOT, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 22:\r\n                    this.$ = new Nodo($$[$0 - 2] + $$[$0 - 1], TipoNodo.DOTDOT, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 23:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 24:\r\n                    this.$ = new Nodo($$[$0], TipoNodo.FUNCION, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 25:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.ANCESTOR, $$[$0]);\r\n                    break;\r\n                case 26:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.ANCESTORORSELF, $$[$0]);\r\n                    break;\r\n                case 27:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.ATTRIBUTE, $$[$0]);\r\n                    break;\r\n                case 28:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.CHILD, $$[$0]);\r\n                    break;\r\n                case 29:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.DESCENDANT, $$[$0]);\r\n                    break;\r\n                case 30:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.DESCENDANTORSELF, $$[$0]);\r\n                    break;\r\n                case 31:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.FOLLOWING, $$[$0]);\r\n                    break;\r\n                case 32:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.FOLLOWINGSIBLING, $$[$0]);\r\n                    break;\r\n                case 33:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.NAMESPACE, $$[$0]);\r\n                    break;\r\n                case 34:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.PARENT, $$[$0]);\r\n                    break;\r\n                case 35:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.PRECEDING, $$[$0]);\r\n                    break;\r\n                case 36:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.PRECEDINGSIBLING, $$[$0]);\r\n                    break;\r\n                case 37:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.SELF, $$[$0]);\r\n                    break;\r\n                case 38:\r\n                    this.$ = new Predicate($$[$0 - 1], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 39:\r\n                    this.$ = [];\r\n                    break;\r\n                case 40:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    break;\r\n                case 41:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.FUNCION, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    break;\r\n                case 42:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.FUNCION, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.FUNCION, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    break;\r\n                case 43:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    break;\r\n                case 44:\r\n                    $$[$0 - 1].push($$[$0]);\r\n                    this.$ = $$[$0 - 1];\r\n                    break;\r\n                case 45:\r\n                    this.$ = [$$[$0]];\r\n                    break;\r\n                case 48:\r\n                    this.$ = new Operacion(TipoOperacion.MULTIPLICACION, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 49:\r\n                    this.$ = new Operacion(TipoOperacion.SUMA, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 50:\r\n                    this.$ = new Operacion(TipoOperacion.RESTA, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 51:\r\n                    this.$ = new Operacion(TipoOperacion.DIVISION, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 52:\r\n                    this.$ = new Operacion(TipoOperacion.MENORIGUALQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 53:\r\n                    this.$ = new Operacion(TipoOperacion.MENORQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 54:\r\n                    this.$ = new Operacion(TipoOperacion.MAYORIGUALQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 55:\r\n                    this.$ = new Operacion(TipoOperacion.MAYORQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 56:\r\n                    this.$ = new Operacion(TipoOperacion.IGUAL, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 57:\r\n                    this.$ = new Operacion(TipoOperacion.DIFERENTEQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 58:\r\n                    this.$ = new Operacion(TipoOperacion.OR, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 59:\r\n                    this.$ = new Operacion(TipoOperacion.AND, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 60:\r\n                    this.$ = new Operacion(TipoOperacion.MOD, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 61:\r\n                    this.$ = new Operacion(TipoOperacion.PAR, $$[$0 - 1], null, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 62:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.DOUBLE, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 63:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.INTEGER, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 64:\r\n                case 65:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.CADENA, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 66:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.IDENTIFIER, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 67:\r\n                case 68:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.ATRIBUTO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 69:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.DOT, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 70:\r\n                    this.$ = [new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column)];\r\n                    this.$ = this.$.concat($$[$0]);\r\n                    this.$ = new Primitiva(this.$, TipoPrim.CONSULTA, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 71:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.FUNCION, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n            }\r\n        },\r\n        table: [{ 3: 1, 4: 2, 7: 3, 8: $V0, 9: 6, 10: 5, 11: 11, 12: $V1, 18: $V2, 20: $V3, 21: $V4, 22: 10, 38: $V5, 39: $V6, 61: $V7, 62: $V8 }, { 1: [3] }, { 5: [1, 17], 6: [1, 18] }, o($V9, [2, 3]), o($V9, [2, 4], { 11: 11, 9: 19, 12: $V1 }), o($V9, [2, 8], { 11: 11, 9: 20, 12: $V1 }), o($V9, [2, 7], { 11: 21, 12: $V1 }), { 8: [1, 22], 20: [1, 23] }, o($Va, $Vb, { 19: 24, 14: $Vc, 21: [1, 25] }), o($Va, $Vb, { 19: 27, 14: $Vc }), o($Va, [2, 24]), o($Va, [2, 10]), o($Va, [2, 72]), o($Va, [2, 73]), o($Va, [2, 74]), o($Va, [2, 75]), { 2: [1, 30], 8: $Vd, 10: 32, 12: [1, 29], 13: 28, 17: 33, 18: $V2, 20: $V3, 21: $V4, 22: 10, 23: $Ve, 26: $Vf, 27: $Vg, 28: $Vh, 29: $Vi, 30: $Vj, 31: $Vk, 32: $Vl, 33: $Vm, 34: $Vn, 35: $Vo, 36: $Vp, 37: $Vq, 38: $V5, 39: $V6, 61: $V7, 62: $V8 }, { 1: [2, 1] }, { 7: 47, 8: $V0, 9: 6, 10: 5, 11: 11, 12: $V1, 18: $V2, 20: $V3, 21: $V4, 22: 10, 38: $V5, 39: $V6, 61: $V7, 62: $V8 }, o($V9, [2, 5], { 11: 21, 12: $V1 }), o($V9, [2, 6], { 11: 21, 12: $V1 }), o($Va, [2, 9]), o($Va, $Vb, { 19: 48, 14: $Vc }), o($Va, $Vb, { 19: 49, 14: $Vc }), o($Va, [2, 21]), o($Va, $Vb, { 19: 50, 14: $Vc }), { 8: $Vr, 15: 51, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, o($Va, [2, 23]), o($Va, [2, 11]), { 2: [1, 64], 8: $Vd, 10: 32, 13: 63, 17: 33, 18: $V2, 20: $V3, 21: $V4, 22: 10, 23: $Ve, 26: $Vf, 27: $Vg, 28: $Vh, 29: $Vi, 30: $Vj, 31: $Vk, 32: $Vl, 33: $Vm, 34: $Vn, 35: $Vo, 36: $Vp, 37: $Vq, 38: $V5, 39: $V6, 61: $V7, 62: $V8 }, o($Va, [2, 13]), o($Va, [2, 15], { 14: [1, 65] }), o($Va, [2, 17]), o($Va, [2, 18]), { 24: [1, 66] }, { 24: [1, 67] }, { 24: [1, 68] }, { 24: [1, 69] }, { 24: [1, 70] }, { 24: [1, 71] }, { 24: [1, 72] }, { 24: [1, 73] }, { 24: [1, 74] }, { 24: [1, 75] }, { 24: [1, 76] }, { 24: [1, 77] }, { 24: [1, 78] }, o($V9, [2, 2]), o($Va, [2, 19]), o($Va, [2, 20]), o($Va, [2, 22]), { 16: [1, 79], 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 46: $VD, 47: $VE, 48: $VF, 49: $VG, 50: $VH, 51: $VI, 52: $VJ, 53: $VK, 54: $VL }, o($VM, [2, 46]), o($VM, [2, 47]), o($VM, [2, 62]), o($VM, [2, 63]), o($VM, [2, 64]), o($VM, [2, 65]), o($VM, [2, 66], { 11: 11, 9: 93, 12: $V1 }), { 8: [1, 94], 20: [1, 95] }, o($VM, [2, 69]), o($VM, [2, 71]), { 8: $Vr, 15: 96, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, o($Va, [2, 12]), o($Va, [2, 14]), { 8: $Vr, 15: 97, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $VN, 20: $VO, 25: 98, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 103, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 104, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 105, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 106, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 107, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 108, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 109, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 110, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 111, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 112, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 113, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 114, 38: $VP, 39: $VQ }, o($Va, [2, 38]), { 8: $Vr, 15: 115, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 116, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 117, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 118, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 119, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 120, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 121, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 122, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 123, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 124, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 125, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 126, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 127, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, o($VM, [2, 70], { 11: 21, 12: $V1 }), o($VM, [2, 67]), o($VM, [2, 68]), { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 46: $VD, 47: $VE, 48: $VF, 49: $VG, 50: $VH, 51: $VI, 52: $VJ, 53: $VK, 54: $VL, 56: [1, 128] }, { 16: [1, 129], 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 46: $VD, 47: $VE, 48: $VF, 49: $VG, 50: $VH, 51: $VI, 52: $VJ, 53: $VK, 54: $VL }, o($Va, [2, 25]), o($Va, $Vb, { 19: 130, 14: $Vc }), o($Va, $Vb, { 19: 131, 14: $Vc }), o($Va, $Vb, { 19: 132, 14: $Vc }), o($Va, $Vb, { 19: 133, 14: $Vc }), o($Va, [2, 26]), o($Va, [2, 27]), o($Va, [2, 28]), o($Va, [2, 29]), o($Va, [2, 30]), o($Va, [2, 31]), o($Va, [2, 32]), o($Va, [2, 33]), o($Va, [2, 34]), o($Va, [2, 35]), o($Va, [2, 36]), o($Va, [2, 37]), o($VM, [2, 48]), o($VR, [2, 49], { 20: $Vz, 45: $VC, 54: $VL }), o($VR, [2, 50], { 20: $Vz, 45: $VC, 54: $VL }), o($VM, [2, 51]), o($VS, [2, 52], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 54: $VL }), o($VS, [2, 53], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 54: $VL }), o($VS, [2, 54], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 54: $VL }), o($VS, [2, 55], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 54: $VL }), o($VS, [2, 56], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 54: $VL }), o($VS, [2, 57], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 54: $VL }), o([16, 52, 56], [2, 58], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 46: $VD, 47: $VE, 48: $VF, 49: $VG, 50: $VH, 51: $VI, 53: $VK, 54: $VL }), o([16, 52, 53, 56], [2, 59], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 46: $VD, 47: $VE, 48: $VF, 49: $VG, 50: $VH, 51: $VI, 54: $VL }), o($VM, [2, 60]), o($VM, [2, 61]), o($Va, [2, 16]), o($Va, [2, 40]), o($Va, [2, 41]), o($Va, [2, 42]), o($Va, [2, 43])],\r\n        defaultActions: { 17: [2, 1] },\r\n        parseError: function parseError(str, hash) {\r\n            if (hash.recoverable) {\r\n                this.trace(str);\r\n            }\r\n            else {\r\n                var error = new Error(str);\r\n                error.hash = hash;\r\n                throw error;\r\n            }\r\n        },\r\n        parse: function parse(input) {\r\n            var self = this, stack = [0], tstack = [], // token stack\r\n            vstack = [null], // semantic value stack\r\n            lstack = [], // location stack\r\n            table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n            var args = lstack.slice.call(arguments, 1);\r\n            //this.reductionCount = this.shiftCount = 0;\r\n            var lexer = Object.create(this.lexer);\r\n            var sharedState = { yy: {} };\r\n            // copy state\r\n            for (var k in this.yy) {\r\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n                    sharedState.yy[k] = this.yy[k];\r\n                }\r\n            }\r\n            lexer.setInput(input, sharedState.yy);\r\n            sharedState.yy.lexer = lexer;\r\n            sharedState.yy.parser = this;\r\n            if (typeof lexer.yylloc == 'undefined') {\r\n                lexer.yylloc = {};\r\n            }\r\n            var yyloc = lexer.yylloc;\r\n            lstack.push(yyloc);\r\n            var ranges = lexer.options && lexer.options.ranges;\r\n            if (typeof sharedState.yy.parseError === 'function') {\r\n                this.parseError = sharedState.yy.parseError;\r\n            }\r\n            else {\r\n                this.parseError = Object.getPrototypeOf(this).parseError;\r\n            }\r\n            function popStack(n) {\r\n                stack.length = stack.length - 2 * n;\r\n                vstack.length = vstack.length - n;\r\n                lstack.length = lstack.length - n;\r\n            }\r\n            _token_stack: var lex = function () {\r\n                var token;\r\n                token = lexer.lex() || EOF;\r\n                // if token isn't its numeric value, convert\r\n                if (typeof token !== 'number') {\r\n                    token = self.symbols_[token] || token;\r\n                }\r\n                return token;\r\n            };\r\n            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n            while (true) {\r\n                // retreive state number from top of stack\r\n                state = stack[stack.length - 1];\r\n                // use default actions if available\r\n                if (this.defaultActions[state]) {\r\n                    action = this.defaultActions[state];\r\n                }\r\n                else {\r\n                    if (symbol === null || typeof symbol == 'undefined') {\r\n                        symbol = lex();\r\n                    }\r\n                    // read action for current state and first input\r\n                    action = table[state] && table[state][symbol];\r\n                }\r\n                _handle_error: \r\n                // handle parse error\r\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                    var error_rule_depth;\r\n                    var errStr = '';\r\n                    // Return the rule stack depth where the nearest error rule can be found.\r\n                    // Return FALSE when no error recovery rule was found.\r\n                    function locateNearestErrorRecoveryRule(state) {\r\n                        var stack_probe = stack.length - 1;\r\n                        var depth = 0;\r\n                        // try to recover from error\r\n                        for (;;) {\r\n                            // check for error recovery rule in this state\r\n                            if ((TERROR.toString()) in table[state]) {\r\n                                return depth;\r\n                            }\r\n                            if (state === 0 || stack_probe < 2) {\r\n                                return false; // No suitable error recovery rule available.\r\n                            }\r\n                            stack_probe -= 2; // popStack(1): [symbol, action]\r\n                            state = stack[stack_probe];\r\n                            ++depth;\r\n                        }\r\n                    }\r\n                    if (!recovering) {\r\n                        // first see if there's any chance at hitting an error recovery rule:\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                        // Report error\r\n                        expected = [];\r\n                        for (p in table[state]) {\r\n                            if (this.terminals_[p] && p > TERROR) {\r\n                                expected.push(\"'\" + this.terminals_[p] + \"'\");\r\n                            }\r\n                        }\r\n                        if (lexer.showPosition) {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \":\\n\" + lexer.showPosition() + \"\\nExpecting \" + expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\r\n                        }\r\n                        else {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \": Unexpected \" +\r\n                                (symbol == EOF ? \"end of input\" :\r\n                                    (\"'\" + (this.terminals_[symbol] || symbol) + \"'\"));\r\n                        }\r\n                        this.parseError(errStr, {\r\n                            text: lexer.match,\r\n                            token: this.terminals_[symbol] || symbol,\r\n                            line: lexer.yylineno,\r\n                            loc: yyloc,\r\n                            expected: expected,\r\n                            recoverable: (error_rule_depth !== false)\r\n                        });\r\n                    }\r\n                    else if (preErrorSymbol !== EOF) {\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                    }\r\n                    // just recovered from another error\r\n                    if (recovering == 3) {\r\n                        if (symbol === EOF || preErrorSymbol === EOF) {\r\n                            throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                        }\r\n                        // discard current lookahead and grab another\r\n                        yyleng = lexer.yyleng;\r\n                        yytext = lexer.yytext;\r\n                        yylineno = lexer.yylineno;\r\n                        yyloc = lexer.yylloc;\r\n                        symbol = lex();\r\n                    }\r\n                    // try to recover from error\r\n                    if (error_rule_depth === false) {\r\n                        throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n                    }\r\n                    popStack(error_rule_depth);\r\n                    preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n                    symbol = TERROR; // insert generic error symbol as new lookahead\r\n                    state = stack[stack.length - 1];\r\n                    action = table[state] && table[state][TERROR];\r\n                    recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n                }\r\n                // this shouldn't happen, unless resolve defaults are off\r\n                if (action[0] instanceof Array && action.length > 1) {\r\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n                }\r\n                switch (action[0]) {\r\n                    case 1: // shift\r\n                        //this.shiftCount++;\r\n                        stack.push(symbol);\r\n                        vstack.push(lexer.yytext);\r\n                        lstack.push(lexer.yylloc);\r\n                        stack.push(action[1]); // push state\r\n                        symbol = null;\r\n                        if (!preErrorSymbol) { // normal execution/no error\r\n                            yyleng = lexer.yyleng;\r\n                            yytext = lexer.yytext;\r\n                            yylineno = lexer.yylineno;\r\n                            yyloc = lexer.yylloc;\r\n                            if (recovering > 0) {\r\n                                recovering--;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // error just occurred, resume old lookahead f/ before error\r\n                            symbol = preErrorSymbol;\r\n                            preErrorSymbol = null;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        // reduce\r\n                        //this.reductionCount++;\r\n                        len = this.productions_[action[1]][1];\r\n                        // perform semantic action\r\n                        yyval.$ = vstack[vstack.length - len]; // default to $$ = $1\r\n                        // default location, uses first token for firsts, last for lasts\r\n                        yyval._$ = {\r\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                            last_line: lstack[lstack.length - 1].last_line,\r\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                            last_column: lstack[lstack.length - 1].last_column\r\n                        };\r\n                        if (ranges) {\r\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\r\n                        }\r\n                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n                        if (typeof r !== 'undefined') {\r\n                            return r;\r\n                        }\r\n                        // pop off stack\r\n                        if (len) {\r\n                            stack = stack.slice(0, -1 * len * 2);\r\n                            vstack = vstack.slice(0, -1 * len);\r\n                            lstack = lstack.slice(0, -1 * len);\r\n                        }\r\n                        stack.push(this.productions_[action[1]][0]); // push nonterminal (reduce)\r\n                        vstack.push(yyval.$);\r\n                        lstack.push(yyval._$);\r\n                        // goto new state = table[STATE][NONTERMINAL]\r\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n                        stack.push(newState);\r\n                        break;\r\n                    case 3:\r\n                        // accept\r\n                        return true;\r\n                }\r\n            }\r\n            return true;\r\n        } };\r\n    //const Nodo = require(\"./AST/nodo_arbol\");\r\n    //var raiz;\r\n    const { Primitiva } = require(\"../Expresiones/Primitiva\");\r\n    const { Operacion } = require(\"../Expresiones/Operacion\");\r\n    const { Consulta } = require(\"../XPath/Consulta\");\r\n    const { Nodo } = require(\"../XPath/Nodo\");\r\n    const { Predicate } = require(\"../XPath/Predicate\");\r\n    const { TipoPrim } = require(\"../Expresiones/Primitiva\");\r\n    const { TipoOperacion } = require(\"../Expresiones/Operacion\");\r\n    const { TipoNodo } = require(\"../XPath/Nodo\");\r\n    const { TipoAxis } = require(\"../XPath/Nodo\");\r\n    const errores = require('../Global/ListaError');\r\n    /* generated by jison-lex 0.3.4 */\r\n    var lexer = (function () {\r\n        var lexer = ({\r\n            EOF: 1,\r\n            parseError: function parseError(str, hash) {\r\n                if (this.yy.parser) {\r\n                    this.yy.parser.parseError(str, hash);\r\n                }\r\n                else {\r\n                    throw new Error(str);\r\n                }\r\n            },\r\n            // resets the lexer, sets new input\r\n            setInput: function (input, yy) {\r\n                this.yy = yy || this.yy || {};\r\n                this._input = input;\r\n                this._more = this._backtrack = this.done = false;\r\n                this.yylineno = this.yyleng = 0;\r\n                this.yytext = this.matched = this.match = '';\r\n                this.conditionStack = ['INITIAL'];\r\n                this.yylloc = {\r\n                    first_line: 1,\r\n                    first_column: 0,\r\n                    last_line: 1,\r\n                    last_column: 0\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [0, 0];\r\n                }\r\n                this.offset = 0;\r\n                return this;\r\n            },\r\n            // consumes and returns one char from the input\r\n            input: function () {\r\n                var ch = this._input[0];\r\n                this.yytext += ch;\r\n                this.yyleng++;\r\n                this.offset++;\r\n                this.match += ch;\r\n                this.matched += ch;\r\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno++;\r\n                    this.yylloc.last_line++;\r\n                }\r\n                else {\r\n                    this.yylloc.last_column++;\r\n                }\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range[1]++;\r\n                }\r\n                this._input = this._input.slice(1);\r\n                return ch;\r\n            },\r\n            // unshifts one char (or a string) into the input\r\n            unput: function (ch) {\r\n                var len = ch.length;\r\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n                this._input = ch + this._input;\r\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n                //this.yyleng -= len;\r\n                this.offset -= len;\r\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n                this.match = this.match.substr(0, this.match.length - 1);\r\n                this.matched = this.matched.substr(0, this.matched.length - 1);\r\n                if (lines.length - 1) {\r\n                    this.yylineno -= lines.length - 1;\r\n                }\r\n                var r = this.yylloc.range;\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: lines ?\r\n                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                            + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n                        this.yylloc.first_column - len\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n                }\r\n                this.yyleng = this.yytext.length;\r\n                return this;\r\n            },\r\n            // When called from action, caches matched text and appends it on next action\r\n            more: function () {\r\n                this._more = true;\r\n                return this;\r\n            },\r\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n            reject: function () {\r\n                if (this.options.backtrack_lexer) {\r\n                    this._backtrack = true;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n                return this;\r\n            },\r\n            // retain first n characters of the match\r\n            less: function (n) {\r\n                this.unput(this.match.slice(n));\r\n            },\r\n            // displays already matched input, i.e. for error messages\r\n            pastInput: function () {\r\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\r\n            },\r\n            // displays upcoming input, i.e. for error messages\r\n            upcomingInput: function () {\r\n                var next = this.match;\r\n                if (next.length < 20) {\r\n                    next += this._input.substr(0, 20 - next.length);\r\n                }\r\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n            },\r\n            // displays the character position where the lexing error occurred, i.e. for error messages\r\n            showPosition: function () {\r\n                var pre = this.pastInput();\r\n                var c = new Array(pre.length + 1).join(\"-\");\r\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n            },\r\n            // test the lexed token: return FALSE when not a match, otherwise return token\r\n            test_match: function (match, indexed_rule) {\r\n                var token, lines, backup;\r\n                if (this.options.backtrack_lexer) {\r\n                    // save context\r\n                    backup = {\r\n                        yylineno: this.yylineno,\r\n                        yylloc: {\r\n                            first_line: this.yylloc.first_line,\r\n                            last_line: this.last_line,\r\n                            first_column: this.yylloc.first_column,\r\n                            last_column: this.yylloc.last_column\r\n                        },\r\n                        yytext: this.yytext,\r\n                        match: this.match,\r\n                        matches: this.matches,\r\n                        matched: this.matched,\r\n                        yyleng: this.yyleng,\r\n                        offset: this.offset,\r\n                        _more: this._more,\r\n                        _input: this._input,\r\n                        yy: this.yy,\r\n                        conditionStack: this.conditionStack.slice(0),\r\n                        done: this.done\r\n                    };\r\n                    if (this.options.ranges) {\r\n                        backup.yylloc.range = this.yylloc.range.slice(0);\r\n                    }\r\n                }\r\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno += lines.length;\r\n                }\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.last_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.last_column,\r\n                    last_column: lines ?\r\n                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                        this.yylloc.last_column + match[0].length\r\n                };\r\n                this.yytext += match[0];\r\n                this.match += match[0];\r\n                this.matches = match;\r\n                this.yyleng = this.yytext.length;\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n                }\r\n                this._more = false;\r\n                this._backtrack = false;\r\n                this._input = this._input.slice(match[0].length);\r\n                this.matched += match[0];\r\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n                if (this.done && this._input) {\r\n                    this.done = false;\r\n                }\r\n                if (token) {\r\n                    return token;\r\n                }\r\n                else if (this._backtrack) {\r\n                    // recover context\r\n                    for (var k in backup) {\r\n                        this[k] = backup[k];\r\n                    }\r\n                    return false; // rule action called reject() implying the next rule should be tested instead.\r\n                }\r\n                return false;\r\n            },\r\n            // return next match in input\r\n            next: function () {\r\n                if (this.done) {\r\n                    return this.EOF;\r\n                }\r\n                if (!this._input) {\r\n                    this.done = true;\r\n                }\r\n                var token, match, tempMatch, index;\r\n                if (!this._more) {\r\n                    this.yytext = '';\r\n                    this.match = '';\r\n                }\r\n                var rules = this._currentRules();\r\n                for (var i = 0; i < rules.length; i++) {\r\n                    tempMatch = this._input.match(this.rules[rules[i]]);\r\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                        match = tempMatch;\r\n                        index = i;\r\n                        if (this.options.backtrack_lexer) {\r\n                            token = this.test_match(tempMatch, rules[i]);\r\n                            if (token !== false) {\r\n                                return token;\r\n                            }\r\n                            else if (this._backtrack) {\r\n                                match = false;\r\n                                continue; // rule action called reject() implying a rule MISmatch.\r\n                            }\r\n                            else {\r\n                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else if (!this.options.flex) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (match) {\r\n                    token = this.test_match(match, rules[index]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    }\r\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                    return false;\r\n                }\r\n                if (this._input === \"\") {\r\n                    return this.EOF;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n            },\r\n            // return next match that has a token\r\n            lex: function lex() {\r\n                var r = this.next();\r\n                if (r) {\r\n                    return r;\r\n                }\r\n                else {\r\n                    return this.lex();\r\n                }\r\n            },\r\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n            begin: function begin(condition) {\r\n                this.conditionStack.push(condition);\r\n            },\r\n            // pop the previously active lexer condition state off the condition stack\r\n            popState: function popState() {\r\n                var n = this.conditionStack.length - 1;\r\n                if (n > 0) {\r\n                    return this.conditionStack.pop();\r\n                }\r\n                else {\r\n                    return this.conditionStack[0];\r\n                }\r\n            },\r\n            // produce the lexer rule set which is active for the currently active lexer condition state\r\n            _currentRules: function _currentRules() {\r\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n                }\r\n                else {\r\n                    return this.conditions[\"INITIAL\"].rules;\r\n                }\r\n            },\r\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n            topState: function topState(n) {\r\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n                if (n >= 0) {\r\n                    return this.conditionStack[n];\r\n                }\r\n                else {\r\n                    return \"INITIAL\";\r\n                }\r\n            },\r\n            // alias for begin(condition)\r\n            pushState: function pushState(condition) {\r\n                this.begin(condition);\r\n            },\r\n            // return the number of states currently on the stack\r\n            stateStackSize: function stateStackSize() {\r\n                return this.conditionStack.length;\r\n            },\r\n            options: {},\r\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n                var YYSTATE = YY_START;\r\n                switch ($avoiding_name_collisions) {\r\n                    case 0: /* skip whitespace */\r\n                        break;\r\n                    case 1:\r\n                        return 50;\r\n                        break;\r\n                    case 2:\r\n                        return 12;\r\n                        break;\r\n                    case 3:\r\n                        return \"dot\";\r\n                        break;\r\n                    case 4:\r\n                        return \"attr\";\r\n                        break;\r\n                    case 5:\r\n                        return \"corA\";\r\n                        break;\r\n                    case 6:\r\n                        return \"corC\";\r\n                        break;\r\n                    case 7:\r\n                        return \"andSelect\";\r\n                        break;\r\n                    case 8:\r\n                        return \"dospuntos\";\r\n                        break;\r\n                    case 9:\r\n                        return \"parA\";\r\n                        break;\r\n                    case 10:\r\n                        return \"parC\";\r\n                        break;\r\n                    case 11:\r\n                        return 20;\r\n                        break;\r\n                    case 12:\r\n                        return \"mas\";\r\n                        break;\r\n                    case 13:\r\n                        return \"menos\";\r\n                        break;\r\n                    case 14:\r\n                        return \"div\";\r\n                        break;\r\n                    case 15:\r\n                        return 46;\r\n                        break;\r\n                    case 16:\r\n                        return \"gte\";\r\n                        break;\r\n                    case 17:\r\n                        return 47;\r\n                        break;\r\n                    case 18:\r\n                        return 49;\r\n                        break;\r\n                    case 19:\r\n                        return \"nequal\";\r\n                        break;\r\n                    case 20:\r\n                        return \"or\";\r\n                        break;\r\n                    case 21:\r\n                        return \"and\";\r\n                        break;\r\n                    case 22:\r\n                        return \"mod\";\r\n                        break;\r\n                    case 23:\r\n                        return \"ancestorSelf\";\r\n                        break;\r\n                    case 24:\r\n                        return \"ancestor\";\r\n                        break;\r\n                    case 25:\r\n                        return \"attribute\";\r\n                        break;\r\n                    case 26:\r\n                        return \"child\";\r\n                        break;\r\n                    case 27:\r\n                        return \"descendantSelf\";\r\n                        break;\r\n                    case 28:\r\n                        return \"descendant\";\r\n                        break;\r\n                    case 29:\r\n                        return \"followingSib\";\r\n                        break;\r\n                    case 30:\r\n                        return \"following\";\r\n                        break;\r\n                    case 31:\r\n                        return \"namespace\";\r\n                        break;\r\n                    case 32:\r\n                        return \"parent\";\r\n                        break;\r\n                    case 33:\r\n                        return \"precedSib\";\r\n                        break;\r\n                    case 34:\r\n                        return \"preced\";\r\n                        break;\r\n                    case 35:\r\n                        return \"self\";\r\n                        break;\r\n                    case 36:\r\n                        return \"lastFunc\";\r\n                        break;\r\n                    case 37:\r\n                        return \"positionFunc\";\r\n                        break;\r\n                    case 38:\r\n                        return \"nodeFunc\";\r\n                        break;\r\n                    case 39:\r\n                        return \"textFunc\";\r\n                        break;\r\n                    case 40:\r\n                        return 57;\r\n                        break;\r\n                    case 41:\r\n                        return 58;\r\n                        break;\r\n                    case 42:\r\n                        return 8;\r\n                        break;\r\n                    case 43:\r\n                        return 59;\r\n                        break;\r\n                    case 44:\r\n                        return 60;\r\n                        break;\r\n                    case 45:\r\n                        console.log(errores.default);\r\n                        errores.default.agregarError('lexico', 'Simbolo inesperado ' + yy_.yytext, yy_.yylloc.first_line, yy_.yylloc.first_column);\r\n                        break;\r\n                    case 46:\r\n                        return 5;\r\n                        break;\r\n                }\r\n            },\r\n            rules: [/^(?:\\s+)/, /^(?:=)/, /^(?:\\/)/, /^(?:\\.)/, /^(?:@)/, /^(?:\\[)/, /^(?:\\])/, /^(?:\\|)/, /^(?:::)/, /^(?:\\()/, /^(?:\\))/, /^(?:\\*)/, /^(?:\\+)/, /^(?:-)/, /^(?:div\\b)/, /^(?:<=)/, /^(?:>=)/, /^(?:<)/, /^(?:>)/, /^(?:!=)/, /^(?:or\\b)/, /^(?:and\\b)/, /^(?:mod\\b)/, /^(?:ancestor-or-self\\b)/, /^(?:ancestor\\b)/, /^(?:attribute\\b)/, /^(?:child\\b)/, /^(?:descendant-or-self\\b)/, /^(?:descendant\\b)/, /^(?:following-sibling\\b)/, /^(?:following\\b)/, /^(?:namespace\\b)/, /^(?:parent\\b)/, /^(?:preceding-sibling\\b)/, /^(?:preceding\\b)/, /^(?:self\\b)/, /^(?:last\\(\\))/, /^(?:position\\(\\))/, /^(?:node\\(\\))/, /^(?:text\\(\\))/, /^(?:(([0-9]+\\.[0-9]*)|(\\.[0-9]+)))/, /^(?:[0-9]+)/, /^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ.-]*)/, /^(?:(\"((\\\\([\\'\\\"\\\\]))|([^\\\"\\\\]+))*\"))/, /^(?:('((\\\\([\\'\\\"\\\\]))|([^\\'\\\\]))*'))/, /^(?:.)/, /^(?:$)/],\r\n            conditions: { \"comment\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], \"inclusive\": true }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], \"inclusive\": true } }\r\n        });\r\n        return lexer;\r\n    })();\r\n    parser.lexer = lexer;\r\n    function Parser() {\r\n        this.yy = {};\r\n    }\r\n    Parser.prototype = parser;\r\n    parser.Parser = Parser;\r\n    return new Parser;\r\n})();\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\n    exports.parser = XPath_GramaticaAsc;\r\n    exports.Parser = XPath_GramaticaAsc.Parser;\r\n    exports.parse = function () { return XPath_GramaticaAsc.parse.apply(XPath_GramaticaAsc, arguments); };\r\n    exports.main = function commonjsMain(args) {\r\n        if (!args[1]) {\r\n            console.log('Usage: ' + args[0] + ' FILE');\r\n            process.exit(1);\r\n        }\r\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n        return exports.parser.parse(source);\r\n    };\r\n    if (typeof module !== 'undefined' && require.main === module) {\r\n        exports.main(process.argv.slice(1));\r\n    }\r\n}\r\n","\"use strict\";\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar Optimizacion_Grammar = (function () {\r\n    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)\r\n        ; return o; }, $V0 = [1, 4], $V1 = [1, 6], $V2 = [1, 7], $V3 = [1, 8], $V4 = [1, 9], $V5 = [1, 10], $V6 = [5, 7, 24, 26, 27, 28, 29], $V7 = [9, 18, 20], $V8 = [16, 25], $V9 = [1, 36], $Va = [1, 37], $Vb = [1, 38], $Vc = [1, 39], $Vd = [1, 40], $Ve = [9, 23, 35, 36, 38, 39], $Vf = [1, 58], $Vg = [1, 60], $Vh = [1, 59], $Vi = [1, 66], $Vj = [1, 74], $Vk = [1, 75], $Vl = [1, 69], $Vm = [1, 70], $Vn = [1, 71], $Vo = [1, 72], $Vp = [1, 73], $Vq = [1, 76], $Vr = [1, 77], $Vs = [1, 78], $Vt = [1, 79], $Vu = [8, 11, 16, 42, 43, 44, 45, 46, 47, 48, 49, 50], $Vv = [2, 43], $Vw = [8, 11, 16, 20, 42, 43, 44, 45, 46, 47, 48, 49, 50], $Vx = [8, 11, 15, 16, 20, 42, 43, 44, 45, 46, 47, 48, 49, 50], $Vy = [8, 11, 16, 20, 42, 43, 47, 48, 49, 50], $Vz = [8, 11, 16, 20, 47, 48, 49, 50];\r\n    var parser = { trace: function trace() { },\r\n        yy: {},\r\n        symbols_: { \"error\": 2, \"START\": 3, \"DECLARACIONES\": 4, \"EOF\": 5, \"DECLARACION\": 6, \"include\": 7, \"lt\": 8, \"identifier\": 9, \"ext_h\": 10, \"gt\": 11, \"DATATYPE\": 12, \"corA\": 13, \"IntegerLiteral\": 14, \"corC\": 15, \"puntocoma\": 16, \"LISTAIDS\": 17, \"main\": 18, \"parA\": 19, \"parC\": 20, \"llaveA\": 21, \"LISTAINSTRUCCIONES\": 22, \"llaveC\": 23, \"void\": 24, \"coma\": 25, \"int\": 26, \"double\": 27, \"float\": 28, \"char\": 29, \"INSTRUCCION\": 30, \"asig\": 31, \"EXPRESION\": 32, \"PRIMITIVA\": 33, \"dospuntos\": 34, \"goto\": 35, \"printf\": 36, \"cadena\": 37, \"if\": 38, \"return\": 39, \"TIPORETURN\": 40, \"OPERACION\": 41, \"mas\": 42, \"menos\": 43, \"por\": 44, \"div\": 45, \"mod\": 46, \"lte\": 47, \"gte\": 48, \"eq\": 49, \"neq\": 50, \"DoubleLiteral\": 51, \"$accept\": 0, \"$end\": 1 },\r\n        terminals_: { 2: \"error\", 5: \"EOF\", 7: \"include\", 8: \"lt\", 9: \"identifier\", 10: \"ext_h\", 11: \"gt\", 13: \"corA\", 14: \"IntegerLiteral\", 15: \"corC\", 16: \"puntocoma\", 18: \"main\", 19: \"parA\", 20: \"parC\", 21: \"llaveA\", 23: \"llaveC\", 24: \"void\", 25: \"coma\", 26: \"int\", 27: \"double\", 28: \"float\", 29: \"char\", 31: \"asig\", 34: \"dospuntos\", 35: \"goto\", 36: \"printf\", 37: \"cadena\", 38: \"if\", 39: \"return\", 42: \"mas\", 43: \"menos\", 44: \"por\", 45: \"div\", 46: \"mod\", 47: \"lte\", 48: \"gte\", 49: \"eq\", 50: \"neq\", 51: \"DoubleLiteral\" },\r\n        productions_: [0, [3, 2], [4, 2], [4, 1], [6, 5], [6, 6], [6, 3], [6, 7], [6, 7], [17, 3], [17, 1], [12, 1], [12, 1], [12, 1], [12, 1], [22, 2], [22, 1], [30, 4], [30, 10], [30, 10], [30, 16], [30, 2], [30, 3], [30, 4], [30, 10], [30, 7], [30, 3], [40, 1], [40, 0], [32, 1], [32, 1], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 2], [33, 1], [33, 1], [33, 1]],\r\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n            /* this == yyval */\r\n            var $0 = $$.length - 1;\r\n            switch (yystate) {\r\n                case 1:\r\n                    this.$ = $$[$0 - 1];\r\n                    return this.$;\r\n                    break;\r\n                case 2:\r\n                case 15:\r\n                    $$[$0 - 1].push($$[$0]);\r\n                    this.$ = $$[$0 - 1];\r\n                    break;\r\n                case 3:\r\n                case 10:\r\n                case 16:\r\n                    this.$ = [$$[$0]];\r\n                    break;\r\n                case 4:\r\n                    codigo3D = $$[$0 - 4] + $$[$0 - 3] + $$[$0 - 2] + $$[$0 - 1] + $$[$0];\r\n                    this.$ = new Include(TipoDeclaracion3D.INCLUDE, codigo3D, _$[$0 - 4].first_line, _$[$0 - 4].first_column);\r\n                    break;\r\n                case 5:\r\n                    codigo3D = $$[$0 - 5] + \" \" + $$[$0 - 4] + $$[$0 - 3] + $$[$0 - 2] + $$[$0 - 1] + $$[$0];\r\n                    this.$ = new Variable(TipoDeclaracion3D.VARIABLE, codigo3D, _$[$0 - 5].first_line, _$[$0 - 5].first_column);\r\n                    break;\r\n                case 6:\r\n                    let firstId = $$[$0 - 1][0];\r\n                    codigo3D = $$[$0 - 2] + \" \" + firstId;\r\n                    for (let i = 1; i < $$[$0 - 1].length; i++) {\r\n                        codigo3D += \", \" + $$[$0 - 1][i];\r\n                    }\r\n                    codigo3D += \";\";\r\n                    this.$ = new Variable(TipoDeclaracion3D.VARIABLE, codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 7:\r\n                    codigo3D = $$[$0 - 6] + $$[$0 - 5] + $$[$0 - 4] + $$[$0 - 3] + $$[$0 - 2];\r\n                    this.$ = new Main(TipoDeclaracion3D.MAIN, $$[$0 - 1], codigo3D, _$[$0 - 6].first_line, _$[$0 - 6].first_column);\r\n                    break;\r\n                case 8:\r\n                    this.$ = new Metodo(TipoDeclaracion3D.METODO, $$[$0 - 1], $$[$0 - 5], _$[$0 - 6].first_line, _$[$0 - 6].first_column);\r\n                    break;\r\n                case 9:\r\n                    $$[$0 - 2].push($$[$0]);\r\n                    this.$ = $$[$0 - 2];\r\n                    break;\r\n                case 11:\r\n                case 12:\r\n                case 13:\r\n                case 14:\r\n                case 27:\r\n                case 29:\r\n                case 30:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 17:\r\n                    codigo3D = $$[$0 - 3] + \" \" + $$[$0 - 2] + \" \" + $$[$0 - 1].codigo3D + $$[$0];\r\n                    this.$ = new Asignacion3D(TipoInstruccion3D.ASIGNORMAL, $$[$0 - 3], $$[$0 - 1], codigo3D, _$[$0 - 3].first_line, _$[$0 - 3].first_column);\r\n                    break;\r\n                case 18:\r\n                    codigo3D = $$[$0 - 9] + \" \" + $$[$0 - 8] + \" \" + $$[$0 - 7] + $$[$0 - 6] + $$[$0 - 5] + $$[$0 - 4] + $$[$0 - 3] + $$[$0 - 2].codigo3D + $$[$0 - 1] + $$[$0];\r\n                    this.$ = new Asignacion3D(TipoInstruccion3D.ASIGARREGLO, $$[$0 - 9], $$[$0 - 2], codigo3D, _$[$0 - 9].first_line, _$[$0 - 9].first_column);\r\n                    break;\r\n                case 19:\r\n                    codigo3D = $$[$0 - 9] + $$[$0 - 8] + $$[$0 - 7] + $$[$0 - 6] + $$[$0 - 5] + $$[$0 - 4].codigo3D + $$[$0 - 3] + \" \" + $$[$0 - 2] + \" \" + $$[$0 - 1].codigo3D + $$[$0];\r\n                    this.$ = new Asignacion3D(TipoInstruccion3D.ARREGLOASIG, $$[$0 - 9], $$[$0 - 1], codigo3D, _$[$0 - 9].first_line, _$[$0 - 9].first_column);\r\n                    break;\r\n                case 20:\r\n                    codigo3D = $$[$0 - 15] + $$[$0 - 14] + $$[$0 - 13] + $$[$0 - 12] + $$[$0 - 11] + $$[$0 - 10].codigo3D + $$[$0 - 9] + \" \" + $$[$0 - 8] + \" \" + $$[$0 - 7] + $$[$0 - 6] + $$[$0 - 5] + $$[$0 - 4] + $$[$0 - 3] + $$[$0 - 2].codigo3D + $$[$0 - 1] + $$[$0];\r\n                    this.$ = new Asignacion3D(TipoInstruccion3D.ARREGLOASIGARREGLO, $$[$0 - 15], $$[$0 - 2], codigo3D, _$[$0 - 15].first_line, _$[$0 - 15].first_column);\r\n                    break;\r\n                case 21:\r\n                    this.$ = new Etiqueta3D(TipoInstruccion3D.ETIQUETA, $$[$0 - 1], $$[$0 - 1] + $$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 22:\r\n                    this.$ = new Goto3D(TipoInstruccion3D.GOTO, $$[$0 - 1], $$[$0 - 2] + \" \" + $$[$0 - 1] + $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 23:\r\n                    codigo3D = $$[$0 - 3] + $$[$0 - 2] + $$[$0 - 1] + $$[$0];\r\n                    this.$ = new Llamada3D(TipoInstruccion3D.LLAMADA, $$[$0 - 3], codigo3D, _$[$0 - 3].first_line, _$[$0 - 3].first_column);\r\n                    break;\r\n                case 24:\r\n                    codigo3D = $$[$0 - 9] + $$[$0 - 8] + $$[$0 - 7] + $$[$0 - 6] + \" \" + $$[$0 - 5] + $$[$0 - 4] + $$[$0 - 3] + $$[$0 - 2].codigo3D + $$[$0 - 1] + $$[$0];\r\n                    this.$ = new Printf3D(TipoInstruccion3D.PRINTF, codigo3D, _$[$0 - 9].first_line, _$[$0 - 9].first_column);\r\n                    break;\r\n                case 25:\r\n                    codigo3D = $$[$0 - 6] + $$[$0 - 5] + $$[$0 - 4].codigo3D + $$[$0 - 3] + \" \" + $$[$0 - 2] + \" \" + $$[$0 - 1] + $$[$0];\r\n                    this.$ = new If3D(TipoInstruccion3D.IF, $$[$0 - 4], new Goto3D(TipoInstruccion3D.GOTO, $$[$0 - 1], $$[$0 - 2] + \" \" + $$[$0 - 1] + $$[$0]), codigo3D, _$[$0 - 6].first_line, _$[$0 - 6].first_column);\r\n                    break;\r\n                case 26:\r\n                    this.$ = new Return3D(TipoInstruccion3D.RETURN, $$[$0 - 2] + \" \" + $$[$0 - 1] + \";\", _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 28:\r\n                    this.$ = \"\";\r\n                    break;\r\n                case 31:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.SUMA, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 32:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.RESTA, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 33:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.MULTIPLICACION, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 34:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.DIVISION, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 35:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.MOD, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 36:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.MENORQUE, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 37:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.MAYORQUE, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 38:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.MENORIGUALQUE, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 39:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.MAYORIGUALQUE, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 40:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.IGUALIGUAL, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 41:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.DIFERENTEQUE, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 42:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.MENOSUNARIO, $$[$0], null, \"-\" + $$[$0].codigo3D, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 43:\r\n                    this.$ = new Primitiva3D(TipoExpresion3D.PRIMITIVA, TipoPrim3D.IDENTIFIER, $$[$0], $$[$0], _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 44:\r\n                    this.$ = new Primitiva3D(TipoExpresion3D.PRIMITIVA, TipoPrim3D.INTEGER, +$$[$0], $$[$0], _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 45:\r\n                    this.$ = new Primitiva3D(TipoExpresion3D.PRIMITIVA, TipoPrim3D.DOUBLE, +$$[$0], $$[$0], _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n            }\r\n        },\r\n        table: [{ 3: 1, 4: 2, 6: 3, 7: $V0, 12: 5, 24: $V1, 26: $V2, 27: $V3, 28: $V4, 29: $V5 }, { 1: [3] }, { 5: [1, 11], 6: 12, 7: $V0, 12: 5, 24: $V1, 26: $V2, 27: $V3, 28: $V4, 29: $V5 }, o($V6, [2, 3]), { 8: [1, 13] }, { 9: [1, 14], 17: 15, 18: [1, 16] }, { 9: [1, 17] }, o($V7, [2, 11]), o($V7, [2, 12]), o($V7, [2, 13]), o($V7, [2, 14]), { 1: [2, 1] }, o($V6, [2, 2]), { 9: [1, 18] }, o($V8, [2, 10], { 13: [1, 19] }), { 16: [1, 20], 25: [1, 21] }, { 19: [1, 22] }, { 19: [1, 23] }, { 10: [1, 24] }, { 14: [1, 25] }, o($V6, [2, 6]), { 9: [1, 26] }, { 20: [1, 27] }, { 20: [1, 28] }, { 11: [1, 29] }, { 15: [1, 30] }, o($V8, [2, 9]), { 21: [1, 31] }, { 21: [1, 32] }, o($V6, [2, 4]), { 16: [1, 33] }, { 9: $V9, 22: 34, 30: 35, 35: $Va, 36: $Vb, 38: $Vc, 39: $Vd }, { 9: $V9, 22: 41, 30: 35, 35: $Va, 36: $Vb, 38: $Vc, 39: $Vd }, o($V6, [2, 5]), { 9: $V9, 23: [1, 42], 30: 43, 35: $Va, 36: $Vb, 38: $Vc, 39: $Vd }, o($Ve, [2, 16]), { 13: [1, 45], 19: [1, 47], 31: [1, 44], 34: [1, 46] }, { 9: [1, 48] }, { 19: [1, 49] }, { 19: [1, 50] }, { 14: [1, 52], 16: [2, 28], 40: 51 }, { 9: $V9, 23: [1, 53], 30: 43, 35: $Va, 36: $Vb, 38: $Vc, 39: $Vd }, o($V6, [2, 7]), o($Ve, [2, 15]), { 9: [1, 55], 14: $Vf, 32: 54, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 19: [1, 61] }, o($Ve, [2, 21]), { 20: [1, 62] }, { 16: [1, 63] }, { 37: [1, 64] }, { 9: $Vi, 14: $Vf, 32: 65, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 16: [1, 67] }, { 16: [2, 27] }, o($V6, [2, 8]), { 8: $Vj, 11: $Vk, 16: [1, 68], 42: $Vl, 43: $Vm, 44: $Vn, 45: $Vo, 46: $Vp, 47: $Vq, 48: $Vr, 49: $Vs, 50: $Vt }, o($Vu, $Vv, { 13: [1, 80] }), o($Vw, [2, 29]), o($Vw, [2, 30]), o($Vx, [2, 44]), o($Vx, [2, 45]), { 9: $Vi, 14: $Vf, 32: 81, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 12: 82, 26: $V2, 27: $V3, 28: $V4, 29: $V5 }, { 16: [1, 83] }, o($Ve, [2, 22]), { 25: [1, 84] }, { 8: $Vj, 11: $Vk, 20: [1, 85], 42: $Vl, 43: $Vm, 44: $Vn, 45: $Vo, 46: $Vp, 47: $Vq, 48: $Vr, 49: $Vs, 50: $Vt }, o($Vx, $Vv), o($Ve, [2, 26]), o($Ve, [2, 17]), { 9: $Vi, 14: $Vf, 32: 86, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 9: $Vi, 14: $Vf, 32: 87, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 9: $Vi, 14: $Vf, 32: 88, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 9: $Vi, 14: $Vf, 32: 89, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 9: $Vi, 14: $Vf, 32: 90, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 9: $Vi, 14: $Vf, 32: 91, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 9: $Vi, 14: $Vf, 32: 92, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 9: $Vi, 14: $Vf, 32: 93, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 9: $Vi, 14: $Vf, 32: 94, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 9: $Vi, 14: $Vf, 32: 95, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 9: $Vi, 14: $Vf, 32: 96, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 19: [1, 97] }, o($Vw, [2, 42]), { 20: [1, 98] }, o($Ve, [2, 23]), { 19: [1, 99] }, { 35: [1, 100] }, o($Vy, [2, 31], { 44: $Vn, 45: $Vo, 46: $Vp }), o($Vy, [2, 32], { 44: $Vn, 45: $Vo, 46: $Vp }), o($Vw, [2, 33]), o($Vw, [2, 34]), o($Vw, [2, 35]), o($Vz, [2, 36], { 42: $Vl, 43: $Vm, 44: $Vn, 45: $Vo, 46: $Vp }), o($Vz, [2, 37], { 42: $Vl, 43: $Vm, 44: $Vn, 45: $Vo, 46: $Vp }), o($Vz, [2, 38], { 42: $Vl, 43: $Vm, 44: $Vn, 45: $Vo, 46: $Vp }), o($Vz, [2, 39], { 42: $Vl, 43: $Vm, 44: $Vn, 45: $Vo, 46: $Vp }), o($Vz, [2, 40], { 42: $Vl, 43: $Vm, 44: $Vn, 45: $Vo, 46: $Vp }), o($Vz, [2, 41], { 42: $Vl, 43: $Vm, 44: $Vn, 45: $Vo, 46: $Vp }), { 12: 101, 26: $V2, 27: $V3, 28: $V4, 29: $V5 }, { 9: $Vi, 14: $Vf, 33: 102, 51: $Vh }, { 12: 103, 26: $V2, 27: $V3, 28: $V4, 29: $V5 }, { 9: [1, 104] }, { 20: [1, 105] }, { 15: [1, 106] }, { 20: [1, 107] }, { 16: [1, 108] }, { 9: $Vi, 14: $Vf, 33: 109, 51: $Vh }, { 31: [1, 110] }, { 9: $Vi, 14: $Vf, 33: 111, 51: $Vh }, o($Ve, [2, 25]), { 15: [1, 112] }, { 9: [1, 114], 14: $Vf, 32: 113, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 20: [1, 115] }, { 16: [1, 116] }, { 8: $Vj, 11: $Vk, 16: [1, 117], 42: $Vl, 43: $Vm, 44: $Vn, 45: $Vo, 46: $Vp, 47: $Vq, 48: $Vr, 49: $Vs, 50: $Vt }, o($Vu, $Vv, { 13: [1, 118] }), { 16: [1, 119] }, o($Ve, [2, 18]), o($Ve, [2, 19]), { 19: [1, 120] }, o($Ve, [2, 24]), { 12: 121, 26: $V2, 27: $V3, 28: $V4, 29: $V5 }, { 20: [1, 122] }, { 9: $Vi, 14: $Vf, 33: 123, 51: $Vh }, { 15: [1, 124] }, { 16: [1, 125] }, o($Ve, [2, 20])],\r\n        defaultActions: { 11: [2, 1], 52: [2, 27] },\r\n        parseError: function parseError(str, hash) {\r\n            if (hash.recoverable) {\r\n                this.trace(str);\r\n            }\r\n            else {\r\n                var error = new Error(str);\r\n                error.hash = hash;\r\n                throw error;\r\n            }\r\n        },\r\n        parse: function parse(input) {\r\n            var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n            var args = lstack.slice.call(arguments, 1);\r\n            var lexer = Object.create(this.lexer);\r\n            var sharedState = { yy: {} };\r\n            for (var k in this.yy) {\r\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n                    sharedState.yy[k] = this.yy[k];\r\n                }\r\n            }\r\n            lexer.setInput(input, sharedState.yy);\r\n            sharedState.yy.lexer = lexer;\r\n            sharedState.yy.parser = this;\r\n            if (typeof lexer.yylloc == 'undefined') {\r\n                lexer.yylloc = {};\r\n            }\r\n            var yyloc = lexer.yylloc;\r\n            lstack.push(yyloc);\r\n            var ranges = lexer.options && lexer.options.ranges;\r\n            if (typeof sharedState.yy.parseError === 'function') {\r\n                this.parseError = sharedState.yy.parseError;\r\n            }\r\n            else {\r\n                this.parseError = Object.getPrototypeOf(this).parseError;\r\n            }\r\n            function popStack(n) {\r\n                stack.length = stack.length - 2 * n;\r\n                vstack.length = vstack.length - n;\r\n                lstack.length = lstack.length - n;\r\n            }\r\n            _token_stack: var lex = function () {\r\n                var token;\r\n                token = lexer.lex() || EOF;\r\n                if (typeof token !== 'number') {\r\n                    token = self.symbols_[token] || token;\r\n                }\r\n                return token;\r\n            };\r\n            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n            while (true) {\r\n                state = stack[stack.length - 1];\r\n                if (this.defaultActions[state]) {\r\n                    action = this.defaultActions[state];\r\n                }\r\n                else {\r\n                    if (symbol === null || typeof symbol == 'undefined') {\r\n                        symbol = lex();\r\n                    }\r\n                    action = table[state] && table[state][symbol];\r\n                }\r\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                    var errStr = '';\r\n                    expected = [];\r\n                    for (p in table[state]) {\r\n                        if (this.terminals_[p] && p > TERROR) {\r\n                            expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                        }\r\n                    }\r\n                    if (lexer.showPosition) {\r\n                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                    }\r\n                    else {\r\n                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                    }\r\n                    this.parseError(errStr, {\r\n                        text: lexer.match,\r\n                        token: this.terminals_[symbol] || symbol,\r\n                        line: lexer.yylineno,\r\n                        loc: yyloc,\r\n                        expected: expected\r\n                    });\r\n                }\r\n                if (action[0] instanceof Array && action.length > 1) {\r\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n                }\r\n                switch (action[0]) {\r\n                    case 1:\r\n                        stack.push(symbol);\r\n                        vstack.push(lexer.yytext);\r\n                        lstack.push(lexer.yylloc);\r\n                        stack.push(action[1]);\r\n                        symbol = null;\r\n                        if (!preErrorSymbol) {\r\n                            yyleng = lexer.yyleng;\r\n                            yytext = lexer.yytext;\r\n                            yylineno = lexer.yylineno;\r\n                            yyloc = lexer.yylloc;\r\n                            if (recovering > 0) {\r\n                                recovering--;\r\n                            }\r\n                        }\r\n                        else {\r\n                            symbol = preErrorSymbol;\r\n                            preErrorSymbol = null;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        len = this.productions_[action[1]][1];\r\n                        yyval.$ = vstack[vstack.length - len];\r\n                        yyval._$ = {\r\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                            last_line: lstack[lstack.length - 1].last_line,\r\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                            last_column: lstack[lstack.length - 1].last_column\r\n                        };\r\n                        if (ranges) {\r\n                            yyval._$.range = [\r\n                                lstack[lstack.length - (len || 1)].range[0],\r\n                                lstack[lstack.length - 1].range[1]\r\n                            ];\r\n                        }\r\n                        r = this.performAction.apply(yyval, [\r\n                            yytext,\r\n                            yyleng,\r\n                            yylineno,\r\n                            sharedState.yy,\r\n                            action[1],\r\n                            vstack,\r\n                            lstack\r\n                        ].concat(args));\r\n                        if (typeof r !== 'undefined') {\r\n                            return r;\r\n                        }\r\n                        if (len) {\r\n                            stack = stack.slice(0, -1 * len * 2);\r\n                            vstack = vstack.slice(0, -1 * len);\r\n                            lstack = lstack.slice(0, -1 * len);\r\n                        }\r\n                        stack.push(this.productions_[action[1]][0]);\r\n                        vstack.push(yyval.$);\r\n                        lstack.push(yyval._$);\r\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n                        stack.push(newState);\r\n                        break;\r\n                    case 3:\r\n                        return true;\r\n                }\r\n            }\r\n            return true;\r\n        } };\r\n    //const Nodo = require(\"./AST/nodo_arbol\");\r\n    //var raiz;\r\n    const { Include } = require(\"../Optimizacion/Declaraciones3D/Include\");\r\n    const { Main } = require(\"../Optimizacion/Declaraciones3D/Main\");\r\n    const { Metodo } = require(\"../Optimizacion/Declaraciones3D/Metodo\");\r\n    const { Variable } = require(\"../Optimizacion/Declaraciones3D/Variable\");\r\n    const { TipoDeclaracion3D } = require(\"../Optimizacion/Declaraciones3D/Declaracion3D\");\r\n    const { Operacion3D } = require(\"../Optimizacion/Expresiones3D/Operacion3D\");\r\n    const { TipoOperacion3D } = require(\"../Optimizacion/Expresiones3D/Operacion3D\");\r\n    const { Primitiva3D } = require(\"../Optimizacion/Expresiones3D/Primitiva3D\");\r\n    const { TipoPrim3D } = require(\"../Optimizacion/Expresiones3D/Primitiva3D\");\r\n    const { TipoExpresion3D } = require(\"../Optimizacion/Expresiones3D/Expresion3D\");\r\n    const { TipoInstruccion3D } = require(\"../Optimizacion/Instrucciones3D/Instruccion3D\");\r\n    const { Asignacion3D } = require(\"../Optimizacion/Instrucciones3D/Asignacion3D\");\r\n    const { Llamada3D } = require(\"../Optimizacion/Instrucciones3D/Llamada3D\");\r\n    const { Etiqueta3D } = require(\"../Optimizacion/Instrucciones3D/Etiqueta3D\");\r\n    const { Goto3D } = require(\"../Optimizacion/Instrucciones3D/Goto3D\");\r\n    const { If3D } = require(\"../Optimizacion/Instrucciones3D/If3D\");\r\n    const { Printf3D } = require(\"../Optimizacion/Instrucciones3D/Printf3D\");\r\n    const { Return3D } = require(\"../Optimizacion/Instrucciones3D/Return3D\");\r\n    const errores = require('../Global/ListaError');\r\n    let codigo3D = \"\";\r\n    /* generated by jison-lex 0.3.4 */\r\n    var lexer = (function () {\r\n        var lexer = ({\r\n            EOF: 1,\r\n            parseError: function parseError(str, hash) {\r\n                if (this.yy.parser) {\r\n                    this.yy.parser.parseError(str, hash);\r\n                }\r\n                else {\r\n                    throw new Error(str);\r\n                }\r\n            },\r\n            // resets the lexer, sets new input\r\n            setInput: function (input, yy) {\r\n                this.yy = yy || this.yy || {};\r\n                this._input = input;\r\n                this._more = this._backtrack = this.done = false;\r\n                this.yylineno = this.yyleng = 0;\r\n                this.yytext = this.matched = this.match = '';\r\n                this.conditionStack = ['INITIAL'];\r\n                this.yylloc = {\r\n                    first_line: 1,\r\n                    first_column: 0,\r\n                    last_line: 1,\r\n                    last_column: 0\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [0, 0];\r\n                }\r\n                this.offset = 0;\r\n                return this;\r\n            },\r\n            // consumes and returns one char from the input\r\n            input: function () {\r\n                var ch = this._input[0];\r\n                this.yytext += ch;\r\n                this.yyleng++;\r\n                this.offset++;\r\n                this.match += ch;\r\n                this.matched += ch;\r\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno++;\r\n                    this.yylloc.last_line++;\r\n                }\r\n                else {\r\n                    this.yylloc.last_column++;\r\n                }\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range[1]++;\r\n                }\r\n                this._input = this._input.slice(1);\r\n                return ch;\r\n            },\r\n            // unshifts one char (or a string) into the input\r\n            unput: function (ch) {\r\n                var len = ch.length;\r\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n                this._input = ch + this._input;\r\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n                //this.yyleng -= len;\r\n                this.offset -= len;\r\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n                this.match = this.match.substr(0, this.match.length - 1);\r\n                this.matched = this.matched.substr(0, this.matched.length - 1);\r\n                if (lines.length - 1) {\r\n                    this.yylineno -= lines.length - 1;\r\n                }\r\n                var r = this.yylloc.range;\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: lines ?\r\n                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                            + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n                        this.yylloc.first_column - len\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n                }\r\n                this.yyleng = this.yytext.length;\r\n                return this;\r\n            },\r\n            // When called from action, caches matched text and appends it on next action\r\n            more: function () {\r\n                this._more = true;\r\n                return this;\r\n            },\r\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n            reject: function () {\r\n                if (this.options.backtrack_lexer) {\r\n                    this._backtrack = true;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n                return this;\r\n            },\r\n            // retain first n characters of the match\r\n            less: function (n) {\r\n                this.unput(this.match.slice(n));\r\n            },\r\n            // displays already matched input, i.e. for error messages\r\n            pastInput: function () {\r\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\r\n            },\r\n            // displays upcoming input, i.e. for error messages\r\n            upcomingInput: function () {\r\n                var next = this.match;\r\n                if (next.length < 20) {\r\n                    next += this._input.substr(0, 20 - next.length);\r\n                }\r\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n            },\r\n            // displays the character position where the lexing error occurred, i.e. for error messages\r\n            showPosition: function () {\r\n                var pre = this.pastInput();\r\n                var c = new Array(pre.length + 1).join(\"-\");\r\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n            },\r\n            // test the lexed token: return FALSE when not a match, otherwise return token\r\n            test_match: function (match, indexed_rule) {\r\n                var token, lines, backup;\r\n                if (this.options.backtrack_lexer) {\r\n                    // save context\r\n                    backup = {\r\n                        yylineno: this.yylineno,\r\n                        yylloc: {\r\n                            first_line: this.yylloc.first_line,\r\n                            last_line: this.last_line,\r\n                            first_column: this.yylloc.first_column,\r\n                            last_column: this.yylloc.last_column\r\n                        },\r\n                        yytext: this.yytext,\r\n                        match: this.match,\r\n                        matches: this.matches,\r\n                        matched: this.matched,\r\n                        yyleng: this.yyleng,\r\n                        offset: this.offset,\r\n                        _more: this._more,\r\n                        _input: this._input,\r\n                        yy: this.yy,\r\n                        conditionStack: this.conditionStack.slice(0),\r\n                        done: this.done\r\n                    };\r\n                    if (this.options.ranges) {\r\n                        backup.yylloc.range = this.yylloc.range.slice(0);\r\n                    }\r\n                }\r\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno += lines.length;\r\n                }\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.last_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.last_column,\r\n                    last_column: lines ?\r\n                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                        this.yylloc.last_column + match[0].length\r\n                };\r\n                this.yytext += match[0];\r\n                this.match += match[0];\r\n                this.matches = match;\r\n                this.yyleng = this.yytext.length;\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n                }\r\n                this._more = false;\r\n                this._backtrack = false;\r\n                this._input = this._input.slice(match[0].length);\r\n                this.matched += match[0];\r\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n                if (this.done && this._input) {\r\n                    this.done = false;\r\n                }\r\n                if (token) {\r\n                    return token;\r\n                }\r\n                else if (this._backtrack) {\r\n                    // recover context\r\n                    for (var k in backup) {\r\n                        this[k] = backup[k];\r\n                    }\r\n                    return false; // rule action called reject() implying the next rule should be tested instead.\r\n                }\r\n                return false;\r\n            },\r\n            // return next match in input\r\n            next: function () {\r\n                if (this.done) {\r\n                    return this.EOF;\r\n                }\r\n                if (!this._input) {\r\n                    this.done = true;\r\n                }\r\n                var token, match, tempMatch, index;\r\n                if (!this._more) {\r\n                    this.yytext = '';\r\n                    this.match = '';\r\n                }\r\n                var rules = this._currentRules();\r\n                for (var i = 0; i < rules.length; i++) {\r\n                    tempMatch = this._input.match(this.rules[rules[i]]);\r\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                        match = tempMatch;\r\n                        index = i;\r\n                        if (this.options.backtrack_lexer) {\r\n                            token = this.test_match(tempMatch, rules[i]);\r\n                            if (token !== false) {\r\n                                return token;\r\n                            }\r\n                            else if (this._backtrack) {\r\n                                match = false;\r\n                                continue; // rule action called reject() implying a rule MISmatch.\r\n                            }\r\n                            else {\r\n                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else if (!this.options.flex) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (match) {\r\n                    token = this.test_match(match, rules[index]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    }\r\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                    return false;\r\n                }\r\n                if (this._input === \"\") {\r\n                    return this.EOF;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n            },\r\n            // return next match that has a token\r\n            lex: function lex() {\r\n                var r = this.next();\r\n                if (r) {\r\n                    return r;\r\n                }\r\n                else {\r\n                    return this.lex();\r\n                }\r\n            },\r\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n            begin: function begin(condition) {\r\n                this.conditionStack.push(condition);\r\n            },\r\n            // pop the previously active lexer condition state off the condition stack\r\n            popState: function popState() {\r\n                var n = this.conditionStack.length - 1;\r\n                if (n > 0) {\r\n                    return this.conditionStack.pop();\r\n                }\r\n                else {\r\n                    return this.conditionStack[0];\r\n                }\r\n            },\r\n            // produce the lexer rule set which is active for the currently active lexer condition state\r\n            _currentRules: function _currentRules() {\r\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n                }\r\n                else {\r\n                    return this.conditions[\"INITIAL\"].rules;\r\n                }\r\n            },\r\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n            topState: function topState(n) {\r\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n                if (n >= 0) {\r\n                    return this.conditionStack[n];\r\n                }\r\n                else {\r\n                    return \"INITIAL\";\r\n                }\r\n            },\r\n            // alias for begin(condition)\r\n            pushState: function pushState(condition) {\r\n                this.begin(condition);\r\n            },\r\n            // return the number of states currently on the stack\r\n            stateStackSize: function stateStackSize() {\r\n                return this.conditionStack.length;\r\n            },\r\n            options: { \"case-insensitive\": true },\r\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n                var YYSTATE = YY_START;\r\n                switch ($avoiding_name_collisions) {\r\n                    case 0: /* skip whitespace */\r\n                        break;\r\n                    case 1:\r\n                        this.begin('comment');\r\n                        break;\r\n                    case 2:\r\n                        this.popState();\r\n                        break;\r\n                    case 3: /* skip comment content*/\r\n                        break;\r\n                    case 4:\r\n                        return \"ext_h\";\r\n                        break;\r\n                    case 5:\r\n                        return \"corA\";\r\n                        break;\r\n                    case 6:\r\n                        return \"corC\";\r\n                        break;\r\n                    case 7:\r\n                        return \"llaveA\";\r\n                        break;\r\n                    case 8:\r\n                        return \"llaveC\";\r\n                        break;\r\n                    case 9:\r\n                        return \"parA\";\r\n                        break;\r\n                    case 10:\r\n                        return \"parC\";\r\n                        break;\r\n                    case 11:\r\n                        return \"dospuntos\";\r\n                        break;\r\n                    case 12:\r\n                        return \"puntocoma\";\r\n                        break;\r\n                    case 13:\r\n                        return \"coma\";\r\n                        break;\r\n                    case 14:\r\n                        return 48;\r\n                        break;\r\n                    case 15:\r\n                        return 47;\r\n                        break;\r\n                    case 16:\r\n                        return 8;\r\n                        break;\r\n                    case 17:\r\n                        return 11;\r\n                        break;\r\n                    case 18:\r\n                        return 49;\r\n                        break;\r\n                    case 19:\r\n                        return 31;\r\n                        break;\r\n                    case 20:\r\n                        return \"neq\";\r\n                        break;\r\n                    case 21:\r\n                        return 45;\r\n                        break;\r\n                    case 22:\r\n                        return 46;\r\n                        break;\r\n                    case 23:\r\n                        return 44;\r\n                        break;\r\n                    case 24:\r\n                        return \"mas\";\r\n                        break;\r\n                    case 25:\r\n                        return \"menos\";\r\n                        break;\r\n                    case 26:\r\n                        return \"main\";\r\n                        break;\r\n                    case 27:\r\n                        return \"return\";\r\n                        break;\r\n                    case 28:\r\n                        return \"void\";\r\n                        break;\r\n                    case 29:\r\n                        return \"float\";\r\n                        break;\r\n                    case 30:\r\n                        return \"printf\";\r\n                        break;\r\n                    case 31:\r\n                        return \"char\";\r\n                        break;\r\n                    case 32:\r\n                        return \"int\";\r\n                        break;\r\n                    case 33:\r\n                        return \"double\";\r\n                        break;\r\n                    case 34:\r\n                        return \"if\";\r\n                        break;\r\n                    case 35:\r\n                        return \"goto\";\r\n                        break;\r\n                    case 36:\r\n                        return \"include\";\r\n                        break;\r\n                    case 37:\r\n                        return 51;\r\n                        break;\r\n                    case 38:\r\n                        return 14;\r\n                        break;\r\n                    case 39:\r\n                        return 9;\r\n                        break;\r\n                    case 40:\r\n                        return 37;\r\n                        break;\r\n                    case 41:\r\n                        return 'cadena2';\r\n                        break;\r\n                    case 42:\r\n                        break;\r\n                    case 43:\r\n                        return 5;\r\n                        break;\r\n                    case 44:\r\n                        console.log(\"Error Lexico: \" + yy_.yytext);\r\n                        break;\r\n                }\r\n            },\r\n            rules: [/^(?:\\/\\/.*\\s+)/i, /^(?:\\/\\*)/i, /^(?:\\*\\/)/i, /^(?:.)/i, /^(?:\\.h\\b)/i, /^(?:\\[)/i, /^(?:\\])/i, /^(?:\\{)/i, /^(?:\\})/i, /^(?:\\()/i, /^(?:\\))/i, /^(?::)/i, /^(?:;)/i, /^(?:,)/i, /^(?:>=)/i, /^(?:<=)/i, /^(?:<)/i, /^(?:>)/i, /^(?:==)/i, /^(?:=)/i, /^(?:!=)/i, /^(?:\\/)/i, /^(?:%)/i, /^(?:\\*)/i, /^(?:\\+)/i, /^(?:-)/i, /^(?:main\\b)/i, /^(?:return\\b)/i, /^(?:void\\b)/i, /^(?:float\\b)/i, /^(?:printf\\b)/i, /^(?:char\\b)/i, /^(?:int\\b)/i, /^(?:double\\b)/i, /^(?:if\\b)/i, /^(?:goto\\b)/i, /^(?:#include\\b)/i, /^(?:(([0-9]+\\.[0-9]*)|(\\.[0-9]+)))/i, /^(?:[0-9]+)/i, /^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ]*)/i, /^(?:(\"((\\\\([\\'\\\"\\\\]))|([^\\\"\\\\]+))*\"))/i, /^(?:('((\\\\([\\'\\\"\\\\]))|([^\\'\\\\]))*'))/i, /^(?:[ \\t\\r\\n\\f])/i, /^(?:$)/i, /^(?:.)/i],\r\n            conditions: { \"comment\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], \"inclusive\": true }, \"INITIAL\": { \"rules\": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], \"inclusive\": true } }\r\n        });\r\n        return lexer;\r\n    })();\r\n    parser.lexer = lexer;\r\n    function Parser() {\r\n        this.yy = {};\r\n    }\r\n    Parser.prototype = parser;\r\n    parser.Parser = Parser;\r\n    return new Parser;\r\n})();\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\n    exports.parser = Optimizacion_Grammar;\r\n    exports.Parser = Optimizacion_Grammar.Parser;\r\n    exports.parse = function () { return Optimizacion_Grammar.parse.apply(Optimizacion_Grammar, arguments); };\r\n    exports.main = function commonjsMain(args) {\r\n        if (!args[1]) {\r\n            console.log('Usage: ' + args[0] + ' FILE');\r\n            process.exit(1);\r\n        }\r\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n        return exports.parser.parse(source);\r\n    };\r\n    if (typeof module !== 'undefined' && require.main === module) {\r\n        exports.main(process.argv.slice(1));\r\n    }\r\n}\r\n","export class Flwor {\r\n    constructor(opcionales, retType, linea, columna) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.retType = retType;\r\n        this.opcionales = opcionales;\r\n    }\r\n    getCodigo3Dir(XQueryEnt, xmlEnt, traductorXPath, traductorXQuery) {\r\n        let code = \"\";\r\n        //Se ejecutan las intrucciones opcionales (Let, for, where, order by) ( Si es que hay)\r\n        this.opcionales.forEach((opcional) => {\r\n            code += opcional.getCodigo3Dir(XQueryEnt, xmlEnt, traductorXPath, traductorXQuery);\r\n        });\r\n        //Se ejecuta el return y se retorna el resultado (Objeto)\r\n        code += this.retType.getCodigo3Dir(XQueryEnt, xmlEnt, traductorXPath, traductorXQuery);\r\n        return code;\r\n    }\r\n    ejecutar(XQEnt, xmlEnt) {\r\n        //Se ejecutan las intrucciones opcionales (Let, for, where, order by) ( Si es que hay)\r\n        console.log(\"ejecutando FLwor\");\r\n        this.opcionales.forEach((opcional) => {\r\n            opcional.ejecutar(XQEnt, xmlEnt);\r\n        });\r\n        //Se ejecuta el return y se retorna el resultado (Objeto)\r\n        let x = this.retType.ejecutar(XQEnt, xmlEnt);\r\n        console.log(\"x\", x);\r\n        return x;\r\n    }\r\n}\r\n","import { Simbolo } from \"../AST/Simbolo\";\r\nimport { Tipo } from \"../AST/Tipo\";\r\nimport { Operacion } from \"../Expresiones/Operacion\";\r\nimport { Consulta } from \"../XPath/Consulta\";\r\nimport { Nodo, TipoNodo } from \"../XPath/Nodo\";\r\nexport class Where {\r\n    constructor(identificador, condicion, fromRoot, linea, columna) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.identificador = identificador;\r\n        this.condicion = condicion;\r\n        this.fromRoot = fromRoot;\r\n    }\r\n    getCodigo3Dir(XQueryEnt, xmlEnt, traductorXPath, traductorXQuery) {\r\n        let code = \"\";\r\n        return code;\r\n    }\r\n    isFromRoot() {\r\n        //SI el nodo es // devuelve false, si el nodo es de tipo / devuelve true.\r\n        return this.fromRoot;\r\n    }\r\n    ejecutar(XQEnt, xmlEnt) {\r\n        let listaRedefinida = [];\r\n        //ej: where $x/price>30   <-- id: $x , condicion = price > 30, fromRoot = / o //\r\n        //1. Obtener $x\r\n        let simb = XQEnt.obtenerSimbolo(this.identificador);\r\n        //2. Sobre $x buscar quienes cumplen con la condicion.\r\n        if (simb != null) {\r\n            if (this.isFromRoot()) {\r\n                //simb.valor es la respuesta a la consulta del for ( Array<any> )\r\n                simb.valor.forEach((s) => {\r\n                    //s.valor es un entorno donde se debe validar la condicion\r\n                    let auxEnt = s.valor;\r\n                    let respuesta = this.condicion.getValor(auxEnt);\r\n                    //Si la respuesta tiene algun valor, agregar S\r\n                    if (respuesta != null) {\r\n                        if (respuesta.tsimbolos != undefined && respuesta.tsimbolos.length > 0) {\r\n                            listaRedefinida = listaRedefinida.concat(s);\r\n                        }\r\n                        else if (respuesta.tsimbolos === undefined && respuesta) {\r\n                            listaRedefinida = listaRedefinida.concat(s);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            if (listaRedefinida.length == 0 && !this.isFromRoot()) {\r\n                //Si es // buscar en este entorno y en los hijos a ver si se encuentra la condicion.\r\n                //Obtener operador izquierdo.\r\n                let izq = null;\r\n                if (this.condicion instanceof Operacion) {\r\n                    izq = this.condicion.op_izq;\r\n                    let auxLista = [];\r\n                    simb.valor.forEach((s) => {\r\n                        let newNodo = new Nodo(izq.getValorInicial(xmlEnt), TipoNodo.IDENTIFIER, this.linea, this.columna);\r\n                        newNodo.fromRoot = false;\r\n                        let auxCons = new Consulta([newNodo], this.linea, this.columna);\r\n                        let newEnt = auxCons.ejecutar(s.valor);\r\n                        if (newEnt.length > 0) {\r\n                            auxLista.push(s);\r\n                        }\r\n                    });\r\n                    if (auxLista.length > 0) {\r\n                        //Para cada elemento aca realizar la operacion\r\n                        auxLista.forEach((s) => {\r\n                            let respuesta = this.condicion.getValor(s.getValor());\r\n                            if (respuesta != null) {\r\n                                if (respuesta.tsimbolos != undefined && respuesta.tsimbolos.length > 0) {\r\n                                    listaRedefinida = listaRedefinida.concat(s);\r\n                                }\r\n                                else if (respuesta.tsimbolos === undefined && respuesta) {\r\n                                    listaRedefinida = listaRedefinida.concat(s);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            //Sobreescribir la variable con la lista redefinida\r\n            let nuevoSimbolo = new Simbolo(Tipo.XQ_VAR, this.identificador, listaRedefinida, this.linea, this.columna);\r\n            if (XQEnt.sobreEscribirSimbolo(this.identificador, nuevoSimbolo)) {\r\n            }\r\n            else {\r\n                console.log(\"Error, no se pudo sobreescribir simbolo: $\", this.identificador);\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"ERROR WHERE, SIMBOLO NO ENCONTRADO: \", simb);\r\n        }\r\n    }\r\n}\r\n","export class For {\r\n    constructor(listaFor, linea, columna) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.listaFor = listaFor;\r\n    }\r\n    ejecutar(XQueryEnt, xmlEnt) {\r\n        //Un for puede ser: for $x in //book, at $i in //bok (Separados por coma)\r\n        console.log(\"Ejecutando for\");\r\n        for (let i = 0; i < this.listaFor.length; i++) {\r\n            let forElem = this.listaFor[i];\r\n            forElem.ejecutar(XQueryEnt, xmlEnt);\r\n        }\r\n    }\r\n    getCodigo3Dir(XQueryEnt, xmlEnt, traductorXPath, traductorXQuery) {\r\n        let code = \"\";\r\n        for (let i = 0; i < this.listaFor.length; i++) {\r\n            let forElem = this.listaFor[i];\r\n            code += forElem.getCodigo3Dir(XQueryEnt, xmlEnt, traductorXPath, traductorXQuery);\r\n        }\r\n        return code;\r\n    }\r\n}\r\n","import { Simbolo } from \"../AST/Simbolo\";\r\nimport { Tipo } from \"../AST/Tipo\";\r\nexport class Let {\r\n    constructor(identifier, consultas, linea, columna, desde, hasta, listaEnteros, expresion) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.consultas = consultas;\r\n        this.listaEnteros = listaEnteros;\r\n        this.identifier = identifier;\r\n        this.expresion = expresion;\r\n        if (desde != undefined && hasta != undefined) {\r\n            this.desde = +desde;\r\n            this.hasta = +hasta;\r\n        }\r\n    }\r\n    getCodigo3Dir(XQueryEnt, xmlEnt, traductorXPath, traductorXQuery) {\r\n        let code = \"\";\r\n        return code;\r\n    }\r\n    ejecutar(XQEnt, xmlEnt) {\r\n        let listaSimbolos = [];\r\n        if (this.consultas != undefined) {\r\n            this.consultas.forEach((consulta) => {\r\n                listaSimbolos.push(consulta.ejecutar(xmlEnt));\r\n            });\r\n            let newSimb = new Simbolo(Tipo.XQ_VAR, this.identifier, listaSimbolos, this.linea, this.columna);\r\n            XQEnt.agregarSimbolo(this.identifier, newSimb);\r\n        }\r\n        else if (this.listaEnteros != undefined) {\r\n            let newSimb = new Simbolo(Tipo.XQ_VAR, this.identifier, this.listaEnteros, this.linea, this.columna);\r\n            XQEnt.agregarSimbolo(this.identifier, newSimb);\r\n        }\r\n        else if (this.desde != undefined && this.hasta != undefined) {\r\n            for (let i = this.desde; i <= this.hasta; i++) {\r\n                console.log(\"i: \", i);\r\n                listaSimbolos.push(\"\" + i);\r\n            }\r\n            let newSimb = new Simbolo(Tipo.XQ_VAR, this.identifier, listaSimbolos, this.linea, this.columna);\r\n            XQEnt.agregarSimbolo(this.identifier, newSimb);\r\n            console.log(\"SIMBOLO: \", XQEnt.obtenerSimbolo(this.identifier));\r\n        }\r\n    }\r\n}\r\n","import { Simbolo } from \"../AST/Simbolo\";\r\nimport { Tipo } from \"../AST/Tipo\";\r\nimport { NativaXQuery } from \"../Traduccion/TranslateXQuery\";\r\nimport { Consulta } from \"../XPath/Consulta\";\r\nexport class OrderBy {\r\n    constructor(listaSort, linea, columna) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.listaSort = listaSort;\r\n    }\r\n    getCodigo3Dir(XQueryEnt, xmlEnt, traductorXPath, traductorXQuery) {\r\n        let code = \"\";\r\n        this.ejecutar(XQueryEnt, xmlEnt);\r\n        //Declarar temp donde voy a guardar $id en el stack\r\n        code += \"/*---- INICIA ORDER BY --*/\";\r\n        let temporal = 'tq' + traductorXQuery.contT;\r\n        code += '\\n\\t' + temporal + \" = HQ;\\n\";\r\n        traductorXQuery.contT++;\r\n        //1. Obtener $id\r\n        let n = 0;\r\n        let criterioActual = this.listaSort[n];\r\n        let listaSimbs = XQueryEnt.obtenerSimbolo(criterioActual.identifier);\r\n        //2.5 Poner un -13 de referencia para saber donde inicia  y termina este simbolo del XQUERY\r\n        code += '\\tXQHeap[(int)HQ] = -13;\\n';\r\n        code += '\\t HQ = HQ + 1;\\n';\r\n        if (listaSimbs instanceof Array) {\r\n            for (let i = 0; i < listaSimbs.length; i++) {\r\n                let s = listaSimbs[i];\r\n                //Es una lista de simbolos.\r\n                code += \"\\t/*--- TRASLADANDO \" + s.nombre + \" HACIA EL HEAP DEL XQUERY --- */\\n\";\r\n                code += '\\t H = stack[(int)' + s.posicion + ']; \\n';\r\n                //H tiene la posicion del heap (xml) donde inicia el simbolo.\r\n                //2. Llamar a funcion para que escribe el simbolo en el heap del xpath.\r\n                code += '\\tfromHeapToXQHeap();\\n';\r\n                if (traductorXQuery.funcionesUtilizadas.indexOf(NativaXQuery.FROMHEAPTOXQHEAP) === -1) {\r\n                    //Agregar a la lista de funciones que se utilizaran.\r\n                    traductorXQuery.funcionesUtilizadas.push(NativaXQuery.FROMHEAPTOXQHEAP);\r\n                }\r\n            }\r\n        }\r\n        //2.5 Poner un -13 de referencia para saber donde inicia  y termina este simbolo del XQUERY\r\n        code += '\\tXQHeap[(int)HQ] = -13;\\n';\r\n        code += '\\t HQ = HQ + 1;\\n';\r\n        code += '\\t/*--- GUARDAR EN STACK DE XQUERY --*/\\n';\r\n        code += '\\t\\nXQStack[(int)SQ] = ' + temporal + ';\\n';\r\n        code += '\\tSQ = SQ + 1;\\n';\r\n        return code;\r\n    }\r\n    ejecutar(XQEnt, xmlEnt) {\r\n        //Order by $x/book/title\r\n        //this.listaSort[0].ejecutar(XQEnt, xmlEnt)\r\n        let listaOrdenada = [];\r\n        let n = 0;\r\n        let criterioActual = this.listaSort[n];\r\n        //Ordernar alfabeticamente o numericamente ascendente\r\n        //1. Obtener $id\r\n        let listaSimbs = XQEnt.obtenerSimbolo(criterioActual.identifier);\r\n        //2. simb.valor tiene la lista de simbolos con la consulta.\r\n        //Obtener la consulta completa (listanodos)\r\n        listaOrdenada = this.ordenarPorCriterios(listaOrdenada, listaSimbs, n);\r\n        //3. Guardar la lista ordenada en la tabla de simbolos\r\n        let Ordenada = new Simbolo(Tipo.XQ_VAR, criterioActual.identifier, listaOrdenada, this.linea, this.columna);\r\n        XQEnt.sobreEscribirSimbolo(criterioActual.identifier, Ordenada);\r\n    }\r\n    ordenarPorCriterios(listaOrdenada, listaSimbs, n) {\r\n        let listaTextos = [];\r\n        let criterioActual = this.listaSort[n];\r\n        for (let i = 0; i < listaSimbs.valor.length; i++) {\r\n            let consultaTemp = new Consulta(criterioActual.listaNodos, this.linea, this.columna);\r\n            let auxSimb = listaSimbs.valor[i].valor;\r\n            let auxRespuesta = consultaTemp.ejecutar(auxSimb);\r\n            for (let j = 0; j < auxRespuesta.length; j++) {\r\n                let auxSimbRes = auxRespuesta[j];\r\n                let textoCompare = this.obtenerTexto(auxSimbRes);\r\n                if (textoCompare != null) {\r\n                    //Comparar este texto con todos los anteriores en la lista.\r\n                    let flag = false;\r\n                    if (i > 0) {\r\n                        for (let k = 0; k < i; k++) {\r\n                            let numero = +textoCompare;\r\n                            let numLista = +listaTextos[k];\r\n                            if (!isNaN(numero) && !isNaN(numLista)) {\r\n                                if (numLista > numero) {\r\n                                    [listaTextos, listaOrdenada] = this.reOrdenar(listaTextos, textoCompare, listaOrdenada, listaSimbs.valor[i], k);\r\n                                    flag = true;\r\n                                    break;\r\n                                }\r\n                                else if (numLista === numero) {\r\n                                    //Si son iguales, ver el proximo criterio de ordenamiento\r\n                                    let sigCriterio = this.listaSort[n + 1];\r\n                                    if (sigCriterio != undefined) {\r\n                                        let desemp = this.desempatar(listaSimbs.valor[i], listaOrdenada[k], n + 1);\r\n                                        if (desemp) {\r\n                                            flag = true;\r\n                                            [listaTextos, listaOrdenada] = this.reOrdenar(listaTextos, textoCompare, listaOrdenada, listaSimbs.valor[i], k);\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            else if (listaTextos[k] > textoCompare) {\r\n                                //poner el nuevo texto en esta posicion k\r\n                                //Desplazar lo que ya existia una posicioon\r\n                                [listaTextos, listaOrdenada] = this.reOrdenar(listaTextos, textoCompare, listaOrdenada, listaSimbs.valor[i], k);\r\n                                flag = true;\r\n                                break;\r\n                            }\r\n                            else if (listaTextos[k] === textoCompare) {\r\n                                //Si son iguales. Obtener el proximo criterio de ordenamiento\r\n                                let sigCriterio = this.listaSort[n + 1];\r\n                                if (sigCriterio != undefined) {\r\n                                    let desemp = this.desempatar(listaSimbs.valor[i], listaOrdenada[k], n + 1);\r\n                                    if (desemp) {\r\n                                        flag = true;\r\n                                        [listaTextos, listaOrdenada] = this.reOrdenar(listaTextos, textoCompare, listaOrdenada, listaSimbs.valor[i], k);\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if (!flag) {\r\n                            listaTextos.push(textoCompare);\r\n                            listaOrdenada.push(listaSimbs.valor[i]);\r\n                        }\r\n                    }\r\n                    else {\r\n                        listaTextos.push(textoCompare);\r\n                        listaOrdenada.push(listaSimbs.valor[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return listaOrdenada;\r\n    }\r\n    desempatar(valComparar, valYaEnLista, posCriterio) {\r\n        let nuevoCriterio = this.listaSort[posCriterio];\r\n        let consultaTemp = new Consulta(nuevoCriterio.listaNodos, this.linea, this.columna);\r\n        let auxSimb = valComparar.valor;\r\n        let auxRespuesta = consultaTemp.ejecutar(auxSimb);\r\n        let auxYaEnLista = valYaEnLista.valor;\r\n        let auxRespuestaYaEnLista = consultaTemp.ejecutar(auxYaEnLista);\r\n        for (let i = 0; i < auxRespuesta.length; i++) {\r\n            let auxSimbRes = auxRespuesta[i];\r\n            let textoCompare = this.obtenerTexto(auxSimbRes);\r\n            if (textoCompare != null) {\r\n                for (let j = 0; j < auxRespuestaYaEnLista.length; j++) {\r\n                    let auxSimbYaRes = auxRespuestaYaEnLista[j];\r\n                    let textoYaEnLista = this.obtenerTexto(auxSimbYaRes);\r\n                    if (textoYaEnLista != null) {\r\n                        let numero = +textoCompare;\r\n                        let numLista = +textoYaEnLista;\r\n                        if (!isNaN(numero) && !isNaN(numLista)) {\r\n                            if (numLista > numero) {\r\n                                return true;\r\n                            }\r\n                            else if (numLista === numero) {\r\n                                let sigCriterio = this.listaSort[posCriterio + 1];\r\n                                if (sigCriterio != undefined) {\r\n                                    return this.desempatar(valComparar, valYaEnLista, posCriterio + 1);\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (textoYaEnLista > textoCompare) {\r\n                            return true;\r\n                        }\r\n                        else if (textoYaEnLista === textoCompare) {\r\n                            let sigCriterio = this.listaSort[posCriterio + 1];\r\n                            if (sigCriterio != undefined) {\r\n                                return this.desempatar(valComparar, valYaEnLista, posCriterio + 1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    reOrdenar(listaTextos, nuevoTexto, listaOrdenada, nuevoSimb, indiceReemplazar) {\r\n        let nuevaListaText = [];\r\n        let nuevaListaSimb = [];\r\n        for (let i = 0; i < listaTextos.length; i++) {\r\n            if (i === indiceReemplazar) {\r\n                nuevaListaText.push(nuevoTexto);\r\n                nuevaListaSimb.push(nuevoSimb);\r\n            }\r\n            nuevaListaText.push(listaTextos[i]);\r\n            nuevaListaSimb.push(listaOrdenada[i]);\r\n        }\r\n        return [nuevaListaText, nuevaListaSimb];\r\n    }\r\n    obtenerTexto(etiqueta) {\r\n        for (let i = 0; i < etiqueta.valor.tsimbolos.length; i++) {\r\n            if (etiqueta.valor.tsimbolos[i].valor.getTipo() === Tipo.STRING) {\r\n                return etiqueta.valor.tsimbolos[i].valor.getValor();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","export class Sort {\r\n    constructor(identifier, listaNodos, linea, columna) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.identifier = identifier;\r\n        this.listaNodos = listaNodos;\r\n    }\r\n}\r\n","import { Consulta } from \"../XPath/Consulta\";\r\nexport class CondicionIf {\r\n    constructor(identificador, listaNodos, etiqueta, funcionXQ, vacio, linea, columna, llamadaFuncion) {\r\n        this.etiqueta = etiqueta;\r\n        this.identificador = identificador;\r\n        this.listaNodos = listaNodos;\r\n        this.funcionXQ = funcionXQ;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.vacio = vacio;\r\n        this.llamadaFuncion = llamadaFuncion;\r\n    }\r\n    isVacio() {\r\n        return this.vacio;\r\n    }\r\n    obtenerResponse(simbolo) {\r\n        if (this.identificador != undefined && this.listaNodos != undefined) {\r\n            //Es del tipo: $x/algo/otro\r\n            //1. Sobre el simbolo recibido, obtener la consulta\r\n            let tempC = new Consulta(this.listaNodos, this.linea, this.columna);\r\n            let resp = [];\r\n            return resp.concat(tempC.ejecutar(simbolo.valor));\r\n        }\r\n        else if (this.funcionXQ != undefined) {\r\n            //Es del tipo: data($id/algo)\r\n            let resp = [];\r\n            resp = resp.concat(this.funcionXQ.getSobreEntornoXML(simbolo.valor));\r\n            //resp.concat(simbolo);\r\n            return resp;\r\n        }\r\n        else if (this.llamadaFuncion != undefined) {\r\n        }\r\n        return [];\r\n    }\r\n}\r\n","export class Html {\r\n    constructor(identifier, atributos, texto, listaHtml, listaVarCall, isUnica, linea, columna) {\r\n        this.linea = linea;\r\n        this.listaVarCall = listaVarCall;\r\n        this.columna = columna;\r\n        this.isUnica = isUnica;\r\n        this.identifier = identifier;\r\n        this.listaHtml = listaHtml;\r\n        this.atributos = atributos;\r\n        this.texto = texto;\r\n    }\r\n    ejecutar(ent) {\r\n    }\r\n}\r\n","export class IfThenElse {\r\n    constructor(identificador, condicion, respThen, listaElseIf, respElse, fromRoot, linea, columna) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.identificador = identificador;\r\n        this.condicion = condicion;\r\n        this.condicionElse = respElse;\r\n        this.condicionThen = respThen;\r\n        this.listaElseIf = listaElseIf;\r\n        this.fromRoot = fromRoot;\r\n    }\r\n    isFromRoot() {\r\n        return this.fromRoot;\r\n    }\r\n    getCodigo3Dir(XQueryEnt, xmlEnt, traductorXPath, traductorXQuery) {\r\n        let code = \"\";\r\n        return code;\r\n    }\r\n    ejecutar(XQEnt, xmlEnt) {\r\n        let nuevaLista = [];\r\n        if (this.identificador) {\r\n            //1. Obtener simbolo\r\n            let ls = XQEnt.obtenerSimbolo(this.identificador);\r\n            //2. Ver si es fromRoot / o no //\r\n            if (this.isFromRoot()) {\r\n                //Es /, buscar la expresion solo sobre este entorno\r\n                ls.valor.forEach((s) => {\r\n                    let et = s.valor;\r\n                    let respuesta = this.condicion.getValor(et);\r\n                    if (respuesta != null && respuesta != undefined) {\r\n                        //Aplicarle la response del THEN\r\n                        if (respuesta.tsimbolos !== undefined && respuesta.tsimbolos.length > 0) {\r\n                            if (!this.condicionThen.isVacio()) {\r\n                                nuevaLista = nuevaLista.concat(this.condicionThen.obtenerResponse(s));\r\n                            }\r\n                        }\r\n                        else if (respuesta.tsimbolos === undefined && respuesta) {\r\n                            if (!this.condicionThen.isVacio()) {\r\n                                nuevaLista = nuevaLista.concat(this.condicionThen.obtenerResponse(s));\r\n                            }\r\n                        }\r\n                        else {\r\n                            //Ver si aplicar la respuesta de algun ELSE IF o ELSE\r\n                            let aplicado = false;\r\n                            for (let x = 0; x < this.listaElseIf.length; x++) {\r\n                                //Para cada else if valuar para ver si aplica uno.\r\n                                let unElseIf = this.listaElseIf[x];\r\n                                if (unElseIf.condicionCumple(et)) {\r\n                                    //Si cumple, aplicar la respuesta de este else if y break.\r\n                                    aplicado = true;\r\n                                    nuevaLista = nuevaLista.concat(unElseIf.obtenerResponse(s));\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!aplicado && !this.condicionElse.isVacio()) {\r\n                                nuevaLista = nuevaLista.concat(this.condicionElse.obtenerResponse(s));\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        //Ver si aplicar la respuesta de algun ELSE IF o ELSE\r\n                        let aplicado = false;\r\n                        for (let x = 0; x < this.listaElseIf.length; x++) {\r\n                            //Para cada else if valuar para ver si aplica uno.\r\n                            let unElseIf = this.listaElseIf[x];\r\n                            if (unElseIf.condicionCumple(et)) {\r\n                                //Si cumple, aplicar la respuesta de este else if y break.\r\n                                aplicado = true;\r\n                                nuevaLista = nuevaLista.concat(unElseIf.obtenerResponse(s));\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!aplicado && !this.condicionElse.isVacio()) {\r\n                            nuevaLista = nuevaLista.concat(this.condicionElse.obtenerResponse(s));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                //Viene expresion ej: if($id > 40)\r\n                //1. Evaluar las expresiones de cada cosa\r\n            }\r\n        }\r\n        return nuevaLista;\r\n    }\r\n}\r\n","export class ElseIf {\r\n    constructor(identifier, condicion, respThen, fila, columna) {\r\n        this.identifier = identifier;\r\n        this.condicion = condicion;\r\n        this.respThen = respThen;\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n    }\r\n    condicionCumple(entorno) {\r\n        if (this.identifier != undefined) {\r\n            console.log(\"Prueba :\", entorno.obtenerSimbolo(this.identifier));\r\n        }\r\n        let respuesta = this.condicion.getValor(entorno);\r\n        if (respuesta != null && respuesta != undefined) {\r\n            if (respuesta.tsimbolos !== undefined && respuesta.tsimbolos.length > 0) {\r\n                return true;\r\n            }\r\n            else if (respuesta.tsimbolos === undefined && respuesta) {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    obtenerResponse(s) {\r\n        if (!this.respThen.isVacio()) {\r\n            return this.respThen.obtenerResponse(s);\r\n        }\r\n        return [];\r\n    }\r\n}\r\n","export class VarCall {\r\n    constructor(identifier, listaNodos, flwor, linea, columna) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.identifier = identifier;\r\n        this.listaNodos = listaNodos;\r\n        this.flwor = flwor;\r\n    }\r\n    ejecutar(ent) {\r\n    }\r\n}\r\n","export class Include {\r\n    constructor(tipo, codigo3D, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.codigo3Dir = codigo3D;\r\n    }\r\n    getCodigo3Dir() {\r\n        return this.codigo3Dir;\r\n    }\r\n    setCodigo3Dir(codigo) {\r\n        this.codigo3Dir = codigo;\r\n    }\r\n    optimizar() {\r\n    }\r\n}\r\n","export class Variable {\r\n    constructor(tipo, codigo3D, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.codigo3Dir = codigo3D;\r\n    }\r\n    getCodigo3Dir() {\r\n        return this.codigo3Dir;\r\n    }\r\n    setCodigo3Dir(codigo) {\r\n        this.codigo3Dir = codigo;\r\n    }\r\n    optimizar() {\r\n    }\r\n}\r\n","export var TipoDeclaracion3D;\r\n(function (TipoDeclaracion3D) {\r\n    TipoDeclaracion3D[TipoDeclaracion3D[\"INCLUDE\"] = 0] = \"INCLUDE\";\r\n    TipoDeclaracion3D[TipoDeclaracion3D[\"ARREGLO\"] = 1] = \"ARREGLO\";\r\n    TipoDeclaracion3D[TipoDeclaracion3D[\"VARIABLE\"] = 2] = \"VARIABLE\";\r\n    TipoDeclaracion3D[TipoDeclaracion3D[\"MAIN\"] = 3] = \"MAIN\";\r\n    TipoDeclaracion3D[TipoDeclaracion3D[\"METODO\"] = 4] = \"METODO\";\r\n})(TipoDeclaracion3D || (TipoDeclaracion3D = {}));\r\n","export class Llamada3D {\r\n    constructor(tipo, nombreMetodo, codigo3d, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.codigo3D = codigo3d;\r\n        this.metodo = nombreMetodo;\r\n        this.eliminada = false;\r\n        this.optimizada = false;\r\n    }\r\n    isOptimizada() {\r\n        return this.optimizada;\r\n    }\r\n    setOptimizada(optimizada) {\r\n        this.optimizada = optimizada;\r\n    }\r\n    isEliminada() {\r\n        return this.eliminada;\r\n    }\r\n    setEliminada(eliminada) {\r\n        this.eliminada = eliminada;\r\n    }\r\n    getTipoInstruccion() {\r\n        return this.tipo;\r\n    }\r\n    setCodigo3D(codigo) {\r\n        this.codigo3D = codigo;\r\n    }\r\n    getCodigo3D() {\r\n        return this.codigo3D;\r\n    }\r\n}\r\n","export class Printf3D {\r\n    constructor(tipo, codigo3d, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.codigo3D = codigo3d;\r\n        this.eliminada = false;\r\n        this.optimizada = false;\r\n    }\r\n    isOptimizada() {\r\n        return this.optimizada;\r\n    }\r\n    setOptimizada(optimizada) {\r\n        this.optimizada = optimizada;\r\n    }\r\n    isEliminada() {\r\n        return this.eliminada;\r\n    }\r\n    setEliminada(eliminada) {\r\n        this.eliminada = eliminada;\r\n    }\r\n    getTipoInstruccion() {\r\n        return this.tipo;\r\n    }\r\n    setCodigo3D(codigo) {\r\n        this.codigo3D = codigo;\r\n    }\r\n    getCodigo3D() {\r\n        return this.codigo3D;\r\n    }\r\n}\r\n","export class Return3D {\r\n    constructor(tipo, codigo3d, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.codigo3D = codigo3d;\r\n        this.eliminada = false;\r\n        this.optimizada = false;\r\n    }\r\n    isOptimizada() {\r\n        return this.optimizada;\r\n    }\r\n    setOptimizada(optimizada) {\r\n        this.optimizada = optimizada;\r\n    }\r\n    isEliminada() {\r\n        return this.eliminada;\r\n    }\r\n    setEliminada(eliminada) {\r\n        this.eliminada = eliminada;\r\n    }\r\n    getTipoInstruccion() {\r\n        return this.tipo;\r\n    }\r\n    setCodigo3D(codigo) {\r\n        this.codigo3D = codigo;\r\n    }\r\n    getCodigo3D() {\r\n        return this.codigo3D;\r\n    }\r\n}\r\n","import { Tipo } from \"../AST/Tipo\";\r\nimport { TipoOperacion } from \"../Expresiones/Operacion\";\r\nimport { Consulta } from \"../XPath/Consulta\";\r\nimport { TipoNodo } from \"../XPath/Nodo\";\r\nexport class TranslateXPath {\r\n    constructor(listaConsultas, tabla, xmlHeap, xmlStack) {\r\n        this.contHP = 0;\r\n        this.contSP = 0;\r\n        this.contT = 0;\r\n        this.xPathHeap = [];\r\n        this.xPathStack = [];\r\n        this.funcionesUtilizadas = [];\r\n        this.tabla = tabla;\r\n        this.listaConsultas = listaConsultas;\r\n        this.xmlHeap = xmlHeap;\r\n        this.xmlStack = xmlStack;\r\n        this.strTraduccion = \"\";\r\n    }\r\n    getFuncionesUtilizadas() {\r\n        let funciones = \"\";\r\n        this.funcionesUtilizadas = this.funcionesUtilizadas.reverse();\r\n        this.funcionesUtilizadas.forEach((func) => {\r\n            switch (func) {\r\n                case NativaXPath.TRASLADARSIMBOLO:\r\n                    funciones += this.getTrasladarSimbolo();\r\n                    break;\r\n                case NativaXPath.IMPRIMIRATRIBUTO:\r\n                    funciones += this.getImprimirAtributo();\r\n                    break;\r\n                case NativaXPath.IMPRIMIRCONSULTA:\r\n                    funciones += this.getImprimirConsulta();\r\n                    break;\r\n                case NativaXPath.IMPRIMIRETIQUETA:\r\n                    funciones += this.getImprimirEtiqueta();\r\n                    break;\r\n                case NativaXPath.IMPRIMIRTEXTO:\r\n                    funciones += this.getImprimirTexto();\r\n                    break;\r\n                case NativaXPath.BUSCARTEXTO:\r\n                    funciones += this.getBuscarTexto();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        return funciones;\r\n    }\r\n    getDeclaraTempsXPATH() {\r\n        //Ver cuantos temporales fueron utlizados.\r\n        let temps = \"\";\r\n        if (this.contT > 0) {\r\n            let i = 0;\r\n            temps = \"double tx\" + i;\r\n            i++;\r\n            while (i < this.contT) {\r\n                temps += \", tx\" + i;\r\n                i++;\r\n            }\r\n            temps += \";\\n\";\r\n        }\r\n        return temps;\r\n    }\r\n    traducirXPath() {\r\n        //console.log('/* Inicio Traduccion XPATH */');\r\n        let resultadoTraduccion = this.traducir();\r\n        //console.log('/* Fin Traduccion  XPATH*/');        \r\n        return resultadoTraduccion;\r\n    }\r\n    traducir() {\r\n        for (let x = 0; x < this.listaConsultas.length; x++) {\r\n            let listaNodos = this.listaConsultas[x].listaNodos;\r\n            this.strTraduccion += this.traduccionMain(this.tabla, listaNodos, 0);\r\n        }\r\n        return this.strTraduccion;\r\n    }\r\n    traduccionMain(entActual, listaNodos, pos) {\r\n        let trad = \"\";\r\n        //Recorrer la lista de nodos ej: bookstore/book/title\r\n        for (let i = pos; i < listaNodos.length; i++) {\r\n            let nodo = listaNodos[i];\r\n            /* Para cada nodo se requiere:  */\r\n            /*  1. Buscar el nombre de este nodo en la lista de simbolos */\r\n            if (!nodo.isFromRoot()) {\r\n                let tmpC = new Consulta(listaNodos, -1, -1);\r\n                let [resp, _] = tmpC.obtenerSalida(i, entActual, null, false);\r\n                let xd = [];\r\n                xd = xd.concat(resp);\r\n                for (let k = i; k < listaNodos.length; k++) {\r\n                    let auxN = listaNodos[k];\r\n                    trad += this.traducirNodo(auxN);\r\n                    let listaSimbs = this.buscarSimbolos(nodo, entActual);\r\n                    listaSimbs.forEach((elem) => {\r\n                        trad += this.traducirSimb(elem);\r\n                    });\r\n                }\r\n                trad += this.prueba(xd, nodo, listaNodos, listaNodos.length - 1, false, false);\r\n            }\r\n            switch (nodo.getTipo()) {\r\n                case TipoNodo.IDENTIFIER:\r\n                    let predicado = nodo.getPredicado();\r\n                    if (predicado != undefined) {\r\n                        for (let i = 0; i < entActual.tsimbolos.length; i++) {\r\n                            let elem = entActual.tsimbolos[i].valor;\r\n                            if (elem.getNombre() === nodo.getNombre()) {\r\n                                trad += this.traducirPredicado(predicado, elem.valor);\r\n                                let consultaTemp = new Consulta(listaNodos, -1, -1);\r\n                                let [respx, _, aux] = consultaTemp.obtenerConsultaPredicado(predicado, i, entActual, entActual, false, nodo.getValor(), false);\r\n                                let xd = [];\r\n                                if (typeof (respx[0]) === \"string\") {\r\n                                    xd = xd.concat(aux);\r\n                                }\r\n                                else {\r\n                                    xd = xd.concat(respx);\r\n                                }\r\n                                trad += this.prueba(xd, nodo, listaNodos, listaNodos.length - 1, false, false);\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    else {\r\n                        let listaSimbs = this.buscarSimbolos(nodo, entActual);\r\n                        //Para cada entorno obtener posicion del stack y traducir desde ahi.\r\n                        trad += this.prueba(listaSimbs, nodo, listaNodos, i, false, false);\r\n                    }\r\n                    return trad;\r\n                case TipoNodo.ASTERISCO:\r\n                    //Obtener todo lo de este entorno.\r\n                    trad += this.traducirNodo(nodo);\r\n                    let listaS = this.obtenerAsterisco(entActual);\r\n                    //console.log(\"listaS: \", listaS);\r\n                    listaS.forEach((s) => {\r\n                        let elem = s.valor;\r\n                        if (i + 1 == listaNodos.length) {\r\n                            //Imprimir\r\n                            if (elem.getTipo() != Tipo.ETIQUETA_UNIQUE) {\r\n                                trad += this.traducirSimb(elem.posicion);\r\n                                //Llamar a la funcion de impresion\r\n                                trad += \"\\n\\t/* IMPRIMIR ESTE NODO :2 */\\n\";\r\n                                trad += \"\\ttx\" + this.contT + \" = XPStack[(int)SP];\\n\";\r\n                                trad += \"\\tHP = tx\" + this.contT + \";\\n\";\r\n                                this.contT = this.contT + 1;\r\n                                trad += '\\tSP = SP + 1;\\n';\r\n                                trad += \"\\t imprimirConsulta();\\n\";\r\n                                //Pushear las funciones utlizadas para imprimir.\r\n                                if (this.funcionesUtilizadas.indexOf(NativaXPath.IMPRIMIRCONSULTA) == -1) {\r\n                                    this.funcionesUtilizadas.push(NativaXPath.IMPRIMIRCONSULTA);\r\n                                }\r\n                                if (this.funcionesUtilizadas.indexOf(NativaXPath.IMPRIMIRETIQUETA) == -1) {\r\n                                    this.funcionesUtilizadas.push(NativaXPath.IMPRIMIRETIQUETA);\r\n                                }\r\n                                if (this.funcionesUtilizadas.indexOf(NativaXPath.IMPRIMIRATRIBUTO) == -1) {\r\n                                    this.funcionesUtilizadas.push(NativaXPath.IMPRIMIRATRIBUTO);\r\n                                }\r\n                                if (this.funcionesUtilizadas.indexOf(NativaXPath.IMPRIMIRTEXTO) == -1) {\r\n                                    this.funcionesUtilizadas.push(NativaXPath.IMPRIMIRTEXTO);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (elem.getTipo() != Tipo.ETIQUETA_UNIQUE) {\r\n                                trad += this.traducirSimb(elem.posicion);\r\n                                trad += this.traduccionMain(elem.valor, listaNodos, i + 1);\r\n                            }\r\n                        }\r\n                    });\r\n                    return trad;\r\n                case TipoNodo.ATRIBUTO:\r\n                    trad += this.prueba(this.obtenerAtributos(entActual, nodo.getNombre(), nodo.isFromRoot()), nodo, listaNodos, i, false, true);\r\n                    return trad;\r\n                case TipoNodo.DOT:\r\n                    //Quedarse en el entorno actual. - No sirve :c\r\n                    //trad += this.test(entActual.tsimbolos, nodo, listaNodos, i, true, false);\r\n                    let tempsi = new Consulta(listaNodos, -1, -1);\r\n                    let [respsi, __] = tempsi.obtenerSalida(i, entActual, null, false);\r\n                    let xdsi = [];\r\n                    xdsi = xdsi.concat(respsi);\r\n                    trad += this.prueba(xdsi, nodo, listaNodos, listaNodos.length - 1, false, false);\r\n                    return trad;\r\n                case TipoNodo.DOTDOT:\r\n                    //No sirve\r\n                    // trad += this.test(entActual.padre.tsimbolos, nodo, listaNodos, i, true, false);                         \r\n                    let tempsidot = new Consulta(listaNodos, -1, -1);\r\n                    let [respsidot, ___] = tempsidot.obtenerSalida(i, entActual, null, false);\r\n                    let xdsidot = [];\r\n                    xdsidot = xdsidot.concat(respsidot);\r\n                    trad += this.prueba(xdsidot, nodo, listaNodos, listaNodos.length - 1, false, false);\r\n                    return trad;\r\n                case TipoNodo.FUNCION:\r\n                    if (i + 1 == listaNodos.length) {\r\n                        let nombre = nodo.getValor().toLowerCase();\r\n                        if (nombre === \"text()\") {\r\n                            //Llamar a la funcion de busqueda de TEXTO\r\n                            trad += \"\\n\\t/* BUSCAR EL TEXTO DE ESTE NODO E IMPRIMIRLO. */\\n\";\r\n                            trad += \"\\ttx\" + this.contT + \" = XPStack[(int)SP];\\n\";\r\n                            trad += \"\\tHP = tx\" + this.contT + \";\\n\";\r\n                            this.contT = this.contT + 1;\r\n                            trad += '\\tSP = SP + 1;\\n';\r\n                            trad += \"\\t buscarTexto();\\n\";\r\n                            //Pushear las funciones utlizadas para imprimir.\r\n                            if (this.funcionesUtilizadas.indexOf(NativaXPath.BUSCARTEXTO) == -1) {\r\n                                this.funcionesUtilizadas.push(NativaXPath.BUSCARTEXTO);\r\n                            }\r\n                            if (this.funcionesUtilizadas.indexOf(NativaXPath.IMPRIMIRCONSULTA) == -1) {\r\n                                this.funcionesUtilizadas.push(NativaXPath.IMPRIMIRCONSULTA);\r\n                            }\r\n                            if (this.funcionesUtilizadas.indexOf(NativaXPath.IMPRIMIRETIQUETA) == -1) {\r\n                                this.funcionesUtilizadas.push(NativaXPath.IMPRIMIRETIQUETA);\r\n                            }\r\n                            if (this.funcionesUtilizadas.indexOf(NativaXPath.IMPRIMIRATRIBUTO) == -1) {\r\n                                this.funcionesUtilizadas.push(NativaXPath.IMPRIMIRATRIBUTO);\r\n                            }\r\n                            if (this.funcionesUtilizadas.indexOf(NativaXPath.IMPRIMIRTEXTO) == -1) {\r\n                                this.funcionesUtilizadas.push(NativaXPath.IMPRIMIRTEXTO);\r\n                            }\r\n                        }\r\n                    }\r\n                    return trad;\r\n                case TipoNodo.AXIS:\r\n                    let consultaTemp = new Consulta(listaNodos, -1, -1);\r\n                    let [resp, _] = consultaTemp.obtenerSalida(i, entActual, null, false);\r\n                    let xd = [];\r\n                    xd = xd.concat(resp);\r\n                    trad += this.prueba(xd, nodo, listaNodos, listaNodos.length - 1, false, false);\r\n                    break;\r\n                case TipoNodo.NODOERROR:\r\n                    return trad;\r\n            }\r\n        }\r\n        return trad;\r\n    }\r\n    obtenerAtributos(entActual, nombre, fromRoot) {\r\n        let atributo = [];\r\n        entActual.tsimbolos.forEach((s) => {\r\n            let elem = s.valor;\r\n            if (elem.getTipo() === Tipo.ATRIBUTO && (nombre === \"*\" || elem.getNombre() === nombre)) {\r\n                atributo.push(elem);\r\n            }\r\n            if (!fromRoot && elem.getTipo() === Tipo.ETIQUETA) {\r\n                atributo = atributo.concat(this.obtenerAtributos(elem.valor, nombre, fromRoot));\r\n            }\r\n        });\r\n        return atributo;\r\n    }\r\n    prueba(listaS, nodo, listaNodos, i, flag, atr) {\r\n        let trad = \"\";\r\n        for (let j = 0; j < listaS.length; j++) {\r\n            /* 0. Escribir el nodo en el stack del xpath */\r\n            trad += this.traducirNodo(nodo);\r\n            let enx;\r\n            if (flag) {\r\n                enx = listaS[j].valor;\r\n            }\r\n            else {\r\n                enx = listaS[j];\r\n            }\r\n            if (enx.getTipo() == Tipo.ETIQUETA_UNIQUE) {\r\n                console.log(\"-- Unique --\");\r\n            }\r\n            else {\r\n                if (atr) {\r\n                    trad += this.traducirSimb(enx.posicion + 1);\r\n                }\r\n                else {\r\n                    trad += this.traducirSimb(enx.posicion);\r\n                }\r\n                if (i + 1 == listaNodos.length) {\r\n                    //Llamar a la funcion de impresion\r\n                    trad += \"\\n\\t/* IMPRIMIR ESTE NODO :) */\\n\";\r\n                    trad += \"\\ttx\" + this.contT + \" = XPStack[(int)SP];\\n\";\r\n                    trad += \"\\tHP = tx\" + this.contT + \";\\n\";\r\n                    this.contT = this.contT + 1;\r\n                    trad += '\\tSP = SP + 1;\\n';\r\n                    trad += \"\\t imprimirConsulta();\\n\";\r\n                    //Pushear las funciones utlizadas para imprimir.\r\n                    if (this.funcionesUtilizadas.indexOf(NativaXPath.IMPRIMIRCONSULTA) == -1) {\r\n                        this.funcionesUtilizadas.push(NativaXPath.IMPRIMIRCONSULTA);\r\n                    }\r\n                    if (this.funcionesUtilizadas.indexOf(NativaXPath.IMPRIMIRETIQUETA) == -1) {\r\n                        this.funcionesUtilizadas.push(NativaXPath.IMPRIMIRETIQUETA);\r\n                    }\r\n                    if (this.funcionesUtilizadas.indexOf(NativaXPath.IMPRIMIRATRIBUTO) == -1) {\r\n                        this.funcionesUtilizadas.push(NativaXPath.IMPRIMIRATRIBUTO);\r\n                    }\r\n                    if (this.funcionesUtilizadas.indexOf(NativaXPath.IMPRIMIRTEXTO) == -1) {\r\n                        this.funcionesUtilizadas.push(NativaXPath.IMPRIMIRTEXTO);\r\n                    }\r\n                }\r\n                else {\r\n                    trad += this.traduccionMain(enx.valor, listaNodos, i + 1);\r\n                }\r\n            }\r\n        }\r\n        return trad;\r\n    }\r\n    obtenerAsterisco(entActual) {\r\n        let listaS = [];\r\n        entActual.tsimbolos.forEach((e) => {\r\n            listaS.push(e);\r\n        });\r\n        return listaS;\r\n    }\r\n    traducirNombre(nombre) {\r\n        //XPStack[(int)0] = 30\r\n        let tradNodo = '\\n\\t /* NODO \"' + nombre + '\" EN STACK*/ \\n';\r\n        nombre.split('').forEach((element) => {\r\n            tradNodo = tradNodo\r\n                + '\\tXPStack[(int)SP] = ' + element.charCodeAt(0) + '; \\n'\r\n                + '\\tSP = SP + 1; \\n';\r\n            this.xPathStack.push(element.charCodeAt(0));\r\n            this.contSP++;\r\n        });\r\n        return tradNodo;\r\n    }\r\n    traducirNodo(nodo) {\r\n        let nombre = nodo.getNombre();\r\n        let predicado = nodo.getPredicado();\r\n        let tradNodo = \"\";\r\n        //XPStack[(int)0] = 30\r\n        tradNodo += this.traducirNombre(nombre);\r\n        if (predicado != undefined) {\r\n            //Escribir tambien el predicado\r\n        }\r\n        //Se coloca un -1 para indicar que ya se termino de escribir este nombre.\r\n        tradNodo += '\\t XPStack[(int)SP] = -1; \\n';\r\n        tradNodo += '\\t SP = SP + 1; \\n';\r\n        this.xPathStack.push(-1);\r\n        this.contSP++;\r\n        return tradNodo;\r\n    }\r\n    traducirSimb(stackPointer) {\r\n        //1. Crear Txn = stack[(int)stackpointer];\r\n        let simb3dir = '\\t H = stack[(int)' + stackPointer + ']; \\n';\r\n        //H tiene la posicion del heap (xml) donde inicia el simbolo.\r\n        //2. Llamar a funcion para que escribe el simbolo en el heap del xpath.\r\n        simb3dir += '\\t trasladarSimbolo();';\r\n        if (this.funcionesUtilizadas.indexOf(NativaXPath.TRASLADARSIMBOLO) === -1) {\r\n            //Agregar a la lista de funciones que se utilizaran.\r\n            this.funcionesUtilizadas.push(NativaXPath.TRASLADARSIMBOLO);\r\n        }\r\n        return simb3dir;\r\n    }\r\n    getTrasladarSimbolo() {\r\n        //Escribir nombre de la funcion\r\n        let code = 'void trasladarSimbolo(){\\n';\r\n        //Guardar en un temporal el inicio del simbolo en el heap del XPATH \r\n        //0. tx0 = HP\r\n        let primerTemp = 'tx' + this.contT;\r\n        this.contT = this.contT + 1;\r\n        code += '\\t' + primerTemp + \" = HP;\\n\";\r\n        code += '\\t/*--- TX' + this.contT + ' TIENE EL VALOR CON EL QUE FINALIZA EL AMBITO --- */ \\n';\r\n        let segundoTemp = 'tx' + this.contT;\r\n        this.contT = this.contT + 1;\r\n        //Un segundo temporal para guardar el valor con el que se finaliza el ambito.\r\n        //1. tx2 = heap[(int)H];\r\n        code += \"\\t\" + segundoTemp + \" = heap[(int)H];\\n\";\r\n        //2. Empezar a copiar lo que hay en el heap del xml hacia el heap del XPATH\r\n        code += '\\tXPHeap[(int)HP] = heap[(int)H];\\n';\r\n        //3. Sumar los contadores del heap del xml y el heap de XPATH\r\n        code += '\\t HP = HP + 1;\\n\\t H = H+1;\\n';\r\n        //Tercer temporal para ir copiando del heap xml hacia el heap del xpath\r\n        let tercerTemp = 'tx' + this.contT;\r\n        this.contT = this.contT + 1;\r\n        //Empezar con la primera etiqueta\r\n        code += '\\tL1:\\n'\r\n            + '\\t\\t' + tercerTemp + ' = heap[(int)H];\\n'\r\n            + '\\t\\tif(' + tercerTemp + ' == ' + segundoTemp + ') goto L2;\\n'\r\n            + '\\t\\tXPHeap[(int)HP] = ' + tercerTemp + ';\\n';\r\n        //4. Sumar los contadores del heap del xml y el heap de XPATH\r\n        code += '\\t\\t HP = HP + 1;\\n\\t\\t H = H+1;\\n';\r\n        //5. Regresar a primer etiqueta para seguir copiando.\r\n        code += '\\t\\tgoto L1;\\n';\r\n        //6. Escribir el contenido de la etiqueta 2.\r\n        code += '\\tL2: \\n'\r\n            + '\\t\\t/*--- Ya se completo el ambito en el heap del xpath ---*/\\n'\r\n            + '\\t\\tXPHeap[(int)HP] = heap[(int)H];\\n'\r\n            + '\\t\\t H = H + 1;\\n \\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\tXPStack[(int)SP] = ' + primerTemp + ';\\n';\r\n        //7. Return.\r\n        code += '\\treturn;\\n';\r\n        code += '}\\n';\r\n        return code;\r\n    }\r\n    buscarSimbolos(nodo, entActual) {\r\n        let entSimbolo = [];\r\n        for (let i = 0; i < entActual.tsimbolos.length; i++) {\r\n            let el = entActual.tsimbolos[i].valor;\r\n            if (el.getNombre() === nodo.getNombre()) {\r\n                entSimbolo.push(el);\r\n            }\r\n            if (!nodo.isFromRoot()) {\r\n                //Si es // entrar a buscar a cada entorno.\r\n                if (el.getTipo() === Tipo.ETIQUETA) {\r\n                    entSimbolo.concat(this.buscarSimbolos(nodo, el.valor));\r\n                }\r\n            }\r\n        }\r\n        return entSimbolo;\r\n    }\r\n    getBuscarTexto() {\r\n        let code = \"void buscarTexto(){\\n\";\r\n        let primerTemp = \"tx\" + this.contT; //tx34\r\n        this.contT = this.contT + 1;\r\n        let tercerTemp = \"tx\" + this.contT; //tx36\r\n        code += '\\t\\t' + tercerTemp + ' = 0;\\n';\r\n        this.contT = this.contT + 1;\r\n        code += \"\\t\" + primerTemp + ' = XPHeap[(int)HP];\\n';\r\n        code += '\\tHP = HP + 1;\\n'\r\n            + '\\t//Buscar en este nodo, donde hay texto.\\n';\r\n        let segundoTemp = \"tx\" + this.contT; //tx35\r\n        this.contT = this.contT + 1;\r\n        //Primer etiqueta, Valida si se encontro texto (-3)\r\n        code += '\\tL1:\\n'\r\n            + '\\t\\t' + segundoTemp + ' = XPHeap[(int)HP];\\n'\r\n            + '\\t\\tif(' + segundoTemp + ' == -3) goto L7;\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\tgoto L2;\\n';\r\n        //Segunda etiqueta, verifica si es atributo\r\n        code += '\\tL2:\\n'\r\n            + '\\t\\t//ver si es atributo\\n'\r\n            + '\\t\\tif(' + segundoTemp + ' != -2) goto L6;\\n'\r\n            + '\\t\\t//Es atributo, ignorar su cadena (-3) y luego continuar\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\t' + segundoTemp + ' = XPHeap[(int)HP];\\n'\r\n            + '\\t\\tgoto L3;\\n';\r\n        //Tercera etiqueta, ignora -3 dos veces\r\n        code += '\\tL3:\\n'\r\n            + '\\t\\t//Ignorar dos veces -3 (texto inicio-final)\\n'\r\n            + '\\t\\tif(' + segundoTemp + ' == -3) goto L4;\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\t' + segundoTemp + ' = XPHeap[(int)HP];\\n'\r\n            + '\\t\\tgoto L3;\\n';\r\n        code += '\\tL4:\\n'\r\n            + '\\t\\tif(' + tercerTemp + ' == 1) goto L5;\\n'\r\n            + '\\t\\t' + tercerTemp + ' = 1;\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\t' + segundoTemp + ' = XPHeap[(int)HP];\\n'\r\n            + '\\t\\tgoto L3;\\n';\r\n        //Cuarta etiqueta, Regresa a buscar texto normal.\r\n        code += '\\tL5:\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\t' + tercerTemp + ' = 0;\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Quinta etiqueta, Revisa si este no es finalizacion de entorno.\r\n        code += '\\tL6:\\n'\r\n            + '\\t\\t//Ver si no es finalizacion de entorno\\n'\r\n            + '\\t\\tif(' + segundoTemp + ' <= ' + primerTemp + ') goto L8;\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Sexta etiqueta, imprime la consulta.\r\n        code += '\\tL7:\\n'\r\n            + '\\t\\t//Se encontro donde inicia el texto, imprimirlo.\\n'\r\n            + '\\t\\timprimirConsulta();\\n';\r\n        //Septima etiqueta, solo retorna.\r\n        code += '\\tL8:\\n'\r\n            + '\\treturn;\\n';\r\n        code += \"}\\n\";\r\n        return code;\r\n    }\r\n    getImprimirConsulta() {\r\n        let code = \"void imprimirConsulta(){\\n\";\r\n        code += \"\\t/* --- tx\" + this.contT + \" TIENE EL VALOR CON EL QUE FINALIZA LA CONSULTA -- */\\n\";\r\n        let primerTemp = 'tx' + this.contT;\r\n        this.contT = this.contT + 1;\r\n        //Guardar el valor con el que termina la consulta.\r\n        code += '\\t' + primerTemp + ' = XPHeap[(int)HP];\\n';\r\n        //Empezar con la primera et para verificar que tipo de consulta es\r\n        code += '\\tL1:\\n'; //Este verifica si es etiqueta <\r\n        code += '\\t\\t /* -- Ver si es etiqueta -- */\\n';\r\n        code += '\\t\\t if(' + primerTemp + ' > -5) goto L2;\\n';\r\n        code += '\\t\\timprimirEtiqueta();\\n';\r\n        //La segunda etiqueta verifica si es atributo o texto.\r\n        code += '\\tL2:\\n';\r\n        code += '\\t\\t /* -- Ver si es atributo(-2) o texto(-3) -- */\\n';\r\n        code += '\\t\\tif(' + primerTemp + ' == -2) goto L3;\\n';\r\n        code += '\\t\\tif(' + primerTemp + ' == -3) goto L4;\\n';\r\n        code += '\\t\\tgoto L5;\\n';\r\n        //La tercera etiqueta llama al metodo para imprimir atributo.\r\n        code += '\\tL3: \\n'\r\n            + '\\t\\tHP = HP + 2;\\n'\r\n            + '\\t\\timprimirAtributo();\\n'\r\n            + '\\t\\tgoto L5;\\n';\r\n        //La cuarta etiqueta llama al metodo para imprimir texto\r\n        code += '\\tL4: \\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\timprimirTexto();\\n'\r\n            + '\\t\\tgoto L5;\\n';\r\n        //La quinta etiqueta es el fin del metodo.\r\n        code += '\\tL5: \\n'\r\n            + '\\tprintf(\"%c\", (char) 10);\\n'\r\n            + '\\treturn;\\n'\r\n            + '}\\n';\r\n        return code;\r\n    }\r\n    getImprimirEtiqueta() {\r\n        let code = \"void imprimirEtiqueta() {\\n\";\r\n        let primerTemp = \"tx\" + this.contT; //tx5\r\n        this.contT = this.contT + 1;\r\n        code += \"\\t\" + primerTemp + ' = XPHeap[(int)HP];\\n';\r\n        code += '\\tHP = HP + 1;\\n';\r\n        let segundoTemp = \"tx\" + this.contT;\r\n        this.contT = this.contT + 1;\r\n        code += '\\t' + segundoTemp + ' = 0;\\n'; //tx11\r\n        let tercerTemp = \"tx\" + this.contT;\r\n        this.contT = this.contT + 1;\r\n        code += '\\t' + tercerTemp + ' = HP;\\n'; //tx10\r\n        //Empezar a imprimir la etiqueta.\r\n        code += '\\tprintf(\"%c\", (int) 60); //Ascii <\\n';\r\n        let cuartoTemp = \"tx\" + this.contT; // tx6\r\n        this.contT = this.contT + 1;\r\n        //Primer etiqueta, verifica si ya se acabo el ambito.\r\n        code += '\\tL1:\\n'\r\n            + '\\t\\t' + cuartoTemp + ' = XPHeap[(int)HP];\\n'\r\n            + '\\t\\tif(' + cuartoTemp + ' == ' + primerTemp + ') goto L2;\\n'\r\n            + '\\t\\tgoto L3;\\n';\r\n        //Etiqueta L3, verifica si es atributo (-2)\r\n        code += '\\tL3:\\n'\r\n            + '\\t\\tif(' + cuartoTemp + ' != -2) goto L4;\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 32); // Espacio\\n'\r\n            + '\\t\\timprimirAtributo();\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Etiqueta L4, verifica si es texto (-3)\r\n        code += '\\tL4:\\n'\r\n            + '\\t\\t//Ver si es texto\\n'\r\n            + '\\t\\tif(' + cuartoTemp + ' != -3) goto L5;\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 62); //Ascii >\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\t' + segundoTemp + ' = 1;\\n'\r\n            + '\\t\\timprimirTexto();\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Etiqueta L5, verifica si es -1 (ya termino el id de la etiqueta)\r\n        code += '\\tL5:\\n'\r\n            + '\\t\\tif(' + cuartoTemp + ' != -1) goto L6;\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Etiqueta L6\r\n        code += '\\tL6:\\n'\r\n            + '\\t\\t//Revisar si hay otra etiqueta\\n'\r\n            + '\\t\\tif(' + cuartoTemp + ' < ' + primerTemp + ') goto L7;\\n'\r\n            + '\\t\\t//Aun no, solo imprimir caracter.\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) ' + cuartoTemp + ');\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Etiqueta L7, imprimir el entorno de la etiqueta interior.\r\n        let quintoTemp = \"tx\" + this.contT; // tx13\r\n        this.contT = this.contT + 1;\r\n        code += '\\tL7:\\n'\r\n            + '\\t\\tif(' + segundoTemp + ' == 0) goto L10;\\n'\r\n            + '\\t\\tXPStack[(int)SP] = ' + primerTemp + ';\\n'\r\n            + '\\t\\tSP = SP + 1;\\n'\r\n            + '\\t\\tXPStack[(int)SP] = ' + tercerTemp + ';\\n'\r\n            + '\\t\\tSP = SP + 1;\\n'\r\n            + '\\t\\timprimirEtiqueta();\\n'\r\n            + '\\t\\t' + primerTemp + ' = XPStack[(int)SP];\\n'\r\n            + '\\t\\t' + quintoTemp + ' = SP + 1;\\n'\r\n            + '\\t\\t' + segundoTemp + ' = 1;\\n'\r\n            + '\\t\\t' + tercerTemp + ' = XPStack[(int)' + quintoTemp + '];\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Etiqueta L10, imprime caracter de cierre. >\r\n        code += '\\tL10:\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 62); //Ascii >\\n'\r\n            + '\\t\\t' + segundoTemp + ' = 1;\\n'\r\n            + '\\t\\tgoto L7;\\n';\r\n        //Etiqueta L2: Escribe una etiqueta de cierra </cierre>\r\n        code += '\\tL2:\\n'\r\n            + '\\t\\t//EScribir etiqueta de cierre.\\n'\r\n            + '\\t\\tif(' + segundoTemp + '== 0) goto L11;\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 60); //Ascii <\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 47); //Ascii /\\n'\r\n            + '\\t\\tgoto L8;\\n';\r\n        //Etiqueta L11: Imprime caracter de cierre. >\r\n        code += '\\tL11:\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 62); //Ascii >\\n'\r\n            + '\\t\\t' + segundoTemp + ' = 1;\\n'\r\n            + '\\t\\tgoto L2;\\n';\r\n        //Etiqueta L8: Escribe id de cierre </ cierre >\r\n        code += '\\tL8:\\n'\r\n            + '\\t\\t' + cuartoTemp + ' = XPHeap[(int)' + tercerTemp + '];\\n'\r\n            + '\\t\\tif(' + cuartoTemp + ' == -1) goto L9;\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) ' + cuartoTemp + ');\\n'\r\n            + '\\t\\t' + tercerTemp + ' = ' + tercerTemp + ' + 1;\\n'\r\n            + '\\t\\tgoto L8;\\n';\r\n        //Etiqueta L9: imprimire caracter de cierre > y termina el metodo :D\r\n        code += '\\tL9:\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 62); //Ascii >\\n'\r\n            + '\\tSP = SP - 2;\\n'\r\n            + '\\treturn;\\n';\r\n        code += \"}\\n\";\r\n        return code;\r\n    }\r\n    getImprimirAtributo() {\r\n        let code = \"void imprimirAtributo(){\\n\";\r\n        let primerTemp = 'tx' + this.contT;\r\n        this.contT = this.contT + 1;\r\n        code += '\\tL1:\\n'\r\n            + '\\t\\t' + primerTemp + ' = XPHeap[(int)HP];\\n'\r\n            + '\\t\\tif(' + primerTemp + ' == -2) goto L2;\\n'\r\n            + '\\t\\tprintf(\"%c\", (char)' + primerTemp + ');\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Etiqueta L2, imprimir espacio = y el valor del atributo\r\n        code += '\\tL2:\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 32); // Espacio\\n'\r\n            + '\\t\\tprintf(\"%c\", (char)61); // = \\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 32); // Espacio\\n'\r\n            + '\\t\\tHP = HP + 2;\\n';\r\n        //Etiqueta L3, imprime el valor del atributo.\r\n        code += '\\tL3:\\n';\r\n        code += '\\t\\t' + primerTemp + ' = XPHeap[(int)HP];\\n';\r\n        code += '\\t\\tif(' + primerTemp + ' == -3) goto L4;\\n';\r\n        code += '\\t\\tprintf(\"%c\", (char)' + primerTemp + ');\\n';\r\n        code += '\\t\\tHP = HP + 1;\\n';\r\n        code += '\\t\\tgoto L3;\\n';\r\n        //Etiqueta L4; Imprime espacio y termina el metodo.\r\n        code += '\\tL4:\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 32);// Espacio\\n'\r\n            + '\\treturn;\\n';\r\n        code += '}\\n';\r\n        return code;\r\n    }\r\n    getImprimirTexto() {\r\n        let code = \"void imprimirTexto(){\\n\";\r\n        code += \"\\t//Texto termina con -3\\n\";\r\n        let primerTemp = 'tx' + this.contT;\r\n        this.contT = this.contT + 1;\r\n        code += '\\tL1:\\n'\r\n            + '\\t\\t' + primerTemp + ' = XPHeap[(int)HP];\\n'\r\n            + '\\t\\tif(' + primerTemp + ' == -3) goto L2;\\n'\r\n            + '\\t\\tprintf(\"%c\", (char)' + primerTemp + ');\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\tgoto L1;\\n'\r\n            + '\\tL2:\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\treturn;\\n';\r\n        code += \"}\\n\";\r\n        return code;\r\n    }\r\n    traducirPredicado(predicado, entorno) {\r\n        let operaciones = predicado.get3Dir(entorno);\r\n        let trad = \"\\n\\t/*-- TRADUCIENDO PREDICADO -- */\\n\";\r\n        if (operaciones instanceof Array) {\r\n            if (this.obtenerSigno(operaciones[1]) === \"idk\") {\r\n                return \"\";\r\n            }\r\n            let [aux, _] = this.continuarTrad(operaciones);\r\n            trad += aux;\r\n        }\r\n        else {\r\n            if (isNaN(operaciones)) {\r\n                return \"\";\r\n            }\r\n            let varTemporal = \"tx\" + this.contT;\r\n            this.contT++;\r\n            trad += \"\\t\" + varTemporal + \" = \" + operaciones + \";\\n\";\r\n        }\r\n        //Obtener resultado\r\n        return trad;\r\n    }\r\n    continuarTrad(ops) {\r\n        let trad = \"\";\r\n        let izq = ops[0];\r\n        let signo = ops[1];\r\n        let der = ops[2];\r\n        let numIzq, numDer = null;\r\n        if (izq instanceof Array) {\r\n            let aux = \"\";\r\n            [aux, numIzq] = this.continuarTrad(izq);\r\n            trad += aux;\r\n        }\r\n        else {\r\n            numIzq = izq;\r\n        }\r\n        if (der instanceof Array) {\r\n            let aux = \"\";\r\n            [aux, numDer] = this.continuarTrad(der);\r\n            trad += aux;\r\n        }\r\n        else {\r\n            numDer = der;\r\n        }\r\n        let varTemporal = \"tx\" + this.contT;\r\n        this.contT++;\r\n        trad += \"\\t\" + varTemporal + \" = \" + numIzq;\r\n        //Concatenar signo.\r\n        trad += this.obtenerSigno(signo);\r\n        trad += numDer + \";\\n\";\r\n        return [trad, varTemporal];\r\n    }\r\n    obtenerSigno(operacion) {\r\n        switch (operacion) {\r\n            case TipoOperacion.SUMA:\r\n                return \"+\";\r\n            case TipoOperacion.RESTA:\r\n                return \"-\";\r\n            case TipoOperacion.DIVISION:\r\n                return \"/\";\r\n            case TipoOperacion.MOD:\r\n                return \"%\";\r\n            case TipoOperacion.MULTIPLICACION:\r\n                return \"*\";\r\n            default:\r\n                return \"idk\";\r\n        }\r\n    }\r\n}\r\nexport var NativaXPath;\r\n(function (NativaXPath) {\r\n    NativaXPath[NativaXPath[\"PRINTSTRING\"] = 0] = \"PRINTSTRING\";\r\n    NativaXPath[NativaXPath[\"COMPARESTRINGS\"] = 1] = \"COMPARESTRINGS\";\r\n    NativaXPath[NativaXPath[\"TRASLADARSIMBOLO\"] = 2] = \"TRASLADARSIMBOLO\";\r\n    NativaXPath[NativaXPath[\"IMPRIMIRCONSULTA\"] = 3] = \"IMPRIMIRCONSULTA\";\r\n    NativaXPath[NativaXPath[\"IMPRIMIRETIQUETA\"] = 4] = \"IMPRIMIRETIQUETA\";\r\n    NativaXPath[NativaXPath[\"IMPRIMIRTEXTO\"] = 5] = \"IMPRIMIRTEXTO\";\r\n    NativaXPath[NativaXPath[\"IMPRIMIRATRIBUTO\"] = 6] = \"IMPRIMIRATRIBUTO\";\r\n    NativaXPath[NativaXPath[\"BUSCARTEXTO\"] = 7] = \"BUSCARTEXTO\";\r\n})(NativaXPath || (NativaXPath = {}));\r\n","import React, { Component } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/xquery/xquery'\r\nimport 'codemirror/mode/clike/clike'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class Editor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //console.log(props)\r\n        this.state = {\r\n            open: true,\r\n            language: this.props.language,\r\n            displayName: this.props.displayName,\r\n            value: this.props.value,\r\n            onChange: this.props.onChange,\r\n        }\r\n    }\r\n\r\n    handleChange = (editor, data, value) => {\r\n        //console.log(value);\r\n        this.props.onChange(value)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className={`editor-container`}>\r\n                <div className=\"editor-title\">\r\n                    {this.state.displayName}\r\n                    <button\r\n                    type=\"button\"\r\n                    className=\"expand-collapse-btn\"\r\n                    onClick={() => this.setState({open: !this.state.open})}\r\n                    >\r\n                    <FontAwesomeIcon icon={this.state.open ? faCompressAlt : faExpandAlt} />\r\n                    </button>\r\n                </div>\r\n                <ControlledEditor\r\n                    onBeforeChange={this.handleChange}\r\n                    value={this.props.value}\r\n                    className=\"code-mirror-wrapper\"\r\n                    options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: this.props.language,\r\n                    theme: 'material',\r\n                    lineNumbers: true\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export class Optimizacion {\r\n    constructor(tipo, codigoAntes, codigoAhora, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.codigoAntes = codigoAntes;\r\n        this.codigoAhora = codigoAhora;\r\n    }\r\n    getFila() {\r\n        return this.fila;\r\n    }\r\n    getColumna() {\r\n        return this.columna;\r\n    }\r\n    getCodigoAntes() {\r\n        return this.codigoAntes;\r\n    }\r\n    getCodigoAhora() {\r\n        return this.codigoAhora;\r\n    }\r\n    tipoReglaToString() {\r\n        switch (this.tipo) {\r\n            case ReglaOptimizacion.REGLA1:\r\n                return \"Regla 1\";\r\n            case ReglaOptimizacion.REGLA2:\r\n                return \"Regla 2\";\r\n            case ReglaOptimizacion.REGLA3:\r\n                return \"Regla 3\";\r\n            case ReglaOptimizacion.REGLA4:\r\n                return \"Regla 4\";\r\n            case ReglaOptimizacion.REGLA5:\r\n                return \"Regla 5\";\r\n            case ReglaOptimizacion.REGLA6:\r\n                return \"Regla 6\";\r\n            case ReglaOptimizacion.REGLA7:\r\n                return \"Regla 7\";\r\n            case ReglaOptimizacion.REGLA8:\r\n                return \"Regla 8\";\r\n            case ReglaOptimizacion.REGLA9:\r\n                return \"Regla 9\";\r\n            case ReglaOptimizacion.REGLA10:\r\n                return \"Regla 10\";\r\n            case ReglaOptimizacion.REGLA10:\r\n                return \"Regla 11\";\r\n            case ReglaOptimizacion.REGLA10:\r\n                return \"Regla 12\";\r\n            case ReglaOptimizacion.REGLA10:\r\n                return \"Regla 13\";\r\n            case ReglaOptimizacion.REGLA10:\r\n                return \"Regla 14\";\r\n            case ReglaOptimizacion.REGLA10:\r\n                return \"Regla 15\";\r\n            case ReglaOptimizacion.REGLA10:\r\n                return \"Regla 16\";\r\n            default:\r\n                return \"Regla x\";\r\n        }\r\n    }\r\n}\r\nexport var ReglaOptimizacion;\r\n(function (ReglaOptimizacion) {\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA1\"] = 0] = \"REGLA1\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA2\"] = 1] = \"REGLA2\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA3\"] = 2] = \"REGLA3\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA4\"] = 3] = \"REGLA4\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA5\"] = 4] = \"REGLA5\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA6\"] = 5] = \"REGLA6\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA7\"] = 6] = \"REGLA7\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA8\"] = 7] = \"REGLA8\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA9\"] = 8] = \"REGLA9\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA10\"] = 9] = \"REGLA10\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA11\"] = 10] = \"REGLA11\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA12\"] = 11] = \"REGLA12\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA13\"] = 12] = \"REGLA13\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA14\"] = 13] = \"REGLA14\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA15\"] = 14] = \"REGLA15\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA16\"] = 15] = \"REGLA16\";\r\n})(ReglaOptimizacion || (ReglaOptimizacion = {}));\r\n","import { Entorno } from '../AST/Entorno';\r\nimport { Tipo } from '../AST/Tipo';\r\nimport analizador from '../indexAnalizador';\r\nimport { TranslateXPath } from './TranslateXPath';\r\nimport { TranslateXQuery } from './TranslateXQuery';\r\nexport class TraduceXML {\r\n    constructor(listaConsultas, instruccionXQuery, xqEntorno) {\r\n        this.contS = 0;\r\n        this.contH = 0;\r\n        this.indice = 0;\r\n        this.heap = new Array();\r\n        this.stack = new Array();\r\n        this.listaConsultas = listaConsultas;\r\n        this.instruccionXQuery = instruccionXQuery;\r\n        this.strXPathTraduccion = \"\";\r\n        this.strTraduccion = '';\r\n        this.xqEntorno = xqEntorno;\r\n        this.strXQueryTraduccion = \"\";\r\n    }\r\n    getHeap() {\r\n        return this.heap;\r\n    }\r\n    getStack() {\r\n        return this.stack;\r\n    }\r\n    getContS() {\r\n        return this.contS;\r\n    }\r\n    getContH() {\r\n        return this.contS;\r\n    }\r\n    getStrTraduccion() {\r\n        return this.strTraduccion;\r\n    }\r\n    getEncabezado() {\r\n        let encabezado = '/*------HEADER------*/ \\n'\r\n            + '#include <stdio.h> \\n'\r\n            + '#include <math.h> \\n'\r\n            + '\\n'\r\n            + 'double heap[30101999]; \\n'\r\n            + 'double stack[30101999]; \\n'\r\n            + 'double XPStack[30101999];\\n'\r\n            + 'double XPHeap[30101999];\\n'\r\n            + 'double XQStack[30101999];\\n'\r\n            + 'double XQHeap[30101999];\\n'\r\n            + 'double HP;\\n'\r\n            + 'double SP;\\n'\r\n            + 'double S; \\n'\r\n            + 'double H; \\n'\r\n            + 'double HQ; \\n'\r\n            + 'double SQ; \\n';\r\n        return encabezado;\r\n    }\r\n    getMain(cuerpo) {\r\n        let main;\r\n        main = '/*------MAIN------*/ \\n'\r\n            + 'int main() { \\n'\r\n            + '    S = 0; \\n'\r\n            + '    H = 0; \\n'\r\n            + '\\n/********* INICIA TRADUCCION XML **********/ \\n'\r\n            + cuerpo + '\\n'\r\n            + '\\n/********* TERMINA TRADUCCION XML **********/ \\n'\r\n            + '\\n/********* INICIA TRADUCCION XPATH **********/ \\n'\r\n            + '\\t HP = 0;\\n\\t SP = 0;\\n'\r\n            + this.strXPathTraduccion + '\\n'\r\n            + '\\n/********* TERMINA TRADUCCION XPATH **********/ \\n'\r\n            + '\\n/********* INICIA TRADUCCION XQUERY **********/ \\n'\r\n            + '\\t HQ = 0;\\n\\t SQ = 0;\\n'\r\n            + this.strXQueryTraduccion + '\\n'\r\n            + '\\n/********* TERMINA TRADUCCION XQUERY **********/ \\n'\r\n            + '    return 0; \\n'\r\n            + '} \\n';\r\n        return main;\r\n    }\r\n    getCodeC() {\r\n        var codigo3d;\r\n        codigo3d = this.getEncabezado();\r\n        codigo3d = codigo3d + this.getDeclaraTemps();\r\n        //Hacer traduccion de xpath\r\n        if (this.listaConsultas.length > 0) {\r\n            console.log(\"lc: \", this.listaConsultas);\r\n            let traductorXPath = new TranslateXPath(this.listaConsultas, analizador.global, this.heap, this.stack);\r\n            this.strXPathTraduccion = traductorXPath.traducirXPath();\r\n            let strFuncs = traductorXPath.getFuncionesUtilizadas();\r\n            codigo3d += traductorXPath.getDeclaraTempsXPATH() + \"\\n\";\r\n            //Ahora obtener las funciones que se utilizaron para la traduccion.\r\n            codigo3d += strFuncs;\r\n            console.log(\"cod3\", codigo3d);\r\n        }\r\n        if (this.instruccionXQuery != null) {\r\n            let traductorXPath = new TranslateXPath(this.listaConsultas, analizador.global, this.heap, this.stack);\r\n            let traductorXQuery = new TranslateXQuery(this.instruccionXQuery, this.xqEntorno, analizador.global, traductorXPath);\r\n            this.strXQueryTraduccion = traductorXQuery.iniciarTraduccion();\r\n            let strFuncs = traductorXQuery.getFuncionesUtilizadas();\r\n            codigo3d += traductorXQuery.getDeclaraTempsXQuery() + \"\\n\";\r\n            codigo3d += strFuncs;\r\n        }\r\n        //Obtener el main\r\n        codigo3d = codigo3d + this.getMain(this.strTraduccion);\r\n        return codigo3d;\r\n    }\r\n    getDeclaraTemps() {\r\n        let temps = 'double ';\r\n        for (let c = 0; c < this.stack.length; c++) {\r\n            temps = temps + 't' + c.toString();\r\n            temps = temps + ((c == this.stack.length - 1) ? ';' : ', ');\r\n            if ((c % 100) == 0) {\r\n                temps = temps + '\\n';\r\n            }\r\n        }\r\n        temps = temps + '\\n';\r\n        temps = temps + '\\n';\r\n        return temps;\r\n    }\r\n    traducirXML() {\r\n        console.log('/* Inicio Traduccion */');\r\n        this.traducir(analizador.global, -5);\r\n        this.strTraduccion = this.getCodeC();\r\n        console.log('/* Fin Traduccion */');\r\n        return this.strTraduccion;\r\n    }\r\n    traducir(entrada, finalPadre) {\r\n        let tabla = entrada.tsimbolos;\r\n        tabla.forEach((elem) => {\r\n            if (elem.valor.padre !== null || elem.valor.padre == undefined) {\r\n                if (elem.valor.valor instanceof Entorno) {\r\n                    this.strTraduccion = this.strTraduccion + '\\n /*--- SE AGREGA NUEVO NODO ---*/';\r\n                    elem.valor.setPosicion(this.contS);\r\n                    //Al iniciar una etiqueta nueva, se coloca el num de Finalizacion que tendra este padre (-5, -10, etcc..)\r\n                    this.strTraduccion = this.strTraduccion + '\\n /*--- EL AMBITO DE \"' + elem.valor.nombre + '\" TERMINA CON: ' + finalPadre + ' ---*/';\r\n                    this.strTraduccion = this.strTraduccion + '\\n\\t heap[(int)H] = ' + finalPadre + ' ; \\n';\r\n                    this.strTraduccion = this.strTraduccion + '\\t H = H + 1; \\n';\r\n                    this.heap.push(finalPadre);\r\n                    this.contH++;\r\n                    //Iniciar con la traduccion de la etiqueta\r\n                    this.strTraduccion = this.strTraduccion + this.getIDAsignacionHeap(elem.valor.nombre.toString(), \"ETIQUETA\");\r\n                    this.traducir(elem.valor.valor, finalPadre - 5);\r\n                    //Al finalizar una etiqueta colocar finalizacion del ambito ( -5, -10, -15, etc.. )\r\n                    this.strTraduccion = this.strTraduccion + '\\n /*--- FINALIZACION DE NODO \"' + elem.valor.nombre + '\" ---*/';\r\n                    this.strTraduccion = this.strTraduccion + '\\n\\t heap[(int)H] = ' + finalPadre + ' ; \\n';\r\n                    this.strTraduccion = this.strTraduccion + '\\t H = H + 1; \\n';\r\n                    this.heap.push(finalPadre);\r\n                    this.contH++;\r\n                }\r\n                else {\r\n                    if (elem.valor.valor !== false && elem.valor.valor !== false) {\r\n                        this.strTraduccion = this.strTraduccion + '\\n /*--- SE AGREGA NUEVO SIMBOLO ---*/';\r\n                        elem.valor.setPosicion(this.contS);\r\n                        if (elem.valor.getTipo() === Tipo.ATRIBUTO) {\r\n                            this.strTraduccion = this.strTraduccion + this.getIDAsignacionHeap(elem.valor.nombre.toString(), \"ATRIBUTO\");\r\n                        }\r\n                        this.strTraduccion = this.strTraduccion + this.getVALAsignacionHeap(elem.valor.valor.toString());\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    getIDAsignacionHeap(palabra, tipo) {\r\n        let asignacion = '\\n\\t /* ' + tipo + ' \"' + palabra + '\" EN HEAP*/ \\n';\r\n        asignacion = asignacion + '\\t t' + this.contS + ' = H-1;\\n';\r\n        /* Coloca un -1 para indicar que el valor es un nodo(etiqueta) o un -2 si es atributo*/\r\n        let numFinalizacion = -1;\r\n        if (tipo === \"ATRIBUTO\") {\r\n            numFinalizacion = -2;\r\n            asignacion = asignacion\r\n                + '\\t heap[(int)H] = ' + numFinalizacion + '; \\n'\r\n                + '\\t H = H + 1; \\n';\r\n            this.heap.push(numFinalizacion);\r\n            this.contH++;\r\n        }\r\n        /* Descompone la palabra en caracteres y los asigna al Heap */\r\n        palabra.split('').forEach((element) => {\r\n            asignacion = asignacion\r\n                + '\\t heap[(int)H] = ' + element.charCodeAt(0) + '; \\n'\r\n                + '\\t H = H + 1; \\n';\r\n            this.heap.push(element.charCodeAt(0));\r\n            this.contH++;\r\n        });\r\n        /* Coloca un -1 para indicar que el valor es un nodo(etiqueta) o un -2 si es atributo y ya termino*/\r\n        asignacion = asignacion\r\n            + '\\t heap[(int)H] = ' + numFinalizacion + '; \\n'\r\n            + '\\t H = H + 1; \\n';\r\n        this.heap.push(numFinalizacion);\r\n        this.contH++;\r\n        asignacion = asignacion\r\n            + '\\t stack[(int)' + this.contS + '] = t' + this.contS + '; \\n';\r\n        this.stack.push(this.contS);\r\n        this.contS++;\r\n        return asignacion;\r\n    }\r\n    getVALAsignacionHeap(palabra) {\r\n        let asignacion = '\\n\\t /* VALOR \"' + palabra + '\" EN HEAP*/ \\n';\r\n        asignacion = asignacion + '\\t t' + this.contS + ' = H;\\n';\r\n        asignacion = asignacion\r\n            + '\\t heap[(int)H] = -3; \\n'\r\n            + '\\t H = H + 1; \\n';\r\n        this.heap.push(-3);\r\n        this.contH++;\r\n        /* Descompone la palabra en caracteres y los asigna al Heap */\r\n        palabra.split('').forEach((element) => {\r\n            asignacion = asignacion\r\n                + '\\t heap[(int)H] = ' + element.charCodeAt(0) + '; \\n'\r\n                + '\\t H = H + 1; \\n';\r\n            this.heap.push(element.charCodeAt(0));\r\n            this.contH++;\r\n        });\r\n        /* Coloca un -3 para indicar que el valor es una cadena y ya termino*/\r\n        asignacion = asignacion\r\n            + '\\t heap[(int)H] = -3; \\n'\r\n            + '\\t H = H + 1; \\n';\r\n        this.heap.push(-3);\r\n        this.contH++;\r\n        asignacion = asignacion\r\n            + '\\t stack[(int)' + this.contS + '] = t' + this.contS + '; \\n';\r\n        this.stack.push(this.contS);\r\n        this.contS++;\r\n        return asignacion;\r\n    }\r\n}\r\n","/*\r\n**  CLASE AUXILIAR PARA MEJORAR EL REPORTE DE OPTIMIZACION\r\n** SERVIRA PARA ENVIAR REPRESENTACIONES DE TIPO '<instrucciones L2>'\r\n** Para acortar el codigo eliminado y mejorado (asi no se incluye literalmente las instrucciones)\r\n*/\r\nexport class Representacion3D {\r\n    constructor(tipo, codigo3D, fila, columna) {\r\n        this.codigo3D = codigo3D;\r\n        this.tipo = tipo;\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.eliminada = false;\r\n        this.optimizada = false;\r\n    }\r\n    isOptimizada() {\r\n        return this.optimizada;\r\n    }\r\n    setOptimizada(optimizada) {\r\n        this.optimizada = optimizada;\r\n    }\r\n    isEliminada() {\r\n        return this.eliminada;\r\n    }\r\n    setEliminada(eliminada) {\r\n        this.eliminada = eliminada;\r\n    }\r\n    getCodigo3D() {\r\n        return this.codigo3D;\r\n    }\r\n    setCodigo3D(codigo) {\r\n        this.codigo3D = codigo;\r\n    }\r\n    getTipoInstruccion() {\r\n        return this.tipo;\r\n    }\r\n}\r\n","import { Optimizacion, ReglaOptimizacion } from \"../Reporte/Optimizacion\";\r\nimport { TipoExpresion3D } from \"./Expresiones3D/Expresion3D\";\r\nimport { Operacion3D, TipoOperacion3D } from \"./Expresiones3D/Operacion3D\";\r\nimport { Primitiva3D, TipoPrim3D } from \"./Expresiones3D/Primitiva3D\";\r\nimport { Asignacion3D } from \"./Instrucciones3D/Asignacion3D\";\r\nimport { Etiqueta3D } from \"./Instrucciones3D/Etiqueta3D\";\r\nimport { Goto3D } from \"./Instrucciones3D/Goto3D\";\r\nimport { If3D } from \"./Instrucciones3D/If3D\";\r\nimport { TipoInstruccion3D } from \"./Instrucciones3D/Instruccion3D\";\r\nimport { Representacion3D } from \"./Instrucciones3D/Representacion3D\";\r\nexport class Optimizer {\r\n    constructor() {\r\n        this.reporte = [];\r\n    }\r\n    aplicar(listaInstrucciones, reporte) {\r\n        this.reporte = reporte;\r\n        listaInstrucciones = this.regla1(listaInstrucciones);\r\n        listaInstrucciones = this.regla2(listaInstrucciones);\r\n        listaInstrucciones = this.regla3_y_regla4(listaInstrucciones);\r\n        listaInstrucciones = this.regla5(listaInstrucciones);\r\n        listaInstrucciones = this.reglasAlgebraicas(listaInstrucciones);\r\n        return listaInstrucciones;\r\n    }\r\n    instruccionesToString(arrayInst) {\r\n        let cadena = \"\";\r\n        arrayInst.forEach((inst) => {\r\n            cadena += inst.getCodigo3D() + \"\\n\";\r\n        });\r\n        return cadena;\r\n    }\r\n    agregarReporte(codigoNuevo, codigoEliminado, numRegla) {\r\n        let codeBefore = this.instruccionesToString(codigoEliminado);\r\n        let codeNow = this.instruccionesToString(codigoNuevo);\r\n        let fila, col;\r\n        if (codigoNuevo.length > 0) {\r\n            fila = codigoNuevo[0].fila;\r\n            col = codigoNuevo[0].columna;\r\n        }\r\n        else {\r\n            fila = codigoEliminado[0].fila;\r\n            col = codigoEliminado[0].columna;\r\n        }\r\n        let nodoOpt = new Optimizacion(numRegla, codeBefore, codeNow, fila, col);\r\n        this.reporte.push(nodoOpt);\r\n    }\r\n    /*          REGLA 1\r\n        goto L1;\r\n        <instrucciones>                     goto L1;\r\n        L1:             ------------->      L1:\r\n        T3 = T1+T3;                         T3 = T1+T3;\r\n    */\r\n    regla1(listaInstrucciones) {\r\n        console.log(\"--------- Aplicando REGLA 1 ------------- \");\r\n        let contador = 0;\r\n        let nuevasInstrucciones = [];\r\n        let codigoEliminado = [];\r\n        let codigoNuevo = [];\r\n        if (listaInstrucciones != null) {\r\n            //Recorrer la lista de instrucciones\r\n            let flag = false;\r\n            for (let i = 0; i < listaInstrucciones.length; i++) {\r\n                let instruccion = listaInstrucciones[i];\r\n                //Ver si la instruccion es un GOTO\r\n                if (instruccion.getTipoInstruccion() === TipoInstruccion3D.GOTO) {\r\n                    flag = true;\r\n                    codigoNuevo.push(instruccion);\r\n                    continue;\r\n                }\r\n                else if (instruccion.getTipoInstruccion() === TipoInstruccion3D.ETIQUETA) {\r\n                    flag = false;\r\n                    codigoNuevo.push(instruccion);\r\n                    if (codigoEliminado.length > 1) {\r\n                        //Agregar a reporte.\r\n                        this.agregarReporte(codigoNuevo, codigoEliminado, ReglaOptimizacion.REGLA1);\r\n                    }\r\n                    //Vaciar listas auxiliares\r\n                    codigoNuevo = this.marcarAsOptimizadas(codigoNuevo, true);\r\n                    nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                    contador += codigoEliminado.length;\r\n                    codigoNuevo = [];\r\n                    codigoEliminado = [];\r\n                    continue;\r\n                }\r\n                //Si no se ha encontrado un GOTO pushear la instruccion\r\n                if (!flag) {\r\n                    if (!instruccion.isOptimizada()) {\r\n                        instruccion.setOptimizada(true);\r\n                        nuevasInstrucciones.push(instruccion);\r\n                    }\r\n                }\r\n                else {\r\n                    codigoEliminado.push(instruccion);\r\n                }\r\n            }\r\n        }\r\n        console.log(\"Se eliminaron :\", contador + \" instrucciones\");\r\n        console.log(\"-------------------------------------------\");\r\n        return this.marcarAsOptimizadas(nuevasInstrucciones, false);\r\n    }\r\n    /*          REGLA 2\r\n        if(4 == 4) goto L1;\r\n        goto L2;                            if(4 != 4) goto L2;\r\n        L1:             ------------->      <instr L1>\r\n        <instr L1>                          L2:\r\n        L2:                                 <instr L2>\r\n        <instr L2>\r\n    */\r\n    regla2(listaInstrucciones) {\r\n        console.log(\"--------- Aplicando REGLA 2 ------------- \");\r\n        let contador = 0;\r\n        let nuevasInstrucciones = [];\r\n        let nombreEtiqueta = \"\";\r\n        if (listaInstrucciones != null) {\r\n            let codigoEliminado = [];\r\n            let codigoNuevo = [];\r\n            //Recorrer Instrucciones\r\n            let seOptimizo = false;\r\n            for (let i = 0; i < listaInstrucciones.length; i++) {\r\n                let instruccion = listaInstrucciones[i];\r\n                //Ver si la instruccion es un IF\r\n                if (instruccion instanceof Etiqueta3D) {\r\n                    nombreEtiqueta = instruccion.identificador;\r\n                }\r\n                if (instruccion instanceof If3D) {\r\n                    let miIf;\r\n                    miIf = instruccion;\r\n                    if (i + 1 < listaInstrucciones.length) {\r\n                        //Revisar si la siguiente instruccion (codigo falso)\r\n                        //Es un salto (Goto);\r\n                        let sigInst = listaInstrucciones[i + 1];\r\n                        if (sigInst instanceof Goto3D) {\r\n                            //Si es un salto, proceder con la optimizacion regla 2.\r\n                            //0. Agregar a la lista de codigo eliminado\r\n                            let ifAnterior = this.crearIfAnterior(miIf);\r\n                            codigoEliminado.push(ifAnterior);\r\n                            codigoEliminado.push(sigInst);\r\n                            //1. Negar condicion del If\r\n                            let etFalsa = sigInst.identificador;\r\n                            miIf.negarCondicion();\r\n                            //2. Hacer que la etVerdadera sea el salto de 'sigInst'\r\n                            let gotoAnterior = miIf.gotoEtiqueta;\r\n                            miIf.gotoEtiqueta = sigInst;\r\n                            //3. Obtener el nombre de la etiqueta del goto anterior\r\n                            let nameEtiquetaLV = gotoAnterior.identificador;\r\n                            //4. Buscar en la lista de instrucciones esta etiqueta\r\n                            let instEtAnterior;\r\n                            instEtAnterior = this.getCodigoEtiqueta(nameEtiquetaLV, listaInstrucciones, 0, true);\r\n                            this.cambiarReferencias(nameEtiquetaLV, nombreEtiqueta, listaInstrucciones, 0);\r\n                            let instEtNueva;\r\n                            instEtNueva = this.getCodigoEtiqueta(etFalsa, listaInstrucciones, 0, true);\r\n                            codigoEliminado = codigoEliminado.concat(instEtAnterior[0]);\r\n                            let auxiliar1 = new Representacion3D(TipoInstruccion3D.REPRESENTACION, \"[Instrucciones_\" + nameEtiquetaLV + \"]\", -1, -1);\r\n                            codigoEliminado.push(auxiliar1);\r\n                            let auxiliar2 = new Representacion3D(TipoInstruccion3D.REPRESENTACION, \"[Instrucciones_\" + etFalsa + \"]\", -1, -1);\r\n                            codigoEliminado = codigoEliminado.concat(instEtNueva[0]);\r\n                            codigoEliminado.push(auxiliar2);\r\n                            seOptimizo = true;\r\n                            //Pushear el If nuevo (con condicion negada y salto Lf;)\r\n                            codigoNuevo.push(miIf);\r\n                            //Concatenar las instrucciones de la etiqueta anterior L1 (ahora estaran como codigo falso)\r\n                            let auxReporte = [];\r\n                            auxReporte = auxReporte.concat(codigoNuevo);\r\n                            auxReporte.push(auxiliar1);\r\n                            auxReporte.push(instEtNueva[0]);\r\n                            auxReporte.push(auxiliar2);\r\n                            instEtAnterior.shift();\r\n                            codigoNuevo = codigoNuevo.concat(instEtAnterior);\r\n                            codigoNuevo = codigoNuevo.concat(instEtNueva);\r\n                            //Agregar el codigoNuevo a la lista de nuevas instrucciones\r\n                            codigoNuevo = this.marcarAsOptimizadas(codigoNuevo, true);\r\n                            nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                            //Agregar a reporte.\r\n                            this.agregarReporte(auxReporte, codigoEliminado, ReglaOptimizacion.REGLA2);\r\n                            codigoNuevo = [];\r\n                            contador += codigoEliminado.length;\r\n                            codigoEliminado = [];\r\n                        }\r\n                    }\r\n                }\r\n                if (!seOptimizo) {\r\n                    if (!instruccion.isEliminada() && !instruccion.isOptimizada()) {\r\n                        instruccion.setOptimizada(true);\r\n                        nuevasInstrucciones.push(instruccion);\r\n                    }\r\n                }\r\n                else {\r\n                    seOptimizo = false;\r\n                }\r\n            }\r\n        }\r\n        console.log(\"Se eliminaron :\", contador + \" instrucciones\");\r\n        console.log(\"-------------------------------------------\");\r\n        return this.marcarAsOptimizadas(nuevasInstrucciones, false);\r\n    }\r\n    /*          REGLA 3\r\n        if(1 == 1) goto L1;\r\n        goto L2;            ------------->      goto L1;\r\n\r\n                REGLA 4\r\n        if( 4 == 1) goto L1; ------------->      goto L2;\r\n        goto L2;\r\n        \r\n    */\r\n    regla3_y_regla4(listaInstrucciones) {\r\n        console.log(\"--------- Aplicando REGLA 3 y REGLA 4 ------------- \");\r\n        let contador = 0;\r\n        let nuevasInstrucciones = [];\r\n        let codigoNuevo = [];\r\n        let codigoEliminado = [];\r\n        let seOptimizo = false;\r\n        for (let i = 0; i < listaInstrucciones.length; i++) {\r\n            let instruccion = listaInstrucciones[i];\r\n            if (instruccion instanceof If3D) {\r\n                //Si es If ver si sus condiciones son constantes (INTEGER, DOUBLE)\r\n                let condicion = instruccion.condicion;\r\n                if (condicion instanceof Operacion3D) {\r\n                    //Ver si el operando izquierdo y derecho son constantes\r\n                    let izq = condicion.op_izq;\r\n                    let der = condicion.op_der;\r\n                    if (this.sonConstantes(izq, der)) {\r\n                        //Obtener su resultado.\r\n                        let resultado = condicion.getValorRelacional();\r\n                        //1. Obtener la etiqueta verdadera\r\n                        let etVerdadera = instruccion.gotoEtiqueta;\r\n                        //2. Obtener codigo Falso\r\n                        let etFalsa;\r\n                        let numRegla = null;\r\n                        if (i + 1 < listaInstrucciones.length) {\r\n                            if (listaInstrucciones[i + 1] instanceof Etiqueta3D) {\r\n                                etFalsa = listaInstrucciones[i + 1];\r\n                                seOptimizo = true;\r\n                                //Si es verdadero, aplicar regla 3;\r\n                                if (resultado) {\r\n                                    //Se deja solo el goto Verdadero\r\n                                    codigoNuevo.push(etVerdadera);\r\n                                    numRegla = ReglaOptimizacion.REGLA3;\r\n                                }\r\n                                else {\r\n                                    //Si es falso, aplicar regla 4;\r\n                                    codigoNuevo.push(etFalsa);\r\n                                    numRegla = ReglaOptimizacion.REGLA4;\r\n                                }\r\n                                //Se pushea el if al codigo eliminado\r\n                                codigoEliminado.push(instruccion);\r\n                                //Se pushea el salto falso al codigo eliminado\r\n                                codigoEliminado.push(etFalsa);\r\n                                //Se agrega al reporte\r\n                                this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                //Se agrega a la lista de instrucciones el codigo nuevo\r\n                                codigoNuevo = this.marcarAsOptimizadas(codigoNuevo, true);\r\n                                nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                                //Se vacian las listas\r\n                                codigoEliminado = [];\r\n                                codigoNuevo = [];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!seOptimizo) {\r\n                if (!instruccion.isOptimizada()) {\r\n                    instruccion.setOptimizada(true);\r\n                    nuevasInstrucciones.push(instruccion);\r\n                }\r\n            }\r\n            else {\r\n                seOptimizo = false;\r\n            }\r\n        }\r\n        console.log(\"Se eliminaron :\", contador + \" instrucciones\");\r\n        console.log(\"-------------------------------------------\");\r\n        return this.marcarAsOptimizadas(nuevasInstrucciones, false);\r\n    }\r\n    /*          REGLA 5\r\n        T3 = T2;\r\n        <instrucciones>            ------------->      T3 = T2;\r\n        T2 = T3;                                        <instrucciones>\r\n        \r\n    */\r\n    regla5(listaInstrucciones) {\r\n        console.log(\"--------- Aplicando REGLA 5------------- \");\r\n        let contador = 0;\r\n        let nuevasInstrucciones = [];\r\n        let codigoNuevo = [];\r\n        let codigoEliminado = [];\r\n        let seOptimizo = false;\r\n        for (let i = 0; i < listaInstrucciones.length; i++) {\r\n            let instruccion = listaInstrucciones[i];\r\n            if (instruccion instanceof Asignacion3D) {\r\n                //Ver si su asignacion es hacia otra variable.\r\n                let asignacion = instruccion.expresion;\r\n                if (asignacion instanceof Primitiva3D) {\r\n                    if (asignacion.getTipoPrim3D() === TipoPrim3D.IDENTIFIER) {\r\n                        let Id1 = instruccion.identificador;\r\n                        let Id2 = asignacion.getValor();\r\n                        //Seguir iterando sobre las instrucciones y ver si se encuentra\r\n                        //una asignacion del tipo id2 = id1;\r\n                        let n = i + 1;\r\n                        let auxInst;\r\n                        let auxiliarInstr = [];\r\n                        while (n < listaInstrucciones.length) {\r\n                            auxInst = listaInstrucciones[n];\r\n                            //Ver si es asignacion\r\n                            if (auxInst instanceof Asignacion3D) {\r\n                                if (auxInst.identificador == Id1) {\r\n                                    //a cambia de valor, salir del ciclo.\r\n                                    break;\r\n                                }\r\n                                //ver si es = idx\r\n                                let auxAsig = auxInst.expresion;\r\n                                if (auxAsig instanceof Primitiva3D) {\r\n                                    if (auxAsig.getTipoPrim3D() === TipoPrim3D.IDENTIFIER) {\r\n                                        //Ver si es id2 = id1;\r\n                                        if (auxInst.identificador == Id2 && auxAsig.getValor() == Id1) {\r\n                                            //Se optimiza. (eliminar esta)\r\n                                            seOptimizo = true;\r\n                                            codigoEliminado.push(auxInst);\r\n                                            codigoNuevo.push(instruccion);\r\n                                            codigoNuevo = codigoNuevo.concat(auxiliarInstr);\r\n                                            //Agregar a reporte.\r\n                                            this.agregarReporte(codigoNuevo, codigoEliminado, ReglaOptimizacion.REGLA5);\r\n                                            //Agregar a la lista de instrucciones nueva\r\n                                            codigoNuevo = this.marcarAsOptimizadas(codigoNuevo, true);\r\n                                            nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                                            contador += codigoEliminado.length;\r\n                                            codigoEliminado = [];\r\n                                            codigoNuevo = [];\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            else if (auxInst instanceof Etiqueta3D) {\r\n                                break;\r\n                            }\r\n                            auxiliarInstr.push(auxInst);\r\n                            n = n + 1;\r\n                        }\r\n                        if (seOptimizo) {\r\n                            i = n;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!seOptimizo) {\r\n                if (!instruccion.isOptimizada()) {\r\n                    instruccion.setOptimizada(true);\r\n                    nuevasInstrucciones.push(instruccion);\r\n                }\r\n            }\r\n            else {\r\n                seOptimizo = false;\r\n            }\r\n        }\r\n        console.log(\"Se eliminaron :\", contador + \" instrucciones\");\r\n        console.log(\"-------------------------------------------\");\r\n        return this.marcarAsOptimizadas(nuevasInstrucciones, false);\r\n    }\r\n    reglasAlgebraicas(listaInstrucciones) {\r\n        console.log(\"--------- Aplicando REGLAS SIMPLIFICACION ALGEBRAICA  ------------- \");\r\n        let contador = 0;\r\n        let nuevasInstrucciones = [];\r\n        let codigoEliminado = [];\r\n        let codigoNuevo = [];\r\n        let seOptimizo = false;\r\n        for (let i = 0; i < listaInstrucciones.length; i++) {\r\n            let instruccion = listaInstrucciones[i];\r\n            if (instruccion instanceof Asignacion3D) {\r\n                //Ver si la asignacion corresponde a una operacion Tx = Ty op x\r\n                let expr = instruccion.expresion;\r\n                if (expr instanceof Operacion3D) {\r\n                    let izq = expr.op_izq;\r\n                    let der = expr.op_der;\r\n                    if (der != null) {\r\n                        if (izq.getTipoPrim3D() === TipoPrim3D.IDENTIFIER) {\r\n                            if (izq.getValor() === instruccion.identificador) {\r\n                                //REGLA 6 T1 = T1+0 <-- ELIMINAR\r\n                                if (der.getValor() == 0) {\r\n                                    //Si es regla 6 o 7, optimizar\r\n                                    //Agregar a reporte.\r\n                                    let numRegla;\r\n                                    if (expr.getTipoOperacion() === TipoOperacion3D.SUMA) {\r\n                                        codigoEliminado.push(instruccion);\r\n                                        numRegla = ReglaOptimizacion.REGLA6;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                    else if (expr.getTipoOperacion() === TipoOperacion3D.RESTA) {\r\n                                        codigoEliminado.push(instruccion);\r\n                                        numRegla = ReglaOptimizacion.REGLA7;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                    else if (expr.getTipoOperacion() === TipoOperacion3D.MULTIPLICACION) {\r\n                                        //Es x = X * 0 (REGLA 15)\r\n                                        codigoEliminado.push(instruccion);\r\n                                        let nuevaExpr = new Primitiva3D(TipoExpresion3D.PRIMITIVA, TipoPrim3D.INTEGER, 0, \"0\", izq.fila, izq.columna);\r\n                                        let nuevaAsig = new Asignacion3D(TipoInstruccion3D.ASIGNORMAL, instruccion.identificador, nuevaExpr, \"\", instruccion.fila, instruccion.columna);\r\n                                        codigoNuevo.push(nuevaAsig);\r\n                                        numRegla = ReglaOptimizacion.REGLA15;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                }\r\n                                else if (der.getValor() === 1) {\r\n                                    //Si es regla 8 o 9, optimizar\r\n                                    //Agregar a reporte.\r\n                                    let numRegla;\r\n                                    if (expr.getTipoOperacion() === TipoOperacion3D.MULTIPLICACION) {\r\n                                        codigoEliminado.push(instruccion);\r\n                                        numRegla = ReglaOptimizacion.REGLA8;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                    else if (expr.getTipoOperacion() === TipoOperacion3D.DIVISION) {\r\n                                        codigoEliminado.push(instruccion);\r\n                                        numRegla = ReglaOptimizacion.REGLA9;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                //Es de la forma X = y op algo\r\n                                if (der.getValor() === 0) {\r\n                                    let numRegla;\r\n                                    if (expr.getTipoOperacion() === TipoOperacion3D.SUMA) {\r\n                                        //Es suma x = y + 0 (Regla 10) => x = y\r\n                                        codigoEliminado.push(instruccion);\r\n                                        let nuevaExpr = new Primitiva3D(TipoExpresion3D.PRIMITIVA, TipoPrim3D.IDENTIFIER, izq.getValor(), izq.getCodigo3D(), izq.fila, izq.columna);\r\n                                        let nuevaAsig = new Asignacion3D(TipoInstruccion3D.ASIGNORMAL, instruccion.identificador, nuevaExpr, \"\", instruccion.fila, instruccion.columna);\r\n                                        codigoNuevo.push(nuevaAsig);\r\n                                        numRegla = ReglaOptimizacion.REGLA10;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                    else if (expr.getTipoOperacion() === TipoOperacion3D.RESTA) {\r\n                                        //Es x = y - 0 --> x = y; (Regla 11)\r\n                                        codigoEliminado.push(instruccion);\r\n                                        let nuevaExpr = new Primitiva3D(TipoExpresion3D.PRIMITIVA, TipoPrim3D.IDENTIFIER, izq.getValor(), izq.getCodigo3D(), izq.fila, izq.columna);\r\n                                        let nuevaAsig = new Asignacion3D(TipoInstruccion3D.ASIGNORMAL, instruccion.identificador, nuevaExpr, \"\", instruccion.fila, instruccion.columna);\r\n                                        codigoNuevo.push(nuevaAsig);\r\n                                        numRegla = ReglaOptimizacion.REGLA11;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                    else if (expr.getTipoOperacion() === TipoOperacion3D.MULTIPLICACION) {\r\n                                        //Es x = y * 0 (REGLA 15)\r\n                                        codigoEliminado.push(instruccion);\r\n                                        let nuevaExpr = new Primitiva3D(TipoExpresion3D.PRIMITIVA, TipoPrim3D.INTEGER, 0, \"0\", izq.fila, izq.columna);\r\n                                        let nuevaAsig = new Asignacion3D(TipoInstruccion3D.ASIGNORMAL, instruccion.identificador, nuevaExpr, \"\", instruccion.fila, instruccion.columna);\r\n                                        codigoNuevo.push(nuevaAsig);\r\n                                        numRegla = ReglaOptimizacion.REGLA15;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                }\r\n                                else if (der.getValor() === 1) {\r\n                                    let numRegla;\r\n                                    if (expr.getTipoOperacion() === TipoOperacion3D.MULTIPLICACION) {\r\n                                        codigoEliminado.push(instruccion);\r\n                                        let nuevaExpr = new Primitiva3D(TipoExpresion3D.PRIMITIVA, TipoPrim3D.IDENTIFIER, izq.getValor(), izq.getCodigo3D(), izq.fila, izq.columna);\r\n                                        let nuevaAsig = new Asignacion3D(TipoInstruccion3D.ASIGNORMAL, instruccion.identificador, nuevaExpr, \"\", instruccion.fila, instruccion.columna);\r\n                                        codigoNuevo.push(nuevaAsig);\r\n                                        numRegla = ReglaOptimizacion.REGLA12;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                    else if (expr.getTipoOperacion() === TipoOperacion3D.DIVISION) {\r\n                                        codigoEliminado.push(instruccion);\r\n                                        let nuevaExpr = new Primitiva3D(TipoExpresion3D.PRIMITIVA, TipoPrim3D.IDENTIFIER, izq.getValor(), izq.getCodigo3D(), izq.fila, izq.columna);\r\n                                        let nuevaAsig = new Asignacion3D(TipoInstruccion3D.ASIGNORMAL, instruccion.identificador, nuevaExpr, \"\", instruccion.fila, instruccion.columna);\r\n                                        codigoNuevo.push(nuevaAsig);\r\n                                        numRegla = ReglaOptimizacion.REGLA13;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                }\r\n                                else if (der.getValor() === 2) {\r\n                                    let numRegla;\r\n                                    if (expr.getTipoOperacion() === TipoOperacion3D.MULTIPLICACION) {\r\n                                        //Es x = y *2 -> x = y + y (REGLA 14)\r\n                                        codigoEliminado.push(instruccion);\r\n                                        let nuevaExpr = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.SUMA, izq, izq, \"\", izq.fila, izq.columna);\r\n                                        let nuevaAsig = new Asignacion3D(TipoInstruccion3D.ASIGNORMAL, instruccion.identificador, nuevaExpr, \"\", instruccion.fila, instruccion.columna);\r\n                                        codigoNuevo.push(nuevaAsig);\r\n                                        numRegla = ReglaOptimizacion.REGLA14;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (izq.getTipoPrim3D() === TipoPrim3D.INTEGER) {\r\n                            if (izq.getValor() === 0) {\r\n                                if (expr.getTipoOperacion() === TipoOperacion3D.DIVISION) {\r\n                                    //Ver si el derecho es id.\r\n                                    let numRegla;\r\n                                    if (der.getTipoPrim3D() === TipoPrim3D.IDENTIFIER) {\r\n                                        //Regla 16: x = 0/y -> x = 0\r\n                                        codigoEliminado.push(instruccion);\r\n                                        let nuevaExpr = new Primitiva3D(TipoExpresion3D.PRIMITIVA, TipoPrim3D.INTEGER, 0, \"0\", izq.fila, izq.columna);\r\n                                        let nuevaAsig = new Asignacion3D(TipoInstruccion3D.ASIGNORMAL, instruccion.identificador, nuevaExpr, \"\", instruccion.fila, instruccion.columna);\r\n                                        codigoNuevo.push(nuevaAsig);\r\n                                        numRegla = ReglaOptimizacion.REGLA15;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!seOptimizo) {\r\n                nuevasInstrucciones.push(instruccion);\r\n            }\r\n            else {\r\n                seOptimizo = false;\r\n            }\r\n        }\r\n        console.log(\"Se eliminaron :\", contador + \" instrucciones\");\r\n        console.log(\"-------------------------------------------\");\r\n        console.log(\"MY INST ARE: \", nuevasInstrucciones);\r\n        return nuevasInstrucciones;\r\n    }\r\n    cambiarReferencias(etiquetaEliminada, nuevaReferencia, listaInstrucciones, pos) {\r\n        while (pos < listaInstrucciones.length) {\r\n            let auxInst = listaInstrucciones[pos];\r\n            if (auxInst instanceof Goto3D) {\r\n                if (auxInst.getReferencia() === etiquetaEliminada) {\r\n                    auxInst.changeReferencia(nuevaReferencia);\r\n                }\r\n            }\r\n            pos = pos + 1;\r\n        }\r\n    }\r\n    marcarAsOptimizadas(codigoNuevo, optimizada) {\r\n        let opt = [];\r\n        codigoNuevo.forEach((s) => {\r\n            s.setOptimizada(optimizada);\r\n            opt.push(s);\r\n        });\r\n        console.log(\"RETURNING: \", opt);\r\n        return opt;\r\n    }\r\n    getCodigoEtiqueta(etiquetaBuscar, listaInstrucciones, pos, addEtiqueta) {\r\n        let instruccionesEtiqueta = [];\r\n        let found = false;\r\n        while (pos < listaInstrucciones.length) {\r\n            let auxInst = listaInstrucciones[pos];\r\n            if (found) {\r\n                //Pushear a las instrucciones de la etiqueta anterior\r\n                if (auxInst instanceof Etiqueta3D) {\r\n                    break;\r\n                }\r\n                instruccionesEtiqueta.push(auxInst);\r\n                auxInst.setEliminada(true);\r\n            }\r\n            if (auxInst instanceof Etiqueta3D) {\r\n                //Comparar nombres.\r\n                if (auxInst.identificador === etiquetaBuscar) {\r\n                    //Se encontro.\r\n                    if (addEtiqueta) {\r\n                        auxInst.setEliminada(true);\r\n                        instruccionesEtiqueta.push(auxInst);\r\n                    }\r\n                    found = true;\r\n                }\r\n            }\r\n            pos = pos + 1;\r\n        }\r\n        return instruccionesEtiqueta;\r\n    }\r\n    crearIfAnterior(unIf) {\r\n        let cond = Object.create(unIf.condicion);\r\n        let nuevoIf = new If3D(TipoInstruccion3D.IF, cond, unIf.gotoEtiqueta, unIf.codigo3D, unIf.fila, unIf.columna);\r\n        return nuevoIf;\r\n    }\r\n    sonConstantes(izq, der) {\r\n        if (izq.getTipoPrim3D() == TipoPrim3D.IDENTIFIER) {\r\n            return false;\r\n        }\r\n        if (der != null) {\r\n            if (der.getTipoPrim3D() == TipoPrim3D.IDENTIFIER) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import * as XMLGramAsc from './Gramatica/XML_GramaticaAsc';\r\nimport * as XQueryGram from './Gramatica/XQuery_GramaticaAsc';\r\nimport { Entorno } from './AST/Entorno';\r\nimport { Objeto } from './XML/Objeto';\r\nimport { Atributo } from './XML/Atributo';\r\nimport * as XMLGramDesc from './Gramatica/XML_GramaticaDesc';\r\nimport errores from './Global/ListaError';\r\nimport * as XPathGramAsc from './Gramatica/XPath_GramaticaAsc';\r\nimport * as XPathGramDesc from \"./Gramatica/XPath_GramaticaDesc\";\r\nimport { cstXmlAsc, cstXmlDesc } from './Reporte/CST';\r\nimport { TraduceXML } from './Traduccion/TraduceXML';\r\nimport * as OptimizacionGrammar from './Gramatica/Optimizacion_Grammar';\r\nimport { Optimizer } from './Optimizacion/Optimizer';\r\nimport { Metodo } from './Optimizacion/Declaraciones3D/Metodo';\r\nimport { Main } from './Optimizacion/Declaraciones3D/Main';\r\nimport { Simbolo } from './AST/Simbolo';\r\n//const XPathGramAsc = require('../XPath_GramaticaAsc');\r\n//const XPathGramDesc = require('../XPath_GramaticaDesc');\r\nclass Analizador {\r\n    constructor() {\r\n        this.global = new Entorno('global', null, null);\r\n        this.xqGlobal = new Entorno(\"XQGlobal\", null, null);\r\n        errores.limpiar();\r\n        this.indice = 0;\r\n        this.reporteOptimiza = [];\r\n        this.consultas = [];\r\n        this.xPathEntry = \"\";\r\n        this.xQueryEntry = \"\";\r\n        this.instrucciones = null;\r\n        if (typeof Analizador._instance === \"object\") {\r\n            return Analizador._instance;\r\n        }\r\n        Analizador._instance = this;\r\n        return this;\r\n    }\r\n    static getInstance() {\r\n        return this._instance;\r\n    }\r\n    iniciarVariables() {\r\n        this.global = new Entorno('global', null, null);\r\n        this.xqGlobal = new Entorno(\"XQGlobal\", null, null);\r\n        errores.limpiar();\r\n    }\r\n    limpiarOptimizacion() {\r\n        this.reporteOptimiza = [];\r\n    }\r\n    optimizacion(entrada) {\r\n        const codigo3d = OptimizacionGrammar.parse(entrada);\r\n        let salida = \"\";\r\n        let optimizador = new Optimizer();\r\n        //this.reporteOptimiza = [];\r\n        let antes = \"\";\r\n        codigo3d.forEach((c) => {\r\n            antes += c.getCodigo3Dir() + \"\\n\";\r\n            if (c instanceof Main || c instanceof Metodo) {\r\n                c.listaInstrucciones = optimizador.aplicar(c.listaInstrucciones, this.reporteOptimiza);\r\n            }\r\n            salida += c.getCodigo3Dir() + \"\\n\";\r\n        });\r\n        console.log(\"REPORTE: \", this.reporteOptimiza);\r\n        return salida;\r\n    }\r\n    xmlDescendente(entrada) {\r\n        console.log(\"---GRAMATICA DESCENDENTE---\");\r\n        cstXmlDesc.id = 0;\r\n        const objetos = XMLGramDesc.parse(entrada);\r\n        objetos.forEach((elem) => {\r\n            if (elem instanceof Objeto || elem instanceof Atributo) {\r\n                elem.ejecutar(this.global);\r\n            }\r\n        });\r\n        console.log(this.global);\r\n        console.log(errores);\r\n    }\r\n    xmlAscendente(entrada) {\r\n        console.log(\"---GRAMATICA ASCENDENTE---\");\r\n        cstXmlAsc.id = 0;\r\n        const objetos = XMLGramAsc.parse(entrada);\r\n        this.global = new Entorno('global', null, null);\r\n        if (objetos !== null) {\r\n            objetos.forEach((elem) => {\r\n                console.log('Elemento: ' + elem);\r\n                if (elem instanceof Objeto || elem instanceof Atributo) {\r\n                    elem.ejecutar(this.global);\r\n                }\r\n            });\r\n        }\r\n        console.log(this.global);\r\n        console.log(errores);\r\n        /*global.tsimbolos.forEach((elem:any) => {\r\n          console.log(elem);\r\n        });*/\r\n    }\r\n    XPathAscendente(entrada) {\r\n        console.log(\"-- XPATH ASCENDENTE -- \");\r\n        this.consultas = XPathGramAsc.parse(entrada);\r\n        this.xPathEntry = entrada;\r\n        let salida = \"\";\r\n        console.log(\"---------------------------------------\");\r\n        this.consultas.forEach((elem) => {\r\n            console.log(\"CONSULTA: \" + elem.ToString());\r\n            let resultado = elem.ejecutar(this.global);\r\n            salida += elem.simbolosToString(resultado) + \"\\n\";\r\n            console.log(\"-----------RESULTADO----------------\");\r\n            console.log(resultado);\r\n            console.log(\"StringResult:\");\r\n            console.log(elem.simbolosToString(resultado));\r\n            console.log(\"---------------FIN---------------------\");\r\n        });\r\n        return salida;\r\n    }\r\n    XPathDescendente(entrada) {\r\n        console.log(\"-- XPATH DESCENDENTE -- \");\r\n        this.consultas = XPathGramDesc.parse(entrada);\r\n        let salida = \"\";\r\n        console.log(\"---------------------------------------\");\r\n        this.consultas.forEach((elem) => {\r\n            console.log(\"CONSULTA: \" + elem.ToString());\r\n            let resultado = elem.ejecutar(this.global);\r\n            salida += elem.simbolosToString(resultado) + \"\\n\";\r\n            console.log(\"-----------RESULTADO----------------\");\r\n            console.log(resultado);\r\n            console.log(\"TOSTRING:\");\r\n            console.log(elem.simbolosToString(resultado));\r\n            console.log(\"---------------FIN---------------------\");\r\n        });\r\n        return salida;\r\n    }\r\n    XQueryAscendente(entrada) {\r\n        console.log(\"---- XQUERY ASCENDENTE ----- \");\r\n        //this.iniciarVariables();\r\n        this.xqGlobal = new Entorno(\"XQGlobal\", null, null);\r\n        this.instrucciones = XQueryGram.parse(entrada);\r\n        console.log(\"instrucciones: \", this.instrucciones);\r\n        this.xQueryEntry = entrada;\r\n        let salida = \"\";\r\n        if (this.instrucciones != null) {\r\n            salida += this.instrucciones.ejecutar(this.xqGlobal, this.global);\r\n            console.log(\"s:\", salida);\r\n        }\r\n        this.global.tsimbolos = this.global.tsimbolos.concat(this.xqGlobal.tsimbolos);\r\n        console.log(this.global);\r\n        console.log(\"SALIDA: \", salida);\r\n        return salida;\r\n    }\r\n    getTablaSimbolos() {\r\n        return this.global;\r\n    }\r\n    getErrores() {\r\n        let err = '';\r\n        errores.listaError.forEach((elem) => {\r\n            err = err + elem.getMensaje() + '\\n';\r\n        });\r\n        return err;\r\n    }\r\n    getRepTablaSimbolos() {\r\n        let cadenaDot = '';\r\n        let tabla = this.global.tsimbolos;\r\n        this.indice = 0;\r\n        cadenaDot = 'digraph {'\r\n            + 'tbl ['\r\n            + 'shape=plaintext,'\r\n            + 'label=<'\r\n            + '<table border=\"0\" cellborder=\"1\" color=\"#ddd\" cellspacing=\"0\">'\r\n            + '<tr bgcolor=\"#04AA6D\">'\r\n            + '<td><b>NO.</b></td>'\r\n            + '<td><b>NOMBRE</b></td>'\r\n            + '<td><b>TIPO</b></td>'\r\n            + '<td><b>AMBITO</b></td>'\r\n            + '<td><b>NODO</b></td>'\r\n            + '<td><b>VALOR</b></td>'\r\n            + '<td><b>FILA</b></td>'\r\n            + '<td><b>COLUMNA</b></td>'\r\n            + '<td><b>POSICION</b></td>'\r\n            + '</tr>';\r\n        cadenaDot = cadenaDot + this.getSimbolosEntorno(this.global);\r\n        cadenaDot = cadenaDot + '</table>'\r\n            + '>];'\r\n            + '}';\r\n        return cadenaDot;\r\n    }\r\n    getSimbolosEntorno(entrada) {\r\n        let simbolos = '';\r\n        entrada.tsimbolos.forEach((elem) => {\r\n            if (elem.valor.valor instanceof Entorno) {\r\n                this.indice++;\r\n                simbolos = simbolos\r\n                    + '<tr>'\r\n                    + '<td>' + this.indice + '</td>'\r\n                    + '<td>' + elem.valor.getNombre() + '</td>'\r\n                    + '<td>' + this.getTipoDato(elem.valor.getTipo()) + '</td>'\r\n                    + '<td>' + entrada.nombre + '</td>'\r\n                    + '<td>' + elem.nombre + '</td>'\r\n                    + '<td>Nodo</td>'\r\n                    + '<td>' + elem.valor.getLinea() + '</td>'\r\n                    + '<td>' + elem.valor.getColumna() + '</td>'\r\n                    + '<td>' + elem.valor.getPosicion() + '</td>'\r\n                    + '</tr>';\r\n                simbolos = simbolos + this.getSimbolosEntorno(elem.valor.valor);\r\n            }\r\n            else {\r\n                if (elem.valor.valor !== false) {\r\n                    let valor;\r\n                    if (elem.valor.valor instanceof Array) {\r\n                        if (elem.valor.valor[0] instanceof Simbolo) {\r\n                            valor = \"Simbolo \" + elem.valor.valor[0].nombre;\r\n                        }\r\n                        else {\r\n                            valor = elem.valor.getValor().toString().replace('&', 'and');\r\n                        }\r\n                    }\r\n                    else {\r\n                        valor = elem.valor.getValor().toString().replace('&', 'and');\r\n                    }\r\n                    this.indice++;\r\n                    simbolos = simbolos\r\n                        + '<tr>'\r\n                        + '<td>' + this.indice + '</td>'\r\n                        + '<td>' + elem.valor.getNombre() + '</td>'\r\n                        + '<td>' + this.getTipoDato(elem.valor.getTipo()) + '</td>'\r\n                        + '<td>' + entrada.nombre + '</td>'\r\n                        + '<td>' + elem.nombre + '</td>'\r\n                        + '<td>' + valor + '</td>'\r\n                        + '<td>' + elem.valor.getLinea() + '</td>'\r\n                        + '<td>' + elem.valor.getColumna() + '</td>'\r\n                        + '<td>' + elem.valor.getPosicion() + '</td>'\r\n                        + '</tr>';\r\n                }\r\n            }\r\n        });\r\n        return simbolos;\r\n    }\r\n    getTipoDato(t) {\r\n        switch (t) {\r\n            case 0:\r\n                return 'Texto';\r\n            case 1:\r\n                return 'Cadena';\r\n            case 2:\r\n                return 'Etiqueta';\r\n            case 3:\r\n                return 'Atributo';\r\n            case 4:\r\n                return 'Variable XQuery';\r\n        }\r\n        ;\r\n        return '';\r\n    }\r\n    getRepErrores() {\r\n        let cadenaDot = '';\r\n        let indice = 0;\r\n        cadenaDot = '<table class=\"tablaDatos\" >'\r\n            + '<tr>'\r\n            + '<th>No.</th><th>Tipo</th><th>Descripcion</th><th>Linea</th><th>Columna</th>'\r\n            + '</th>';\r\n        errores.listaError.forEach((elem) => {\r\n            indice++;\r\n            cadenaDot = cadenaDot\r\n                + '<tr>'\r\n                + '<td>' + indice + '</td>'\r\n                + '<td>' + elem.getTipo() + '</td>'\r\n                + '<td>' + elem.getDescripcion() + '</td>'\r\n                + '<td>' + elem.getLinea() + '</td>'\r\n                + '<td>' + elem.getColumna() + '</td>'\r\n                + '</tr>';\r\n        });\r\n        cadenaDot = cadenaDot + '</table>';\r\n        return cadenaDot;\r\n    }\r\n    getRepOptimizacion() {\r\n        let cadenaDot = '';\r\n        let indice = 0;\r\n        cadenaDot = '<table class=\"tblRepOpti\" >'\r\n            + '<tr>'\r\n            + '<th>No.</th><th>CODIGO ANTES</th><th>CODIGO AHORA</th><th>REGLA</th><th>Columna</th><th>FILA</th>'\r\n            + '</th>';\r\n        this.reporteOptimiza.forEach((elem) => {\r\n            indice++;\r\n            cadenaDot = cadenaDot\r\n                + '<tr>'\r\n                + '<td>' + indice + '</td>'\r\n                + '<td>' + elem.getCodigoAntes() + '</td>'\r\n                + '<td>' + elem.getCodigoAhora() + '</td>'\r\n                + '<td>' + elem.tipoReglaToString() + '</td>'\r\n                + '<td>' + elem.getColumna() + '</td>'\r\n                + '<td>' + elem.getFila() + '</td>'\r\n                + '</tr>';\r\n        });\r\n        cadenaDot = cadenaDot + '</table>';\r\n        return cadenaDot;\r\n    }\r\n    getCSTXmlAsc() {\r\n        let cadenaDot = 'digraph {';\r\n        cadenaDot = cadenaDot + this.recorridoCst(cstXmlAsc.getRaiz());\r\n        cadenaDot = cadenaDot + '}';\r\n        return cadenaDot;\r\n    }\r\n    getCSTXmlDesc() {\r\n        let cadenaDot = 'digraph {';\r\n        cadenaDot += this.recorridoCst(cstXmlDesc.getRaiz());\r\n        cadenaDot += '}';\r\n        return cadenaDot;\r\n    }\r\n    recorridoCst(nodo) {\r\n        let concatena = '';\r\n        if (nodo !== null) {\r\n            concatena += nodo.id + '[label=\"' + nodo.valor + '\"];\\n';\r\n            nodo.hijos.forEach((hijo) => {\r\n                concatena += this.recorridoCst(hijo);\r\n                concatena += nodo.id + ' -> ' + hijo.id + ';\\n';\r\n            });\r\n        }\r\n        return concatena;\r\n    }\r\n    traduceXML() {\r\n        let resultado = '';\r\n        let test = XPathGramDesc.parse(this.xPathEntry);\r\n        console.log(\"this: \", this.instrucciones);\r\n        let traductor = new TraduceXML(test, this.instrucciones, this.xqGlobal);\r\n        resultado = traductor.traducirXML();\r\n        console.log(this.global);\r\n        return resultado;\r\n    }\r\n}\r\nconst analizador = new Analizador();\r\nexport default analizador;\r\n/*\r\nfunction xpathAscendente(entrada:string){\r\n  console.log(\"-- XPATH ASCENDENTE -- \")\r\n  const objetos = XPathGramAsc.parse(entrada);\r\n\r\n  objetos.forEach((elem: any) => {\r\n      console.log(elem);\r\n  });\r\n}\r\n\r\nfunction xpathDescendente(entrada:string){\r\n  console.log(\"-- XPATH DESCENDENTE -- \")\r\n  const objetos = XPathGramDesc.parse(entrada);\r\n\r\n  objetos.forEach((elem: any) => {\r\n      console.log(elem);\r\n  });\r\n}\r\n\r\nXPathAscendente(`\r\nbookstore/book\r\n|\r\n//@category\r\n`);\r\n*/\r\n/*\r\nxmlAscendente(`\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<bookstore>\r\n  <book category=\"children\">\r\n    <title>Harry Potter</title>\r\n    <author>J K. Rowlin</author>\r\n    <price at=\"asd\"></price>\r\n    <hola> </hola>\r\n  </book>\r\n  <book category=\"web\">\r\n    <title>Learning XML</title>\r\n    <author>Erik T. Ray</author>\r\n    <year>2003</year>\r\n    <price>39.95 &lt 30</price>\r\n  </book>\r\n</bookstore>\r\n`);*/\r\n//export default Analizador;\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../Styles/App.css';\r\nimport Editor from './Editor';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileAlt, faFileUpload, faPlay, faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { faCode, faCogs } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport {Graphviz} from 'graphviz-react';\r\n\r\nimport analizador from '../Analizador/indexAnalizador';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    open: false,\r\n    modalOpen: false,\r\n    modalOpenCst: false,\r\n    alertOpen: false,\r\n    opcion: '',\r\n    consoleText: '',\r\n    fileName: '',\r\n    xml: '',\r\n    xpath: '',\r\n    reptHtml: '',\r\n    fileDownloadUrl: null,\r\n    selectedOption: '',\r\n    dot: `digraph {}`,\r\n    c3d: '',\r\n    open3D: false,\r\n    tituloRepHTML: ''\r\n  }\r\n\r\n  abrirModal = () => {\r\n    this.setState({modalOpen: !this.state.modalOpen});\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({open: false});\r\n  }\r\n\r\n  handleOpen = () => {\r\n    this.setState({open: true});\r\n  }\r\n  \r\n  handleXML = (value) => {\r\n    this.setState({xml: value});\r\n  }\r\n\r\n  handleXPath = (value) => {\r\n    this.setState({xpath: value});\r\n  }\r\n\r\n  handleDot = (value) => {\r\n    this.setState({dot: value});\r\n  }\r\n\r\n  handleC3d = (value) => {\r\n    this.setState({c3d: value});\r\n  }\r\n\r\n  nuevo = () => {\r\n    this.setState({fileName: '', xml: '', xpath: '', c3d: '', open3D: false});\r\n  }\r\n\r\n  upload = (event) => {\r\n  \tevent.preventDefault();\r\n    this.dofileUpload.click()\r\n  }\r\n\r\n  open = (evt) => {\r\n    const fileObj = evt.target.files[0];\r\n    const reader = new FileReader();\r\n        \r\n    let fileloaded = e => {\r\n      // e.target.result is the file's content as text\r\n      const fileContents = e.target.result;\r\n      this.setState ({xml: fileContents, fileName: fileObj.name})\r\n    }\r\n    \r\n    // Mainline of the method\r\n    fileloaded = fileloaded.bind(this);\r\n    reader.onload = fileloaded;\r\n    reader.readAsText(fileObj);  \r\n  }\r\n\r\n  downloadXML = (event) => {\r\n    event.preventDefault();\r\n  \t// Prepare the file\r\n    let output;\r\n    output = this.state.xml;\r\n    // Download it\r\n    const blob = new Blob([output]);\r\n    const fileDownloadUrl = URL.createObjectURL(blob);\r\n    if(this.state.fileName === null || this.state.fileName === ''){\r\n      var hoy = new Date();\r\n      var dd = hoy.getDate();\r\n      var mm = hoy.getMonth() + 1;\r\n      var yyyy = hoy.getFullYear();\r\n      var HH = hoy.getHours();\r\n      var MM = hoy.getMinutes();\r\n      var formato = dd + \"_\" + mm + \"_\" + yyyy + \"_\" + HH + \"_\" + MM;\r\n      this.setState({fileName: formato})\r\n    }\r\n    this.setState ({fileDownloadUrl: fileDownloadUrl}, \r\n      () => {\r\n        this.dofileDownload.click(); \r\n        URL.revokeObjectURL(fileDownloadUrl);  // free up storage--no longer needed.\r\n        this.setState({fileDownloadUrl: \"\"})\r\n    })    \r\n  }\r\n\r\n  downloadXPath = (event) => {\r\n    event.preventDefault();\r\n  \t// Prepare the file\r\n    let output;\r\n    output = this.state.xml;\r\n    // Download it\r\n    const blob = new Blob([output]);\r\n    const fileDownloadUrl = URL.createObjectURL(blob);\r\n    if(this.state.fileName === null || this.state.fileName === ''){\r\n      var hoy = new Date();\r\n      var dd = hoy.getDate();\r\n      var mm = hoy.getMonth() + 1;\r\n      var yyyy = hoy.getFullYear();\r\n      var HH = hoy.getHours();\r\n      var MM = hoy.getMinutes();\r\n      var formato = dd + \"_\" + mm + \"_\" + yyyy + \"_\" + HH + \"_\" + MM;\r\n      this.setState({fileName: formato})\r\n    }\r\n    this.setState ({fileDownloadUrl: fileDownloadUrl}, \r\n      () => {\r\n        this.dofileDownload.click(); \r\n        URL.revokeObjectURL(fileDownloadUrl);  // free up storage--no longer needed.\r\n        this.setState({fileDownloadUrl: \"\"})\r\n    })    \r\n  }\r\n\r\n  onValueChange = (event) => {\r\n    this.setState({\r\n      selectedOption: event.target.value\r\n    });\r\n  }\r\n\r\n  formSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state.selectedOption)\r\n  }\r\n\r\n  analizar = (event) => {\r\n    this.abrirModal();\r\n    let resultado = '';\r\n    switch(this.state.selectedOption){\r\n      case 'XPath':\r\n        analizador.xmlAscendente(this.state.xml);\r\n        resultado = this.state.xpath !== ''?analizador.XPathAscendente(this.state.xpath):'';\r\n        break;\r\n      case 'XQuery':\r\n        analizador.xmlDescendente(this.state.xml);\r\n        resultado = this.state.xpath !== ''?analizador.XQueryAscendente(this.state.xpath):'';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({consoleText:resultado});\r\n    if (this.state.selectedOption !== '') \r\n      this.setState({alertOpen: true});\r\n  }\r\n\r\n  generar3D = (event) => {\r\n    this.setState({open3D:true, c3d: analizador.traduceXML()});\r\n    \r\n  }\r\n\r\n  optimizar = (event) => {\r\n    analizador.limpiarOptimizacion();\r\n    if (this.state.c3d !== '' || this.state.xpath !== '')\r\n      this.setState({c3d:analizador.optimizacion(analizador.optimizacion(analizador.optimizacion(this.state.c3d!==''?this.state.c3d:this.state.xpath)))})\r\n    console.log('OPTIMIZACION FINALIZADA CON EXITO!')\r\n    this.setState({open3D:true});\r\n  }\r\n\r\n  reporteTablaSimbolos = (event) => {\r\n    this.setState({dot:analizador.getRepTablaSimbolos()});\r\n  }\r\n\r\n  reporteListaErrores = (event) => {\r\n    this.setState({tituloRepHTML:\"LISTA DE ERRORES\"});\r\n    this.setState({reptHtml:analizador.getRepErrores()});\r\n  }\r\n\r\n  reporteOptimizacion = (event) => {\r\n    this.setState({tituloRepHTML:\"REPORTE DE OPTIMIZACION\"});\r\n    this.setState({reptHtml:analizador.getRepOptimizacion()});\r\n  }\r\n\r\n  mostrarCst = () => {\r\n    this.setState({modalOpenCst: !this.state.modalOpenCst});\r\n    //this.setState({dot:analizador.getCSTXmlAsc()});\r\n  }\r\n\r\n  reporteCst = (event) => {\r\n    this.mostrarCst();\r\n    switch(this.state.selectedOption){\r\n      case 'XPath':\r\n        //this.setState({dot:analizador.getCSTXmlAsc()});\r\n        break;\r\n      case 'XQuery':\r\n        //this.setState({dot:analizador.getCSTXmlDesc()});\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const modalStyles={\r\n      position: \"absolute\",\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)'\r\n    }\r\n    return (\r\n      <>\r\n      <div className=\"App\" style={{width:\"100%\"}}>\r\n        <header className=\"App-header\">\r\n          <AppBar position=\"static\" style={{ background: '#4b6584' }}>\r\n            <Toolbar>\r\n              <IconButton edge=\"start\" className=\"menuButton\" color=\"inherit\" aria-label=\"menu\">\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className=\"title\">\r\n                TytusX\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </header>\r\n        <div className=\"App-body\">\r\n          <Grid container spacing={1}>\r\n          <Grid item xs={1}></Grid>\r\n            <Grid item xs={10}>\r\n              <div className=\"row\">\r\n                <div> \r\n                  <button className=\"Boton\" style={{backgroundColor:\"white\"}} onClick={this.nuevo}>\r\n                    <FontAwesomeIcon icon={faFileAlt} /> \r\n                  </button>\r\n                  <button onClick={this.upload} className=\"Boton\" style={{backgroundColor:\"white\", color:\"yellowgreen\"}}>\r\n                    <FontAwesomeIcon icon={faFileUpload} /> \r\n                  </button> \r\n                  <input type=\"file\" style={{display:'none'}}\r\n                    multiple={false}\r\n                    accept=\".xml,application/xml\"\r\n                    onChange={evt => this.open(evt)}\r\n                    ref={e=>this.dofileUpload = e}\r\n                  />\r\n                  <div style={{display:\"inline-block\", padding:'0px 10px 0px 10px'}}>\r\n                    <Typography style={{color:\"white\"}}>Guardar XML</Typography>\r\n                    <button className=\"Boton\" style={{backgroundColor:\"white\", color:\"gray\"}} onClick={this.downloadXML}>\r\n                      <FontAwesomeIcon icon={faSave} />\r\n                    </button> \r\n                    <a style={{display:'none'}}\r\n                        download={this.state.fileName}\r\n                        href={this.state.fileDownloadUrl}\r\n                        ref={e=>this.dofileDownload = e}>download it</a>\r\n                  </div> \r\n\r\n                  <div style={{display:\"inline-block\", padding:'0px 5px 0px 5px'}}>  \r\n                    <Typography style={{color:\"white\"}}>Guardar XPath</Typography>\r\n                    <button className=\"Boton\" style={{backgroundColor:\"white\", color:\"gray\"}} onClick={this.downloadXPath}>\r\n                      <FontAwesomeIcon icon={faSave} /> \r\n                    </button>\r\n                    <a style={{display:'none'}}\r\n                        download={this.state.fileName}\r\n                        href={this.state.fileDownloadUrl}\r\n                        ref={e=>this.dofileDownload = e}>download it</a>\r\n                  </div>        \r\n                  <button className=\"Boton\" style={{backgroundColor:\"white\", color:\"green\"}} onClick={this.abrirModal}>\r\n                    <FontAwesomeIcon icon={faPlay} /> \r\n                  </button>  \r\n                       \r\n                  <button className=\"Boton\" style={{backgroundColor:\"white\", color:\"gray\"}} onClick={this.generar3D}>\r\n                    <FontAwesomeIcon icon={faCode} /> \r\n                  </button>          \r\n                  <button className=\"Boton\" style={{backgroundColor:\"white\", color:\"gray\"}} onClick={this.optimizar}>\r\n                    <FontAwesomeIcon icon={faCogs} /> \r\n                  </button>  \r\n                </div>\r\n                <div>\r\n\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={5}>\r\n              <Paper className=\"paper\"  /*style={{background: 'rgba(96,113,121,0.3)'}}*/>\r\n                <Editor\r\n                  language=\"xml\"\r\n                  displayName=\"XML\"\r\n                  value={this.state.xml}\r\n                  onChange={this.handleXML}\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <Paper className=\"paper\"  /*style={{background: 'rgba(96,113,121,0.3)'}}*/>\r\n                <Editor \r\n                  language=\"xquery\"\r\n                  displayName=\"XPath / XQuery\"\r\n                  value={this.state.xpath}\r\n                  onChange={this.handleXPath}\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={10}>\r\n              <Paper className=\"paper\"  /*style={{background: 'rgba(96,113,121,0.3)'}}*/ >          \r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                      <InputLabel style={{fontWeight: 'bold', fontFamily: 'sans-serif'}}>CONSOLA</InputLabel> \r\n                      <div id=\"consola\">\r\n                        <textarea \r\n                          id=\"txtConsola\" \r\n                          value={this.state.consoleText} \r\n                          name=\"txtConsola\" \r\n                          disabled={true} \r\n                          className=\"consola\" \r\n                          rows=\"8\" style={{width: \"100%\"}}/>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={10}>\r\n              <Paper className=\"paper\">\r\n                <div className=\"row\" style={{visibility: this.state.open3D?'visible':'hidden'}}>\r\n                  <div className=\"col-md-12\">\r\n                    <InputLabel style={{fontWeight: 'bold', fontFamily: 'sans-serif'}}>Código 3D</InputLabel> \r\n                    <Editor\r\n                      language=\"clike\"\r\n                      displayName=\"3DC\"\r\n                      value={this.state.c3d}\r\n                      onChange={this.handleC3d}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={10}>\r\n              <Paper className=\"paper\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <br></br>\r\n                    <InputLabel style={{fontWeight: 'bold', fontFamily: 'sans-serif'}}>Reportes</InputLabel>\r\n                    <Button className=\"btn bg-primary\" onClick={this.reporteTablaSimbolos}>Tabla de Simbolos</Button> |\r\n                    <Button className=\"btn bg-secondary\">AST</Button> |\r\n                    <Button className=\"btn bg-success\" onClick={this.mostrarCst}>CST</Button> |\r\n                    <Button className=\"btn bg-danger\" onClick={this.reporteListaErrores}>Lista de Errores</Button> |\r\n                    <Button className=\"btn bg-warning\" onClick={this.reporteOptimizacion}>Optimizacion</Button>\r\n                    <br></br>\r\n                    <div style={{borderStyle: 'solid', borderRadius: '2em'}}>\r\n                      <Graphviz dot={this.state.dot} options={{fit:true, width:950,zoom: true}}/>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <InputLabel style={{fontWeight: 'bold', fontFamily: 'sans-serif'}}>{this.state.tituloRepHTML}</InputLabel> \r\n                        <div id=\"pnlErorres\" dangerouslySetInnerHTML={{ __html: this.state.reptHtml }} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Paper> \r\n            </Grid>            \r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={1}></Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n\r\n      <Collapse in={this.state.alertOpen} style={{position: 'fixed', top: '90%', left:'50%', transform: 'translate(-50%, -50%)'}}>\r\n        <Alert\r\n          action={\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                this.setState({alertOpen: false});\r\n              }}\r\n            >\r\n              <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          }\r\n        >\r\n          Analizado correctamente!\r\n        </Alert>\r\n      </Collapse>\r\n\r\n      <Modal isOpen={this.state.modalOpen} style={modalStyles}>\r\n      <ModalHeader>\r\n        Analizar\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <form onSubmit={this.formSubmit}>\r\n          <div className=\"radio\">\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value=\"XPath\"\r\n                checked={this.state.selectedOption === \"XPath\"}\r\n                onChange={this.onValueChange}\r\n              />\r\n              XPath\r\n            </label>\r\n          </div>\r\n          <div className=\"radio\">\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value=\"XQuery\"\r\n                checked={this.state.selectedOption === \"XQuery\"}\r\n                onChange={this.onValueChange}\r\n              />\r\n              XQuery\r\n            </label>\r\n          </div>\r\n        </form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.analizar}>Analizar</Button>\r\n          <Button color=\"secondary\" onClick={() => {this.setState({selectedOption: ''}); this.abrirModal();}}>Cerrar</Button>\r\n      </ModalFooter>\r\n      </Modal>\r\n\r\n\r\n      <Modal isOpen={this.state.modalOpenCst} style={modalStyles}>\r\n      <ModalHeader>\r\n        Reporte CST\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <form onSubmit={this.formSubmit}>\r\n          <div className=\"radio\">\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value=\"XPath\"\r\n                checked={this.state.selectedOption === \"XPath\"}\r\n                onChange={this.onValueChange}\r\n              />\r\n              XPath\r\n            </label>\r\n          </div>\r\n          <div className=\"radio\">\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value=\"XQuery\"\r\n                checked={this.state.selectedOption === \"XQuery\"}\r\n                onChange={this.onValueChange}\r\n              />\r\n              XQuery\r\n            </label>\r\n          </div>\r\n        </form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.reporteCst}>Generar Reporte</Button>\r\n          <Button color=\"secondary\" onClick={() => {this.setState({selectedOption: ''}); this.mostrarCst();}}>Cerrar</Button>\r\n      </ModalFooter>\r\n      </Modal>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}