{"version":3,"sources":["Analizador/Expresiones/Primitiva.js","Analizador/AST/Tipo.js","Analizador/Global/Error.js","Analizador/Global/ListaError.js","Analizador/XPath/Nodo.js","Analizador/AST/Entorno.js","Analizador/Optimizacion/Expresiones3D/Primitiva3D.js","Analizador/AST/Simbolo.js","Analizador/Optimizacion/Expresiones3D/Operacion3D.js","Analizador/XPath/Consulta.js","Analizador/Optimizacion/Instrucciones3D/Instruccion3D.js","Analizador/Optimizacion/Instrucciones3D/Asignacion3D.js","Analizador/Optimizacion/Expresiones3D/Expresion3D.js","Analizador/Expresiones/Operacion.js","Analizador/Reporte/CST.js","Analizador/Optimizacion/Instrucciones3D/Etiqueta3D.js","Analizador/XML/Atributo.js","Analizador/XML/Objeto.js","Analizador/Optimizacion/Instrucciones3D/If3D.js","Analizador/Optimizacion/Instrucciones3D/Goto3D.js","Analizador/XPath/Predicate.js","Analizador/Optimizacion/Declaraciones3D/Main.js","Analizador/Optimizacion/Declaraciones3D/Metodo.js","Analizador/Gramatica/XQuery.js","Analizador/Reporte/Nodo.js","Analizador/XQuery/Return.js","Analizador/XQuery/DeclaracionFor.js","Analizador/XQuery/FuncionXQuery.js","Analizador/Gramatica/XML_GramaticaAsc.js","Analizador/Gramatica/XML_GramaticaDesc.js","Analizador/Gramatica/XPath_GramaticaAsc.js","Analizador/Gramatica/XPath_GramaticaDesc.js","Analizador/Gramatica/Optimizacion_Grammar.js","Analizador/XQuery/Flwor.js","Analizador/XQuery/Where.js","Analizador/XQuery/For.js","Analizador/XQuery/Let.js","Analizador/XQuery/OrderBy.js","Analizador/XQuery/Sort.js","Analizador/XQuery/CondicionIf.js","Analizador/XQuery/Html.js","Analizador/XQuery/IfThenElse.js","Analizador/XQuery/ElseIf.js","Analizador/XQuery/VarCall.js","Analizador/XQuery/UserFunction.js","Analizador/XQuery/Llamada.js","Analizador/Optimizacion/Declaraciones3D/Include.js","Analizador/Optimizacion/Declaraciones3D/Variable.js","Analizador/Optimizacion/Declaraciones3D/Declaracion3D.js","Analizador/Optimizacion/Instrucciones3D/Llamada3D.js","Analizador/Optimizacion/Instrucciones3D/Printf3D.js","Analizador/Optimizacion/Instrucciones3D/Return3D.js","Analizador/Traduccion/TranslateXPath.js","Components/Editor.js","Analizador/Traduccion/TraduceXML.js","Analizador/Reporte/Optimizacion.js","Analizador/Optimizacion/Instrucciones3D/Representacion3D.js","Analizador/Optimizacion/Optimizer.js","Analizador/indexAnalizador.js","Components/App.js","index.js"],"names":["TipoPrim","Primitiva","valor","tipo","linea","columna","isXQuery","this","ent","IDENTIFIER","existeSimbolo","obtenerSimbolo","ATRIBUTO","entTemporal","Entorno","i","tsimbolos","length","elem","getTipo","Tipo","getNombre","agregarSimbolo","FUNCION","padre","forEach","e","ETIQUETA","nombre","c2","aux","CONSULTA","tempConsulta","Consulta","ejecutar","toLowerCase","indice","INTEGER","mierror","tipoError","descripcion","errores","listaError","Array","ListaError","_instance","push","TipoNodo","TipoAxis","Nodo","predicado","tipoAxis","nodeTest","fromRoot","NodeTest","undefined","getPredicado","global","simbolo","a","toString","nuevo","agregarError","t","STRING","tablaGlobal","sim","getParametros","TipoPrim3D","Primitiva3D","tipoPrimitiva","codigo3D","fila","Simbolo","parametros","instrucciones","posicion","params","inst","TipoOperacion3D","Operacion3D","tipoOperacion","op_izq","op_der","MENOSUNARIO","getValor","getCodigo3D","getOperandoString","SUMA","RESTA","MULTIPLICACION","DIVISION","MOD","MAYORQUE","MENORQUE","MAYORIGUALQUE","MENORIGUALQUE","IGUALIGUAL","DIFERENTEQUE","console","log","listaNodos","cad","nodo","isFromRoot","isAxis","obtenerSalida","salida","simbs","cadConsulta","auxSimb","escribirConsultaObjeto","escribirEtiquetaPadre","concatHijoTexto","pos","elemAux","rompeCiclo","actualNode","auxSal","obtenerConsultaPredicado","concat","getConsultaAtributos","DOTDOT","father","DOT","ASTERISCO","toLocaleLowerCase","AXIS","getTipoAxis","ANCESTOR","nombreParent","tmpEnt","ANCESTORORSELF","auxS","ATTRIBUTE","CHILD","DESCENDANT","auxSal2","obtenerHijosRecursivos","DESCENDANTORSELF","FOLLOWING","tmpPadre","found","nombreBuscar","FOLLOWINGSIBLING","siblingPadre","NAMESPACE","PARENT","PRECEDING","PRECEDINGSIBLING","tPadre","antes","SELF","NODOERROR","entBuscar","nombreNodo","auxEnt","encontrarEntorno","predValue","predTipo","veces","DOUBLE","BOOLEAN","nTabs","tabs","nameEncontrar","ex","buscarHaciaAdentro","isLast","close","atrBuscar","son","addTabs","hijosList","atr","atributo","ETIQUETA_UNIQUE","h","hijo","TipoInstruccion3D","Asignacion3D","identificador","expresion","codigo3d","eliminada","optimizada","codigo","ASIGNORMAL","TipoExpresion3D","TipoOperacion","Operacion","operacion","entorno","PAR","res","opIzq","opDer","resultado","valIzq","typeIzq","valDer","typeDer","getValorInicial","tipoDominanteAritmetica","ERROR","parseInt","parseFloat","getStringTipo","izq","resolverOperacionNumeroId","CADENA","resolverOperacionAtributoCadena","der","resolverOperacionIdNumero","resolverOperacionIdCadena","IGUAL","flag","tmp","entTemporalAT","l","fromR","lastNodeName","entConsultaTemp","resolverConsultaRecursiva","XQresolverOperacionIdNumero","AND","OR","operadorTipo","xd","ex1","ex2","relacional","TipoNumero","texto","buscarTexto","numCompare","insd","elin","XQresolverOperacionIdCadena","replace","XQresolverOperacionAtributoCadena","op","elemEnt","c1","elemfinal","buscarAtributosRecursivamente","at","CST","id","pila","raiz","pop","root","cstXmlAsc","cstXmlDesc","cstXpathAsc","cstXpathDesc","Etiqueta3D","Atributo","Objeto","listaAtributos","listaO","isUnica","listaObjetos","local","obj","If3D","condicion","gotoEtiqueta","negada","negarCondicion","x","OPERACION","y","Object","create","Goto3D","nuevoId","Predicate","Main","listaInstrucciones","codigo3Dir","auxCode","instruccion","Metodo","XQuery","o","k","v","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","$VT","$VU","$VV","$VW","$VX","$VY","$VZ","$V_","$V$","$V01","$V11","$V21","$V31","$V41","$V51","$V61","$V71","$V81","$V91","$Va1","$Vb1","$Vc1","$Vd1","$Ve1","$Vf1","$Vg1","$Vh1","$Vi1","$Vj1","$Vk1","$Vl1","$Vm1","$Vn1","$Vo1","$Vp1","$Vq1","$Vr1","$Vs1","$Vt1","$Vu1","$Vv1","$Vw1","$Vx1","$Vy1","$Vz1","$VA1","$VB1","$VC1","$VD1","parser","trace","yy","symbols_","terminals_","2","5","11","12","14","15","16","18","20","22","23","24","26","28","29","30","32","33","34","35","36","39","41","43","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","74","76","78","81","83","85","87","88","89","90","91","92","93","94","95","96","97","98","99","100","102","103","104","105","106","107","108","114","118","119","120","123","125","127","129","130","132","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","UserFunction","first_line","first_column","DECIMAL","ANY","XQEQ","XQNE","XQLT","XQLE","XQGT","XQGE","XQUERYIDENTIFIER","FUNCIONXQUERY","Llamada","default","FuncionXQuery","TipoFuncionXQ","DATA","UPPERCASE","SUBSTRING","LOWERCASE","NUMBER","Flwor","For","Where","OrderBy","Sort","Let","DeclaracionFor","TipoFor","NORMAL","ITERATIVO","AT","Return","TipoReturn","IFTHENELSE","table","3","4","6","9","10","1","7","112","113","8","68","110","13","111","115","126","37","40","69","116","117","72","109","73","70","71","121","122","124","131","79","84","17","25","27","75","80","128","82","77","101","19","86","42","21","38","44","31","defaultActions","333","334","343","348","359","parseError","str","hash","recoverable","error","Error","parse","input","self","stack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","popStack","n","getPrototypeOf","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","lex","token","yyval","error_rule_depth","locateNearestErrorRecoveryRule","stack_probe","depth","errStr","showPosition","join","text","match","line","loc","last_line","last_column","range","apply","require","CondicionIf","Html","IfThenElse","ElseIf","VarCall","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","flex","begin","condition","popState","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","exports","main","process","exit","source","readFileSync","normalize","module","argv","hijos","setPadre","tipoRet","html","ifthen","funcion","XQEnt","xmlEnt","pruebaReturn","listaReturn","ListaSimb","temp","simb","auxEntorno","simbolosToString","nue","consultas","desde","hasta","listaEnteros","XQueryEnt","newSimb","listaSimbolos","consulta","XQ_VAR","contador","resp","XQ_NUMB","tipoFuncion","otraFuncion","ls","s","test","reemplazarTexto","getOnlyTextos","getSobreEntornoXML","aplicarFuncionTexto","listaRedefinida","consTemp","nuevoSimbolo","sobreEscribirSimbolo","listaS","et","nuevaLista","interior","etiqueta","listaTextos","toUpperCase","substring","XML_GramaticaAsc","cst","getId","obtenerUltimoNodo","setRaiz","unshift","elementos","atributosE","agregarPila","replaceAll","listaElem","padreLE","elemText","elemAtr","elem1","atr1","atr2","atrs2","text2","textContent2","XML_GramaticaDesc","listaElem2","listAtrs3","elem2","newObj","idCierre","content","tElement","listAtrs2","listAtrs","mElem2","mElem1","textContent","t1","XPath_GramaticaAsc","XPath_GramaticaDesc","Optimizacion_Grammar","Include","TipoDeclaracion3D","INCLUDE","Variable","VARIABLE","firstId","MAIN","METODO","ASIGARREGLO","ARREGLOASIG","ARREGLOASIGARREGLO","GOTO","Llamada3D","LLAMADA","Printf3D","PRINTF","IF","Return3D","RETURN","PRIMITIVA","opcionales","retType","opcional","respuesta","auxLista","newNodo","listaFor","identifier","listaSort","listaOrdenada","criterioActual","listaSimbs","ordenarPorCriterios","Ordenada","consultaTemp","auxRespuesta","j","auxSimbRes","textoCompare","obtenerTexto","numero","numLista","isNaN","reOrdenar","desempatar","valComparar","valYaEnLista","posCriterio","nuevoCriterio","auxYaEnLista","auxRespuestaYaEnLista","auxSimbYaRes","textoYaEnLista","nuevoTexto","nuevoSimb","indiceReemplazar","nuevaListaText","nuevaListaSimb","funcionXQ","vacio","tempC","atributos","listaHtml","listaVarCall","respThen","listaElseIf","respElse","condicionElse","condicionThen","isVacio","obtenerResponse","aplicado","unElseIf","condicionCumple","flwor","ambito","entornoXQuery","entornoXML","existeMetodo","XQ_FUNC","setParametros","setInstrucciones","obtenerMetodo","nombreMetodo","metodo","NativaXPath","Editor","props","handleChange","editor","data","value","onChange","open","language","displayName","className","type","onClick","setState","icon","faCompressAlt","faExpandAlt","onBeforeChange","lineWrapping","lint","mode","theme","lineNumbers","Component","TranslateXPath","listaConsultas","tabla","xmlHeap","xmlStack","contHP","contSP","contT","contL","xPathHeap","xPathStack","funcionesUtilizadas","strTraduccion","funciones","reverse","func","TRASLADARSIMBOLO","getTrasladarSimbolo","IMPRIMIRATRIBUTO","getImprimirAtributo","IMPRIMIRCONSULTA","getImprimirConsulta","IMPRIMIRETIQUETA","getImprimirEtiqueta","IMPRIMIRTEXTO","getImprimirTexto","BUSCARTEXTO","getBuscarTexto","temps","resultadoTraduccion","traducir","traduccionMain","entActual","trad","buscarSimbolos","traducirNodo","enx","traducirSimb","indexOf","tradNodo","element","charCodeAt","stackPointer","simb3dir","code","primerTemp","segundoTemp","tercerTemp","entSimbolo","el","traducirPredicado","cuartoTemp","quintoTemp","ReglaOptimizacion","TraduceXML","contS","contH","heap","strXPathTraduccion","cuerpo","getEncabezado","getDeclaraTemps","traductorXPath","analizador","traducirXPath","strFuncs","getFuncionesUtilizadas","getDeclaraTempsXPATH","getMain","getCodeC","entrada","finalPadre","setPosicion","getIDAsignacionHeap","getVALAsignacionHeap","palabra","asignacion","numFinalizacion","Optimizacion","codigoAntes","codigoAhora","REGLA1","REGLA2","REGLA3","REGLA4","REGLA5","REGLA6","REGLA7","REGLA8","REGLA9","REGLA10","Representacion3D","Optimizer","reporte","regla1","regla2","regla3_y_regla4","regla5","reglasAlgebraicas","arrayInst","cadena","codigoNuevo","codigoEliminado","numRegla","col","codeBefore","instruccionesToString","codeNow","nodoOpt","nuevasInstrucciones","getTipoInstruccion","isOptimizada","setOptimizada","agregarReporte","marcarAsOptimizadas","nombreEtiqueta","seOptimizo","miIf","sigInst","ifAnterior","crearIfAnterior","etFalsa","gotoAnterior","nameEtiquetaLV","instEtAnterior","getCodigoEtiqueta","cambiarReferencias","instEtNueva","auxiliar1","REPRESENTACION","auxiliar2","auxReporte","shift","isEliminada","sonConstantes","getValorRelacional","etVerdadera","getTipoPrim3D","Id1","Id2","auxInst","auxiliarInstr","auxAsig","expr","getTipoOperacion","nuevaExpr","nuevaAsig","REGLA15","REGLA11","REGLA12","REGLA13","REGLA14","etiquetaEliminada","nuevaReferencia","getReferencia","changeReferencia","opt","etiquetaBuscar","addEtiqueta","instruccionesEtiqueta","setEliminada","unIf","cond","xqGlobal","xQueryEntry","limpiar","reporteOptimiza","Analizador","OptimizacionGrammar","optimizador","getCodigo3Dir","aplicar","XMLGramDesc","objetos","XMLGramAsc","XPathGramAsc","ToString","XPathGramDesc","err","getMensaje","cadenaDot","getSimbolosEntorno","simbolos","getTipoDato","getLinea","getColumna","getPosicion","getDescripcion","getCodigoAntes","getCodigoAhora","tipoReglaToString","getFila","recorridoCst","getRaiz","concatena","traducirXML","XQueryAscendente","App","modalOpen","modalOpenCst","alertOpen","opcion","consoleText","fileName","xml","xpath","reptHtml","fileDownloadUrl","selectedOption","dot","c3d","open3D","tituloRepHTML","abrirModal","handleClose","handleOpen","handleXML","handleXPath","handleDot","handleC3d","upload","event","preventDefault","dofileUpload","click","evt","fileObj","target","files","reader","FileReader","fileloaded","fileContents","result","name","bind","onload","readAsText","downloadXML","output","blob","Blob","URL","createObjectURL","hoy","Date","formato","getDate","getMonth","getFullYear","getHours","getMinutes","dofileDownload","revokeObjectURL","downloadXPath","onValueChange","formSubmit","analizar","xmlAscendente","XPathAscendente","xmlDescendente","generar3D","traduceXML","optimizar","optimizacion","reporteTablaSimbolos","getRepTablaSimbolos","reporteListaErrores","getRepErrores","reporteOptimizacion","getRepOptimizacion","mostrarCst","reporteCst","modalStyles","position","top","left","transform","style","width","AppBar","background","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Grid","container","spacing","item","xs","backgroundColor","faFileAlt","faFileUpload","display","multiple","accept","ref","padding","faSave","download","href","faPlay","faCode","faCogs","Paper","InputLabel","fontWeight","fontFamily","disabled","rows","visibility","Button","borderStyle","borderRadius","Graphviz","fit","zoom","dangerouslySetInnerHTML","__html","Collapse","in","Alert","size","fontSize","Modal","isOpen","ModalHeader","ModalBody","onSubmit","checked","ModalFooter","React","ReactDOM","render","document","getElementById"],"mappings":"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EAAM,CAAC,GAAI,GAAI,IAAK,IAAK,KAAMC,EAAM,CAAC,EAAG,GAAIC,EAAM,CAAC,EAAG,GAAIC,EAAM,CAAC,EAAG,GAAI,GAAI,IAAK,KAAMC,EAAM,CAAC,EAAG,KAAMC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KAAMC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,KAAMC,EAAM,CAAC,EAAG,GAAI,GAAI,IAAK,IAAK,KAAMC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,GAAI,IAAK,IAAK,KAAMC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,IAAKC,EAAM,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAAMC,EAAM,CAAC,EAAG,IAAKC,GAAM,CAAC,EAAG,IAAK,IAAK,KAAMC,GAAM,CAAC,EAAG,IAAKC,GAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,EAAG,GAAI,IAAK,IAAK,IAAK,KAAMC,GAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,EAAG,KAAMC,GAAM,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,KAAMC,GAAO,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAAMC,GAAO,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAAMC,GAAO,CAAC,GAAI,IAAKC,GAAO,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","file":"static/js/main.0576e1d7.chunk.js","sourcesContent":["import { Entorno } from \"../AST/Entorno\";\r\nimport { Tipo } from \"../AST/Tipo\";\r\nimport { Consulta } from \"../XPath/Consulta\";\r\nexport class Primitiva {\r\n    constructor(valor, tipo, linea, columna, isXQuery) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.valor = valor;\r\n        this.isXQuery = isXQuery;\r\n    }\r\n    getTipo(ent) {\r\n        return this.tipo;\r\n    }\r\n    getValorInicial(ent) {\r\n        return this.valor;\r\n    }\r\n    getValor(ent) {\r\n        if (this.tipo === TipoPrim.IDENTIFIER) {\r\n            /* SE BUSCAN LAS ETIQUETAS CON ESTE NOMBRE */\r\n            if (ent.existeSimbolo(this.valor)) {\r\n                return ent.obtenerSimbolo(this.valor);\r\n            }\r\n            else {\r\n                //errores.agregarError('semantico', 'No existe el simbolo ' + this.valor, this.linea, this.columna);\r\n                //this.tipo = TipoPrim.ERROR;\r\n                return null;\r\n            }\r\n        }\r\n        else if (this.tipo === TipoPrim.ATRIBUTO) {\r\n            if (!this.isXQuery) {\r\n                /* SE BUSCAN LOS ATRIBUTOS CON ESTE NOMBRE */\r\n                this.tipo = TipoPrim.FUNCION;\r\n                //0. Se devolver un entorno temporal, que contendra todos los que coinciden con la busqueda.\r\n                let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                //1. Obtener el padre.\r\n                let padre = ent.padre;\r\n                //2. Sobre el padre buscar todos los que sean ent.nombre\r\n                padre.tsimbolos.forEach((e) => {\r\n                    let elem = e.valor;\r\n                    if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === ent.nombre) {\r\n                        //Ahora en este entorno ver si tiene un atributo como el que se busca.\r\n                        elem.valor.tsimbolos.forEach((c2) => {\r\n                            let aux = c2.valor;\r\n                            if (aux.getTipo() === Tipo.ATRIBUTO && (this.valor === \"*\" || this.valor === aux.getNombre())) {\r\n                                //Si se encuentra el atributo o es *, ingresar al entorno temporal\r\n                                entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                return entTemporal;\r\n            }\r\n            else {\r\n                //Obtener solo si el atributo existe en este entorno (no buscar en el padre)\r\n                let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                for (let i = 0; i < ent.tsimbolos.length; i++) {\r\n                    let elem = ent.tsimbolos[i].valor;\r\n                    if (elem.getTipo() === Tipo.ATRIBUTO && elem.getNombre() === this.valor) {\r\n                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                        return entTemporal;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n        }\r\n        else if (this.tipo === TipoPrim.FUNCION) {\r\n            //Si es funcion, ver de cual funcion se trata\r\n            switch (this.valor.toLowerCase()) {\r\n                case \"last()\":\r\n                    //Para last, calcular sobre el entorno padre, cual es el numero del ultimo\r\n                    //que tiene nombre como ent.nombre\r\n                    //1. Obtener padre.\r\n                    let padre = ent.padre;\r\n                    //2. Sobre el padre, contar cual es el ultimo que tiene ent.nobmre\r\n                    let indice = 0; //Se empieza en 0, por si no se encuentra devuelva 0. (y asi retornaria nada en la consulta)\r\n                    padre.tsimbolos.forEach((e) => {\r\n                        let elem = e.valor;\r\n                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === ent.nombre) {\r\n                            //Se encontro, sumar al indice\r\n                            indice++;\r\n                        }\r\n                    });\r\n                    //3. al terminar devolver indice\r\n                    //4. Cambiar su tipo a tipo INTEGER\r\n                    this.tipo = TipoPrim.INTEGER;\r\n                    if (indice > 0) {\r\n                        return indice;\r\n                    }\r\n                    else {\r\n                        return 0;\r\n                    }\r\n                default:\r\n                    //Para position(), devolver lo mismo.\r\n                    return this.valor;\r\n            }\r\n        }\r\n        else if (this.tipo == TipoPrim.CONSULTA) {\r\n            this.tipo = TipoPrim.FUNCION;\r\n            //Consulta devuelve TRUE si la ruta existe\r\n            //Es una lista de nodos. entonces crear una consulta \r\n            let tempConsulta = new Consulta(this.valor, this.linea, this.columna);\r\n            //Obtener padre, porque se deben buscar en todos los que tengan ent.nombre\r\n            let entTemporal = new Entorno(\"Temporal\", null, null);\r\n            let padre = ent.padre;\r\n            padre.tsimbolos.forEach((e) => {\r\n                let elem = e.valor;\r\n                if (elem.getNombre() === ent.nombre) {\r\n                    //Sobre este entorno ejecutar la consulta para ver si existe la ruta.\r\n                    let result = tempConsulta.ejecutar(elem.valor);\r\n                    if (result.length > 0) {\r\n                        //La consulta si existe\r\n                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                    }\r\n                    else {\r\n                    }\r\n                }\r\n            });\r\n            return entTemporal;\r\n        }\r\n        else\r\n            return this.valor;\r\n    }\r\n}\r\nexport var TipoPrim;\r\n(function (TipoPrim) {\r\n    TipoPrim[TipoPrim[\"INTEGER\"] = 0] = \"INTEGER\";\r\n    TipoPrim[TipoPrim[\"DOUBLE\"] = 1] = \"DOUBLE\";\r\n    TipoPrim[TipoPrim[\"CADENA\"] = 2] = \"CADENA\";\r\n    TipoPrim[TipoPrim[\"IDENTIFIER\"] = 3] = \"IDENTIFIER\";\r\n    TipoPrim[TipoPrim[\"ATRIBUTO\"] = 4] = \"ATRIBUTO\";\r\n    TipoPrim[TipoPrim[\"DOT\"] = 5] = \"DOT\";\r\n    TipoPrim[TipoPrim[\"FUNCION\"] = 6] = \"FUNCION\";\r\n    TipoPrim[TipoPrim[\"BOOLEAN\"] = 7] = \"BOOLEAN\";\r\n    TipoPrim[TipoPrim[\"CONSULTA\"] = 8] = \"CONSULTA\";\r\n    TipoPrim[TipoPrim[\"ERROR\"] = 9] = \"ERROR\";\r\n    TipoPrim[TipoPrim[\"FUNCIONXQUERY\"] = 10] = \"FUNCIONXQUERY\";\r\n    TipoPrim[TipoPrim[\"XQUERYIDENTIFIER\"] = 11] = \"XQUERYIDENTIFIER\";\r\n    TipoPrim[TipoPrim[\"DECIMAL\"] = 12] = \"DECIMAL\";\r\n    TipoPrim[TipoPrim[\"ANY\"] = 13] = \"ANY\";\r\n})(TipoPrim || (TipoPrim = {}));\r\n","export var Tipo;\r\n(function (Tipo) {\r\n    Tipo[Tipo[\"STRING\"] = 0] = \"STRING\";\r\n    Tipo[Tipo[\"ETIQUETA\"] = 1] = \"ETIQUETA\";\r\n    Tipo[Tipo[\"ATRIBUTO\"] = 2] = \"ATRIBUTO\";\r\n    Tipo[Tipo[\"ETIQUETA_UNIQUE\"] = 3] = \"ETIQUETA_UNIQUE\";\r\n    Tipo[Tipo[\"XQ_VAR\"] = 4] = \"XQ_VAR\";\r\n    Tipo[Tipo[\"XQ_FUNC\"] = 5] = \"XQ_FUNC\";\r\n    Tipo[Tipo[\"XQ_NUMB\"] = 6] = \"XQ_NUMB\";\r\n})(Tipo || (Tipo = {}));\r\n","export default class mierror {\r\n    constructor(tipoError, descripcion, linea, columna) {\r\n        this.tipoError = tipoError;\r\n        this.descripcion = descripcion;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n    getTipo() {\r\n        return this.tipoError;\r\n    }\r\n    getDescripcion() {\r\n        return this.descripcion;\r\n    }\r\n    getLinea() {\r\n        return this.linea;\r\n    }\r\n    getColumna() {\r\n        return this.columna;\r\n    }\r\n    getMensaje() {\r\n        return ('Error ' + this.tipoError + ': ' +\r\n            this.descripcion +\r\n            ' en la linea ' + this.linea +\r\n            ' y columna ' + this.columna);\r\n    }\r\n}\r\n","import mierror from './Error';\r\nclass ListaError {\r\n    constructor() {\r\n        this.listaError = new Array();\r\n        if (typeof ListaError._instance === \"object\") {\r\n            return ListaError._instance;\r\n        }\r\n        ListaError._instance = this;\r\n        return this;\r\n    }\r\n    static getInstance() {\r\n        return this._instance;\r\n    }\r\n    agregarError(tipo, descripcion, linea, columna) {\r\n        this.listaError.push(new mierror(tipo, descripcion, linea, columna));\r\n    }\r\n    getSize() {\r\n        return this.listaError.length;\r\n    }\r\n    getError(indice) {\r\n        return this.listaError[indice];\r\n    }\r\n    limpiar() {\r\n        this.listaError = [];\r\n    }\r\n}\r\nconst errores = new ListaError();\r\nexport default errores;\r\n","export class Nodo {\r\n    constructor(nombre, tipo, linea, columna, predicado, tipoAxis, nodeTest) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.nombre = nombre;\r\n        this.predicado = predicado;\r\n        this.fromRoot = true;\r\n        this.tipoAxis = tipoAxis;\r\n        this.NodeTest = nodeTest;\r\n    }\r\n    ToString() {\r\n        if (this.predicado != undefined) {\r\n            return this.nombre + \" \" + this.predicado;\r\n        }\r\n        return this.nombre;\r\n    }\r\n    isFromRoot() {\r\n        return this.fromRoot;\r\n    }\r\n    setFromRoot(fromRoot) {\r\n        this.fromRoot = fromRoot;\r\n    }\r\n    getValorInicial() {\r\n        return this.nombre;\r\n    }\r\n    getValor() {\r\n        if (this.NodeTest != undefined) {\r\n            return this.NodeTest.getNombre();\r\n        }\r\n        return this.nombre;\r\n    }\r\n    getNombre() {\r\n        return this.nombre;\r\n    }\r\n    getPredicado() {\r\n        if (this.NodeTest != undefined) {\r\n            return this.NodeTest.getPredicado();\r\n        }\r\n        return this.predicado;\r\n    }\r\n    getTipo() {\r\n        return this.tipo;\r\n    }\r\n    isAxis() {\r\n        if (this.tipoAxis != undefined) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    getTipoAxis() {\r\n        return this.tipoAxis;\r\n    }\r\n}\r\nexport var TipoNodo;\r\n(function (TipoNodo) {\r\n    TipoNodo[TipoNodo[\"IDENTIFIER\"] = 0] = \"IDENTIFIER\";\r\n    TipoNodo[TipoNodo[\"ATRIBUTO\"] = 1] = \"ATRIBUTO\";\r\n    TipoNodo[TipoNodo[\"DOT\"] = 2] = \"DOT\";\r\n    TipoNodo[TipoNodo[\"DOTDOT\"] = 3] = \"DOTDOT\";\r\n    TipoNodo[TipoNodo[\"ASTERISCO\"] = 4] = \"ASTERISCO\";\r\n    TipoNodo[TipoNodo[\"AXIS\"] = 5] = \"AXIS\";\r\n    TipoNodo[TipoNodo[\"FUNCION\"] = 6] = \"FUNCION\";\r\n    TipoNodo[TipoNodo[\"NODOERROR\"] = 7] = \"NODOERROR\";\r\n})(TipoNodo || (TipoNodo = {}));\r\nexport var TipoAxis;\r\n(function (TipoAxis) {\r\n    TipoAxis[TipoAxis[\"ANCESTOR\"] = 0] = \"ANCESTOR\";\r\n    TipoAxis[TipoAxis[\"ANCESTORORSELF\"] = 1] = \"ANCESTORORSELF\";\r\n    TipoAxis[TipoAxis[\"ATTRIBUTE\"] = 2] = \"ATTRIBUTE\";\r\n    TipoAxis[TipoAxis[\"CHILD\"] = 3] = \"CHILD\";\r\n    TipoAxis[TipoAxis[\"DESCENDANT\"] = 4] = \"DESCENDANT\";\r\n    TipoAxis[TipoAxis[\"DESCENDANTORSELF\"] = 5] = \"DESCENDANTORSELF\";\r\n    TipoAxis[TipoAxis[\"FOLLOWING\"] = 6] = \"FOLLOWING\";\r\n    TipoAxis[TipoAxis[\"FOLLOWINGSIBLING\"] = 7] = \"FOLLOWINGSIBLING\";\r\n    TipoAxis[TipoAxis[\"PARENT\"] = 8] = \"PARENT\";\r\n    TipoAxis[TipoAxis[\"PRECEDING\"] = 9] = \"PRECEDING\";\r\n    TipoAxis[TipoAxis[\"PRECEDINGSIBLING\"] = 10] = \"PRECEDINGSIBLING\";\r\n    TipoAxis[TipoAxis[\"SELF\"] = 11] = \"SELF\";\r\n    TipoAxis[TipoAxis[\"NAMESPACE\"] = 12] = \"NAMESPACE\";\r\n})(TipoAxis || (TipoAxis = {}));\r\n","import errores from \"../Global/ListaError\";\r\nimport { Tipo } from \"./Tipo\";\r\nexport class Entorno {\r\n    constructor(nombre, padre, global) {\r\n        this.tsimbolos = new Array();\r\n        this.nombre = nombre;\r\n        this.padre = padre;\r\n        if (global === null)\r\n            this.global = this;\r\n        else\r\n            this.global = global;\r\n    }\r\n    agregarSimbolo(nombre, simbolo) {\r\n        this.tsimbolos.push({ 'nombre': nombre, 'valor': simbolo });\r\n    }\r\n    sobreEscribirSimbolo(nombre, simbolo) {\r\n        for (let a = this; a != null; a = a.padre) {\r\n            for (let i = 0; i < a.tsimbolos.length; i++) {\r\n                if (a.tsimbolos[i].nombre.toString().toLowerCase() === nombre.toString().toLowerCase()) {\r\n                    let nuevo = { 'nombre': nombre, 'valor': simbolo };\r\n                    a.tsimbolos[i] = nuevo;\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        errores.agregarError('semantico', 'No existe el simbolo ' + nombre, -1, -1);\r\n        return false;\r\n    }\r\n    getStringTipo(t) {\r\n        switch (t) {\r\n            case Tipo.STRING:\r\n                return 'Cadena';\r\n            case Tipo.ETIQUETA:\r\n                return 'Etiqueta';\r\n            case Tipo.ATRIBUTO:\r\n                return 'Atributo';\r\n        }\r\n        return '';\r\n    }\r\n    obtenerSimbolo(nombre) {\r\n        for (let a = this; a != null; a = a.padre) {\r\n            for (let i = 0; i < a.tsimbolos.length; i++) {\r\n                if (a.tsimbolos[i].nombre.toString().toLowerCase() === nombre.toString().toLowerCase()) {\r\n                    return a.tsimbolos[i].valor;\r\n                }\r\n            }\r\n        }\r\n        errores.agregarError('semantico', 'No existe el simbolo ' + nombre, -1, -1);\r\n        return null;\r\n    }\r\n    /* Metodo para cambiar el valor del simbolo */\r\n    setSimbolo(nombre, simbolo) {\r\n        //console.log(\"Entra a set simbolo\");\r\n        for (let a = this; a != null; a = a.padre) {\r\n            for (let i = 0; i < a.tsimbolos.length; i++) {\r\n                //console.log(a.tsimbolos[i].nombre.toString().toLowerCase());\r\n                //console.log(nombre.toString().toLowerCase());\r\n                let aux = a.tsimbolos[i];\r\n                if (aux.nombre.toString().toLowerCase() === nombre.toString().toLowerCase()) {\r\n                    aux.valor = simbolo;\r\n                    //console.log(a.tsimbolos[i].valor);\r\n                    //console.log(this.tsimbolos[i].valor);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /* Verifica si el simbolo existe en el entorno actual */\r\n    existeSimbolo(nombre) {\r\n        for (let i = 0; i < this.tsimbolos.length; i++) {\r\n            if (this.tsimbolos[i].nombre.toString().toLowerCase() === nombre.toString().toLowerCase())\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    existeMetodo(nombre) {\r\n        let tablaGlobal = this.global.tsimbolos;\r\n        for (let i = 0; i < tablaGlobal.length; i++) {\r\n            let sim = tablaGlobal[i];\r\n            if (sim.nombre.toString().toLowerCase() === nombre.toString().toLowerCase()\r\n                && sim.valor.getParametros() !== undefined)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    obtenerMetodo(nombre) {\r\n        let tablaGlobal = this.global.tsimbolos;\r\n        for (let i = 0; i < tablaGlobal.length; i++) {\r\n            let sim = tablaGlobal[i];\r\n            if (sim.nombre.toString().toLowerCase() === nombre.toString().toLowerCase()\r\n                && sim.valor.getParametros() !== undefined)\r\n                return sim.valor;\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","export class Primitiva3D {\r\n    constructor(tipo, tipoPrimitiva, valor, codigo3D, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.valor = valor;\r\n        this.tipo = tipo;\r\n        this.tipoPrimitiva = tipoPrimitiva;\r\n        this.codigo3D = codigo3D;\r\n    }\r\n    getCodigo3D() {\r\n        return this.valor;\r\n    }\r\n    getValor() {\r\n        return this.valor;\r\n    }\r\n    getTipoPrim3D() {\r\n        return this.tipoPrimitiva;\r\n    }\r\n    getTipoExpresion() {\r\n        return this.tipo;\r\n    }\r\n}\r\nexport var TipoPrim3D;\r\n(function (TipoPrim3D) {\r\n    TipoPrim3D[TipoPrim3D[\"IDENTIFIER\"] = 0] = \"IDENTIFIER\";\r\n    TipoPrim3D[TipoPrim3D[\"DOUBLE\"] = 1] = \"DOUBLE\";\r\n    TipoPrim3D[TipoPrim3D[\"INTEGER\"] = 2] = \"INTEGER\";\r\n})(TipoPrim3D || (TipoPrim3D = {}));\r\n","export class Simbolo {\r\n    constructor(tipo, nombre, valor, linea, columna, parametros, instrucciones) {\r\n        this.tipo = tipo;\r\n        this.nombre = nombre;\r\n        this.valor = valor;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.parametros = parametros;\r\n        this.instrucciones = instrucciones;\r\n        this.posicion = 0;\r\n    }\r\n    getTipo() {\r\n        return this.tipo;\r\n    }\r\n    getNombre() {\r\n        return this.nombre;\r\n    }\r\n    getValor() {\r\n        return this.valor;\r\n    }\r\n    getLinea() {\r\n        return this.linea;\r\n    }\r\n    getColumna() {\r\n        return this.columna;\r\n    }\r\n    getPosicion() {\r\n        return this.posicion;\r\n    }\r\n    setPosicion(posicion) {\r\n        this.posicion = posicion;\r\n    }\r\n    setParametros(params) {\r\n        this.parametros = params;\r\n    }\r\n    getParametros() {\r\n        return this.parametros;\r\n    }\r\n    setInstrucciones(inst) {\r\n        this.instrucciones = inst;\r\n    }\r\n    getInstrucciones() {\r\n        return this.instrucciones;\r\n    }\r\n}\r\n","import { Primitiva3D } from \"./Primitiva3D\";\r\nexport class Operacion3D {\r\n    constructor(tipo, tipoOperacion, op_izq, op_der, codigo3D, fila, columna) {\r\n        this.tipo = tipo;\r\n        this.codigo3D = codigo3D;\r\n        this.fila = fila;\r\n        this.tipoOperacion = tipoOperacion;\r\n        this.columna = columna;\r\n        this.op_der = op_der;\r\n        this.op_izq = op_izq;\r\n        if (this.tipoOperacion == TipoOperacion3D.MENOSUNARIO) {\r\n            if (this.op_izq instanceof Primitiva3D) {\r\n                this.op_izq.valor = this.op_izq.getValor() * -1;\r\n                this.op_izq.codigo3D = \"-\" + this.op_izq.valor;\r\n            }\r\n        }\r\n    }\r\n    getCodigo3D() {\r\n        this.codigo3D = this.op_izq.getCodigo3D();\r\n        if (this.op_der != null) {\r\n            this.codigo3D += \" \" + this.getOperandoString() + \" \";\r\n            this.codigo3D += this.op_der.getCodigo3D();\r\n        }\r\n        return this.codigo3D;\r\n    }\r\n    getOperandoString() {\r\n        switch (this.tipoOperacion) {\r\n            case TipoOperacion3D.SUMA:\r\n                return \"+\";\r\n            case TipoOperacion3D.RESTA:\r\n                return \"-\";\r\n            case TipoOperacion3D.MULTIPLICACION:\r\n                return \"*\";\r\n            case TipoOperacion3D.DIVISION:\r\n                return \"/\";\r\n            case TipoOperacion3D.MOD:\r\n                return \"%\";\r\n            case TipoOperacion3D.MAYORQUE:\r\n                return \">\";\r\n            case TipoOperacion3D.MENORQUE:\r\n                return \"<\";\r\n            case TipoOperacion3D.MAYORIGUALQUE:\r\n                return \">=\";\r\n            case TipoOperacion3D.MENORIGUALQUE:\r\n                return \"<=\";\r\n            case TipoOperacion3D.IGUALIGUAL:\r\n                return \"==\";\r\n            case TipoOperacion3D.DIFERENTEQUE:\r\n                return \"!=\";\r\n            case TipoOperacion3D.MENOSUNARIO:\r\n                return \"-\";\r\n            default:\r\n                return \"?\";\r\n        }\r\n    }\r\n    getTipoOperacion() {\r\n        return this.tipoOperacion;\r\n    }\r\n    getTipoExpresion() {\r\n        return this.tipo;\r\n    }\r\n    getValorRelacional() {\r\n        switch (this.tipoOperacion) {\r\n            case TipoOperacion3D.MAYORQUE:\r\n                if (this.op_der) {\r\n                    return this.op_izq.getValor() > this.op_der.getValor();\r\n                }\r\n            case TipoOperacion3D.MAYORIGUALQUE:\r\n                if (this.op_der) {\r\n                    return this.op_izq.getValor() >= this.op_der.getValor();\r\n                }\r\n            case TipoOperacion3D.IGUALIGUAL:\r\n                if (this.op_der) {\r\n                    return this.op_izq.getValor() == this.op_der.getValor();\r\n                }\r\n            case TipoOperacion3D.DIFERENTEQUE:\r\n                if (this.op_der) {\r\n                    return this.op_izq.getValor() != this.op_der.getValor();\r\n                }\r\n            case TipoOperacion3D.MENORQUE:\r\n                if (this.op_der) {\r\n                    return this.op_izq.getValor() < this.op_der.getValor();\r\n                }\r\n            case TipoOperacion3D.MENORIGUALQUE:\r\n                if (this.op_der) {\r\n                    return this.op_izq.getValor() <= this.op_der.getValor();\r\n                }\r\n            default:\r\n                console.log(\"Tipo condicion Incorrecta: \", this.tipoOperacion);\r\n                return false;\r\n        }\r\n    }\r\n    /*\r\n        getTipoOriginal(tipoOp: TipoOperacion3D): TipoOperacion3D{\r\n            switch(tipoOp)\r\n    \r\n        }*/\r\n    negarCondicion() {\r\n        switch (this.tipoOperacion) {\r\n            case TipoOperacion3D.MAYORQUE:\r\n                return TipoOperacion3D.MENORQUE;\r\n            case TipoOperacion3D.MAYORIGUALQUE:\r\n                return TipoOperacion3D.MENORIGUALQUE;\r\n            case TipoOperacion3D.IGUALIGUAL:\r\n                return TipoOperacion3D.DIFERENTEQUE;\r\n            case TipoOperacion3D.DIFERENTEQUE:\r\n                return TipoOperacion3D.IGUALIGUAL;\r\n            case TipoOperacion3D.MENORQUE:\r\n                return TipoOperacion3D.MAYORQUE;\r\n            case TipoOperacion3D.MENORIGUALQUE:\r\n                return TipoOperacion3D.MAYORIGUALQUE;\r\n            default:\r\n                console.log(\"Tipo condicion Incorrecta: \", this.tipoOperacion);\r\n                return null;\r\n        }\r\n    }\r\n}\r\nexport var TipoOperacion3D;\r\n(function (TipoOperacion3D) {\r\n    TipoOperacion3D[TipoOperacion3D[\"SUMA\"] = 0] = \"SUMA\";\r\n    TipoOperacion3D[TipoOperacion3D[\"RESTA\"] = 1] = \"RESTA\";\r\n    TipoOperacion3D[TipoOperacion3D[\"MULTIPLICACION\"] = 2] = \"MULTIPLICACION\";\r\n    TipoOperacion3D[TipoOperacion3D[\"DIVISION\"] = 3] = \"DIVISION\";\r\n    TipoOperacion3D[TipoOperacion3D[\"MOD\"] = 4] = \"MOD\";\r\n    TipoOperacion3D[TipoOperacion3D[\"MAYORQUE\"] = 5] = \"MAYORQUE\";\r\n    TipoOperacion3D[TipoOperacion3D[\"MENORQUE\"] = 6] = \"MENORQUE\";\r\n    TipoOperacion3D[TipoOperacion3D[\"IGUALIGUAL\"] = 7] = \"IGUALIGUAL\";\r\n    TipoOperacion3D[TipoOperacion3D[\"DIFERENTEQUE\"] = 8] = \"DIFERENTEQUE\";\r\n    TipoOperacion3D[TipoOperacion3D[\"MAYORIGUALQUE\"] = 9] = \"MAYORIGUALQUE\";\r\n    TipoOperacion3D[TipoOperacion3D[\"MENORIGUALQUE\"] = 10] = \"MENORIGUALQUE\";\r\n    TipoOperacion3D[TipoOperacion3D[\"MENOSUNARIO\"] = 11] = \"MENOSUNARIO\";\r\n})(TipoOperacion3D || (TipoOperacion3D = {}));\r\n","import { Tipo } from \"../AST/Tipo\";\r\nimport { TipoAxis, TipoNodo } from \"./Nodo\";\r\nimport { TipoPrim } from \"../Expresiones/Primitiva\";\r\nexport class Consulta {\r\n    constructor(listaNodos, linea, columna) {\r\n        this.listaNodos = listaNodos;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n    ToString() {\r\n        let cad = \"\";\r\n        this.listaNodos.forEach((nodo) => {\r\n            if (nodo.isFromRoot()) {\r\n                cad += \"/\" + nodo.getNombre();\r\n            }\r\n            else {\r\n                cad += \"//\" + nodo.getNombre();\r\n            }\r\n            if (nodo.isAxis()) {\r\n                cad += \"::\" + nodo.getValor();\r\n            }\r\n            if (nodo.getPredicado() != undefined) {\r\n                cad += \"[\" + nodo.getPredicado() + \"]\";\r\n            }\r\n        });\r\n        return cad;\r\n    }\r\n    ejecutar(global) {\r\n        //Recorrer lista de nodos\r\n        let [salida, _] = this.obtenerSalida(0, global, null, false);\r\n        return salida;\r\n    }\r\n    simbolosToString(simbs) {\r\n        let cadConsulta = \"\";\r\n        simbs.forEach((auxSimb) => {\r\n            if (!(typeof auxSimb === \"string\")) {\r\n                switch (auxSimb.getTipo()) {\r\n                    case Tipo.ATRIBUTO:\r\n                        cadConsulta += auxSimb.getNombre() + \"=\" + auxSimb.getValor() + \"\\n\";\r\n                        break;\r\n                    case Tipo.ETIQUETA:\r\n                        if (auxSimb.valor !== undefined) {\r\n                            cadConsulta += this.escribirConsultaObjeto(auxSimb, 0);\r\n                        }\r\n                        else {\r\n                            cadConsulta += this.escribirEtiquetaPadre(auxSimb);\r\n                        }\r\n                        break;\r\n                    case Tipo.STRING:\r\n                        cadConsulta += this.concatHijoTexto(auxSimb, 0);\r\n                        break;\r\n                    default:\r\n                        cadConsulta += \"---> \" + auxSimb.getTipo();\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                cadConsulta += auxSimb + \"\\n\";\r\n            }\r\n        });\r\n        return cadConsulta;\r\n    }\r\n    obtenerSalida(pos, ent, elemAux, rompeCiclo) {\r\n        let salida = [];\r\n        let actualNode = this.listaNodos[pos];\r\n        switch (actualNode.getTipo()) {\r\n            case TipoNodo.IDENTIFIER:\r\n                //Buscar si este id existe en el entorno.\r\n                //Antes de entrar al foreach revisar si se debe hacer para cada elemento  o no.\r\n                for (let i = 0; i < ent.tsimbolos.length; i++) {\r\n                    //Ver si este simbolo es igual a actualNode.getNombre()\r\n                    let elem = ent.tsimbolos[i].valor;\r\n                    if (elem.getNombre() === actualNode.getNombre()) {\r\n                        //Si existe este simbolo en el entorno.\r\n                        //Revisar Si tiene predicado este nodo.\r\n                        let predicado = actualNode.getPredicado();\r\n                        if (predicado != undefined) {\r\n                            let auxSal;\r\n                            [auxSal, rompeCiclo] = this.obtenerConsultaPredicado(predicado, pos, ent, elemAux, rompeCiclo, actualNode.getValor(), false);\r\n                            salida = salida.concat(auxSal);\r\n                            break;\r\n                        }\r\n                        //1. Revisar si es el ultimo nodo a buscar\r\n                        if (pos + 1 < this.listaNodos.length) {\r\n                            //Aun existen mas nodos en la consulta, ir a buscar eso\r\n                            let auxSal;\r\n                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elem, rompeCiclo);\r\n                            salida = salida.concat(auxSal);\r\n                        }\r\n                        else {\r\n                            //Es el ultimo nodo en la consulta, escribir su informacion de objeto\r\n                            salida.push(elem);\r\n                        }\r\n                    }\r\n                    else if (!actualNode.isFromRoot()) {\r\n                        //Este nodo es de tipo //, entonces entrar a buscar de todos modos.\r\n                        if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                            let auxSal;\r\n                            [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elem, rompeCiclo);\r\n                            salida = salida.concat(auxSal);\r\n                        }\r\n                    }\r\n                    if (rompeCiclo) {\r\n                        //Salir del ciclo del for.\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            case TipoNodo.ATRIBUTO:\r\n                //Ver si es @algo o @*\r\n                if (actualNode.getNombre() === \"*\") {\r\n                    //Si es asterisco, obtener todos los atributos del entorno actual\r\n                    if (actualNode.isFromRoot()) {\r\n                        //Solo es /, buscar solo en el entorno actual todos los atributos.\r\n                        ent.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (elem.getTipo() === Tipo.ATRIBUTO) {\r\n                                salida.push(elem.valor);\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        //Es //, buscar en el entorno actual y los entornos hijos.\r\n                        ent.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (elem.getTipo() === Tipo.ATRIBUTO) {\r\n                                salida.push(elem.valor);\r\n                            }\r\n                            else if (elem.getTipo() === Tipo.STRING) {\r\n                                salida.push(elem.valor);\r\n                            }\r\n                            else if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                //Ir a buscar atributos al entorno de esta etiqueta\r\n                                salida = salida.concat(this.getConsultaAtributos(elem, 0, \"*\"));\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    //El atributo tiene identificador, buscar solo los atributos que tienen este nombre.\r\n                    if (actualNode.isFromRoot()) {\r\n                        //Solo es /, buscar solo en el entorno actual todos los atributos.\r\n                        ent.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (elem.getTipo() === Tipo.ATRIBUTO) {\r\n                                //Concatenar solo si los nombres son iguales.\r\n                                if (actualNode.getNombre() === elem.getNombre()) {\r\n                                    salida.push(elem.valor);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        //Es //, buscar en el entorno actual y los entornos hijos.\r\n                        ent.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (elem.getTipo() === Tipo.ATRIBUTO) {\r\n                                if (actualNode.getNombre() === elem.getNombre()) {\r\n                                    salida.push(elem.valor);\r\n                                }\r\n                            }\r\n                            else if (elem.getTipo() === Tipo.STRING) {\r\n                                salida.push(elem.valor);\r\n                            }\r\n                            else if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                //Ir a buscar atributos al entorno de esta etiqueta\r\n                                salida = salida.concat(this.getConsultaAtributos(elem, 0, actualNode.getNombre()));\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n            case TipoNodo.DOTDOT:\r\n                /*\r\n                 **\r\n                 **  .. (DOTDOT) ESTA BUGGEADO :(\r\n                 **\r\n                 */\r\n                //Ver si es el ultimo o no\r\n                if (pos + 1 < this.listaNodos.length) {\r\n                    //Aun hay mas nodos.\r\n                    //Avanzar en la lista de nodos (pos+1) pero regresar al entorno anterior (padre)\r\n                    let auxSal;\r\n                    [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, ent.padre, ent.padre.valor, rompeCiclo);\r\n                    salida = salida.concat(auxSal);\r\n                    // console.log(\"SALIDA: \", salida)\r\n                }\r\n                else {\r\n                    //Es el ultimo nodo, entonces obtener consulta sobre este entorno\r\n                    let father = ent.padre;\r\n                    salida.push(father);\r\n                }\r\n                break;\r\n            case TipoNodo.DOT:\r\n                //Ver si es el ultimo o no\r\n                if (pos + 1 < this.listaNodos.length) {\r\n                    //Aun hay mas nodos.\r\n                    //Avanzar en la lista de nodos (pos+1) pero mantener el mismo entorno\r\n                    let auxSal;\r\n                    [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, ent, elemAux, rompeCiclo);\r\n                    salida = salida.concat(auxSal);\r\n                }\r\n                else {\r\n                    //Es el ultimo nodo, entonces obtener consulta sobre este entorno\r\n                    if (elemAux.getTipo() === Tipo.STRING) {\r\n                        //Esta etiqueta contiene solo texto.\r\n                        salida.push(elemAux);\r\n                    }\r\n                    else if (elemAux.getTipo() === Tipo.ETIQUETA) {\r\n                        salida.push(elemAux);\r\n                    }\r\n                }\r\n                break;\r\n            case TipoNodo.ASTERISCO:\r\n                //* Obtener Todo\r\n                //1. Ver si existen mas nodos\r\n                if (pos + 1 < this.listaNodos.length) {\r\n                    //Aun hay mas nodos.\r\n                    ent.tsimbolos.forEach((e) => {\r\n                        if (e.valor.getTipo() === Tipo.ETIQUETA) {\r\n                            let auxSal;\r\n                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, e.valor.valor, e.valor, rompeCiclo);\r\n                            salida = salida.concat(auxSal);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    //Es el ultimo nodo.\r\n                    ent.tsimbolos.forEach((e) => {\r\n                        let elem = e.valor;\r\n                        if (elem.getTipo() === Tipo.STRING) {\r\n                            salida.push(elem);\r\n                        }\r\n                        else if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                            salida.push(elem);\r\n                        }\r\n                    });\r\n                }\r\n                break;\r\n            case TipoNodo.FUNCION:\r\n                //El nombre de la funcion viene en el valor del nodo. (actualNode.getValor())\r\n                switch (actualNode.getValor().toLocaleLowerCase()) {\r\n                    case \"text()\":\r\n                        //Traer solo el texto que tenga adentro el entorno actual\r\n                        ent.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (elem.getTipo() === Tipo.STRING) {\r\n                                //Es texto, entonces devolver.\r\n                                salida.push(elem);\r\n                            }\r\n                            //Ver si el nodo es de tipo //\r\n                            if (!actualNode.isFromRoot() && elem.getTipo() == Tipo.ETIQUETA) {\r\n                                let auxSal;\r\n                                [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                salida = salida.concat(auxSal);\r\n                            }\r\n                        });\r\n                        break;\r\n                    case \"node()\":\r\n                        //Todo lo que tenga adentro el nodo en el entorno actual\r\n                        ent.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                salida.push(elem);\r\n                            }\r\n                            else if (elem.getTipo() == Tipo.STRING) {\r\n                                salida.push(elem);\r\n                            }\r\n                        });\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoNodo.AXIS:\r\n                switch (actualNode.getTipoAxis()) {\r\n                    case TipoAxis.ANCESTOR:\r\n                        /*\r\n                         ** \tSelects all ancestors (parent, grandparent, etc.) of the current node\r\n                         */\r\n                        let nombreParent = actualNode.getValor();\r\n                        if (nombreParent != \"*\") {\r\n                            //1. Buscar si existe un entorno padre de este nodo que tenga este nombre.\r\n                            let tmpEnt = ent.padre;\r\n                            while (tmpEnt != null) {\r\n                                if (tmpEnt.nombre === nombreParent) {\r\n                                    //2. Si existe, obtener consulta a partir de este entorno\r\n                                    //0. Ver si existen mas nodos\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Aun hay mas nodos despues de este, solo cambiar al entorno encontrado.\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, tmpEnt, elemAux, rompeCiclo);\r\n                                        salida = salida.concat(auxSal);\r\n                                    }\r\n                                    else {\r\n                                        salida.push(tmpEnt);\r\n                                    }\r\n                                    break;\r\n                                }\r\n                                tmpEnt = tmpEnt.padre;\r\n                            }\r\n                        }\r\n                        else {\r\n                            //Obtener todos\r\n                            let tmpEnt = ent.padre;\r\n                            while (tmpEnt.padre != null) {\r\n                                tmpEnt = tmpEnt.padre;\r\n                            }\r\n                            if (pos + 1 < this.listaNodos.length) {\r\n                                //Aun hay mas nodos despues de este, solo cambiar al entorno encontrado.\r\n                                let auxSal;\r\n                                [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, tmpEnt, elemAux, rompeCiclo);\r\n                                salida = salida.concat(auxSal);\r\n                            }\r\n                            else {\r\n                                salida.push(tmpEnt);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoAxis.ANCESTORORSELF:\r\n                        if (actualNode.getValor() != \"*\") {\r\n                            //1. Buscar si existe un entorno padre de este nodo que tenga este nombre.\r\n                            let tmpEnt = ent.padre;\r\n                            if (!actualNode.isFromRoot()) {\r\n                                //Empezar a buscar en todos.\r\n                                ent.tsimbolos.forEach((e) => {\r\n                                    let elem = e.valor;\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                        let auxS;\r\n                                        [auxS, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                        salida = salida.concat(auxS);\r\n                                    }\r\n                                });\r\n                            }\r\n                            while (tmpEnt != null) {\r\n                                if (tmpEnt.nombre === actualNode.getValor()) {\r\n                                    ///0. Ver si tiene predicate\r\n                                    let predicado = actualNode.getPredicado();\r\n                                    if (predicado != undefined) {\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerConsultaPredicado(predicado, pos, ent, elemAux, rompeCiclo, actualNode.getValor(), true);\r\n                                        salida = salida.concat(auxSal);\r\n                                        break;\r\n                                    }\r\n                                    //2. Si existe, obtener consulta a partir de este entorno\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Aun hay mas nodos despues de este, solo cambiar al entorno encontrado.\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, tmpEnt, elemAux, rompeCiclo);\r\n                                        salida = salida.concat(auxSal);\r\n                                    }\r\n                                    else {\r\n                                        salida.push(tmpEnt);\r\n                                    }\r\n                                    //3. Obtener consulta tambien a partir del entorno actual\r\n                                    salida.push(tmpEnt); // <-- ent ?? \r\n                                    break;\r\n                                }\r\n                                tmpEnt = tmpEnt.padre;\r\n                            }\r\n                        }\r\n                        else {\r\n                            //Obtener todos\r\n                            let tmpEnt = ent.padre;\r\n                            while (tmpEnt.padre != null) {\r\n                                tmpEnt = tmpEnt.padre;\r\n                            }\r\n                            if (pos + 1 < this.listaNodos.length) {\r\n                                //Aun hay mas nodos despues de este, solo cambiar al entorno encontrado.\r\n                                let auxSal;\r\n                                [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, tmpEnt, elemAux, rompeCiclo);\r\n                                salida = salida.concat(auxSal);\r\n                            }\r\n                            else {\r\n                                salida.push(tmpEnt);\r\n                            }\r\n                            //3. Obtener consulta tambien a partir del entorno actual\r\n                            salida.push(tmpEnt);\r\n                        }\r\n                        break;\r\n                    case TipoAxis.ATTRIBUTE:\r\n                        // Selects all attributes of the current node\r\n                        //1. Sobre el entorno actual, buscar el atributo con el nombre especificado en getValor()\r\n                        if (actualNode.getValor() === \"*\") {\r\n                            //Obtener todos los atributos del entorno actual\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                if (elem.getTipo() === Tipo.ATRIBUTO) {\r\n                                    //0. Si hay mas nodos despues de este, devolver vacio \"\"\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Revisar si el siguiente es un nodo comun o un nodo AXIS\r\n                                        if (this.listaNodos[pos + 1].getTipo() == TipoNodo.AXIS) {\r\n                                            //Es axis, entonces ir a buscar con el entorno actual\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, ent, elemAux, rompeCiclo);\r\n                                            salida = salida.concat(auxSal);\r\n                                        }\r\n                                        else {\r\n                                            //No es axis, entonces devolver consulta vacia\r\n                                            salida = [];\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        //Ya no hay mas nodos, entonces devolver la consulta sobre este entorno.\r\n                                        salida.push(elem.valor);\r\n                                    }\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() &&\r\n                                    elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida = salida.concat(auxSal);\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            //Obtener solo el atributo con el nombre  tiene actualNode.getValor()\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                if (elem.getTipo() === Tipo.ATRIBUTO) {\r\n                                    if (elem.getNombre() === actualNode.getValor())\r\n                                        if (pos + 1 < this.listaNodos.length) {\r\n                                            //Revisar si el siguiente es un nodo comun o un nodo AXIS\r\n                                            if (this.listaNodos[pos + 1].getTipo() == TipoNodo.AXIS) {\r\n                                                //Es axis, entonces ir a buscar con el entorno actual\r\n                                                let auxSal;\r\n                                                [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, ent, elemAux, rompeCiclo);\r\n                                                salida = salida.concat(auxSal);\r\n                                            }\r\n                                            else {\r\n                                                //No es axis, entonces devolver consulta vacia\r\n                                                salida = [];\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            //Ya no hay mas nodos, entonces devolver la consulta sobre este entorno.\r\n                                            salida.push(elem.valor);\r\n                                        }\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() &&\r\n                                    elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida = salida.concat(auxSal);\r\n                                }\r\n                            });\r\n                        }\r\n                        break;\r\n                    case TipoAxis.CHILD:\r\n                        //Selects all children of the current node\r\n                        //1. Ver que valor tiene nodeActual.getValor()\r\n                        if (actualNode.getValor() === \"*\") {\r\n                            //Traer todos los hijos del contexto actual\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                //2. Revisar si es el ultimo nodo o no.\r\n                                let predicado = actualNode.getPredicado();\r\n                                if (predicado != undefined) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerConsultaPredicado(predicado, pos, ent, elemAux, rompeCiclo, actualNode.getValor(), false);\r\n                                    salida = salida.concat(auxSal);\r\n                                }\r\n                                else {\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Aun hay mas nodos, moverme solo de entorno\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                            salida = salida.concat(auxSal);\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        //Es el ultimo nodo, obtener la salida\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                            salida.push(elem);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() && elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida = salida.concat(auxSal);\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            //Traer el hijo en el valor\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                let predicado = actualNode.getPredicado();\r\n                                //2. Revisar si es el ultimo nodo o no.\r\n                                if (elem.getNombre() === actualNode.getValor()) {\r\n                                    if (predicado != undefined) {\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerConsultaPredicado(predicado, pos, ent, elemAux, rompeCiclo, actualNode.getValor(), false);\r\n                                        salida = salida.concat(auxSal);\r\n                                    }\r\n                                    else {\r\n                                        if (pos + 1 < this.listaNodos.length) {\r\n                                            //Aun hay mas nodos, moverme solo de entorno\r\n                                            if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                                let auxSal;\r\n                                                [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                                salida = salida.concat(auxSal);\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            //Es el ultimo nodo, obtener la salida\r\n                                            if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                                salida.push(elem);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() && elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida = salida.concat(auxSal);\r\n                                }\r\n                            });\r\n                        }\r\n                        rompeCiclo = true;\r\n                        break;\r\n                    case TipoAxis.DESCENDANT:\r\n                        //Selects all descendants (children, grandchildren, etc.) of the current node\r\n                        //1. Ver que valor tiene nodeActual.getValor()\r\n                        if (actualNode.getValor() === \"*\") {\r\n                            //Traer todos los hijos del contexto actual\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                //2. Revisar si es el ultimo nodo o no.\r\n                                if (pos + 1 < this.listaNodos.length) {\r\n                                    //Aun hay mas nodos, moverme solo de entorno\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                        salida = salida.concat(auxSal);\r\n                                        //Obtener tambien la salida de los hijos que pueda tener este nodo\r\n                                        let auxSal2;\r\n                                        [auxSal2, rompeCiclo] = this.obtenerHijosRecursivos(pos + 1, elem.valor, elemAux, false, rompeCiclo);\r\n                                        salida = salida.concat(auxSal2);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    //Es el ultimo nodo, obtener la salida\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerHijosRecursivos(pos + 1, elem.valor, elemAux, true, rompeCiclo);\r\n                                        salida = salida.concat(auxSal);\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            //Traer el hijo en el valor\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                //2. Revisar si es el ultimo nodo o no.\r\n                                if (elem.getNombre() === actualNode.getValor()) {\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Aun hay mas nodos, moverme solo de entorno\r\n                                        if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                            salida = salida.concat(auxSal);\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        //Es el ultimo nodo, obtener la salida\r\n                                        if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                            salida.push(elem);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    //Si no se llaman igual, pero es etiqueta, entrar a buscar a sus hijos :2\r\n                                    if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                        salida = salida.concat(auxSal);\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        break;\r\n                    case TipoAxis.DESCENDANTORSELF:\r\n                        //Selects all descendants (children, grandchildren, etc.) of the current node\r\n                        //1. Ver que valor tiene nodeActual.getValor()\r\n                        if (actualNode.getValor() === \"*\") {\r\n                            //Traer todos los hijos del contexto actual\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                //2. Revisar si es el ultimo nodo o no.\r\n                                if (pos + 1 < this.listaNodos.length) {\r\n                                    //Aun hay mas nodos, moverme solo de entorno\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                        salida = salida.concat(auxSal);\r\n                                        //Obtener tambien la salida de los hijos que pueda tener este nodo\r\n                                        [auxSal, rompeCiclo] = this.obtenerHijosRecursivos(pos + 1, elem.valor, elemAux, false, rompeCiclo);\r\n                                        salida = salida.concat(auxSal);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    //Es el ultimo nodo, obtener la salida\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                        salida.push(elem);\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerHijosRecursivos(pos + 1, elem.valor, elemAux, true, rompeCiclo);\r\n                                        salida = salida.concat(auxSal);\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            //Traer el hijo en el valor\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                //2. Revisar si es el ultimo nodo o no.\r\n                                if (elem.getNombre() === actualNode.getValor()) {\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Aun hay mas nodos, moverme solo de entorno\r\n                                        if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                            salida = salida.concat(auxSal);\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        //Es el ultimo nodo, obtener la salida\r\n                                        if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                            salida.push(elem);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    //Si no se llaman igual, pero es etiqueta, entrar a buscar a sus hijos :2\r\n                                    if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                        //Aun hay mas nodos, moverme solo de entorno\r\n                                        if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                            salida = salida.concat(auxSal);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        break;\r\n                    case TipoAxis.FOLLOWING:\r\n                        //Selects everything in the document after the closing tag of the current node\r\n                        //1. Salir del entorno actual, ir al padre.\r\n                        let tmpPadre = ent.padre;\r\n                        //2. Con el padre buscar a quien se refiere el axis (con getValor())\r\n                        //Obtener todos los elementos que estan despues del especificado.\r\n                        let found = false; //flag para saber cuando ya se encontro el actual\r\n                        let nombreBuscar = ent.nombre;\r\n                        while (tmpPadre != null) {\r\n                            tmpPadre.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                if (found) {\r\n                                    if (actualNode.getValor() === \"*\" ||\r\n                                        actualNode.getValor() === elem.getNombre()) {\r\n                                        //Ver si es el ultimo nodo o no\r\n                                        if (pos + 1 < this.listaNodos.length) {\r\n                                            //Aun hay mas nodos, ir con este entorno a buscar\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                            salida = salida.concat(auxSal);\r\n                                        }\r\n                                        else {\r\n                                            //Escribir elemento\r\n                                            if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                                salida.push(elem);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (!found && elem.getNombre() === nombreBuscar) {\r\n                                    //Se encontro el entorno actual, ahora si escribir a partir del proximo elemento.\r\n                                    found = true;\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() &&\r\n                                    elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida = salida.concat(auxSal);\r\n                                }\r\n                            });\r\n                            nombreBuscar = tmpPadre.nombre;\r\n                            tmpPadre = tmpPadre.padre;\r\n                            found = false;\r\n                        }\r\n                        //rompeCiclo = true;\r\n                        break;\r\n                    case TipoAxis.FOLLOWINGSIBLING:\r\n                        //Selects everything in the document after the closing tag of the current node\r\n                        //1. Salir del entorno actual, ir al padre.\r\n                        let siblingPadre = ent.padre;\r\n                        //2. Con el padre buscar a quien se refiere el axis (con getValor())\r\n                        if (actualNode.getValor() === \"*\") {\r\n                            //Obtener todos los elementos que estan despues del especificado.\r\n                            let found = false; //flag para saber cuando ya se encontro el actual\r\n                            let nombreBuscar = ent.nombre;\r\n                            siblingPadre.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                if (found) {\r\n                                    //Ver si es el ultimo nodo o no\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Aun hay mas nodos, ir con este entorno a buscar\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                        salida = salida.concat(auxSal);\r\n                                    }\r\n                                    else {\r\n                                        //Escribir elemento\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                            salida.push(elem);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (!found && elem.getNombre() === nombreBuscar) {\r\n                                    //Se encontro el entorno actual, ahora si escribir a partir del proximo elemento.\r\n                                    found = true;\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() &&\r\n                                    elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida = salida.concat(auxSal);\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            //Obtener los elementos que tienen el nombre getValor(), que estan despues de mi entorno actual\r\n                            let found = false; //flag para saber cuando ya se encontro el actual\r\n                            let nombreBuscar = ent.nombre;\r\n                            siblingPadre.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                if (found) {\r\n                                    if (elem.getNombre() === actualNode.getValor()) {\r\n                                        //Ver si es el ultimo nodo o no\r\n                                        if (pos + 1 < this.listaNodos.length) {\r\n                                            //Aun hay mas nodos, ir con este entorno a buscar\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                            salida = salida.concat(auxSal);\r\n                                        }\r\n                                        else {\r\n                                            //Escribir elemento\r\n                                            if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                                salida.push(elem);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (!found && elem.getNombre() === nombreBuscar) {\r\n                                    //Se encontro el entorno actual, ahora si escribir a partir del proximo elemento.\r\n                                    found = true;\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() &&\r\n                                    elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida = salida.concat(auxSal);\r\n                                }\r\n                            });\r\n                        }\r\n                        //rompeCiclo = true;\r\n                        break;\r\n                    case TipoAxis.NAMESPACE: //No se implementa.\r\n                        salida = [];\r\n                    case TipoAxis.PARENT:\r\n                        //Selects the parent of the current node\r\n                        //1. Obtener el padre.\r\n                        if (actualNode.getValor() === \"*\" ||\r\n                            actualNode.getValor() === ent.padre.nombre) {\r\n                            if (pos + 1 < this.listaNodos.length) {\r\n                                let auxS;\r\n                                [auxS, rompeCiclo] = this.obtenerSalida(pos + 1, ent.padre, elemAux, rompeCiclo);\r\n                                salida = salida.concat(auxS);\r\n                            }\r\n                            else {\r\n                                salida.push(ent.padre);\r\n                                ent.padre.tsimbolos.forEach((e) => {\r\n                                    let elem = e.valor;\r\n                                    //Ver si el nodo es de tipo //\r\n                                    if (!actualNode.isFromRoot() && elem.getTipo() == Tipo.ETIQUETA) {\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                        salida = salida.concat(auxSal);\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoAxis.PRECEDING || TipoAxis.PRECEDINGSIBLING:\r\n                        //Selects all nodes that appear before the\r\n                        //current node in the document, except ancestors,\r\n                        //attribute nodes and namespace nodes\r\n                        //1. Obtener Padre\r\n                        let tPadre = ent.padre;\r\n                        //2. Recorrer padre y escribir todos los que esten antes del mencionado\r\n                        let antes = true;\r\n                        tPadre.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (antes && ent.nombre === elem.getNombre()) {\r\n                                //Ya se encontro, no escribir mas.\r\n                                antes = false;\r\n                            }\r\n                            if (antes) {\r\n                                if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    if (actualNode.getValor() === \"*\" ||\r\n                                        actualNode.getValor() === elem.getNombre()) {\r\n                                        //Si es asi, escribirlo.\r\n                                        if (pos + 1 < this.listaNodos.length) {\r\n                                            //Hay mas nodos, solo moverme de entorno y avanzar en la posicion de listaNodos\r\n                                            let auxS;\r\n                                            [auxS, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                            salida = salida.concat(auxS);\r\n                                        }\r\n                                        else {\r\n                                            //Es el ultimo nodo, escribir directamente este elemento.\r\n                                            salida.push(elem);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                        break;\r\n                    case TipoAxis.SELF:\r\n                        //Selects the current node\r\n                        //Del elemAux, obtener la consulta\r\n                        if (actualNode.getValor() === \"*\" ||\r\n                            actualNode.getValor() === elemAux.getNombre()) {\r\n                            if (pos + 1 < this.listaNodos.length) {\r\n                                let auxS;\r\n                                [auxS, rompeCiclo] = this.obtenerSalida(pos + 1, ent, elemAux, rompeCiclo);\r\n                                salida = salida.concat(auxS);\r\n                            }\r\n                            else {\r\n                                salida.push(elemAux);\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoNodo.NODOERROR:\r\n                if (pos + 1 < this.listaNodos.length) {\r\n                    //Ignorar este y moverme hacia el siguiente nodo.\r\n                    [salida, rompeCiclo] = this.obtenerSalida(pos + 1, ent, elemAux, rompeCiclo);\r\n                }\r\n                else {\r\n                    salida = [];\r\n                }\r\n        }\r\n        return [salida, rompeCiclo];\r\n    }\r\n    encontrarEntorno(padre, entBuscar) {\r\n        for (let i = 0; i < padre.tsimbolos.length; i++) {\r\n            let elem = padre.tsimbolos[i].valor;\r\n            if (elem.getTipo() == Tipo.ETIQUETA && elem.getNombre() == entBuscar) {\r\n                return elem.valor;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    obtenerConsultaPredicado(predicado, pos, ent, elemAux, rompeCiclo, nombreNodo, isAxis) {\r\n        let salida = [];\r\n        //0. Obtener entorno sobre quien quiero obtener el predicado.\r\n        let actualNode = this.listaNodos[pos];\r\n        let auxEnt;\r\n        if (!isAxis) {\r\n            auxEnt = this.encontrarEntorno(ent, nombreNodo);\r\n        }\r\n        else {\r\n            auxEnt = ent.padre;\r\n        }\r\n        if (auxEnt == null) {\r\n            return [salida, rompeCiclo];\r\n        }\r\n        else {\r\n            ent = auxEnt;\r\n        }\r\n        //1. Obtener el valor del predicado. (Para que se le asigne tipo tambien)\r\n        console.log(\"BUSCANDO EN: \", auxEnt);\r\n        let predValue = predicado.getValor(ent);\r\n        console.log(\"PREDICADO: \", predicado);\r\n        console.log(\"PREDVALUE:\", predValue);\r\n        //2. Obtener el tipo del predicado. \r\n        let predTipo = predicado.getTipo();\r\n        if (predValue === null || predValue === undefined) {\r\n            return [salida, rompeCiclo];\r\n        }\r\n        switch (predTipo) {\r\n            case TipoPrim.INTEGER:\r\n                //Ver si el numero es coherente (mayor a 0);\r\n                ent = ent.padre;\r\n                if (predValue < 1) {\r\n                    return [salida, rompeCiclo];\r\n                }\r\n                //Contar las veces que sean necesarias para obtener el nodo requerido\r\n                //Buscar actualNode n veces.\r\n                let veces = 1;\r\n                ent.tsimbolos.forEach((e) => {\r\n                    let elem = e.valor;\r\n                    if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === actualNode.getValor()) {\r\n                        if (veces == predValue) {\r\n                            //Ya, devolver el nodo.\r\n                            //Ver si es la ultima posicion o no\r\n                            if (pos + 1 < this.listaNodos.length) {\r\n                                let auxSal;\r\n                                [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                salida = salida.concat(auxSal);\r\n                            }\r\n                            else {\r\n                                //Es el ultimo, devolver la consulta sobre este entorno.\r\n                                salida.push(elem);\r\n                            }\r\n                        }\r\n                        veces++;\r\n                    }\r\n                });\r\n                break;\r\n            case TipoPrim.DOUBLE:\r\n                //Retornar vacio \"\";\r\n                break;\r\n            case TipoPrim.BOOLEAN:\r\n                break;\r\n            case TipoPrim.FUNCION:\r\n                //Un TipoPrim.Funcion devuelve un Entorno temporal que contiene\r\n                //Todas las etiquetas a escribir.\r\n                predValue.tsimbolos.forEach((e) => {\r\n                    let elem = e.valor;\r\n                    //Ver si es el ultimo nodo\r\n                    if (pos + 1 < this.listaNodos.length) {\r\n                        //Aun faltan mas nodos, para cada elemento continuar la consulta con su entorno respectivo\r\n                        let auxSal;\r\n                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                        salida = salida.concat(auxSal);\r\n                        if (isAxis) {\r\n                            rompeCiclo = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        //Es el ultimo nodo, devolver la consulta sobre este elemento\r\n                        salida.push(elem);\r\n                    }\r\n                });\r\n                break;\r\n        }\r\n        return [salida, rompeCiclo];\r\n    }\r\n    addTabs(nTabs) {\r\n        let tabs = \"\";\r\n        for (let i = 0; i < nTabs; i++) {\r\n            tabs += \"    \";\r\n        }\r\n        return tabs;\r\n    }\r\n    buscarHaciaAdentro(elem, nameEncontrar, pos, elemAux, rompeCiclo) {\r\n        let salida = [];\r\n        elem.valor.tsimbolos.forEach((e) => {\r\n            let ex = e.valor;\r\n            if (ex.getTipo() === Tipo.ETIQUETA) {\r\n                if (ex.getNombre() == nameEncontrar) {\r\n                    if (pos + 1 < this.listaNodos.length) {\r\n                        //Aun hay mas nodos ir a buscar sobre este entorno bru.\r\n                        let auxSal;\r\n                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, ex.valor, elemAux, rompeCiclo);\r\n                        salida = salida.concat(auxSal);\r\n                    }\r\n                    else {\r\n                        //Escribir este elemento\r\n                        salida.push(ex);\r\n                    }\r\n                }\r\n                let auxSal;\r\n                [auxSal, rompeCiclo] = this.buscarHaciaAdentro(ex, nameEncontrar, pos, elemAux, rompeCiclo);\r\n                salida = salida.concat(auxSal);\r\n            }\r\n        });\r\n        return [salida, rompeCiclo];\r\n    }\r\n    obtenerHijosRecursivos(pos, ent, elemAux, isLast, rompeCiclo) {\r\n        let salida = [];\r\n        ent.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                if (isLast) {\r\n                    salida.push(elem);\r\n                    let auxSal;\r\n                    [auxSal, rompeCiclo] = this.obtenerHijosRecursivos(pos, elem.valor, elemAux, isLast, rompeCiclo);\r\n                    salida = salida.concat(auxSal);\r\n                }\r\n                else {\r\n                    //Aun hay mas nodos, entonces evaluar sobre eso.\r\n                    let auxSal;\r\n                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                    salida = salida.concat(auxSal);\r\n                }\r\n            }\r\n        });\r\n        return [salida, rompeCiclo];\r\n    }\r\n    escribirEtiquetaPadre(ent) {\r\n        let salida = \"< \" + ent.nombre;\r\n        let close = true;\r\n        ent.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            //Escribir a partir de aca\r\n            if (elem.getTipo() == Tipo.ATRIBUTO) {\r\n                salida += \"\" + elem.getNombre() + \"=\" + elem.getValor() + \" \";\r\n            }\r\n            if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                if (close) {\r\n                    salida += \">\";\r\n                    close = false;\r\n                }\r\n                salida += this.escribirConsultaObjeto(e.valor, 0);\r\n            }\r\n        });\r\n        return salida;\r\n    }\r\n    getConsultaAtributos(elem, nTabs, atrBuscar) {\r\n        let salida = [];\r\n        let hijosList = elem.valor.tsimbolos;\r\n        hijosList.forEach((e) => {\r\n            let son = e.valor;\r\n            if (son.getTipo() === Tipo.ATRIBUTO) {\r\n                //Es atributo, concatenar a la salida\r\n                if (atrBuscar === \"*\") {\r\n                    salida.push(son);\r\n                }\r\n                else if (atrBuscar === son.getNombre()) {\r\n                    salida.push(son);\r\n                }\r\n            }\r\n            if (son.getTipo() === Tipo.ETIQUETA) {\r\n                salida = salida.concat(this.getConsultaAtributos(son, nTabs, atrBuscar));\r\n            }\r\n        });\r\n        return salida;\r\n    }\r\n    escribirConsultaObjeto(elem, nTabs) {\r\n        let salida = this.addTabs(nTabs) + \"\";\r\n        //Obtener todos los que se llaman nombre y sus hijos.\r\n        //1. Para cada elemento escribir su etiqueta, atributos e hijos o texto\r\n        //2 Escribir nombre:\r\n        salida += \"<\" + elem.nombre;\r\n        let hijosList = elem.valor.tsimbolos;\r\n        //3. Ver si este elemento tiene Atributos\r\n        hijosList.forEach((atr) => {\r\n            let atributo = atr.valor;\r\n            //3.1 Ver si el hijo es atributo\r\n            if (atributo.getTipo() === Tipo.ATRIBUTO) {\r\n                //3.2 Concatenar atributo a la salida ejmplo: category=\"web\"\r\n                salida += \" \" + atributo.nombre + \"=\" + atributo.valor;\r\n            }\r\n        });\r\n        if (elem.getTipo() === Tipo.ETIQUETA_UNIQUE) {\r\n            salida += \"/>\\n\";\r\n        }\r\n        else {\r\n            salida += \">\\n\";\r\n        }\r\n        //4. Ver si el elemento tiene hijos adentro\r\n        hijosList.forEach((h) => {\r\n            let hijo = h.valor;\r\n            if (hijo.getTipo() === Tipo.STRING) {\r\n                salida += this.concatHijoTexto(hijo, nTabs + 1);\r\n            }\r\n            else if (hijo.getTipo() === Tipo.ETIQUETA) {\r\n                //3.3 Escribir la info de este hijo\r\n                salida += this.escribirConsultaObjeto(hijo, nTabs + 1);\r\n            }\r\n        });\r\n        //2.4 Cerrar la etiqueta actual\r\n        if (elem.getTipo() != Tipo.ETIQUETA_UNIQUE) {\r\n            salida += this.addTabs(nTabs) + \"</\" + elem.nombre + \">\\n\";\r\n        }\r\n        return salida;\r\n    }\r\n    concatHijoTexto(son, nTabs) {\r\n        let salida = this.addTabs(nTabs) + \"\";\r\n        salida += \"\" + son.getValor() + \" \";\r\n        return salida + \"\\n\";\r\n    }\r\n}\r\n","export var TipoInstruccion3D;\r\n(function (TipoInstruccion3D) {\r\n    TipoInstruccion3D[TipoInstruccion3D[\"ASIGNORMAL\"] = 0] = \"ASIGNORMAL\";\r\n    TipoInstruccion3D[TipoInstruccion3D[\"ASIGARREGLO\"] = 1] = \"ASIGARREGLO\";\r\n    TipoInstruccion3D[TipoInstruccion3D[\"ARREGLOASIG\"] = 2] = \"ARREGLOASIG\";\r\n    TipoInstruccion3D[TipoInstruccion3D[\"ARREGLOASIGARREGLO\"] = 3] = \"ARREGLOASIGARREGLO\";\r\n    TipoInstruccion3D[TipoInstruccion3D[\"ETIQUETA\"] = 4] = \"ETIQUETA\";\r\n    TipoInstruccion3D[TipoInstruccion3D[\"GOTO\"] = 5] = \"GOTO\";\r\n    TipoInstruccion3D[TipoInstruccion3D[\"LLAMADA\"] = 6] = \"LLAMADA\";\r\n    TipoInstruccion3D[TipoInstruccion3D[\"PRINTF\"] = 7] = \"PRINTF\";\r\n    TipoInstruccion3D[TipoInstruccion3D[\"IF\"] = 8] = \"IF\";\r\n    TipoInstruccion3D[TipoInstruccion3D[\"RETURN\"] = 9] = \"RETURN\";\r\n    TipoInstruccion3D[TipoInstruccion3D[\"REPRESENTACION\"] = 10] = \"REPRESENTACION\";\r\n})(TipoInstruccion3D || (TipoInstruccion3D = {}));\r\n","import { TipoInstruccion3D } from \"./Instruccion3D\";\r\nexport class Asignacion3D {\r\n    constructor(tipo, identificador, expresion, codigo3d, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.codigo3D = codigo3d;\r\n        this.expresion = expresion;\r\n        this.identificador = identificador;\r\n        this.eliminada = false;\r\n        this.optimizada = false;\r\n    }\r\n    isOptimizada() {\r\n        return this.optimizada;\r\n    }\r\n    setOptimizada(optimizada) {\r\n        this.optimizada = optimizada;\r\n    }\r\n    isEliminada() {\r\n        return this.eliminada;\r\n    }\r\n    setEliminada(eliminada) {\r\n        this.eliminada = eliminada;\r\n    }\r\n    getTipoInstruccion() {\r\n        return this.tipo;\r\n    }\r\n    setCodigo3D(codigo) {\r\n        this.codigo3D = codigo;\r\n    }\r\n    getCodigo3D() {\r\n        if (this.tipo === TipoInstruccion3D.ASIGNORMAL) {\r\n            this.codigo3D = this.identificador + \" = \" + this.expresion.getCodigo3D() + \";\";\r\n        }\r\n        return this.codigo3D;\r\n    }\r\n}\r\n","export var TipoExpresion3D;\r\n(function (TipoExpresion3D) {\r\n    TipoExpresion3D[TipoExpresion3D[\"PRIMITIVA\"] = 0] = \"PRIMITIVA\";\r\n    TipoExpresion3D[TipoExpresion3D[\"OPERACION\"] = 1] = \"OPERACION\";\r\n})(TipoExpresion3D || (TipoExpresion3D = {}));\r\n","import { Entorno } from \"../AST/Entorno\";\r\nimport { Tipo } from \"../AST/Tipo\";\r\nimport { TipoPrim } from \"./Primitiva\";\r\nimport errores from '../Global/ListaError';\r\nexport class Operacion {\r\n    constructor(operacion, op_izq, op_der, linea, columna, isXQuery) {\r\n        this.linea = linea;\r\n        this.isXQuery = isXQuery;\r\n        this.columna = columna;\r\n        this.op_izq = op_izq;\r\n        this.op_der = op_der;\r\n        this.operacion = operacion;\r\n    }\r\n    getTipo(ent) {\r\n        return this.tipo;\r\n    }\r\n    getValorInicial(ent) {\r\n        return \"\";\r\n    }\r\n    getValor(entorno) {\r\n        if (this.operacion === TipoOperacion.PAR) {\r\n            //Devolver la expresion del parentesis\r\n            let res = this.op_izq.getValor(entorno);\r\n            this.tipo = this.op_izq.getTipo(entorno);\r\n            return res;\r\n        }\r\n        let opIzq;\r\n        let opDer;\r\n        let resultado;\r\n        let valIzq;\r\n        let typeIzq;\r\n        let valDer;\r\n        let typeDer;\r\n        if (this.op_izq.getTipo(entorno) != TipoPrim.ATRIBUTO && this.op_izq.getTipo(entorno) != TipoPrim.CONSULTA) {\r\n            valIzq = this.op_izq.getValor(entorno);\r\n        }\r\n        typeIzq = this.op_izq.getTipo(entorno);\r\n        if (this.op_der.getTipo(entorno) != TipoPrim.ATRIBUTO) {\r\n            valDer = this.op_der.getValor(entorno);\r\n        }\r\n        typeDer = this.op_der.getTipo(entorno);\r\n        if (valIzq === null) {\r\n            if (this.op_izq.getValorInicial(entorno) === entorno.nombre) {\r\n                valIzq = entorno.obtenerSimbolo(this.op_izq.getValorInicial(entorno));\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n        }\r\n        switch (this.operacion) {\r\n            case TipoOperacion.SUMA:\r\n                this.tipo = this.tipoDominanteAritmetica(typeIzq, typeDer);\r\n                if (this.tipo === TipoPrim.ERROR)\r\n                    return resultado;\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseInt(valIzq);\r\n                                opDer = parseInt(valDer);\r\n                                resultado = opIzq + opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq + opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede sumar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede sumar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq + opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq + opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede sumar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede sumar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    default:\r\n                        errores.agregarError('semantico', 'No se puede sumar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                        return ('Error semantico: No se puede sumar ' + this.getStringTipo(typeIzq) + ' con '\r\n                            + this.getStringTipo(typeDer)\r\n                            + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                }\r\n            case TipoOperacion.RESTA:\r\n                this.tipo = this.tipoDominanteAritmetica(typeIzq, typeDer);\r\n                if (this.tipo === TipoPrim.ERROR)\r\n                    return resultado;\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseInt(valIzq);\r\n                                opDer = parseInt(valDer);\r\n                                resultado = opIzq - opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq - opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede restar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede restar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq - opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq - opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede restar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede restar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    default:\r\n                        errores.agregarError('semantico', 'No se puede restar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                        return ('Error semantico: No se puede restar ' + this.getStringTipo(typeIzq) + ' con '\r\n                            + this.getStringTipo(typeDer)\r\n                            + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                }\r\n            case TipoOperacion.MULTIPLICACION:\r\n                this.tipo = this.tipoDominanteAritmetica(typeIzq, typeDer);\r\n                if (this.tipo === TipoPrim.ERROR)\r\n                    return resultado;\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseInt(valIzq);\r\n                                opDer = parseInt(valDer);\r\n                                resultado = opIzq * opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq * opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede multiplicar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede multiplicar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq * opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq * opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede multiplicar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede multiplicar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    default:\r\n                        errores.agregarError('semantico', 'No se puede multiplicar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                        return ('Error semantico: No se puede multiplicar ' + this.getStringTipo(typeIzq) + ' con '\r\n                            + this.getStringTipo(typeDer)\r\n                            + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                }\r\n            case TipoOperacion.DIVISION:\r\n                this.tipo = this.tipoDominanteAritmetica(typeIzq, typeDer);\r\n                if (this.tipo === TipoPrim.ERROR)\r\n                    return resultado;\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseInt(valIzq);\r\n                                opDer = parseInt(valDer);\r\n                                if (opDer != 0) {\r\n                                    resultado = opIzq / opDer;\r\n                                    return resultado;\r\n                                }\r\n                                errores.agregarError('semantico', 'El denominador debe ser diferente de 0', this.linea, this.columna);\r\n                                return ('Error semantico: El denominador debe ser diferente de 0 en la linea '\r\n                                    + this.linea + ' y columna ' + this.columna);\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                if (opDer != 0) {\r\n                                    resultado = opIzq / opDer;\r\n                                    return resultado;\r\n                                }\r\n                                errores.agregarError('semantico', 'El denominador debe ser diferente de 0', this.linea, this.columna);\r\n                                return ('Error semantico: El denominador debe ser diferente de 0 en la linea '\r\n                                    + this.linea + ' y columna ' + this.columna);\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                if (opDer != 0) {\r\n                                    resultado = opIzq / opDer;\r\n                                    return resultado;\r\n                                }\r\n                                errores.agregarError('semantico', 'El denominador debe ser diferente de 0', this.linea, this.columna);\r\n                                return ('Error semantico: El denominador debe ser diferente de 0 en la linea '\r\n                                    + this.linea + ' y columna ' + this.columna);\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                if (opDer != 0) {\r\n                                    resultado = opIzq / opDer;\r\n                                    return resultado;\r\n                                }\r\n                                errores.agregarError('semantico', 'El denominador debe ser diferente de 0', this.linea, this.columna);\r\n                                return ('Error semantico: El denominador debe ser diferente de 0 en la linea '\r\n                                    + this.linea + ' y columna ' + this.columna);\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    default:\r\n                        errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                        return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                            + this.getStringTipo(typeDer)\r\n                            + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                }\r\n            case TipoOperacion.MOD:\r\n                this.tipo = this.tipoDominanteAritmetica(typeIzq, typeDer);\r\n                if (this.tipo === TipoPrim.ERROR)\r\n                    return resultado;\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseInt(valIzq);\r\n                                opDer = parseInt(valDer);\r\n                                if (opDer != 0) {\r\n                                    resultado = opIzq % opDer;\r\n                                    return resultado;\r\n                                }\r\n                                errores.agregarError('semantico', 'El denominador debe ser diferente de 0', this.linea, this.columna);\r\n                                return ('Error semantico: El denominador debe ser diferente de 0 en la linea '\r\n                                    + this.linea + ' y columna ' + this.columna);\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                if (opDer != 0) {\r\n                                    resultado = opIzq % opDer;\r\n                                    return resultado;\r\n                                }\r\n                                errores.agregarError('semantico', 'El denominador debe ser diferente de 0', this.linea, this.columna);\r\n                                return ('Error semantico: El denominador debe ser diferente de 0 en la linea '\r\n                                    + this.linea + ' y columna ' + this.columna);\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq + opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq + opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    default:\r\n                        errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                        return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                            + this.getStringTipo(typeDer)\r\n                            + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                }\r\n            case TipoOperacion.MAYORQUE:\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                break;\r\n                            case TipoPrim.DOUBLE:\r\n                                break;\r\n                            case TipoPrim.FUNCION:\r\n                                //Ver si es position()\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                if (valDer.toLowerCase() == \"position()\") {\r\n                                    // ej: 3 > position()\r\n                                    let izq = parseInt(valIzq);\r\n                                    //Devolver los entornos que abarcan esto.\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (izq > indice && elem.getNombre() === entorno.nombre) {\r\n                                            //Si es mayor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                }\r\n                                else {\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                                }\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MAYORQUE, TipoPrim.INTEGER);\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeIzq) {\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MAYORQUE, TipoPrim.DOUBLE);\r\n                            default:\r\n                                break;\r\n                        }\r\n                    case TipoPrim.CADENA:\r\n                        break;\r\n                    case TipoPrim.ATRIBUTO:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionAtributoCadena(entorno, TipoOperacion.MAYORQUE);\r\n                        }\r\n                        break;\r\n                    case TipoPrim.FUNCION:\r\n                        //Ver si es position()\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        if (valIzq.toLowerCase() == \"position()\") {\r\n                            switch (typeDer) {\r\n                                case TipoPrim.INTEGER:\r\n                                    //position > 3\r\n                                    let der = parseInt(valDer);\r\n                                    //Devolver un entorno con los simbolos encontrados\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (indice > der && elem.getNombre() == entorno.nombre) {\r\n                                            //Si es mayor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() == entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                default:\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                            }\r\n                        }\r\n                        else {\r\n                            errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                            return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                + this.getStringTipo(typeDer)\r\n                                + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    case TipoPrim.IDENTIFIER:\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MAYORQUE, TipoPrim.INTEGER);\r\n                            case TipoPrim.DOUBLE:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MAYORQUE, TipoPrim.DOUBLE);\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionIdCadena(valIzq, valDer, entorno, TipoOperacion.MAYORQUE);\r\n                            case TipoPrim.IDENTIFIER:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoOperacion.MENORQUE:\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                break;\r\n                            case TipoPrim.DOUBLE:\r\n                                break;\r\n                            case TipoPrim.FUNCION:\r\n                                //Ver si es position()\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                if (valDer.toLowerCase() == \"position()\") {\r\n                                    //Ejemplo: 3 < position()\r\n                                    let izq = parseInt(valIzq);\r\n                                    //Devolver los entornos que abarcan esto.\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (izq < indice && elem.getNombre() == entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                }\r\n                                else {\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                                }\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MENORQUE, TipoPrim.INTEGER);\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeIzq) {\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MENORQUE, TipoPrim.DOUBLE);\r\n                            default:\r\n                                break;\r\n                        }\r\n                    case TipoPrim.CADENA:\r\n                        break;\r\n                    case TipoPrim.ATRIBUTO:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionAtributoCadena(entorno, TipoOperacion.MENORQUE);\r\n                        }\r\n                        break;\r\n                    case TipoPrim.FUNCION:\r\n                        //Ver si es position()\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        if (valIzq.toLowerCase() == \"position()\") {\r\n                            switch (typeDer) {\r\n                                case TipoPrim.INTEGER:\r\n                                    //Ej: position() < 3\r\n                                    let der = parseInt(valDer);\r\n                                    //En un entorno temporal, devolver los que corresponden a la busqueda\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (indice < der && elem.getNombre() === entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                default:\r\n                                    errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoPrim.IDENTIFIER:\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MENORQUE, TipoPrim.INTEGER);\r\n                            case TipoPrim.DOUBLE:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MENORQUE, TipoPrim.DOUBLE);\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionIdCadena(valIzq, valDer, entorno, TipoOperacion.MENORQUE);\r\n                            case TipoPrim.IDENTIFIER:\r\n                                break;\r\n                        }\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoOperacion.MAYORIGUALQUE:\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                break;\r\n                            case TipoPrim.DOUBLE:\r\n                                break;\r\n                            case TipoPrim.FUNCION:\r\n                                //Ver si es position()\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                if (valDer.toLowerCase() == \"position()\") {\r\n                                    //Ejemplo: 3 >= position()\r\n                                    let izq = parseInt(valIzq);\r\n                                    //Devolver los entornos que abarcan esto.\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (izq >= indice && elem.getNombre() == entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                }\r\n                                else {\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                                }\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MAYORIGUALQUE, TipoPrim.INTEGER);\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeIzq) {\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MAYORIGUALQUE, TipoPrim.DOUBLE);\r\n                            default:\r\n                                break;\r\n                        }\r\n                    case TipoPrim.CADENA:\r\n                        break;\r\n                    case TipoPrim.ATRIBUTO:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionAtributoCadena(entorno, TipoOperacion.MAYORIGUALQUE);\r\n                        }\r\n                        break;\r\n                    case TipoPrim.FUNCION:\r\n                        //Ver si es position()\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        if (valIzq.toLowerCase() == \"position()\") {\r\n                            switch (typeDer) {\r\n                                case TipoPrim.INTEGER:\r\n                                    //Ej: position() >= 3\r\n                                    let der = parseInt(valDer);\r\n                                    //En un entorno temporal, devolver los que corresponden a la busqueda\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (indice >= der && elem.getNombre() === entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                default:\r\n                                    errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoPrim.IDENTIFIER:\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MAYORIGUALQUE, TipoPrim.INTEGER);\r\n                            case TipoPrim.DOUBLE:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MAYORIGUALQUE, TipoPrim.DOUBLE);\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionIdCadena(valIzq, valDer, entorno, TipoOperacion.MAYORIGUALQUE);\r\n                            case TipoPrim.IDENTIFIER:\r\n                                break;\r\n                        }\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoOperacion.MENORIGUALQUE:\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                break;\r\n                            case TipoPrim.DOUBLE:\r\n                                break;\r\n                            case TipoPrim.FUNCION:\r\n                                //Ver si es position()\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                if (valDer.toLowerCase() == \"position()\") {\r\n                                    //Ejemplo: 3 < position()\r\n                                    let izq = parseInt(valIzq);\r\n                                    //Devolver los entornos que abarcan esto.\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (izq <= indice && elem.getNombre() == entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                }\r\n                                else {\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                                }\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MENORIGUALQUE, TipoPrim.INTEGER);\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeIzq) {\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MENORIGUALQUE, TipoPrim.DOUBLE);\r\n                            default:\r\n                                break;\r\n                        }\r\n                    case TipoPrim.CADENA:\r\n                        break;\r\n                    case TipoPrim.ATRIBUTO:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionAtributoCadena(entorno, TipoOperacion.MENORIGUALQUE);\r\n                        }\r\n                        break;\r\n                    case TipoPrim.FUNCION:\r\n                        //Ver si es position()\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        if (valIzq.toLowerCase() == \"position()\") {\r\n                            switch (typeDer) {\r\n                                case TipoPrim.INTEGER:\r\n                                    //Ej: position() < 3\r\n                                    let der = parseInt(valDer);\r\n                                    //En un entorno temporal, devolver los que corresponden a la busqueda\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (indice <= der && elem.getNombre() === entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                default:\r\n                                    errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoPrim.IDENTIFIER:\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MENORIGUALQUE, TipoPrim.INTEGER);\r\n                            case TipoPrim.DOUBLE:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MENORIGUALQUE, TipoPrim.DOUBLE);\r\n                            case TipoPrim.IDENTIFIER:\r\n                                break;\r\n                        }\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoOperacion.IGUAL:\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                break;\r\n                            case TipoPrim.DOUBLE:\r\n                                break;\r\n                            case TipoPrim.FUNCION:\r\n                                //Ver si es position()\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                if (valDer.toLowerCase() == \"position()\") {\r\n                                    //Ejemplo: 3 = position()\r\n                                    let izq = parseInt(valIzq);\r\n                                    //Devolver los entornos que abarcan esto.\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (izq === indice && elem.getNombre() == entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                }\r\n                                else {\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                                }\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.IGUAL, TipoPrim.INTEGER);\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeIzq) {\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.IGUAL, TipoPrim.DOUBLE);\r\n                            default:\r\n                                break;\r\n                        }\r\n                    case TipoPrim.CADENA:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.ATRIBUTO:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                valIzq = this.op_izq.getValor(entorno);\r\n                                valDer = this.op_der.getValorInicial(entorno);\r\n                                //Esta operacion devuelve un entorno temporan con los elementos encontrados\r\n                                let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                //Obtener entorno padre.\r\n                                let padre = entorno.padre;\r\n                                //Con el padre buscar todos las etiquetas que tengan nombre entorno.nombre\r\n                                padre.tsimbolos.forEach((e) => {\r\n                                    let elem = e.valor;\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                        //Se encontro, ver si este elemento tiene el atributo\r\n                                        //  que se encuentre en valDer\r\n                                        let flag = false;\r\n                                        elem.valor.tsimbolos.forEach((c2) => {\r\n                                            let tmp = c2.valor;\r\n                                            if (tmp.getTipo() === Tipo.ATRIBUTO && (valDer === \"*\" || tmp.getNombre() === valDer)) {\r\n                                                //Por ultimo comparar, si el valor del atributo\r\n                                                //Es igual a la cadena\r\n                                                if (valIzq === tmp.getValor()) {\r\n                                                    //Cadena === valoratributo\r\n                                                    //Se agrega el simbolo. (elem)\r\n                                                    if (!flag) {\r\n                                                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                                        flag = true;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                });\r\n                                return entTemporal;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.ATRIBUTO:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionAtributoCadena(entorno, TipoOperacion.IGUAL);\r\n                            case TipoPrim.ATRIBUTO:\r\n                                //Atributo con Atributo:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                valDer = this.op_der.getValorInicial(entorno);\r\n                                //ValIzq es el nombre del atributo que se quiere buscar.\r\n                                valIzq = this.op_izq.getValorInicial(entorno);\r\n                                //Esta operacion devuelve un entorno temporan con los elementos encontrados\r\n                                let entTemporalAT = new Entorno(\"Temporal\", null, null);\r\n                                //Obtener entorno padre.\r\n                                let padreAT = entorno.padre;\r\n                                //Con el padre buscar todos las etiquetas que tengan nombre entorno.nombre\r\n                                padreAT.tsimbolos.forEach((e) => {\r\n                                    let elem = e.valor;\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                        //Se encontro, ver si este elemento tiene el atributo\r\n                                        //  que se encuentre en valDer\r\n                                        let flag = false;\r\n                                        elem.valor.tsimbolos.forEach((c2) => {\r\n                                            let tmp = c2.valor;\r\n                                            if (tmp.getTipo() === Tipo.ATRIBUTO && (valIzq === \"*\" || tmp.getNombre() === valIzq)) {\r\n                                                //Por ultimo comparar, si el valor del atributo\r\n                                                //Es igual a la cadena\r\n                                                if (valDer === valIzq) {\r\n                                                    //Cadena === valoratributo\r\n                                                    //Se agrega el simbolo. (elem)\r\n                                                    if (!flag) {\r\n                                                        entTemporalAT.agregarSimbolo(elem.getNombre(), elem);\r\n                                                        flag = true;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                });\r\n                                return entTemporalAT;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.FUNCION:\r\n                        //Ver si es position()\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        if (valIzq.toLowerCase() == \"position()\") {\r\n                            switch (typeDer) {\r\n                                case TipoPrim.INTEGER:\r\n                                    //Ej: position() < 3\r\n                                    let der = parseInt(valDer);\r\n                                    //En un entorno temporal, devolver los que corresponden a la busqueda\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (indice === der && elem.getNombre() === entorno.nombre) {\r\n                                            //Si son iguales, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                default:\r\n                                    errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoPrim.IDENTIFIER:\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.IGUAL, TipoPrim.INTEGER);\r\n                            case TipoPrim.DOUBLE:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.IGUAL, TipoPrim.DOUBLE);\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionIdCadena(valIzq, valDer, entorno, TipoOperacion.IGUAL);\r\n                            case TipoPrim.IDENTIFIER:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.CONSULTA:\r\n                        //Merge /hola/@hola = \"asd\" <-- \r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                        switch (typeDer) {\r\n                            case TipoPrim.CADENA:\r\n                                let l = this.op_izq.getValorInicial(entorno);\r\n                                let fromR = l[l.length - 1].isFromRoot();\r\n                                let lastNodeName = l[l.length - 1].getNombre();\r\n                                let entConsultaTemp = this.op_izq.getValor(entorno);\r\n                                entTemporal = this.resolverConsultaRecursiva(entConsultaTemp, valDer, lastNodeName, fromR, TipoOperacion.IGUAL);\r\n                                return entTemporal;\r\n                            default:\r\n                                return null;\r\n                        }\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoOperacion.DIFERENTEQUE:\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                break;\r\n                            case TipoPrim.DOUBLE:\r\n                                break;\r\n                            case TipoPrim.FUNCION:\r\n                                //Ver si es position()\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                if (valDer.toLowerCase() == \"position()\") {\r\n                                    //Ejemplo: 3 != position()\r\n                                    let izq = parseInt(valIzq);\r\n                                    //Devolver los entornos que abarcan esto.\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (izq != indice && elem.getNombre() == entorno.nombre) {\r\n                                            //Si es diferente de !=, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                }\r\n                                else {\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                                }\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.DIFERENTEQUE, TipoPrim.INTEGER);\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeIzq) {\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.DIFERENTEQUE, TipoPrim.DOUBLE);\r\n                            default:\r\n                                break;\r\n                        }\r\n                    case TipoPrim.CADENA:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.ATRIBUTO:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                valIzq = this.op_izq.getValor(entorno);\r\n                                valDer = this.op_der.getValorInicial(entorno);\r\n                                //Esta operacion devuelve un entorno temporan con los elementos encontrados\r\n                                let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                //Obtener entorno padre.\r\n                                let padre = entorno.padre;\r\n                                //Con el padre buscar todos las etiquetas que tengan nombre entorno.nombre\r\n                                padre.tsimbolos.forEach((e) => {\r\n                                    let elem = e.valor;\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                        //Se encontro, ver si este elemento tiene el atributo\r\n                                        //  que se encuentre en valDer\r\n                                        elem.valor.tsimbolos.forEach((c2) => {\r\n                                            let tmp = c2.valor;\r\n                                            if (tmp.getTipo() === Tipo.ATRIBUTO && (valDer === \"*\" || tmp.getNombre() === valDer)) {\r\n                                                //Por ultimo comparar, si el valor del atributo\r\n                                                //Es igual a la cadena\r\n                                                if (valIzq != tmp.getValor()) {\r\n                                                    //Cadena === valoratributo\r\n                                                    //Se agrega el simbolo. (elem)\r\n                                                    entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                });\r\n                                return entTemporal;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.ATRIBUTO:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionAtributoCadena(entorno, TipoOperacion.DIFERENTEQUE);\r\n                        }\r\n                        break;\r\n                    case TipoPrim.FUNCION:\r\n                        //Ver si es position()\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        if (valIzq.toLowerCase() == \"position()\") {\r\n                            switch (typeDer) {\r\n                                case TipoPrim.INTEGER:\r\n                                    //Ej: position() < 3\r\n                                    let der = parseInt(valDer);\r\n                                    //En un entorno temporal, devolver los que corresponden a la busqueda\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (indice != der && elem.getNombre() === entorno.nombre) {\r\n                                            //Si es diferente de , meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                default:\r\n                                    errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoPrim.IDENTIFIER:\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                if (this.isXQuery != undefined && this.isXQuery) {\r\n                                    return this.XQresolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.DIFERENTEQUE, TipoPrim.INTEGER);\r\n                                }\r\n                                else {\r\n                                    return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.DIFERENTEQUE, TipoPrim.INTEGER);\r\n                                }\r\n                            case TipoPrim.DOUBLE:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.DIFERENTEQUE, TipoPrim.DOUBLE);\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionIdCadena(valIzq, valDer, entorno, TipoOperacion.DIFERENTEQUE);\r\n                            case TipoPrim.IDENTIFIER:\r\n                                break;\r\n                        }\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoOperacion.AND:\r\n                break;\r\n            case TipoOperacion.OR:\r\n                break;\r\n        }\r\n    }\r\n    getStringTipo(operadorTipo) {\r\n        switch (operadorTipo) {\r\n            case TipoPrim.INTEGER:\r\n                return 'entero';\r\n            case TipoPrim.DOUBLE:\r\n                return 'doble';\r\n            case TipoPrim.CADENA:\r\n                return 'cadena';\r\n            case TipoPrim.IDENTIFIER:\r\n                return 'id';\r\n            case TipoPrim.ATRIBUTO:\r\n                return 'atributo';\r\n            case TipoPrim.DOT:\r\n                return 'dot';\r\n            case TipoPrim.BOOLEAN:\r\n                return 'boolean';\r\n            case TipoPrim.FUNCION:\r\n                return \"Funcion mae\";\r\n            case TipoPrim.CONSULTA:\r\n                return \"Consulta\";\r\n            default:\r\n                return \"ERROR\";\r\n        }\r\n    }\r\n    buscarTexto(elem) {\r\n        for (let i = 0; i < elem.valor.tsimbolos.length; i++) {\r\n            let xd = elem.valor.tsimbolos[i].valor;\r\n            if (xd.getTipo() === Tipo.STRING) {\r\n                return xd.getValor();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    tipoDominanteAritmetica(ex1, ex2) {\r\n        if (ex1 == TipoPrim.ERROR || ex2 == TipoPrim.ERROR)\r\n            return TipoPrim.ERROR;\r\n        if (ex1 == TipoPrim.DOUBLE || ex2 == TipoPrim.DOUBLE)\r\n            return TipoPrim.DOUBLE;\r\n        else if (ex1 == TipoPrim.INTEGER || ex2 == TipoPrim.INTEGER)\r\n            return TipoPrim.INTEGER;\r\n        return TipoPrim.ERROR;\r\n    }\r\n    tipoDominanteOperacion(ex1, ex2) {\r\n        if (ex1 == TipoPrim.ERROR || ex2 == TipoPrim.ERROR)\r\n            return TipoPrim.ERROR;\r\n        if (ex1 == TipoPrim.DOUBLE || ex2 == TipoPrim.DOUBLE)\r\n            return TipoPrim.DOUBLE;\r\n        else if (ex1 == TipoPrim.INTEGER || ex2 == TipoPrim.INTEGER)\r\n            return TipoPrim.INTEGER;\r\n        return TipoPrim.ERROR;\r\n    }\r\n    XQresolverOperacionIdNumero(valIzq, valDer, entorno, relacional, TipoNumero) {\r\n        let der;\r\n        if (TipoNumero === TipoPrim.INTEGER) {\r\n            der = parseInt(valDer);\r\n        }\r\n        else {\r\n            der = parseFloat(valDer);\r\n        }\r\n        let izq = valIzq.getNombre();\r\n        //Devolver un entorno con los simbolos encontrados\r\n        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n        //1. Obtener entorno padre.\r\n        //2. Sobre el padre, buscar el que tenga nombre entorno.nombre\r\n        entorno.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            if (elem.getNombre() === izq) {\r\n                //Buscar el texto de este elemento.\r\n                let texto = this.buscarTexto(elem);\r\n                //Ver si el texto se puede castear a NUMERO\r\n                if (texto != null) {\r\n                    let numCompare = +texto;\r\n                    //Comparar los numeros\r\n                    switch (relacional) {\r\n                        case TipoOperacion.MAYORQUE:\r\n                            if (numCompare > der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                        case TipoOperacion.MENORQUE:\r\n                            if (numCompare < der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                        case TipoOperacion.MAYORIGUALQUE:\r\n                            if (numCompare >= der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                        case TipoOperacion.MENORIGUALQUE:\r\n                            if (numCompare <= der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                        case TipoOperacion.IGUAL:\r\n                            if (numCompare === der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                        case TipoOperacion.DIFERENTEQUE:\r\n                            if (numCompare != der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return entTemporal;\r\n    }\r\n    resolverOperacionIdNumero(valIzq, valDer, entorno, relacional, TipoNumero) {\r\n        if (this.isXQuery != undefined && this.isXQuery) {\r\n            return this.XQresolverOperacionIdNumero(valIzq, valDer, entorno, relacional, TipoNumero);\r\n        }\r\n        let der;\r\n        if (TipoNumero === TipoPrim.INTEGER) {\r\n            der = parseInt(valDer);\r\n        }\r\n        else {\r\n            der = parseFloat(valDer);\r\n        }\r\n        let izq = valIzq.getNombre();\r\n        //Devolver un entorno con los simbolos encontrados\r\n        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n        //1. Obtener entorno padre.\r\n        let padre = entorno.padre;\r\n        //2. Sobre el padre, buscar el que tenga nombre entorno.nombre\r\n        padre.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                //Se encontro, ahora buscar en los simbolos de este elem\r\n                //si se encuentra el identificador (valIzq)\r\n                elem.valor.tsimbolos.forEach((insd) => {\r\n                    let elin = insd.valor;\r\n                    if (elin.getNombre() === izq) {\r\n                        //Buscar el texto de este elemento.\r\n                        let texto = this.buscarTexto(elin);\r\n                        //Ver si el texto se puede castear a NUMERO\r\n                        if (texto != null) {\r\n                            let numCompare = +texto;\r\n                            //Comparar los numeros\r\n                            switch (relacional) {\r\n                                case TipoOperacion.MAYORQUE:\r\n                                    if (numCompare > der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MENORQUE:\r\n                                    if (numCompare < der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MAYORIGUALQUE:\r\n                                    if (numCompare >= der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MENORIGUALQUE:\r\n                                    if (numCompare <= der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.IGUAL:\r\n                                    if (numCompare === der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.DIFERENTEQUE:\r\n                                    if (numCompare != der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return entTemporal;\r\n    }\r\n    resolverOperacionIdCadena(valIzq, valDer, entorno, relacional) {\r\n        if (this.isXQuery != undefined && this.isXQuery) {\r\n            return this.XQresolverOperacionIdCadena(valIzq, valDer, entorno, relacional);\r\n        }\r\n        let der = valDer;\r\n        let izq = valIzq.getNombre();\r\n        //Devolver un entorno con los simbolos encontrados\r\n        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n        //1. Obtener entorno padre.\r\n        let padre = entorno.padre;\r\n        //2. Sobre el padre, buscar el que tenga nombre entorno.nombre\r\n        padre.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                //Se encontro, ahora buscar en los simbolos de este elem\r\n                //si se encuentra el identificador (valIzq)\r\n                elem.valor.tsimbolos.forEach((insd) => {\r\n                    let elin = insd.valor;\r\n                    if (elin.getNombre() === izq) {\r\n                        //Buscar el texto de este elemento.\r\n                        let texto = this.buscarTexto(elin);\r\n                        der = der.replace(\"\\\"\", \"\");\r\n                        if (texto != null) {\r\n                            //Comparar los textos\r\n                            switch (relacional) {\r\n                                case TipoOperacion.MAYORQUE:\r\n                                    if (texto > der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MENORQUE:\r\n                                    if (texto < der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MAYORIGUALQUE:\r\n                                    if (texto >= der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MENORIGUALQUE:\r\n                                    if (texto <= der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.IGUAL:\r\n                                    if (texto === der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.DIFERENTEQUE:\r\n                                    if (texto != der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return entTemporal;\r\n    }\r\n    XQresolverOperacionIdCadena(valIzq, valDer, entorno, relacional) {\r\n        let der = valDer;\r\n        let izq = valIzq.getNombre();\r\n        //Devolver un entorno con los simbolos encontrados\r\n        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n        entorno.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            //si se encuentra el identificador (valIzq)\r\n            if (elem.getNombre() === izq) {\r\n                //Buscar el texto de este elemento.\r\n                let texto = this.buscarTexto(elem);\r\n                der = der.replace(\"\\\"\", \"\");\r\n                der = der.replace(\"\\\"\", \"\");\r\n                der = der.replace(\"'\", \"\");\r\n                der = der.replace(\"\\'\", \"\");\r\n                if (texto != null) {\r\n                    //Comparar los textos\r\n                    switch (relacional) {\r\n                        case TipoOperacion.MAYORQUE:\r\n                            if (texto > der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                        case TipoOperacion.MENORQUE:\r\n                            if (texto < der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                        case TipoOperacion.MAYORIGUALQUE:\r\n                            if (texto >= der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                        case TipoOperacion.MENORIGUALQUE:\r\n                            if (texto <= der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                        case TipoOperacion.IGUAL:\r\n                            if (texto == der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                        case TipoOperacion.DIFERENTEQUE:\r\n                            if (texto != der) {\r\n                                //Si lo es, meter al entorno temporal.\r\n                                entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return entTemporal;\r\n    }\r\n    resolverOperacionAtributoCadena(entorno, relacional) {\r\n        this.tipo = TipoPrim.FUNCION;\r\n        if (this.isXQuery != undefined && this.isXQuery) {\r\n            return this.XQresolverOperacionAtributoCadena(entorno, relacional);\r\n        }\r\n        let valDer = this.op_der.getValor(entorno);\r\n        //ValIzq es el nombre del atributo que se quiere buscar.\r\n        let valIzq = this.op_izq.getValorInicial(entorno);\r\n        //Esta operacion devuelve un entorno temporan con los elementos encontrados\r\n        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n        //Obtener entorno padre.\r\n        let padre = entorno.padre;\r\n        //Con el padre buscar todos las etiquetas que tengan nombre entorno.nombre\r\n        padre.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                //Se encontro, ver si este elemento tiene el atributo\r\n                //  que se encuentre en valDer\r\n                let flag = false;\r\n                elem.valor.tsimbolos.forEach((c2) => {\r\n                    let tmp = c2.valor;\r\n                    if (tmp.getTipo() === Tipo.ATRIBUTO && (valIzq === \"*\" || tmp.getNombre() === valIzq)) {\r\n                        //Por ultimo comparar, si el valor del atributo\r\n                        //Es igual a la cadena\r\n                        switch (relacional) {\r\n                            case TipoOperacion.MAYORQUE:\r\n                                if (valDer > tmp.getValor()) {\r\n                                    //Cadena === valoratributo\r\n                                    //Se agrega el simbolo. (elem)\r\n                                    if (!flag) {\r\n                                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                        flag = true;\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case TipoOperacion.MENORQUE:\r\n                                if (valDer < tmp.getValor()) {\r\n                                    //Cadena === valoratributo\r\n                                    //Se agrega el simbolo. (elem)\r\n                                    if (!flag) {\r\n                                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                        flag = true;\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case TipoOperacion.MAYORIGUALQUE:\r\n                                if (valDer >= tmp.getValor()) {\r\n                                    //Cadena === valoratributo\r\n                                    //Se agrega el simbolo. (elem)\r\n                                    if (!flag) {\r\n                                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                        flag = true;\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case TipoOperacion.MENORIGUALQUE:\r\n                                if (valDer <= tmp.getValor()) {\r\n                                    //Cadena === valoratributo\r\n                                    //Se agrega el simbolo. (elem)\r\n                                    if (!flag) {\r\n                                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                        flag = true;\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case TipoOperacion.IGUAL:\r\n                                if (valDer === tmp.getValor()) {\r\n                                    //Cadena === valoratributo\r\n                                    //Se agrega el simbolo. (elem)\r\n                                    if (!flag) {\r\n                                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                        flag = true;\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case TipoOperacion.DIFERENTEQUE:\r\n                                if (valDer != tmp.getValor()) {\r\n                                    //Cadena === valoratributo\r\n                                    //Se agrega el simbolo. (elem)\r\n                                    if (!flag) {\r\n                                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                        flag = true;\r\n                                    }\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return entTemporal;\r\n    }\r\n    XQresolverOperacionAtributoCadena(entorno, relacional) {\r\n        this.tipo = TipoPrim.FUNCION;\r\n        //let der: string = valDer;\r\n        let der = this.op_der.getValor(entorno);\r\n        //let izq = valIzq.getNombre()\r\n        let izq = this.op_izq.getValorInicial(entorno);\r\n        //Devolver un entorno con los simbolos encontrados\r\n        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n        entorno.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            //si se encuentra el identificador (valIzq)\r\n            if (elem.getNombre() === izq) {\r\n                //Buscar el texto de este elemento.\r\n                let texto = elem.valor;\r\n                der = der.replace(\"\\\"\", \"\");\r\n                der = der.replace(\"\\\"\", \"\");\r\n                der = der.replace(\"'\", \"\");\r\n                der = der.replace(\"\\'\", \"\");\r\n                texto = texto.replace(\"\\\"\", \"\");\r\n                texto = texto.replace(\"\\\"\", \"\");\r\n                texto = texto.replace(\"\\\"\", \"\");\r\n                texto = texto.replace(\"\\\"\", \"\");\r\n                switch (relacional) {\r\n                    case TipoOperacion.MAYORQUE:\r\n                        if (texto > der) {\r\n                            //Si lo es, meter al entorno temporal.\r\n                            entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                        }\r\n                        break;\r\n                    case TipoOperacion.MENORQUE:\r\n                        if (texto < der) {\r\n                            //Si lo es, meter al entorno temporal.\r\n                            entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                        }\r\n                        break;\r\n                    case TipoOperacion.MAYORIGUALQUE:\r\n                        if (texto >= der) {\r\n                            //Si lo es, meter al entorno temporal.\r\n                            entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                        }\r\n                        break;\r\n                    case TipoOperacion.MENORIGUALQUE:\r\n                        if (texto <= der) {\r\n                            //Si lo es, meter al entorno temporal.\r\n                            entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                        }\r\n                        break;\r\n                    case TipoOperacion.IGUAL:\r\n                        if (texto === der) {\r\n                            //Si lo es, meter al entorno temporal.\r\n                            entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                        }\r\n                        break;\r\n                    case TipoOperacion.DIFERENTEQUE:\r\n                        if (texto != der) {\r\n                            //Si lo es, meter al entorno temporal.\r\n                            entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n        return entTemporal;\r\n    }\r\n    resolverConsultaRecursiva(entConsultaTemp, valDer, lastNodeName, isFromRoot, op) {\r\n        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n        //Sobre estos ver quienes tienen valDer\r\n        let flag = false;\r\n        entConsultaTemp.tsimbolos.forEach((e) => {\r\n            let elemEnt = e.valor;\r\n            flag = false;\r\n            elemEnt.valor.tsimbolos.forEach((c1) => {\r\n                let elem = c1.valor;\r\n                if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                    elem.valor.tsimbolos.forEach((c2) => {\r\n                        let elemfinal = c2.valor;\r\n                        if (op === TipoOperacion.IGUAL) {\r\n                            if (elemfinal.getTipo() === Tipo.ATRIBUTO && (lastNodeName === \"*\" || elemfinal.getNombre() === lastNodeName) && elemfinal.getValor() === valDer) {\r\n                                if (!flag) {\r\n                                    entTemporal.agregarSimbolo(elemEnt.nombre, elemEnt);\r\n                                    flag = true;\r\n                                }\r\n                            }\r\n                            else if (elem.getTipo() === Tipo.ETIQUETA && !isFromRoot) {\r\n                                //Buscar recursivamente atributos.\r\n                                let found = this.buscarAtributosRecursivamente(elem, valDer, lastNodeName, op);\r\n                                if (found) {\r\n                                    if (!flag) {\r\n                                        entTemporal.agregarSimbolo(elemEnt.nombre, elemEnt);\r\n                                        flag = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (op === TipoOperacion.DIFERENTEQUE) {\r\n                            if (elemfinal.getTipo() === Tipo.ATRIBUTO && (lastNodeName === \"*\" || elemfinal.getNombre() === lastNodeName) && elemfinal.getValor() !== valDer) {\r\n                                if (!flag) {\r\n                                    entTemporal.agregarSimbolo(elemEnt.nombre, elemEnt);\r\n                                }\r\n                            }\r\n                            else if (elem.getTipo() === Tipo.ETIQUETA && !isFromRoot) {\r\n                                //Buscar recursivamente atributos.\r\n                                let found = this.buscarAtributosRecursivamente(elem, valDer, lastNodeName, op);\r\n                                if (found) {\r\n                                    if (!flag) {\r\n                                        entTemporal.agregarSimbolo(elemEnt.nombre, elemEnt);\r\n                                        flag = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        return entTemporal;\r\n    }\r\n    buscarAtributosRecursivamente(elem, valDer, lastNodeName, op) {\r\n        for (let i = 0; i < elem.valor.tsimbolos.length; i++) {\r\n            let at = elem.valor.tsimbolos[i].valor;\r\n            if (op === TipoOperacion.IGUAL) {\r\n                if (at.getTipo() === Tipo.ATRIBUTO && (lastNodeName === \"*\" || at.getNombre() === lastNodeName) && at.getValor() === valDer) {\r\n                    return true;\r\n                }\r\n                else if (at.getTipo() === Tipo.ETIQUETA) {\r\n                    //Buscar recursivamente atributos.\r\n                    let found = this.buscarAtributosRecursivamente(at, valDer, lastNodeName, op);\r\n                    if (found) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            else if (op === TipoOperacion.DIFERENTEQUE) {\r\n                if (at.getTipo() === Tipo.ATRIBUTO && (lastNodeName === \"*\" || at.getNombre() === lastNodeName) && at.getValor() !== valDer) {\r\n                    return true;\r\n                }\r\n                else if (at.getTipo() === Tipo.ETIQUETA) {\r\n                    //Buscar recursivamente atributos.\r\n                    let found = this.buscarAtributosRecursivamente(at, valDer, lastNodeName, op);\r\n                    if (found) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    resolverOperacionNumeroId(valIzq, valDer, entorno, relacional, TipoNumero) {\r\n        let izq;\r\n        if (TipoNumero === TipoPrim.INTEGER) {\r\n            izq = parseInt(valIzq);\r\n        }\r\n        else {\r\n            izq = parseFloat(valIzq);\r\n        }\r\n        let der = valDer.getNombre();\r\n        //Devolver un entorno con los simbolos encontrados\r\n        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n        //1. Obtener entorno padre.\r\n        let padre = entorno.padre;\r\n        //2. Sobre el padre, buscar el que tenga nombre entorno.nombre\r\n        padre.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                //Se encontro, ahora buscar en los simbolos de este elem\r\n                //si se encuentra el identificador (valIzq)\r\n                elem.valor.tsimbolos.forEach((insd) => {\r\n                    let elin = insd.valor;\r\n                    if (elin.getNombre() === der) {\r\n                        //Buscar el texto de este elemento.\r\n                        let texto = this.buscarTexto(elin);\r\n                        //Ver si el texto se puede castear a NUMERO\r\n                        if (texto != null) {\r\n                            let numCompare = +texto;\r\n                            //Comparar los numeros\r\n                            switch (relacional) {\r\n                                case TipoOperacion.MAYORQUE:\r\n                                    if (izq > numCompare) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MENORQUE:\r\n                                    if (izq < numCompare) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MAYORIGUALQUE:\r\n                                    if (izq >= numCompare) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MENORIGUALQUE:\r\n                                    if (izq <= numCompare) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.IGUAL:\r\n                                    if (izq === numCompare) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.DIFERENTEQUE:\r\n                                    if (izq != numCompare) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return entTemporal;\r\n    }\r\n}\r\nexport var TipoOperacion;\r\n(function (TipoOperacion) {\r\n    TipoOperacion[TipoOperacion[\"SUMA\"] = 0] = \"SUMA\";\r\n    TipoOperacion[TipoOperacion[\"RESTA\"] = 1] = \"RESTA\";\r\n    TipoOperacion[TipoOperacion[\"MULTIPLICACION\"] = 2] = \"MULTIPLICACION\";\r\n    TipoOperacion[TipoOperacion[\"DIVISION\"] = 3] = \"DIVISION\";\r\n    TipoOperacion[TipoOperacion[\"MAYORQUE\"] = 4] = \"MAYORQUE\";\r\n    TipoOperacion[TipoOperacion[\"MENORQUE\"] = 5] = \"MENORQUE\";\r\n    TipoOperacion[TipoOperacion[\"MAYORIGUALQUE\"] = 6] = \"MAYORIGUALQUE\";\r\n    TipoOperacion[TipoOperacion[\"MENORIGUALQUE\"] = 7] = \"MENORIGUALQUE\";\r\n    TipoOperacion[TipoOperacion[\"IGUAL\"] = 8] = \"IGUAL\";\r\n    TipoOperacion[TipoOperacion[\"DIFERENTEQUE\"] = 9] = \"DIFERENTEQUE\";\r\n    TipoOperacion[TipoOperacion[\"OR\"] = 10] = \"OR\";\r\n    TipoOperacion[TipoOperacion[\"AND\"] = 11] = \"AND\";\r\n    TipoOperacion[TipoOperacion[\"NOT\"] = 12] = \"NOT\";\r\n    TipoOperacion[TipoOperacion[\"MOD\"] = 13] = \"MOD\";\r\n    TipoOperacion[TipoOperacion[\"PAR\"] = 14] = \"PAR\";\r\n    TipoOperacion[TipoOperacion[\"XQEQ\"] = 15] = \"XQEQ\";\r\n    TipoOperacion[TipoOperacion[\"XQGT\"] = 16] = \"XQGT\";\r\n    TipoOperacion[TipoOperacion[\"XQLT\"] = 17] = \"XQLT\";\r\n    TipoOperacion[TipoOperacion[\"XQNE\"] = 18] = \"XQNE\";\r\n    TipoOperacion[TipoOperacion[\"XQLE\"] = 19] = \"XQLE\";\r\n    TipoOperacion[TipoOperacion[\"XQGE\"] = 20] = \"XQGE\"; // Greather equal then\r\n})(TipoOperacion || (TipoOperacion = {}));\r\n","class CST {\r\n    constructor() {\r\n        this.id = 0;\r\n        this.pila = [];\r\n        this.raiz = null;\r\n    }\r\n    agregarPila(nodo) {\r\n        this.pila.push(nodo);\r\n    }\r\n    obtenerUltimoNodo() {\r\n        return this.pila.pop();\r\n    }\r\n    setRaiz(root) {\r\n        this.raiz = root;\r\n    }\r\n    getRaiz() {\r\n        return this.raiz;\r\n    }\r\n    getId() {\r\n        this.id = this.id + 1;\r\n        return this.id;\r\n    }\r\n}\r\nconst cstXmlAsc = new CST();\r\nconst cstXmlDesc = new CST();\r\nconst cstXpathAsc = new CST();\r\nconst cstXpathDesc = new CST();\r\nexport { cstXmlAsc, cstXmlDesc, cstXpathAsc, cstXpathDesc };\r\n","export class Etiqueta3D {\r\n    constructor(tipo, identificador, codigo3d, fila, columna) {\r\n        this.tipo = tipo;\r\n        this.fila = fila;\r\n        this.identificador = identificador;\r\n        this.codigo3D = codigo3d;\r\n        this.columna = columna;\r\n        this.eliminada = false;\r\n        this.optimizada = false;\r\n    }\r\n    isOptimizada() {\r\n        return this.optimizada;\r\n    }\r\n    setOptimizada(optimizada) {\r\n        this.optimizada = optimizada;\r\n    }\r\n    isEliminada() {\r\n        return this.eliminada;\r\n    }\r\n    setEliminada(eliminada) {\r\n        this.eliminada = eliminada;\r\n    }\r\n    getCodigo3D() {\r\n        return this.codigo3D;\r\n    }\r\n    setCodigo3D(codigo) {\r\n        this.codigo3D = codigo;\r\n    }\r\n    getTipoInstruccion() {\r\n        return this.tipo;\r\n    }\r\n}\r\n","import { Simbolo } from \"../AST/Simbolo\";\r\nimport { Tipo } from \"../AST/Tipo\";\r\nimport errores from '../Global/ListaError';\r\nexport class Atributo {\r\n    constructor(id, valor, linea, columna) {\r\n        this.identificador = id;\r\n        this.valor = valor;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n    ejecutar(entorno) {\r\n        /* Se debe verificar que no exista el atributo */\r\n        if (!entorno.existeSimbolo(this.identificador)) {\r\n            entorno.agregarSimbolo(this.identificador, new Simbolo(Tipo.ATRIBUTO, this.identificador, this.valor, this.linea, this.columna));\r\n        }\r\n        else {\r\n            /*  Error semantico */\r\n            errores.agregarError('semantico', 'Ya existe el simbolo ' + this.identificador, this.linea, this.columna);\r\n        }\r\n    }\r\n}\r\n","import { Entorno } from '../AST/Entorno';\r\nimport { Simbolo } from '../AST/Simbolo';\r\nimport { Tipo } from '../AST/Tipo';\r\nexport class Objeto {\r\n    constructor(id, texto, linea, columna, listaAtributos, listaO, isUnica) {\r\n        this.identificador = id;\r\n        this.texto = texto;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.listaAtributos = listaAtributos;\r\n        this.listaObjetos = listaO;\r\n        this.isUnica = isUnica;\r\n    }\r\n    ejecutar(entorno) {\r\n        let local = new Entorno(this.identificador, entorno, entorno.global);\r\n        local.agregarSimbolo('Etiqueta unica', new Simbolo(Tipo.ETIQUETA_UNIQUE, 'Etiqueta unica', this.isUnica, this.linea, this.columna));\r\n        this.listaAtributos.forEach((elem) => {\r\n            elem.ejecutar(local);\r\n        });\r\n        this.listaObjetos.forEach((obj) => {\r\n            obj.ejecutar(local);\r\n        });\r\n        if (this.texto !== '')\r\n            local.agregarSimbolo('Texto', new Simbolo(Tipo.STRING, 'Texto', this.texto, this.linea, this.columna));\r\n        entorno.agregarSimbolo(this.identificador, new Simbolo(this.isUnica ? Tipo.ETIQUETA_UNIQUE : Tipo.ETIQUETA, this.identificador, local, this.linea, this.columna));\r\n    }\r\n}\r\n","import { TipoExpresion3D } from \"../Expresiones3D/Expresion3D\";\r\nimport { Operacion3D } from \"../Expresiones3D/Operacion3D\";\r\nexport class If3D {\r\n    constructor(tipo, condicion, gotoEtiqueta, codigo3d, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.codigo3D = codigo3d;\r\n        this.condicion = condicion;\r\n        this.gotoEtiqueta = gotoEtiqueta;\r\n        this.eliminada = false;\r\n        this.optimizada = false;\r\n    }\r\n    isOptimizada() {\r\n        return this.optimizada;\r\n    }\r\n    setOptimizada(optimizada) {\r\n        this.optimizada = optimizada;\r\n    }\r\n    isEliminada() {\r\n        return this.eliminada;\r\n    }\r\n    setEliminada(eliminada) {\r\n        this.eliminada = eliminada;\r\n    }\r\n    getTipoInstruccion() {\r\n        return this.tipo;\r\n    }\r\n    negarCondicion() {\r\n        if (this.condicion instanceof Operacion3D) {\r\n            let negada = this.condicion.negarCondicion();\r\n            if (negada) {\r\n                let x = new Operacion3D(TipoExpresion3D.OPERACION, negada, this.condicion.op_izq, this.condicion.op_der, this.condicion.codigo3D, -1, -1);\r\n                let y = Object.create(x);\r\n                this.condicion = Object.create(y);\r\n                return y;\r\n            }\r\n        }\r\n    }\r\n    setCodigo3D(codigo) {\r\n        this.codigo3D = codigo;\r\n    }\r\n    getCodigo3D() {\r\n        this.codigo3D = \"if (\" + this.condicion.getCodigo3D() + \")\";\r\n        this.codigo3D += \" \" + this.gotoEtiqueta.getCodigo3D();\r\n        return this.codigo3D;\r\n    }\r\n}\r\n","export class Goto3D {\r\n    constructor(tipo, identificador, codigo3d, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.codigo3D = codigo3d;\r\n        this.identificador = identificador;\r\n        this.eliminada = false;\r\n        this.optimizada = false;\r\n    }\r\n    isOptimizada() {\r\n        return this.optimizada;\r\n    }\r\n    setOptimizada(optimizada) {\r\n        this.optimizada = optimizada;\r\n    }\r\n    isEliminada() {\r\n        return this.eliminada;\r\n    }\r\n    setEliminada(eliminada) {\r\n        this.eliminada = eliminada;\r\n    }\r\n    getTipoInstruccion() {\r\n        return this.tipo;\r\n    }\r\n    changeReferencia(nuevoId) {\r\n        this.identificador = nuevoId;\r\n    }\r\n    getReferencia() {\r\n        return this.identificador;\r\n    }\r\n    setCodigo3D(codigo) {\r\n        this.codigo3D = codigo;\r\n    }\r\n    getCodigo3D() {\r\n        this.codigo3D = \"goto \" + this.identificador + \";\";\r\n        return this.codigo3D;\r\n    }\r\n}\r\n","export class Predicate {\r\n    constructor(expresion, linea, columna) {\r\n        this.expresion = expresion;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n    getTipo() {\r\n        return this.tipo;\r\n    }\r\n    getValor(ent) {\r\n        let resultado = this.expresion.getValor(ent);\r\n        this.tipo = this.expresion.getTipo(ent);\r\n        return resultado;\r\n    }\r\n    getValorInicial(ent) {\r\n    }\r\n}\r\n","export class Main {\r\n    constructor(tipo, listaInstrucciones, codigo3D, fila, columna) {\r\n        this.fila = fila;\r\n        this.codigo3Dir = codigo3D;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.listaInstrucciones = listaInstrucciones;\r\n    }\r\n    getCodigo3Dir() {\r\n        let auxCode = \"void main() {\\n\";\r\n        this.listaInstrucciones.forEach((instruccion) => {\r\n            auxCode += \"    \" + instruccion.getCodigo3D() + \"\\n\";\r\n        });\r\n        auxCode += \"}\";\r\n        return auxCode;\r\n    }\r\n    setCodigo3Dir(codigo) {\r\n        this.codigo3Dir = codigo;\r\n    }\r\n    optimizar() {\r\n        return \"\";\r\n    }\r\n}\r\n","export class Metodo {\r\n    constructor(tipo, listaInstrucciones, codigo3D, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.codigo3Dir = codigo3D;\r\n        this.listaInstrucciones = listaInstrucciones;\r\n        ;\r\n    }\r\n    getCodigo3Dir() {\r\n        //this.codigo3Dir  tiene el nombre del metodo (identificador)\r\n        let auxCode = \"void \" + this.codigo3Dir + \"() {\\n\";\r\n        this.listaInstrucciones.forEach((instruccion) => {\r\n            auxCode += \"    \" + instruccion.getCodigo3D() + \"\\n\";\r\n        });\r\n        auxCode += \"}\";\r\n        return auxCode;\r\n    }\r\n    setCodigo3Dir(codigo) {\r\n        this.codigo3Dir = codigo;\r\n    }\r\n    optimizar() {\r\n    }\r\n}\r\n","\"use strict\";\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XQuery = (function () {\r\n    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)\r\n        ; return o; }, $V0 = [16, 24, 114, 123, 132], $V1 = [1, 7], $V2 = [1, 6], $V3 = [2, 16, 24, 114, 132], $V4 = [2, 123], $V5 = [1, 12], $V6 = [2, 11, 16, 24, 114, 123, 132], $V7 = [1, 20], $V8 = [1, 21], $V9 = [2, 127], $Va = [2, 16, 24, 114, 123, 132], $Vb = [1, 28], $Vc = [1, 32], $Vd = [1, 39], $Ve = [1, 51], $Vf = [1, 46], $Vg = [1, 40], $Vh = [1, 41], $Vi = [1, 42], $Vj = [1, 43], $Vk = [1, 47], $Vl = [1, 48], $Vm = [1, 49], $Vn = [1, 50], $Vo = [1, 52], $Vp = [1, 57], $Vq = [1, 59], $Vr = [1, 60], $Vs = [2, 26, 118, 119, 123], $Vt = [5, 22], $Vu = [1, 65], $Vv = [1, 66], $Vw = [1, 67], $Vx = [1, 68], $Vy = [1, 69], $Vz = [1, 70], $VA = [1, 71], $VB = [1, 72], $VC = [1, 73], $VD = [1, 74], $VE = [1, 75], $VF = [1, 76], $VG = [1, 77], $VH = [1, 78], $VI = [1, 79], $VJ = [1, 80], $VK = [1, 81], $VL = [1, 82], $VM = [1, 83], $VN = [1, 85], $VO = [2, 5, 16, 18, 22, 24, 26, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 78, 114, 118, 119, 123, 132], $VP = [2, 49], $VQ = [2, 118, 119, 123], $VR = [2, 52], $VS = [1, 106], $VT = [2, 118], $VU = [1, 149], $VV = [2, 26, 118, 119, 123, 130], $VW = [1, 153], $VX = [1, 158], $VY = [1, 156], $VZ = [1, 157], $V_ = [1, 163], $V$ = [1, 162], $V01 = [1, 160], $V11 = [1, 161], $V21 = [1, 171], $V31 = [2, 5, 16, 18, 22, 24, 26, 74, 78, 114, 118, 119, 123, 130, 132], $V41 = [1, 176], $V51 = [1, 179], $V61 = [1, 180], $V71 = [1, 181], $V81 = [1, 182], $V91 = [1, 183], $Va1 = [1, 184], $Vb1 = [1, 185], $Vc1 = [1, 186], $Vd1 = [1, 187], $Ve1 = [1, 188], $Vf1 = [1, 189], $Vg1 = [1, 190], $Vh1 = [1, 191], $Vi1 = [2, 5, 16, 18, 22, 24, 26, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 78, 114, 118, 119, 123, 132], $Vj1 = [2, 5, 16, 18, 22, 24, 26, 43, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 78, 114, 118, 119, 123, 132], $Vk1 = [18, 26], $Vl1 = [1, 210], $Vm1 = [2, 16, 24, 26, 114, 118, 119, 123, 130, 132], $Vn1 = [2, 93], $Vo1 = [1, 219], $Vp1 = [2, 16, 24, 114, 118, 119, 123, 132], $Vq1 = [1, 257], $Vr1 = [1, 255], $Vs1 = [1, 256], $Vt1 = [2, 78, 118, 119, 123], $Vu1 = [1, 311], $Vv1 = [1, 314], $Vw1 = [1, 312], $Vx1 = [1, 313], $Vy1 = [1, 349], $Vz1 = [1, 350], $VA1 = [1, 351], $VB1 = [1, 352], $VC1 = [1, 353], $VD1 = [18, 20, 26];\r\n    var parser = { trace: function trace() { },\r\n        yy: {},\r\n        symbols_: { \"error\": 2, \"START\": 3, \"INSTRUCCIONES\": 4, \"EOF\": 5, \"LISTFUNC\": 6, \"LISTAD\": 7, \"RETURNGLOBAL\": 8, \"LFUNC\": 9, \"USERFUNCTION\": 10, \"declare\": 11, \"function\": 12, \"PREFIX\": 13, \"dospuntos\": 14, \"identifier\": 15, \"parA\": 16, \"ARGUMENTOS\": 17, \"parC\": 18, \"TIPOFUNCION\": 19, \"llaveA\": 20, \"LISTAINSTR\": 21, \"llaveC\": 22, \"puntocoma\": 23, \"local\": 24, \"LISTAARGS\": 25, \"coma\": 26, \"PARAM\": 27, \"dolar\": 28, \"as\": 29, \"xs\": 30, \"DATATYPE\": 31, \"decimal\": 32, \"string\": 33, \"boolean\": 34, \"double\": 35, \"integer\": 36, \"IF\": 37, \"FLWOR\": 38, \"if\": 39, \"EXPRESIONXQUERY\": 40, \"then\": 41, \"LISTELSEIF\": 42, \"else\": 43, \"EIF\": 44, \"asterisco\": 45, \"mas\": 46, \"menos\": 47, \"div\": 48, \"lte\": 49, \"lt\": 50, \"gte\": 51, \"gt\": 52, \"igual\": 53, \"nequal\": 54, \"or\": 55, \"and\": 56, \"mod\": 57, \"reserv_eq\": 58, \"reserv_ne\": 59, \"reserv_lt\": 60, \"reserv_le\": 61, \"reserv_gt\": 62, \"reserv_ge\": 63, \"DoubleLiteral\": 64, \"IntegerLiteral\": 65, \"cadena\": 66, \"cadena2\": 67, \"LLAMADAFUNCION\": 68, \"FUNCIONXQUERY\": 69, \"LISTALLAMADA\": 70, \"VARLLAMADA\": 71, \"LISTANODOS\": 72, \"NODO\": 73, \"diag\": 74, \"TIPONODO\": 75, \"corA\": 76, \"EXPRESION\": 77, \"corC\": 78, \"MASTIPOS\": 79, \"AXES\": 80, \"attr\": 81, \"PREDICATE\": 82, \"dot\": 83, \"FUNCIONES\": 84, \"ancestor\": 85, \"NODETEST\": 86, \"ancestorSelf\": 87, \"attribute\": 88, \"child\": 89, \"descendant\": 90, \"descendantSelf\": 91, \"following\": 92, \"followingSib\": 93, \"namespace\": 94, \"parent\": 95, \"preced\": 96, \"precedSib\": 97, \"self\": 98, \"textFunc\": 99, \"nodeFunc\": 100, \"PRIMITIVA\": 101, \"data\": 102, \"upper-case\": 103, \"substring\": 104, \"lower-case\": 105, \"number\": 106, \"lastFunc\": 107, \"positionFunc\": 108, \"LNODOS\": 109, \"FOR\": 110, \"RETURNTYPE\": 111, \"LISTADEC\": 112, \"DECLARACION\": 113, \"for\": 114, \"LISTADECLARACIONES\": 115, \"SENTSFOR\": 116, \"SENTFOR\": 117, \"where\": 118, \"order\": 119, \"by\": 120, \"LISTASORT\": 121, \"SORT\": 122, \"let\": 123, \"LISTACONSULTAS\": 124, \"to\": 125, \"DECLARACIONFOR\": 126, \"in\": 127, \"LISTAENTEROS\": 128, \"at\": 129, \"andSelect\": 130, \"CONSULTA\": 131, \"return\": 132, \"$accept\": 0, \"$end\": 1 },\r\n        terminals_: { 2: \"error\", 5: \"EOF\", 11: \"declare\", 12: \"function\", 14: \"dospuntos\", 15: \"identifier\", 16: \"parA\", 18: \"parC\", 20: \"llaveA\", 22: \"llaveC\", 23: \"puntocoma\", 24: \"local\", 26: \"coma\", 28: \"dolar\", 29: \"as\", 30: \"xs\", 32: \"decimal\", 33: \"string\", 34: \"boolean\", 35: \"double\", 36: \"integer\", 39: \"if\", 41: \"then\", 43: \"else\", 45: \"asterisco\", 46: \"mas\", 47: \"menos\", 48: \"div\", 49: \"lte\", 50: \"lt\", 51: \"gte\", 52: \"gt\", 53: \"igual\", 54: \"nequal\", 55: \"or\", 56: \"and\", 57: \"mod\", 58: \"reserv_eq\", 59: \"reserv_ne\", 60: \"reserv_lt\", 61: \"reserv_le\", 62: \"reserv_gt\", 63: \"reserv_ge\", 64: \"DoubleLiteral\", 65: \"IntegerLiteral\", 66: \"cadena\", 67: \"cadena2\", 74: \"diag\", 76: \"corA\", 78: \"corC\", 81: \"attr\", 83: \"dot\", 85: \"ancestor\", 87: \"ancestorSelf\", 88: \"attribute\", 89: \"child\", 90: \"descendant\", 91: \"descendantSelf\", 92: \"following\", 93: \"followingSib\", 94: \"namespace\", 95: \"parent\", 96: \"preced\", 97: \"precedSib\", 98: \"self\", 99: \"textFunc\", 100: \"nodeFunc\", 102: \"data\", 103: \"upper-case\", 104: \"substring\", 105: \"lower-case\", 106: \"number\", 107: \"lastFunc\", 108: \"positionFunc\", 114: \"for\", 118: \"where\", 119: \"order\", 120: \"by\", 123: \"let\", 125: \"to\", 127: \"in\", 129: \"at\", 130: \"andSelect\", 132: \"return\" },\r\n        productions_: [0, [3, 2], [4, 3], [6, 1], [6, 0], [9, 2], [9, 1], [10, 13], [10, 1], [13, 1], [17, 1], [17, 0], [25, 3], [25, 1], [27, 6], [31, 1], [31, 1], [31, 1], [31, 1], [31, 1], [19, 4], [19, 0], [21, 1], [21, 1], [37, 9], [42, 2], [42, 0], [44, 7], [40, 3], [40, 3], [40, 3], [40, 3], [40, 3], [40, 3], [40, 3], [40, 3], [40, 3], [40, 3], [40, 3], [40, 3], [40, 3], [40, 3], [40, 3], [40, 3], [40, 3], [40, 3], [40, 3], [40, 3], [40, 1], [40, 1], [40, 1], [40, 1], [40, 2], [40, 1], [40, 1], [68, 6], [68, 5], [70, 3], [70, 1], [71, 1], [71, 1], [73, 2], [73, 3], [73, 2], [73, 3], [75, 1], [75, 4], [75, 1], [75, 1], [79, 3], [79, 3], [79, 2], [79, 3], [79, 2], [79, 1], [80, 4], [80, 4], [80, 4], [80, 4], [80, 4], [80, 4], [80, 4], [80, 4], [80, 4], [80, 4], [80, 4], [80, 4], [80, 4], [86, 2], [86, 2], [86, 2], [86, 2], [82, 3], [82, 0], [77, 1], [77, 1], [101, 2], [101, 2], [101, 1], [101, 2], [101, 1], [69, 6], [69, 6], [69, 10], [69, 6], [69, 6], [69, 6], [69, 4], [69, 4], [69, 8], [69, 4], [69, 4], [69, 4], [84, 1], [84, 1], [84, 1], [84, 1], [72, 1], [72, 0], [109, 2], [109, 1], [38, 3], [7, 1], [7, 0], [112, 2], [112, 1], [110, 3], [110, 0], [116, 2], [116, 1], [117, 1], [117, 2], [117, 5], [117, 6], [117, 3], [121, 3], [121, 1], [122, 3], [113, 6], [113, 10], [113, 6], [115, 3], [115, 1], [126, 4], [126, 8], [126, 6], [126, 7], [124, 3], [124, 1], [131, 2], [131, 2], [131, 1], [111, 4], [111, 2], [111, 2], [128, 3], [128, 1], [8, 1], [8, 3], [8, 2], [8, 1]],\r\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n            /* this == yyval */\r\n            var $0 = $$.length - 1;\r\n            switch (yystate) {\r\n                case 1:\r\n                    console.log($$[$0 - 1]);\r\n                    return $$[$0 - 1];\r\n                    break;\r\n                case 2:\r\n                    if ($$[$0 - 2] !== null) {\r\n                        if ($$[$0 - 1] !== null) {\r\n                            $$[$0 - 2] = $$[$0 - 2].concat($$[$0 - 1]);\r\n                            $$[$0 - 2].push($$[$0]);\r\n                            this.$ = $$[$0 - 2];\r\n                        }\r\n                        else {\r\n                            $$[$0 - 2].push($$[$0]);\r\n                            this.$ = $$[$0 - 2];\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ($$[$0 - 1] !== null) {\r\n                            $$[$0 - 1].push($$[$0]);\r\n                            this.$ = $$[$0 - 1];\r\n                        }\r\n                        else\r\n                            this.$ = [$$[$0]];\r\n                    }\r\n                    break;\r\n                case 3:\r\n                    console.log(\"LISTA DE FUNCIONES\");\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 4:\r\n                    console.log(\"LISTA FUNC VACIA\");\r\n                    this.$ = [];\r\n                    break;\r\n                case 5:\r\n                    if ($$[$0] !== null)\r\n                        $$[$0 - 1].push($$[$0]);\r\n                    this.$ = $$[$0 - 1];\r\n                    break;\r\n                case 6:\r\n                    if ($$[$0] !== null)\r\n                        this.$ = [$$[$0]];\r\n                    else\r\n                        this.$ = [];\r\n                    break;\r\n                case 7:\r\n                    this.$ = new UserFunction($$[$0 - 4], $$[$0 - 10], $$[$0 - 8], $$[$0 - 6], $$[$0 - 2], _$[$0 - 12].first_line, _$[$0 - 12].first_column);\r\n                    break;\r\n                case 8:\r\n                    this.$ = null;\r\n                    break;\r\n                case 9:\r\n                case 10:\r\n                case 59:\r\n                case 60:\r\n                case 95:\r\n                case 115:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 11:\r\n                    this.$ = [];\r\n                    break;\r\n                case 12:\r\n                case 135:\r\n                case 155:\r\n                    $$[$0 - 2].push($$[$0]);\r\n                    this.$ = $$[$0 - 2];\r\n                    break;\r\n                case 13:\r\n                case 58:\r\n                case 136:\r\n                case 156:\r\n                    this.$ = [$$[$0]];\r\n                    break;\r\n                case 14:\r\n                    this.$ = { tipo: $$[$0 - 2], nombre: $$[$0 - 4] };\r\n                    break;\r\n                case 15:\r\n                    this.$ = TipoPrim.DECIMAL;\r\n                    break;\r\n                case 16:\r\n                    this.$ = TipoPrim.CADENA;\r\n                    break;\r\n                case 17:\r\n                    this.$ = TipoPrim.BOOLEAN;\r\n                    break;\r\n                case 18:\r\n                    this.$ = TipoPrim.DOUBLE;\r\n                    break;\r\n                case 19:\r\n                    this.$ = TipoPrim.INTEGER;\r\n                    break;\r\n                case 20:\r\n                case 53:\r\n                case 67:\r\n                case 68:\r\n                case 94:\r\n                case 113:\r\n                case 114:\r\n                case 116:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 21:\r\n                    this.$ = TipoPrim.ANY;\r\n                    break;\r\n                case 22:\r\n                case 23:\r\n                case 142:\r\n                    this.$ = [$$[$0]];\r\n                    break;\r\n                case 24:\r\n                    this.$ = $$[$0 - 8];\r\n                    break;\r\n                case 25:\r\n                case 131:\r\n                    this.$ = $$[$0 - 1];\r\n                    break;\r\n                case 26:\r\n                    this.$ = [];\r\n                    break;\r\n                case 27:\r\n                    this.$ = $$[$0 - 6];\r\n                    break;\r\n                case 28:\r\n                    this.$ = new Operacion(TipoOperacion.MULTIPLICACION, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 29:\r\n                    this.$ = new Operacion(TipoOperacion.SUMA, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 30:\r\n                    this.$ = new Operacion(TipoOperacion.RESTA, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 31:\r\n                    this.$ = new Operacion(TipoOperacion.DIVISION, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 32:\r\n                    this.$ = new Operacion(TipoOperacion.MENORIGUALQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 33:\r\n                    this.$ = new Operacion(TipoOperacion.MENORQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 34:\r\n                    this.$ = new Operacion(TipoOperacion.MAYORIGUALQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 35:\r\n                    this.$ = new Operacion(TipoOperacion.MAYORQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 36:\r\n                    this.$ = new Operacion(TipoOperacion.IGUAL, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 37:\r\n                    this.$ = new Operacion(TipoOperacion.DIFERENTEQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 38:\r\n                    this.$ = new Operacion(TipoOperacion.OR, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 39:\r\n                    this.$ = new Operacion(TipoOperacion.AND, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 40:\r\n                    this.$ = new Operacion(TipoOperacion.MOD, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 41:\r\n                    this.$ = new Operacion(TipoOperacion.XQEQ, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 42:\r\n                    this.$ = new Operacion(TipoOperacion.XQNE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 43:\r\n                    this.$ = new Operacion(TipoOperacion.XQLT, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 44:\r\n                    this.$ = new Operacion(TipoOperacion.XQLE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 45:\r\n                    this.$ = new Operacion(TipoOperacion.XQGT, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 46:\r\n                    this.$ = new Operacion(TipoOperacion.XQGE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 47:\r\n                    this.$ = new Operacion(TipoOperacion.PAR, $$[$0 - 1], null, _$[$0 - 2].first_line, _$[$0 - 2].first_column, true);\r\n                    break;\r\n                case 48:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.DOUBLE, _$[$0].first_line, _$[$0].first_column, true);\r\n                    break;\r\n                case 49:\r\n                    console.log($$[$0]);\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.INTEGER, _$[$0].first_line, _$[$0].first_column, true);\r\n                    break;\r\n                case 50:\r\n                case 51:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.CADENA, _$[$0].first_line, _$[$0].first_column, true);\r\n                    break;\r\n                case 52:\r\n                    console.log(\"ENTRA A EXPRESIONXQUERY \", $$[$0]);\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.XQUERYIDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column, true);\r\n                    break;\r\n                case 54:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.FUNCIONXQUERY, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 55:\r\n                    this.$ = new Llamada($$[$0 - 3], $$[$0 - 1], _$[$0 - 5].first_line, _$[$0 - 5].first_column);\r\n                    break;\r\n                case 56:\r\n                    this.$ = new Llamada($$[$0 - 2], [], _$[$0 - 4].first_line, _$[$0 - 4].first_column);\r\n                    break;\r\n                case 57:\r\n                    $$[$0 - 2].push($$[$0]);\r\n                    this.$ = $$[$0 - 2];\r\n                    break;\r\n                case 61:\r\n                    $$[$0].fromRoot = true;\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 62:\r\n                    $$[$0].fromRoot = false;\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 63:\r\n                    console.log('Entra a error sintactico de one diag');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = new Nodo($$[$0], TipoNodo.NODOERROR, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 64:\r\n                    console.log('Entra a error sintactico de two diags');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    this.$ = new Nodo($$[$0], TipoNodo.NODOERROR, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 65:\r\n                    this.$ = new Nodo($$[$0], TipoNodo.IDENTIFIER, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 66:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.IDENTIFIER, _$[$0 - 3].first_line, _$[$0 - 3].first_column, new Predicate($$[$0 - 1], _$[$0 - 1].first_line, _$[$0 - 1].first_column));\r\n                    break;\r\n                case 69:\r\n                case 70:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.ATRIBUTO, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 71:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.DOT, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 72:\r\n                    this.$ = new Nodo($$[$0 - 2] + $$[$0 - 1], TipoNodo.DOTDOT, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 73:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 74:\r\n                    this.$ = new Nodo($$[$0], TipoNodo.FUNCION, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 75:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.ANCESTOR, $$[$0 - 1]);\r\n                    break;\r\n                case 76:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.ANCESTORORSELF, $$[$0 - 1]);\r\n                    break;\r\n                case 77:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.ATTRIBUTE, $$[$0 - 1]);\r\n                    break;\r\n                case 78:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.CHILD, $$[$0 - 1]);\r\n                    break;\r\n                case 79:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.DESCENDANT, $$[$0 - 1]);\r\n                    break;\r\n                case 80:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.DESCENDANTORSELF, $$[$0 - 1]);\r\n                    break;\r\n                case 81:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.FOLLOWING, $$[$0 - 1]);\r\n                    break;\r\n                case 82:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.FOLLOWINGSIBLING, $$[$0 - 1]);\r\n                    break;\r\n                case 83:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.NAMESPACE, $$[$0 - 1]);\r\n                    break;\r\n                case 84:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.PARENT, $$[$0 - 1]);\r\n                    break;\r\n                case 85:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.PRECEDING, $$[$0 - 1]);\r\n                    break;\r\n                case 86:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.PRECEDINGSIBLING, $$[$0 - 1]);\r\n                    break;\r\n                case 87:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.AXIS, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, TipoAxis.SELF, $$[$0 - 1]);\r\n                    break;\r\n                case 88:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    break;\r\n                case 89:\r\n                case 90:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.FUNCION, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.FUNCION, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    break;\r\n                case 91:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    break;\r\n                case 92:\r\n                    this.$ = $$[$0 - 1];\r\n                    break;\r\n                case 93:\r\n                    this.$ = [];\r\n                    break;\r\n                case 96:\r\n                case 97:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.ATRIBUTO, _$[$0 - 1].first_line, _$[$0 - 1].first_column, true);\r\n                    break;\r\n                case 98:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.DOT, _$[$0].first_line, _$[$0].first_column, true);\r\n                    break;\r\n                case 99:\r\n                    console.log(\"ID \", $$[$0 - 1]);\r\n                    console.log(\"LISTANODOS \", $$[$0]);\r\n                    if ($$[$0].length > 0) {\r\n                        this.$ = [new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column)];\r\n                        this.$ = this.$.concat($$[$0]);\r\n                        this.$ = new Primitiva(this.$, TipoPrim.CONSULTA, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    else {\r\n                        this.$ = new Primitiva($$[$0 - 1], TipoPrim.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    break;\r\n                case 100:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.FUNCION, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 101:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.DATA, $$[$0 - 2], $$[$0 - 1], _$[$0 - 5].first_line, _$[$0 - 5].first_column);\r\n                    break;\r\n                case 102:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.UPPERCASE, $$[$0 - 2], $$[$0 - 1], _$[$0 - 5].first_line, _$[$0 - 5].first_column);\r\n                    break;\r\n                case 103:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.SUBSTRING, $$[$0 - 6], $$[$0 - 5], _$[$0 - 9].first_line, _$[$0 - 9].first_column, +$$[$0 - 3], +$$[$0 - 1]);\r\n                    break;\r\n                case 104:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.LOWERCASE, $$[$0 - 2], $$[$0 - 1], _$[$0 - 5].first_line, _$[$0 - 5].first_column);\r\n                    break;\r\n                case 105:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.STRING, $$[$0 - 2], $$[$0 - 1], _$[$0 - 5].first_line, _$[$0 - 5].first_column);\r\n                    break;\r\n                case 106:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.NUMBER, $$[$0 - 2], $$[$0 - 1], _$[$0 - 5].first_line, _$[$0 - 5].first_column);\r\n                    break;\r\n                case 107:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.DATA, undefined, undefined, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, undefined, $$[$0 - 1]);\r\n                    break;\r\n                case 108:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.UPPERCASE, undefined, undefined, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, undefined, $$[$0 - 1]);\r\n                    break;\r\n                case 109:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.SUBSTRING, undefined, undefined, _$[$0 - 7].first_line, _$[$0 - 7].first_column, +$$[$0 - 3], +$$[$0 - 1], $$[$0 - 5]);\r\n                    break;\r\n                case 110:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.LOWERCASE, undefined, undefined, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, undefined, $$[$0 - 1]);\r\n                    break;\r\n                case 111:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.STRING, undefined, undefined, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, undefined, $$[$0 - 1]);\r\n                    break;\r\n                case 112:\r\n                    this.$ = new FuncionXQuery(TipoFuncionXQ.NUMBER, undefined, undefined, _$[$0 - 3].first_line, _$[$0 - 3].first_column, undefined, undefined, $$[$0 - 1]);\r\n                    break;\r\n                case 117:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 118:\r\n                    this.$ = [];\r\n                    break;\r\n                case 119:\r\n                    $$[$0 - 1].push($$[$0]);\r\n                    this.$ = $$[$0 - 1];\r\n                    break;\r\n                case 120:\r\n                    console.log(\"NODO\");\r\n                    this.$ = [$$[$0]];\r\n                    break;\r\n                case 121:\r\n                    this.$ = new Flwor($$[$0 - 2], $$[$0 - 1], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 122:\r\n                    console.log(\"LISTA DECLARACIONES\");\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 123:\r\n                    console.log(\"SIN VARIABLES\");\r\n                    this.$ = [];\r\n                    break;\r\n                case 124:\r\n                    console.log(\"MAS DECLARACIONES\");\r\n                    $$[$0 - 1].push($$[$0]);\r\n                    this.$ = $$[$0 - 1];\r\n                    break;\r\n                case 125:\r\n                    console.log(\"UNA DECLARACION\");\r\n                    this.$ = [$$[$0]];\r\n                    break;\r\n                case 126:\r\n                    this.$ = new For($$[$0 - 1], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 128:\r\n                    console.log(\"PASA CON WHERE\");\r\n                    break;\r\n                case 129:\r\n                    console.log(\"PASA SIN WHERE\");\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 132:\r\n                    console.log(\"ENTRA A WHERE \", $$[$0]);\r\n                    this.$ = new Where($$[$0 - 2], $$[$0], true, _$[$0 - 4].first_line, _$[$0 - 4].first_column);\r\n                    break;\r\n                case 133:\r\n                    this.$ = new Where($$[$0 - 3], $$[$0], false, _$[$0 - 5].first_line, _$[$0 - 5].first_column);\r\n                    break;\r\n                case 134:\r\n                    this.$ = new OrderBy($$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 137:\r\n                    this.$ = new Sort($$[$0 - 1], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 138:\r\n                    console.log($$[$0]);\r\n                    this.$ = new Let($$[$0 - 3], $$[$0], _$[$0 - 5].first_line, _$[$0 - 5].first_column);\r\n                    break;\r\n                case 139:\r\n                    this.$ = new Let($$[$0 - 7], null, _$[$0 - 9].first_line, _$[$0 - 9].first_column, +$$[$0 - 3], +$$[$0 - 1]);\r\n                    break;\r\n                case 140:\r\n                    console.log(\"ENTRA DECLARACION\");\r\n                    console.log($$[$0]);\r\n                    this.$ = new Let($$[$0 - 3], null, _$[$0 - 5].first_line, _$[$0 - 5].first_column, undefined, undefined, undefined, $$[$0]);\r\n                    break;\r\n                case 141:\r\n                    $$[$0 - 2].push($$[$0 - 1]);\r\n                    this.$ = $$[$0 - 2];\r\n                    break;\r\n                case 143:\r\n                    this.$ = new DeclaracionFor(TipoFor.NORMAL, $$[$0 - 2], $$[$0], _$[$0 - 3].first_line, _$[$0 - 3].first_column);\r\n                    break;\r\n                case 144:\r\n                    this.$ = new DeclaracionFor(TipoFor.ITERATIVO, $$[$0 - 6], null, _$[$0 - 7].first_line, _$[$0 - 7].first_column, undefined, +$$[$0 - 3], +$$[$0 - 1]);\r\n                    break;\r\n                case 145:\r\n                    this.$ = new DeclaracionFor(TipoFor.ITERATIVO, $$[$0 - 4], null, _$[$0 - 5].first_line, _$[$0 - 5].first_column, undefined, undefined, undefined, $$[$0 - 1]);\r\n                    break;\r\n                case 146:\r\n                    this.$ = new DeclaracionFor(TipoFor.AT, $$[$0 - 5], $$[$0], _$[$0 - 6].first_line, _$[$0 - 6].first_column, $$[$0 - 2]);\r\n                    break;\r\n                case 147:\r\n                    $$[$0 - 2].push(new Consulta($$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column));\r\n                    this.$ = $$[$0 - 2];\r\n                    break;\r\n                case 148:\r\n                    console.log(\"CONSULTA\");\r\n                    this.$ = [new Consulta($$[$0], _$[$0].first_line, _$[$0].first_column)];\r\n                    break;\r\n                case 149:\r\n                    this.$ = [new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column)];\r\n                    if ($$[$0].length > 0) {\r\n                        this.$ = this.$.concat($$[$0]);\r\n                    }\r\n                    break;\r\n                case 150:\r\n                    this.$ = [$$[$0 - 1]];\r\n                    if ($$[$0].length > 0) {\r\n                        this.$ = this.$.concat($$[$0]);\r\n                    }\r\n                    break;\r\n                case 151:\r\n                    console.log(\"LISTANODOS \", $$[$0]);\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 152:\r\n                    this.$ = new Return(TipoReturn.NORMAL, $$[$0 - 1], $$[$0], undefined, undefined, undefined, _$[$0 - 3].first_line, _$[$0 - 3].first_column);\r\n                    break;\r\n                case 153:\r\n                    this.$ = new Return(TipoReturn.FUNCIONXQUERY, undefined, undefined, undefined, undefined, $$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 154:\r\n                    this.$ = new Return(TipoReturn.IFTHENELSE, undefined, undefined, undefined, $$[$0], undefined, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 157:\r\n                case 158:\r\n                case 159:\r\n                    this.$ = \"return global\";\r\n                    break;\r\n                case 160:\r\n                    console.log(\"Se espera un return\");\r\n                    break;\r\n            }\r\n        },\r\n        table: [o($V0, [2, 4], { 3: 1, 4: 2, 6: 3, 9: 4, 10: 5, 2: $V1, 11: $V2 }), { 1: [3] }, { 5: [1, 8] }, o($V3, $V4, { 7: 9, 112: 10, 113: 11, 123: $V5 }), o($V0, [2, 3], { 10: 13, 2: $V1, 11: $V2 }), o($V6, [2, 6]), { 12: [1, 14] }, o($V6, [2, 8]), { 1: [2, 1] }, { 2: [1, 19], 8: 15, 16: [1, 17], 24: $V7, 68: 16, 110: 18, 114: $V8, 132: $V9 }, o($V3, [2, 122], { 113: 22, 123: $V5 }), o($Va, [2, 125]), { 28: [1, 23] }, o($V6, [2, 5]), { 13: 24, 24: [1, 25] }, { 5: [2, 2] }, { 5: [2, 157] }, { 24: $V7, 68: 26 }, { 111: 27, 132: $Vb }, { 5: [2, 160] }, { 14: [1, 29] }, { 28: $Vc, 115: 30, 126: 31 }, o($Va, [2, 124]), { 15: [1, 33] }, { 14: [1, 34] }, { 14: [2, 9] }, { 18: [1, 35] }, { 5: [2, 159] }, { 16: $Vd, 24: $V7, 28: [1, 36], 33: $Ve, 37: 38, 39: $Vf, 40: 37, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 15: [1, 53] }, { 2: $Vp, 26: [1, 55], 113: 58, 116: 54, 117: 56, 118: $Vq, 119: $Vr, 123: $V5 }, o($Vs, [2, 142]), { 15: [1, 61] }, { 14: [1, 62] }, { 15: [1, 63] }, { 5: [2, 158] }, { 15: [1, 64] }, o($Vt, [2, 153], { 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 49: $Vy, 50: $Vz, 51: $VA, 52: $VB, 53: $VC, 54: $VD, 55: $VE, 56: $VF, 57: $VG, 58: $VH, 59: $VI, 60: $VJ, 61: $VK, 62: $VL, 63: $VM }), o($Vt, [2, 154]), { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 84, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, o($VO, [2, 48]), o($VO, $VP), o($VO, [2, 50]), o($VO, [2, 51]), o($VO, [2, 53]), o($VO, [2, 54]), { 16: [1, 86] }, { 16: [1, 87] }, { 16: [1, 88] }, { 16: [1, 89] }, { 16: [1, 90] }, { 16: [1, 91] }, { 16: [1, 92] }, { 16: [1, 93] }, { 132: [2, 126] }, { 28: $Vc, 126: 94 }, { 2: $Vp, 113: 58, 116: 95, 117: 56, 118: $Vq, 119: $Vr, 123: $V5 }, { 132: [2, 129] }, o($VQ, [2, 130]), { 16: $Vd, 24: $V7, 28: [1, 97], 33: $Ve, 40: 96, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 120: [1, 98] }, { 127: [1, 99], 129: [1, 100] }, { 53: [1, 101] }, { 16: [1, 102] }, o([5, 22, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], $VR, { 72: 103, 109: 104, 73: 105, 74: $VS }), { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 107, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 108, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 109, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 110, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 111, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 112, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 113, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 114, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 115, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 116, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 117, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 118, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 119, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 120, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 121, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 122, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 123, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 124, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 125, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 18: [1, 126], 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 49: $Vy, 50: $Vz, 51: $VA, 52: $VB, 53: $VC, 54: $VD, 55: $VE, 56: $VF, 57: $VG, 58: $VH, 59: $VI, 60: $VJ, 61: $VK, 62: $VL, 63: $VM }, { 15: [1, 127] }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 128, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 28: [1, 129], 33: $Ve, 69: 130, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 28: [1, 131], 33: $Ve, 69: 132, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 28: [1, 133], 33: $Ve, 69: 134, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 28: [1, 135], 33: $Ve, 69: 136, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 28: [1, 137], 33: $Ve, 69: 138, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 28: [1, 139], 33: $Ve, 69: 140, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 16: $Vd, 18: [1, 142], 24: $V7, 26: $VT, 28: $VN, 33: $Ve, 40: 144, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 70: 141, 71: 143, 72: 145, 73: 105, 74: $VS, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo, 109: 104 }, o($Vs, [2, 141]), { 132: [2, 128] }, o($VQ, [2, 131], { 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 49: $Vy, 50: $Vz, 51: $VA, 52: $VB, 53: $VC, 54: $VD, 55: $VE, 56: $VF, 57: $VG, 58: $VH, 59: $VI, 60: $VJ, 61: $VK, 62: $VL, 63: $VM }), { 15: [1, 146] }, { 28: $VU, 121: 147, 122: 148 }, o($VV, $VT, { 109: 104, 73: 105, 124: 150, 131: 152, 79: 154, 72: 155, 84: 159, 15: $VW, 16: [1, 151], 45: $VX, 74: $VS, 81: $VY, 83: $VZ, 99: $V_, 100: $V$, 107: $V01, 108: $V11 }), { 28: [1, 164] }, o([2, 114, 118, 119, 123, 130, 132], $VT, { 68: 44, 69: 45, 109: 104, 73: 105, 131: 152, 79: 154, 72: 155, 84: 159, 124: 165, 40: 167, 15: $VW, 16: [1, 166], 24: $V7, 28: $VN, 33: $Ve, 45: $VX, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 74: $VS, 81: $VY, 83: $VZ, 99: $V_, 100: $V$, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo, 107: $V01, 108: $V11 }), { 17: 168, 18: [2, 11], 25: 169, 27: 170, 28: $V21 }, o($Vt, [2, 152]), o([2, 5, 16, 18, 22, 24, 26, 78, 114, 118, 119, 123, 130, 132], [2, 117], { 73: 172, 74: $VS }), o($V31, [2, 120]), { 2: [1, 175], 15: $V41, 45: $VX, 74: [1, 174], 75: 173, 79: 177, 80: 178, 81: $VY, 83: $VZ, 84: 159, 85: $V51, 87: $V61, 88: $V71, 89: $V81, 90: $V91, 91: $Va1, 92: $Vb1, 93: $Vc1, 94: $Vd1, 95: $Ve1, 96: $Vf1, 97: $Vg1, 98: $Vh1, 99: $V_, 100: $V$, 107: $V01, 108: $V11 }, o($VO, [2, 28]), o($Vi1, [2, 29], { 45: $Vu, 48: $Vx, 57: $VG }), o($Vi1, [2, 30], { 45: $Vu, 48: $Vx, 57: $VG }), o($VO, [2, 31]), o($Vj1, [2, 32], { 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 57: $VG }), o($Vj1, [2, 33], { 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 57: $VG }), o($Vj1, [2, 34], { 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 57: $VG }), o($Vj1, [2, 35], { 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 57: $VG }), o($Vj1, [2, 36], { 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 57: $VG }), o($Vj1, [2, 37], { 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 57: $VG }), o([2, 5, 16, 18, 22, 24, 26, 43, 55, 78, 114, 118, 119, 123, 132], [2, 38], { 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 49: $Vy, 50: $Vz, 51: $VA, 52: $VB, 53: $VC, 54: $VD, 56: $VF, 57: $VG, 58: $VH, 59: $VI, 60: $VJ, 61: $VK, 62: $VL, 63: $VM }), o([2, 5, 16, 18, 22, 24, 26, 43, 55, 56, 78, 114, 118, 119, 123, 132], [2, 39], { 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 49: $Vy, 50: $Vz, 51: $VA, 52: $VB, 53: $VC, 54: $VD, 57: $VG, 58: $VH, 59: $VI, 60: $VJ, 61: $VK, 62: $VL, 63: $VM }), o($VO, [2, 40]), o($Vj1, [2, 41], { 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 57: $VG }), o($Vj1, [2, 42], { 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 57: $VG }), o($Vj1, [2, 43], { 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 57: $VG }), o($Vj1, [2, 44], { 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 57: $VG }), o($Vj1, [2, 45], { 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 57: $VG }), o($Vj1, [2, 46], { 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 57: $VG }), o($VO, [2, 47]), o($VO, $VR), { 18: [1, 192], 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 49: $Vy, 50: $Vz, 51: $VA, 52: $VB, 53: $VC, 54: $VD, 55: $VE, 56: $VF, 57: $VG, 58: $VH, 59: $VI, 60: $VJ, 61: $VK, 62: $VL, 63: $VM }, { 15: [1, 193] }, { 18: [1, 194] }, { 15: [1, 195] }, { 18: [1, 196] }, { 15: [1, 197] }, { 26: [1, 198] }, { 15: [1, 199] }, { 18: [1, 200] }, { 15: [1, 201] }, { 18: [1, 202] }, { 15: [1, 203] }, { 18: [1, 204] }, { 18: [1, 205], 26: [1, 206] }, o($VO, [2, 56]), o($Vk1, [2, 58]), o($Vk1, [2, 59], { 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 49: $Vy, 50: $Vz, 51: $VA, 52: $VB, 53: $VC, 54: $VD, 55: $VE, 56: $VF, 57: $VG, 58: $VH, 59: $VI, 60: $VJ, 61: $VK, 62: $VL, 63: $VM }), o($Vk1, [2, 60]), o([2, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 118, 119, 123], $VR, { 74: [1, 207] }), o($VQ, [2, 134], { 26: [1, 208] }), o($Vs, [2, 136]), { 15: [1, 209] }, o($Vs, [2, 143], { 130: $Vl1 }), { 65: [1, 211], 128: 212 }, o($Vm1, [2, 148]), o($Vm1, $VT, { 109: 104, 73: 105, 72: 213, 74: $VS }), o($Vm1, $VT, { 109: 104, 73: 105, 72: 214, 74: $VS }), o($Vm1, [2, 151]), { 15: [1, 215], 45: [1, 216] }, o($V31, $Vn1, { 82: 217, 76: $Vo1, 83: [1, 218] }), o($V31, $Vn1, { 82: 220, 76: $Vo1 }), o($V31, [2, 74]), o($V31, [2, 113]), o($V31, [2, 114]), o($V31, [2, 115]), o($V31, [2, 116]), { 15: [1, 221] }, o($Vp1, [2, 138], { 130: $Vl1 }), { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 84, 64: $Vg, 65: [1, 222], 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, o($Vp1, [2, 140], { 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 49: $Vy, 50: $Vz, 51: $VA, 52: $VB, 53: $VC, 54: $VD, 55: $VE, 56: $VF, 57: $VG, 58: $VH, 59: $VI, 60: $VJ, 61: $VK, 62: $VL, 63: $VM }), { 18: [1, 223] }, { 18: [2, 10], 26: [1, 224] }, o($Vk1, [2, 13]), { 15: [1, 225] }, o($V31, [2, 119]), o($V31, [2, 61]), { 2: [1, 227], 15: $V41, 45: $VX, 75: 226, 79: 177, 80: 178, 81: $VY, 83: $VZ, 84: 159, 85: $V51, 87: $V61, 88: $V71, 89: $V81, 90: $V91, 91: $Va1, 92: $Vb1, 93: $Vc1, 94: $Vd1, 95: $Ve1, 96: $Vf1, 97: $Vg1, 98: $Vh1, 99: $V_, 100: $V$, 107: $V01, 108: $V11 }, o($V31, [2, 63]), o($V31, [2, 65], { 76: [1, 228] }), o($V31, [2, 67]), o($V31, [2, 68]), { 14: [1, 229] }, { 14: [1, 230] }, { 14: [1, 231] }, { 14: [1, 232] }, { 14: [1, 233] }, { 14: [1, 234] }, { 14: [1, 235] }, { 14: [1, 236] }, { 14: [1, 237] }, { 14: [1, 238] }, { 14: [1, 239] }, { 14: [1, 240] }, { 14: [1, 241] }, { 41: [1, 242] }, { 18: $VT, 72: 243, 73: 105, 74: $VS, 109: 104 }, o($VO, [2, 107]), { 18: $VT, 72: 244, 73: 105, 74: $VS, 109: 104 }, o($VO, [2, 108]), { 26: $VT, 72: 245, 73: 105, 74: $VS, 109: 104 }, { 65: [1, 246] }, { 18: $VT, 72: 247, 73: 105, 74: $VS, 109: 104 }, o($VO, [2, 110]), { 18: $VT, 72: 248, 73: 105, 74: $VS, 109: 104 }, o($VO, [2, 111]), { 18: $VT, 72: 249, 73: 105, 74: $VS, 109: 104 }, o($VO, [2, 112]), o($VO, [2, 55]), o($Vk1, $VT, { 68: 44, 69: 45, 109: 104, 73: 105, 40: 144, 72: 145, 71: 250, 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 74: $VS, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }), { 15: $Vq1, 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 254, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 74: [1, 252], 77: 251, 81: $Vr1, 83: $Vs1, 84: 258, 99: $V_, 100: $V$, 101: 253, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo, 107: $V01, 108: $V11 }, { 28: $VU, 122: 259 }, o($Vs, $VT, { 109: 104, 73: 105, 72: 260, 74: $VS }), o($Vm1, $VT, { 109: 104, 73: 105, 79: 154, 72: 155, 84: 159, 131: 261, 15: $VW, 45: $VX, 74: $VS, 81: $VY, 83: $VZ, 99: $V_, 100: $V$, 107: $V01, 108: $V11 }), o($Vk1, [2, 156], { 125: [1, 262] }), { 18: [1, 263], 26: [1, 264] }, o($Vm1, [2, 149]), o($Vm1, [2, 150]), o($V31, $Vn1, { 82: 265, 76: $Vo1 }), o($V31, $Vn1, { 82: 266, 76: $Vo1 }), o($V31, [2, 71]), o($V31, $Vn1, { 82: 267, 76: $Vo1 }), { 15: $Vq1, 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 254, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 77: 268, 81: $Vr1, 83: $Vs1, 84: 258, 99: $V_, 100: $V$, 101: 253, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo, 107: $V01, 108: $V11 }, o($V31, [2, 73]), { 127: [1, 269] }, o([18, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], $VP, { 125: [1, 270] }), { 19: 271, 20: [2, 21], 29: [1, 272] }, { 27: 273, 28: $V21 }, { 29: [1, 274] }, o($V31, [2, 62]), o($V31, [2, 64]), { 15: $Vq1, 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 254, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 77: 275, 81: $Vr1, 83: $Vs1, 84: 258, 99: $V_, 100: $V$, 101: 253, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo, 107: $V01, 108: $V11 }, { 14: [1, 276] }, { 14: [1, 277] }, { 14: [1, 278] }, { 14: [1, 279] }, { 14: [1, 280] }, { 14: [1, 281] }, { 14: [1, 282] }, { 14: [1, 283] }, { 14: [1, 284] }, { 14: [1, 285] }, { 14: [1, 286] }, { 14: [1, 287] }, { 14: [1, 288] }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 289, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 18: [1, 290] }, { 18: [1, 291] }, { 26: [1, 292] }, { 26: [1, 293] }, { 18: [1, 294] }, { 18: [1, 295] }, { 18: [1, 296] }, o($Vk1, [2, 57]), o($VQ, [2, 132]), { 15: $Vq1, 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 254, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 77: 297, 81: $Vr1, 83: $Vs1, 84: 258, 99: $V_, 100: $V$, 101: 253, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo, 107: $V01, 108: $V11 }, o($Vt1, [2, 94]), o($Vt1, [2, 95], { 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 49: $Vy, 50: $Vz, 51: $VA, 52: $VB, 53: $VC, 54: $VD, 55: $VE, 56: $VF, 57: $VG, 58: $VH, 59: $VI, 60: $VJ, 61: $VK, 62: $VL, 63: $VM }), { 15: [1, 298], 45: [1, 299] }, o($Vt1, [2, 98]), o($Vt1, $VT, { 109: 104, 73: 105, 72: 300, 74: $VS }), o($Vt1, [2, 100]), o($Vs, [2, 135]), o($Vs, [2, 137]), o($Vm1, [2, 147]), { 65: [1, 301] }, o($Vs, [2, 145]), { 65: [1, 302] }, o($V31, [2, 69]), o($V31, [2, 70]), o($V31, [2, 72]), { 78: [1, 303] }, o($VV, $VT, { 109: 104, 73: 105, 131: 152, 79: 154, 72: 155, 84: 159, 124: 304, 15: $VW, 45: $VX, 74: $VS, 81: $VY, 83: $VZ, 99: $V_, 100: $V$, 107: $V01, 108: $V11 }), { 65: [1, 305] }, { 20: [1, 306] }, { 30: [1, 307] }, o($Vk1, [2, 12]), { 30: [1, 308] }, { 78: [1, 309] }, { 15: $Vu1, 45: $Vv1, 86: 310, 99: $Vw1, 100: $Vx1 }, { 15: $Vu1, 45: $Vv1, 86: 315, 99: $Vw1, 100: $Vx1 }, { 15: $Vu1, 45: $Vv1, 86: 316, 99: $Vw1, 100: $Vx1 }, { 15: $Vu1, 45: $Vv1, 86: 317, 99: $Vw1, 100: $Vx1 }, { 15: $Vu1, 45: $Vv1, 86: 318, 99: $Vw1, 100: $Vx1 }, { 15: $Vu1, 45: $Vv1, 86: 319, 99: $Vw1, 100: $Vx1 }, { 15: $Vu1, 45: $Vv1, 86: 320, 99: $Vw1, 100: $Vx1 }, { 15: $Vu1, 45: $Vv1, 86: 321, 99: $Vw1, 100: $Vx1 }, { 15: $Vu1, 45: $Vv1, 86: 322, 99: $Vw1, 100: $Vx1 }, { 15: $Vu1, 45: $Vv1, 86: 323, 99: $Vw1, 100: $Vx1 }, { 15: $Vu1, 45: $Vv1, 86: 324, 99: $Vw1, 100: $Vx1 }, { 15: $Vu1, 45: $Vv1, 86: 325, 99: $Vw1, 100: $Vx1 }, { 15: $Vu1, 45: $Vv1, 86: 326, 99: $Vw1, 100: $Vx1 }, { 42: 327, 43: [2, 26], 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 49: $Vy, 50: $Vz, 51: $VA, 52: $VB, 53: $VC, 54: $VD, 55: $VE, 56: $VF, 57: $VG, 58: $VH, 59: $VI, 60: $VJ, 61: $VK, 62: $VL, 63: $VM }, o($VO, [2, 101]), o($VO, [2, 102]), { 65: [1, 328] }, { 65: [1, 329] }, o($VO, [2, 104]), o($VO, [2, 105]), o($VO, [2, 106]), o($VQ, [2, 133]), o($Vt1, [2, 96]), o($Vt1, [2, 97]), o($Vt1, [2, 99]), { 18: [1, 330] }, o($Vk1, [2, 155]), o($V31, [2, 92]), o($Vs, [2, 146], { 130: $Vl1 }), { 18: [1, 331] }, o([114, 132], $V4, { 112: 10, 113: 11, 21: 332, 37: 333, 38: 334, 7: 335, 39: $Vf, 123: $V5 }), { 14: [1, 336] }, { 14: [1, 337] }, o($V31, [2, 66]), o($V31, [2, 75]), o($V31, $Vn1, { 82: 338, 76: $Vo1 }), o($V31, $Vn1, { 82: 339, 76: $Vo1 }), o($V31, $Vn1, { 82: 340, 76: $Vo1 }), o($V31, $Vn1, { 82: 341, 76: $Vo1 }), o($V31, [2, 76]), o($V31, [2, 77]), o($V31, [2, 78]), o($V31, [2, 79]), o($V31, [2, 80]), o($V31, [2, 81]), o($V31, [2, 82]), o($V31, [2, 83]), o($V31, [2, 84]), o($V31, [2, 85]), o($V31, [2, 86]), o($V31, [2, 87]), { 43: [1, 342], 44: 343 }, { 26: [1, 344] }, { 18: [1, 345] }, o($Vs, [2, 144]), o($Vp1, [2, 139]), { 22: [1, 346] }, { 22: [2, 22] }, { 22: [2, 23] }, { 110: 347, 114: $V8, 132: $V9 }, { 31: 348, 32: $Vy1, 33: $Vz1, 34: $VA1, 35: $VB1, 36: $VC1 }, { 31: 354, 32: $Vy1, 33: $Vz1, 34: $VA1, 35: $VB1, 36: $VC1 }, o($V31, [2, 88]), o($V31, [2, 89]), o($V31, [2, 90]), o($V31, [2, 91]), { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 39: [1, 356], 40: 355, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 43: [2, 25] }, { 65: [1, 357] }, o($VO, [2, 109]), { 23: [1, 358] }, { 111: 359, 132: $Vb }, { 20: [2, 20] }, o($VD1, [2, 15]), o($VD1, [2, 16]), o($VD1, [2, 17]), o($VD1, [2, 18]), o($VD1, [2, 19]), o($Vk1, [2, 14]), o($Vt, [2, 24], { 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 49: $Vy, 50: $Vz, 51: $VA, 52: $VB, 53: $VC, 54: $VD, 55: $VE, 56: $VF, 57: $VG, 58: $VH, 59: $VI, 60: $VJ, 61: $VK, 62: $VL, 63: $VM }), { 16: [1, 360] }, { 18: [1, 361] }, o($V6, [2, 7]), { 22: [2, 121] }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 362, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, o($VO, [2, 103]), { 18: [1, 363], 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 49: $Vy, 50: $Vz, 51: $VA, 52: $VB, 53: $VC, 54: $VD, 55: $VE, 56: $VF, 57: $VG, 58: $VH, 59: $VI, 60: $VJ, 61: $VK, 62: $VL, 63: $VM }, { 41: [1, 364] }, { 16: $Vd, 24: $V7, 28: $VN, 33: $Ve, 40: 365, 64: $Vg, 65: $Vh, 66: $Vi, 67: $Vj, 68: 44, 69: 45, 102: $Vk, 103: $Vl, 104: $Vm, 105: $Vn, 106: $Vo }, { 43: [2, 27], 45: $Vu, 46: $Vv, 47: $Vw, 48: $Vx, 49: $Vy, 50: $Vz, 51: $VA, 52: $VB, 53: $VC, 54: $VD, 55: $VE, 56: $VF, 57: $VG, 58: $VH, 59: $VI, 60: $VJ, 61: $VK, 62: $VL, 63: $VM }],\r\n        defaultActions: { 8: [2, 1], 15: [2, 2], 16: [2, 157], 19: [2, 160], 25: [2, 9], 27: [2, 159], 35: [2, 158], 54: [2, 126], 57: [2, 129], 95: [2, 128], 333: [2, 22], 334: [2, 23], 343: [2, 25], 348: [2, 20], 359: [2, 121] },\r\n        parseError: function parseError(str, hash) {\r\n            if (hash.recoverable) {\r\n                this.trace(str);\r\n            }\r\n            else {\r\n                var error = new Error(str);\r\n                error.hash = hash;\r\n                throw error;\r\n            }\r\n        },\r\n        parse: function parse(input) {\r\n            var self = this, stack = [0], tstack = [], // token stack\r\n            vstack = [null], // semantic value stack\r\n            lstack = [], // location stack\r\n            table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n            var args = lstack.slice.call(arguments, 1);\r\n            //this.reductionCount = this.shiftCount = 0;\r\n            var lexer = Object.create(this.lexer);\r\n            var sharedState = { yy: {} };\r\n            // copy state\r\n            for (var k in this.yy) {\r\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n                    sharedState.yy[k] = this.yy[k];\r\n                }\r\n            }\r\n            lexer.setInput(input, sharedState.yy);\r\n            sharedState.yy.lexer = lexer;\r\n            sharedState.yy.parser = this;\r\n            if (typeof lexer.yylloc == 'undefined') {\r\n                lexer.yylloc = {};\r\n            }\r\n            var yyloc = lexer.yylloc;\r\n            lstack.push(yyloc);\r\n            var ranges = lexer.options && lexer.options.ranges;\r\n            if (typeof sharedState.yy.parseError === 'function') {\r\n                this.parseError = sharedState.yy.parseError;\r\n            }\r\n            else {\r\n                this.parseError = Object.getPrototypeOf(this).parseError;\r\n            }\r\n            function popStack(n) {\r\n                stack.length = stack.length - 2 * n;\r\n                vstack.length = vstack.length - n;\r\n                lstack.length = lstack.length - n;\r\n            }\r\n            _token_stack: var lex = function () {\r\n                var token;\r\n                token = lexer.lex() || EOF;\r\n                // if token isn't its numeric value, convert\r\n                if (typeof token !== 'number') {\r\n                    token = self.symbols_[token] || token;\r\n                }\r\n                return token;\r\n            };\r\n            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n            while (true) {\r\n                // retreive state number from top of stack\r\n                state = stack[stack.length - 1];\r\n                // use default actions if available\r\n                if (this.defaultActions[state]) {\r\n                    action = this.defaultActions[state];\r\n                }\r\n                else {\r\n                    if (symbol === null || typeof symbol == 'undefined') {\r\n                        symbol = lex();\r\n                    }\r\n                    // read action for current state and first input\r\n                    action = table[state] && table[state][symbol];\r\n                }\r\n                _handle_error: \r\n                // handle parse error\r\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                    var error_rule_depth;\r\n                    var errStr = '';\r\n                    // Return the rule stack depth where the nearest error rule can be found.\r\n                    // Return FALSE when no error recovery rule was found.\r\n                    function locateNearestErrorRecoveryRule(state) {\r\n                        var stack_probe = stack.length - 1;\r\n                        var depth = 0;\r\n                        // try to recover from error\r\n                        for (;;) {\r\n                            // check for error recovery rule in this state\r\n                            if ((TERROR.toString()) in table[state]) {\r\n                                return depth;\r\n                            }\r\n                            if (state === 0 || stack_probe < 2) {\r\n                                return false; // No suitable error recovery rule available.\r\n                            }\r\n                            stack_probe -= 2; // popStack(1): [symbol, action]\r\n                            state = stack[stack_probe];\r\n                            ++depth;\r\n                        }\r\n                    }\r\n                    if (!recovering) {\r\n                        // first see if there's any chance at hitting an error recovery rule:\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                        // Report error\r\n                        expected = [];\r\n                        for (p in table[state]) {\r\n                            if (this.terminals_[p] && p > TERROR) {\r\n                                expected.push(\"'\" + this.terminals_[p] + \"'\");\r\n                            }\r\n                        }\r\n                        if (lexer.showPosition) {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \":\\n\" + lexer.showPosition() + \"\\nExpecting \" + expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\r\n                        }\r\n                        else {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \": Unexpected \" +\r\n                                (symbol == EOF ? \"end of input\" :\r\n                                    (\"'\" + (this.terminals_[symbol] || symbol) + \"'\"));\r\n                        }\r\n                        this.parseError(errStr, {\r\n                            text: lexer.match,\r\n                            token: this.terminals_[symbol] || symbol,\r\n                            line: lexer.yylineno,\r\n                            loc: yyloc,\r\n                            expected: expected,\r\n                            recoverable: (error_rule_depth !== false)\r\n                        });\r\n                    }\r\n                    else if (preErrorSymbol !== EOF) {\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                    }\r\n                    // just recovered from another error\r\n                    if (recovering == 3) {\r\n                        if (symbol === EOF || preErrorSymbol === EOF) {\r\n                            throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                        }\r\n                        // discard current lookahead and grab another\r\n                        yyleng = lexer.yyleng;\r\n                        yytext = lexer.yytext;\r\n                        yylineno = lexer.yylineno;\r\n                        yyloc = lexer.yylloc;\r\n                        symbol = lex();\r\n                    }\r\n                    // try to recover from error\r\n                    if (error_rule_depth === false) {\r\n                        throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n                    }\r\n                    popStack(error_rule_depth);\r\n                    preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n                    symbol = TERROR; // insert generic error symbol as new lookahead\r\n                    state = stack[stack.length - 1];\r\n                    action = table[state] && table[state][TERROR];\r\n                    recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n                }\r\n                // this shouldn't happen, unless resolve defaults are off\r\n                if (action[0] instanceof Array && action.length > 1) {\r\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n                }\r\n                switch (action[0]) {\r\n                    case 1: // shift\r\n                        //this.shiftCount++;\r\n                        stack.push(symbol);\r\n                        vstack.push(lexer.yytext);\r\n                        lstack.push(lexer.yylloc);\r\n                        stack.push(action[1]); // push state\r\n                        symbol = null;\r\n                        if (!preErrorSymbol) { // normal execution/no error\r\n                            yyleng = lexer.yyleng;\r\n                            yytext = lexer.yytext;\r\n                            yylineno = lexer.yylineno;\r\n                            yyloc = lexer.yylloc;\r\n                            if (recovering > 0) {\r\n                                recovering--;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // error just occurred, resume old lookahead f/ before error\r\n                            symbol = preErrorSymbol;\r\n                            preErrorSymbol = null;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        // reduce\r\n                        //this.reductionCount++;\r\n                        len = this.productions_[action[1]][1];\r\n                        // perform semantic action\r\n                        yyval.$ = vstack[vstack.length - len]; // default to $$ = $1\r\n                        // default location, uses first token for firsts, last for lasts\r\n                        yyval._$ = {\r\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                            last_line: lstack[lstack.length - 1].last_line,\r\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                            last_column: lstack[lstack.length - 1].last_column\r\n                        };\r\n                        if (ranges) {\r\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\r\n                        }\r\n                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n                        if (typeof r !== 'undefined') {\r\n                            return r;\r\n                        }\r\n                        // pop off stack\r\n                        if (len) {\r\n                            stack = stack.slice(0, -1 * len * 2);\r\n                            vstack = vstack.slice(0, -1 * len);\r\n                            lstack = lstack.slice(0, -1 * len);\r\n                        }\r\n                        stack.push(this.productions_[action[1]][0]); // push nonterminal (reduce)\r\n                        vstack.push(yyval.$);\r\n                        lstack.push(yyval._$);\r\n                        // goto new state = table[STATE][NONTERMINAL]\r\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n                        stack.push(newState);\r\n                        break;\r\n                    case 3:\r\n                        // accept\r\n                        return true;\r\n                }\r\n            }\r\n            return true;\r\n        } };\r\n    //const Nodo = require(\"./AST/nodo_arbol\");\r\n    //var raiz;\r\n    const { Primitiva } = require(\"../Expresiones/Primitiva\");\r\n    const { Operacion } = require(\"../Expresiones/Operacion\");\r\n    const { Consulta } = require(\"../XPath/Consulta\");\r\n    const { Nodo } = require(\"../XPath/Nodo\");\r\n    const { Predicate } = require(\"../XPath/Predicate\");\r\n    const { TipoPrim } = require(\"../Expresiones/Primitiva\");\r\n    const { TipoOperacion } = require(\"../Expresiones/Operacion\");\r\n    const { TipoNodo } = require(\"../XPath/Nodo\");\r\n    const { TipoAxis } = require(\"../XPath/Nodo\");\r\n    const errores = require('../Global/ListaError');\r\n    //IMPORTS XQUERY\r\n    const { Flwor } = require(\"../XQuery/Flwor\");\r\n    const { Return } = require(\"../XQuery/Return\");\r\n    const { TipoReturn } = require(\"../XQuery/Return\");\r\n    const { Where } = require(\"../XQuery/Where\");\r\n    const { For } = require(\"../XQuery/For\");\r\n    const { Let } = require(\"../XQuery/Let\");\r\n    const { OrderBy } = require(\"../XQuery/OrderBy\");\r\n    const { TipoFor } = require(\"../XQuery/DeclaracionFor\");\r\n    const { DeclaracionFor } = require(\"../XQuery/DeclaracionFor\");\r\n    const { Sort } = require(\"../XQuery/Sort\");\r\n    const { CondicionIf } = require(\"../XQuery/CondicionIf\");\r\n    const { FuncionXQuery } = require(\"../XQuery/FuncionXQuery\");\r\n    const { Html } = require(\"../XQuery/Html\");\r\n    const { IfThenElse } = require(\"../XQuery/IfThenElse\");\r\n    const { ElseIf } = require(\"../XQuery/ElseIf\");\r\n    const { VarCall } = require(\"../XQuery/VarCall\");\r\n    const { TipoFuncionXQ } = require(\"../XQuery/FuncionXQuery\");\r\n    const { Atributo } = require(\"../XML/Atributo\");\r\n    const { UserFunction } = require(\"../XQuery/UserFunction\");\r\n    const { Llamada } = require(\"../XQuery/Llamada\");\r\n    /* generated by jison-lex 0.3.4 */\r\n    var lexer = (function () {\r\n        var lexer = ({\r\n            EOF: 1,\r\n            parseError: function parseError(str, hash) {\r\n                if (this.yy.parser) {\r\n                    this.yy.parser.parseError(str, hash);\r\n                }\r\n                else {\r\n                    throw new Error(str);\r\n                }\r\n            },\r\n            // resets the lexer, sets new input\r\n            setInput: function (input, yy) {\r\n                this.yy = yy || this.yy || {};\r\n                this._input = input;\r\n                this._more = this._backtrack = this.done = false;\r\n                this.yylineno = this.yyleng = 0;\r\n                this.yytext = this.matched = this.match = '';\r\n                this.conditionStack = ['INITIAL'];\r\n                this.yylloc = {\r\n                    first_line: 1,\r\n                    first_column: 0,\r\n                    last_line: 1,\r\n                    last_column: 0\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [0, 0];\r\n                }\r\n                this.offset = 0;\r\n                return this;\r\n            },\r\n            // consumes and returns one char from the input\r\n            input: function () {\r\n                var ch = this._input[0];\r\n                this.yytext += ch;\r\n                this.yyleng++;\r\n                this.offset++;\r\n                this.match += ch;\r\n                this.matched += ch;\r\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno++;\r\n                    this.yylloc.last_line++;\r\n                }\r\n                else {\r\n                    this.yylloc.last_column++;\r\n                }\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range[1]++;\r\n                }\r\n                this._input = this._input.slice(1);\r\n                return ch;\r\n            },\r\n            // unshifts one char (or a string) into the input\r\n            unput: function (ch) {\r\n                var len = ch.length;\r\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n                this._input = ch + this._input;\r\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n                //this.yyleng -= len;\r\n                this.offset -= len;\r\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n                this.match = this.match.substr(0, this.match.length - 1);\r\n                this.matched = this.matched.substr(0, this.matched.length - 1);\r\n                if (lines.length - 1) {\r\n                    this.yylineno -= lines.length - 1;\r\n                }\r\n                var r = this.yylloc.range;\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: lines ?\r\n                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                            + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n                        this.yylloc.first_column - len\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n                }\r\n                this.yyleng = this.yytext.length;\r\n                return this;\r\n            },\r\n            // When called from action, caches matched text and appends it on next action\r\n            more: function () {\r\n                this._more = true;\r\n                return this;\r\n            },\r\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n            reject: function () {\r\n                if (this.options.backtrack_lexer) {\r\n                    this._backtrack = true;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n                return this;\r\n            },\r\n            // retain first n characters of the match\r\n            less: function (n) {\r\n                this.unput(this.match.slice(n));\r\n            },\r\n            // displays already matched input, i.e. for error messages\r\n            pastInput: function () {\r\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\r\n            },\r\n            // displays upcoming input, i.e. for error messages\r\n            upcomingInput: function () {\r\n                var next = this.match;\r\n                if (next.length < 20) {\r\n                    next += this._input.substr(0, 20 - next.length);\r\n                }\r\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n            },\r\n            // displays the character position where the lexing error occurred, i.e. for error messages\r\n            showPosition: function () {\r\n                var pre = this.pastInput();\r\n                var c = new Array(pre.length + 1).join(\"-\");\r\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n            },\r\n            // test the lexed token: return FALSE when not a match, otherwise return token\r\n            test_match: function (match, indexed_rule) {\r\n                var token, lines, backup;\r\n                if (this.options.backtrack_lexer) {\r\n                    // save context\r\n                    backup = {\r\n                        yylineno: this.yylineno,\r\n                        yylloc: {\r\n                            first_line: this.yylloc.first_line,\r\n                            last_line: this.last_line,\r\n                            first_column: this.yylloc.first_column,\r\n                            last_column: this.yylloc.last_column\r\n                        },\r\n                        yytext: this.yytext,\r\n                        match: this.match,\r\n                        matches: this.matches,\r\n                        matched: this.matched,\r\n                        yyleng: this.yyleng,\r\n                        offset: this.offset,\r\n                        _more: this._more,\r\n                        _input: this._input,\r\n                        yy: this.yy,\r\n                        conditionStack: this.conditionStack.slice(0),\r\n                        done: this.done\r\n                    };\r\n                    if (this.options.ranges) {\r\n                        backup.yylloc.range = this.yylloc.range.slice(0);\r\n                    }\r\n                }\r\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno += lines.length;\r\n                }\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.last_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.last_column,\r\n                    last_column: lines ?\r\n                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                        this.yylloc.last_column + match[0].length\r\n                };\r\n                this.yytext += match[0];\r\n                this.match += match[0];\r\n                this.matches = match;\r\n                this.yyleng = this.yytext.length;\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n                }\r\n                this._more = false;\r\n                this._backtrack = false;\r\n                this._input = this._input.slice(match[0].length);\r\n                this.matched += match[0];\r\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n                if (this.done && this._input) {\r\n                    this.done = false;\r\n                }\r\n                if (token) {\r\n                    return token;\r\n                }\r\n                else if (this._backtrack) {\r\n                    // recover context\r\n                    for (var k in backup) {\r\n                        this[k] = backup[k];\r\n                    }\r\n                    return false; // rule action called reject() implying the next rule should be tested instead.\r\n                }\r\n                return false;\r\n            },\r\n            // return next match in input\r\n            next: function () {\r\n                if (this.done) {\r\n                    return this.EOF;\r\n                }\r\n                if (!this._input) {\r\n                    this.done = true;\r\n                }\r\n                var token, match, tempMatch, index;\r\n                if (!this._more) {\r\n                    this.yytext = '';\r\n                    this.match = '';\r\n                }\r\n                var rules = this._currentRules();\r\n                for (var i = 0; i < rules.length; i++) {\r\n                    tempMatch = this._input.match(this.rules[rules[i]]);\r\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                        match = tempMatch;\r\n                        index = i;\r\n                        if (this.options.backtrack_lexer) {\r\n                            token = this.test_match(tempMatch, rules[i]);\r\n                            if (token !== false) {\r\n                                return token;\r\n                            }\r\n                            else if (this._backtrack) {\r\n                                match = false;\r\n                                continue; // rule action called reject() implying a rule MISmatch.\r\n                            }\r\n                            else {\r\n                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else if (!this.options.flex) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (match) {\r\n                    token = this.test_match(match, rules[index]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    }\r\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                    return false;\r\n                }\r\n                if (this._input === \"\") {\r\n                    return this.EOF;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n            },\r\n            // return next match that has a token\r\n            lex: function lex() {\r\n                var r = this.next();\r\n                if (r) {\r\n                    return r;\r\n                }\r\n                else {\r\n                    return this.lex();\r\n                }\r\n            },\r\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n            begin: function begin(condition) {\r\n                this.conditionStack.push(condition);\r\n            },\r\n            // pop the previously active lexer condition state off the condition stack\r\n            popState: function popState() {\r\n                var n = this.conditionStack.length - 1;\r\n                if (n > 0) {\r\n                    return this.conditionStack.pop();\r\n                }\r\n                else {\r\n                    return this.conditionStack[0];\r\n                }\r\n            },\r\n            // produce the lexer rule set which is active for the currently active lexer condition state\r\n            _currentRules: function _currentRules() {\r\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n                }\r\n                else {\r\n                    return this.conditions[\"INITIAL\"].rules;\r\n                }\r\n            },\r\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n            topState: function topState(n) {\r\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n                if (n >= 0) {\r\n                    return this.conditionStack[n];\r\n                }\r\n                else {\r\n                    return \"INITIAL\";\r\n                }\r\n            },\r\n            // alias for begin(condition)\r\n            pushState: function pushState(condition) {\r\n                this.begin(condition);\r\n            },\r\n            // return the number of states currently on the stack\r\n            stateStackSize: function stateStackSize() {\r\n                return this.conditionStack.length;\r\n            },\r\n            options: { \"case-insensitive\": true },\r\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n                var YYSTATE = YY_START;\r\n                switch ($avoiding_name_collisions) {\r\n                    case 0: /* skip whitespace */\r\n                        break;\r\n                    case 1:\r\n                        this.begin('comment');\r\n                        break;\r\n                    case 2:\r\n                        this.popState();\r\n                        break;\r\n                    case 3: /* skip comment content*/\r\n                        break;\r\n                    case 4:\r\n                        return 28;\r\n                        break;\r\n                    case 5:\r\n                        return 53;\r\n                        break;\r\n                    case 6:\r\n                        return 74;\r\n                        break;\r\n                    case 7:\r\n                        return \"dot\";\r\n                        break;\r\n                    case 8:\r\n                        return \"attr\";\r\n                        break;\r\n                    case 9:\r\n                        return \"corA\";\r\n                        break;\r\n                    case 10:\r\n                        return \"corC\";\r\n                        break;\r\n                    case 11:\r\n                        return \"andSelect\";\r\n                        break;\r\n                    case 12:\r\n                        return \"dospuntos\";\r\n                        break;\r\n                    case 13:\r\n                        return \"parA\";\r\n                        break;\r\n                    case 14:\r\n                        return \"parC\";\r\n                        break;\r\n                    case 15:\r\n                        return \"llaveA\";\r\n                        break;\r\n                    case 16:\r\n                        return \"llaveC\";\r\n                        break;\r\n                    case 17:\r\n                        return \"coma\";\r\n                        break;\r\n                    case 18:\r\n                        return \"puntocoma\";\r\n                        break;\r\n                    case 19:\r\n                        return 45;\r\n                        break;\r\n                    case 20:\r\n                        return \"mas\";\r\n                        break;\r\n                    case 21:\r\n                        return \"menos\";\r\n                        break;\r\n                    case 22:\r\n                        return \"div\";\r\n                        break;\r\n                    case 23:\r\n                        return 49;\r\n                        break;\r\n                    case 24:\r\n                        return \"gte\";\r\n                        break;\r\n                    case 25:\r\n                        return 50;\r\n                        break;\r\n                    case 26:\r\n                        return 52;\r\n                        break;\r\n                    case 27:\r\n                        return \"nequal\";\r\n                        break;\r\n                    case 28:\r\n                        return \"or\";\r\n                        break;\r\n                    case 29:\r\n                        return \"and\";\r\n                        break;\r\n                    case 30:\r\n                        return \"mod\";\r\n                        break;\r\n                    case 31:\r\n                        return \"for\";\r\n                        break;\r\n                    case 32:\r\n                        return \"in\";\r\n                        break;\r\n                    case 33:\r\n                        return \"to\";\r\n                        break;\r\n                    case 34:\r\n                        return \"at\";\r\n                        break;\r\n                    case 35:\r\n                        return \"let\";\r\n                        break;\r\n                    case 36:\r\n                        return \"where\";\r\n                        break;\r\n                    case 37:\r\n                        return \"order\";\r\n                        break;\r\n                    case 38:\r\n                        return \"by\";\r\n                        break;\r\n                    case 39:\r\n                        return \"return\";\r\n                        break;\r\n                    case 40:\r\n                        return \"if\";\r\n                        break;\r\n                    case 41:\r\n                        return \"else\";\r\n                        break;\r\n                    case 42:\r\n                        return \"then\";\r\n                        break;\r\n                    case 43:\r\n                        return \"reserv_eq\";\r\n                        break;\r\n                    case 44:\r\n                        return \"reserv_gt\";\r\n                        break;\r\n                    case 45:\r\n                        return \"reserv_ge\";\r\n                        break;\r\n                    case 46:\r\n                        return \"reserv_ne\";\r\n                        break;\r\n                    case 47:\r\n                        return \"reserv_le\";\r\n                        break;\r\n                    case 48:\r\n                        return \"reserv_lt\";\r\n                        break;\r\n                    case 49:\r\n                        return \"ancestorSelf\";\r\n                        break;\r\n                    case 50:\r\n                        return \"ancestor\";\r\n                        break;\r\n                    case 51:\r\n                        return \"attribute\";\r\n                        break;\r\n                    case 52:\r\n                        return \"child\";\r\n                        break;\r\n                    case 53:\r\n                        return \"descendantSelf\";\r\n                        break;\r\n                    case 54:\r\n                        return \"descendant\";\r\n                        break;\r\n                    case 55:\r\n                        return \"followingSib\";\r\n                        break;\r\n                    case 56:\r\n                        return \"following\";\r\n                        break;\r\n                    case 57:\r\n                        return \"namespace\";\r\n                        break;\r\n                    case 58:\r\n                        return \"parent\";\r\n                        break;\r\n                    case 59:\r\n                        return \"precedSib\";\r\n                        break;\r\n                    case 60:\r\n                        return \"preced\";\r\n                        break;\r\n                    case 61:\r\n                        return \"self\";\r\n                        break;\r\n                    case 62:\r\n                        return \"data\";\r\n                        break;\r\n                    case 63:\r\n                        return \"upper-case\";\r\n                        break;\r\n                    case 64:\r\n                        return \"substring\";\r\n                        break;\r\n                    case 65:\r\n                        return \"lower-case\";\r\n                        break;\r\n                    case 66:\r\n                        return \"number\";\r\n                        break;\r\n                    case 67:\r\n                        return \"declare\";\r\n                        break;\r\n                    case 68:\r\n                        return \"function\";\r\n                        break;\r\n                    case 69:\r\n                        return \"local\";\r\n                        break;\r\n                    case 70:\r\n                        return \"decimal\";\r\n                        break;\r\n                    case 71:\r\n                        return \"string\";\r\n                        break;\r\n                    case 72:\r\n                        return \"boolean\";\r\n                        break;\r\n                    case 73:\r\n                        return \"integer\";\r\n                        break;\r\n                    case 74:\r\n                        return \"as\";\r\n                        break;\r\n                    case 75:\r\n                        return \"xs\";\r\n                        break;\r\n                    case 76:\r\n                        return \"lastFunc\";\r\n                        break;\r\n                    case 77:\r\n                        return \"positionFunc\";\r\n                        break;\r\n                    case 78:\r\n                        return \"nodeFunc\";\r\n                        break;\r\n                    case 79:\r\n                        return \"textFunc\";\r\n                        break;\r\n                    case 80:\r\n                        return 64;\r\n                        break;\r\n                    case 81:\r\n                        return 65;\r\n                        break;\r\n                    case 82:\r\n                        return 15;\r\n                        break;\r\n                    case 83:\r\n                        return 66;\r\n                        break;\r\n                    case 84:\r\n                        return 67;\r\n                        break;\r\n                    case 85:\r\n                        console.error('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                        break;\r\n                    case 86:\r\n                        return 5;\r\n                        break;\r\n                }\r\n            },\r\n            rules: [/^(?:\\s+)/i, /^(?:\\(:)/i, /^(?::\\))/i, /^(?:.)/i, /^(?:\\$)/i, /^(?:=)/i, /^(?:\\/)/i, /^(?:\\.)/i, /^(?:@)/i, /^(?:\\[)/i, /^(?:\\])/i, /^(?:\\|)/i, /^(?::)/i, /^(?:\\()/i, /^(?:\\))/i, /^(?:\\{)/i, /^(?:\\})/i, /^(?:,)/i, /^(?:;)/i, /^(?:\\*)/i, /^(?:\\+)/i, /^(?:-)/i, /^(?:div\\b)/i, /^(?:<=)/i, /^(?:>=)/i, /^(?:<)/i, /^(?:>)/i, /^(?:!=)/i, /^(?:or\\b)/i, /^(?:and\\b)/i, /^(?:mod\\b)/i, /^(?:for\\b)/i, /^(?:in\\b)/i, /^(?:to\\b)/i, /^(?:at\\b)/i, /^(?:let\\b)/i, /^(?:where\\b)/i, /^(?:order\\b)/i, /^(?:by\\b)/i, /^(?:return\\b)/i, /^(?:if\\b)/i, /^(?:else\\b)/i, /^(?:then\\b)/i, /^(?:eq\\b)/i, /^(?:gt\\b)/i, /^(?:ge\\b)/i, /^(?:ne\\b)/i, /^(?:le\\b)/i, /^(?:lt\\b)/i, /^(?:ancestor-or-self\\b)/i, /^(?:ancestor\\b)/i, /^(?:attribute\\b)/i, /^(?:child\\b)/i, /^(?:descendant-or-self\\b)/i, /^(?:descendant\\b)/i, /^(?:following-sibling\\b)/i, /^(?:following\\b)/i, /^(?:namespace\\b)/i, /^(?:parent\\b)/i, /^(?:preceding-sibling\\b)/i, /^(?:preceding\\b)/i, /^(?:self\\b)/i, /^(?:data\\b)/i, /^(?:upper-case\\b)/i, /^(?:substring\\b)/i, /^(?:lower-case\\b)/i, /^(?:number\\b)/i, /^(?:declare\\b)/i, /^(?:function\\b)/i, /^(?:local\\b)/i, /^(?:decimal\\b)/i, /^(?:string\\b)/i, /^(?:boolean\\b)/i, /^(?:integer\\b)/i, /^(?:as\\b)/i, /^(?:xs\\b)/i, /^(?:last\\(\\))/i, /^(?:position\\(\\))/i, /^(?:node\\(\\))/i, /^(?:text\\(\\))/i, /^(?:(([0-9]+\\.[0-9]*)|(\\.[0-9]+)))/i, /^(?:[0-9]+)/i, /^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ.-]*)/i, /^(?:(\"((\\\\([\\'\\\"\\\\]))|([^\\\"\\\\]+))*\"))/i, /^(?:('((\\\\([\\'\\\"\\\\]))|([^\\'\\\\]))*'))/i, /^(?:.)/i, /^(?:$)/i],\r\n            conditions: { \"comment\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], \"inclusive\": true }, \"INITIAL\": { \"rules\": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], \"inclusive\": true } }\r\n        });\r\n        return lexer;\r\n    })();\r\n    parser.lexer = lexer;\r\n    function Parser() {\r\n        this.yy = {};\r\n    }\r\n    Parser.prototype = parser;\r\n    parser.Parser = Parser;\r\n    return new Parser;\r\n})();\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\n    exports.parser = XQuery;\r\n    exports.Parser = XQuery.Parser;\r\n    exports.parse = function () { return XQuery.parse.apply(XQuery, arguments); };\r\n    exports.main = function commonjsMain(args) {\r\n        if (!args[1]) {\r\n            console.log('Usage: ' + args[0] + ' FILE');\r\n            process.exit(1);\r\n        }\r\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n        return exports.parser.parse(source);\r\n    };\r\n    if (typeof module !== 'undefined' && require.main === module) {\r\n        exports.main(process.argv.slice(1));\r\n    }\r\n}\r\n","export class Nodo {\r\n    constructor(id, valor, padre, hijos) {\r\n        this.id = id;\r\n        this.valor = valor;\r\n        this.padre = padre;\r\n        this.hijos = hijos;\r\n        this.hijos.forEach((hijo) => {\r\n            hijo.setPadre(this);\r\n        });\r\n    }\r\n    agregarHijo(hijo) {\r\n        this.hijos.push(hijo);\r\n    }\r\n    setPadre(padre) {\r\n        this.padre = padre;\r\n    }\r\n}\r\n","import { Consulta } from \"../XPath/Consulta\";\r\nexport class Return {\r\n    constructor(tipoRet, identificador, listaNodos, html, ifthen, funcion, linea, columna) {\r\n        this.tipo = tipoRet;\r\n        this.funcion = funcion;\r\n        this.html = html;\r\n        this.listaNodos = listaNodos;\r\n        this.identificador = identificador;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.ifthen = ifthen;\r\n    }\r\n    ejecutar(XQEnt, xmlEnt) {\r\n        //Ej: return $x/book\r\n        //1. Buscar variable $id\r\n        let pruebaReturn = \"\";\r\n        let listaReturn = [];\r\n        if (this.tipo === TipoReturn.NORMAL && this.identificador != undefined) {\r\n            console.log(\"Return normal.\");\r\n            let ListaSimb = XQEnt.obtenerSimbolo(this.identificador);\r\n            if (ListaSimb != null) {\r\n                console.log(\"LISTAISMB:\", ListaSimb);\r\n                if (this.listaNodos != undefined && this.listaNodos.length > 0) {\r\n                    let temp = new Consulta(this.listaNodos, this.linea, this.columna);\r\n                    ListaSimb.valor.forEach((simb) => {\r\n                        let auxEntorno = simb.valor;\r\n                        listaReturn = listaReturn.concat((temp.ejecutar(auxEntorno)));\r\n                    });\r\n                    pruebaReturn += temp.simbolosToString(listaReturn);\r\n                }\r\n                else {\r\n                    let temp = new Consulta([], this.linea, this.columna);\r\n                    pruebaReturn += temp.simbolosToString(ListaSimb.valor);\r\n                }\r\n            }\r\n            else {\r\n                console.log(\"ERROR - El simbolo: $\", this.identificador, \" no existe.\");\r\n            }\r\n        }\r\n        else if (this.tipo === TipoReturn.FUNCIONXQUERY && this.funcion != undefined) {\r\n            let temp = new Consulta([], this.linea, this.columna);\r\n            pruebaReturn += temp.simbolosToString(this.funcion.getValor(XQEnt).valor);\r\n        }\r\n        else if (this.tipo === TipoReturn.IFTHENELSE && this.ifthen != undefined) {\r\n            let nue = this.ifthen.ejecutar(XQEnt, xmlEnt);\r\n            let temp = new Consulta([], this.linea, this.columna);\r\n            pruebaReturn += temp.simbolosToString(nue);\r\n        }\r\n        return pruebaReturn;\r\n    }\r\n}\r\nexport var TipoReturn;\r\n(function (TipoReturn) {\r\n    TipoReturn[TipoReturn[\"NORMAL\"] = 0] = \"NORMAL\";\r\n    TipoReturn[TipoReturn[\"HTML\"] = 1] = \"HTML\";\r\n    TipoReturn[TipoReturn[\"IFTHENELSE\"] = 2] = \"IFTHENELSE\";\r\n    TipoReturn[TipoReturn[\"FUNCIONXQUERY\"] = 3] = \"FUNCIONXQUERY\";\r\n})(TipoReturn || (TipoReturn = {}));\r\n","import { Simbolo } from \"../AST/Simbolo\";\r\nimport { Tipo } from \"../AST/Tipo\";\r\nexport class DeclaracionFor {\r\n    constructor(tipo, identificador, consultas, linea, columna, at, desde, hasta, listaEnteros) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.listaEnteros = listaEnteros;\r\n        this.tipo = tipo;\r\n        this.identificador = identificador;\r\n        this.consultas = consultas;\r\n        this.desde = desde;\r\n        this.hasta = hasta;\r\n        this.at = at;\r\n    }\r\n    getTipo() {\r\n        return this.tipo;\r\n    }\r\n    TipoToString() {\r\n        switch (this.tipo) {\r\n            case TipoFor.NORMAL:\r\n                return \"Normal\";\r\n            case TipoFor.ITERATIVO:\r\n                return \"Iterativo\";\r\n            case TipoFor.AT:\r\n                return \"At\";\r\n        }\r\n    }\r\n    ejecutar(XQueryEnt, xmlEnt) {\r\n        let listaSimbolos = [];\r\n        let newSimb;\r\n        switch (this.tipo) {\r\n            case TipoFor.NORMAL:\r\n                //ej: $x in /bookstore/book/asd\r\n                console.log(\"for Normal\");\r\n                if (this.consultas != null) {\r\n                    this.consultas.forEach((consulta) => {\r\n                        listaSimbolos = listaSimbolos.concat(consulta.ejecutar(xmlEnt));\r\n                    });\r\n                }\r\n                //A la variable $x (identificador) asignarle estos simbolos.\r\n                newSimb = new Simbolo(Tipo.XQ_VAR, this.identificador, listaSimbolos, this.linea, this.columna);\r\n                XQueryEnt.agregarSimbolo(this.identificador, newSimb);\r\n                break;\r\n            case TipoFor.ITERATIVO:\r\n                //ej: $x in (3 to 5) o $x in (3, 4, 10, 200, 2, 1)\r\n                if (this.desde && this.hasta != null) {\r\n                    for (let i = this.desde; i <= this.hasta; i++) {\r\n                        listaSimbolos.push(i);\r\n                    }\r\n                    let newSimb = new Simbolo(Tipo.XQ_VAR, this.identificador, listaSimbolos, this.linea, this.columna);\r\n                    XQueryEnt.agregarSimbolo(this.identificador, newSimb);\r\n                }\r\n                else if (this.listaEnteros != undefined) {\r\n                    let newSimb = new Simbolo(Tipo.XQ_VAR, this.identificador, this.listaEnteros, this.linea, this.columna);\r\n                    XQueryEnt.agregarSimbolo(this.identificador, newSimb);\r\n                }\r\n                break;\r\n            case TipoFor.AT:\r\n                //ej: $x at $i in /bookstore/book/asd <-- $i, counts the iteration.\r\n                let contador = 0;\r\n                if (this.consultas != null) {\r\n                    this.consultas.forEach((consulta) => {\r\n                        let resp = consulta.ejecutar(xmlEnt);\r\n                        contador += resp.length;\r\n                        listaSimbolos = listaSimbolos.concat(resp);\r\n                    });\r\n                }\r\n                //A la variable '$i' asignarle la longitud de mis consultas de resultado.\r\n                let simbI = new Simbolo(Tipo.XQ_NUMB, this.identificador, contador, this.linea, this.columna);\r\n                //A la variable $x (identificador) asignarle estos simbolos.\r\n                newSimb = new Simbolo(Tipo.XQ_VAR, this.identificador, listaSimbolos, this.linea, this.columna);\r\n                XQueryEnt.agregarSimbolo(this.identificador, newSimb);\r\n                break;\r\n        }\r\n    }\r\n}\r\nexport var TipoFor;\r\n(function (TipoFor) {\r\n    TipoFor[TipoFor[\"NORMAL\"] = 0] = \"NORMAL\";\r\n    TipoFor[TipoFor[\"ITERATIVO\"] = 1] = \"ITERATIVO\";\r\n    TipoFor[TipoFor[\"AT\"] = 2] = \"AT\";\r\n})(TipoFor || (TipoFor = {}));\r\n","import { Simbolo } from \"../AST/Simbolo\";\r\nimport { Tipo } from \"../AST/Tipo\";\r\nimport { Consulta } from \"../XPath/Consulta\";\r\nexport class FuncionXQuery {\r\n    constructor(tipoFuncion, identificador, listaNodos, linea, columna, desde, hasta, otraFuncion) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.tipo = tipoFuncion;\r\n        this.identificador = identificador;\r\n        this.listaNodos = listaNodos;\r\n        this.desde = desde;\r\n        this.hasta = hasta;\r\n        this.otraFuncion = otraFuncion;\r\n    }\r\n    getTipo() {\r\n        return this.tipo;\r\n    }\r\n    getSobreEntornoXML(entorno) {\r\n        let ls = [];\r\n        if (this.identificador != undefined) {\r\n            if (this.listaNodos != undefined && this.listaNodos.length > 0) {\r\n                let consTemp = new Consulta(this.listaNodos, this.linea, this.columna);\r\n                let temp = consTemp.ejecutar(entorno);\r\n                temp.forEach((s) => {\r\n                    let test = s.valor;\r\n                    if (this.tipo != TipoFuncionXQ.DATA) {\r\n                        //Para cada et buscar si tiene texto.\r\n                        this.reemplazarTexto(test);\r\n                    }\r\n                    ls = ls.concat(this.getOnlyTextos(test));\r\n                });\r\n            }\r\n            else {\r\n                if (this.tipo != TipoFuncionXQ.DATA) {\r\n                    //Para cada et buscar si tiene texto.\r\n                    this.reemplazarTexto(entorno);\r\n                }\r\n                ls = ls.concat(this.getOnlyTextos(entorno));\r\n            }\r\n        }\r\n        else if (this.otraFuncion != undefined) {\r\n            //Es del tipo substring(upper-case($x/hola), 2, 3)\r\n            //Resolver funcion interior.\r\n            let interior = this.otraFuncion.getSobreEntornoXML(entorno);\r\n            //Para el resultado del interior, aplicar la funcion principal\r\n            interior.forEach((s) => {\r\n                let x = s.valor;\r\n                if (!(typeof x.valor === \"string\")) {\r\n                    if (this.tipo != TipoFuncionXQ.DATA) {\r\n                        //Para cada et buscar si tiene texto.\r\n                        s.valor = this.aplicarFuncionTexto(x);\r\n                    }\r\n                    ls = ls.concat(s);\r\n                }\r\n            });\r\n        }\r\n        return ls;\r\n    }\r\n    getValorInicial(XQueryEnt) {\r\n        if (this.identificador != undefined) {\r\n            //0. Lista Redefinida.\r\n            let listaRedefinida = [];\r\n            //1. Obtener simbolo\r\n            let ls = XQueryEnt.obtenerSimbolo(this.identificador);\r\n            //2. Obtener consulta completa (listaNodos)\r\n            if (ls != null) {\r\n                if (this.listaNodos != undefined && this.listaNodos.length > 0) {\r\n                    let consTemp = new Consulta(this.listaNodos, this.linea, this.columna);\r\n                    ls.valor.forEach((s) => {\r\n                        let auxEntorno = s.valor;\r\n                        listaRedefinida = listaRedefinida.concat(consTemp.ejecutar(auxEntorno));\r\n                    });\r\n                    let nuevoSimbolo = new Simbolo(Tipo.XQ_VAR, this.identificador, listaRedefinida, this.linea, this.columna);\r\n                    XQueryEnt.sobreEscribirSimbolo(this.identificador, nuevoSimbolo);\r\n                }\r\n                else {\r\n                    listaRedefinida = ls;\r\n                }\r\n            }\r\n            else {\r\n                console.log(\"Simbolo no existe: $\", this.identificador);\r\n            }\r\n            return XQueryEnt.obtenerSimbolo(this.identificador);\r\n        }\r\n    }\r\n    getValor(XQueryEnt) {\r\n        if (this.identificador != undefined) {\r\n            let listaS = this.getValorInicial(XQueryEnt);\r\n            if (this.tipo != TipoFuncionXQ.DATA) {\r\n                listaS.valor.forEach((s) => {\r\n                    let et = s.valor;\r\n                    //Para cada et buscar si tiene texto.\r\n                    this.reemplazarTexto(et);\r\n                });\r\n            }\r\n            let nuevaLista = [];\r\n            listaS.valor.forEach((s) => {\r\n                let et = s.valor;\r\n                nuevaLista = nuevaLista.concat(this.getOnlyTextos(et));\r\n            });\r\n            let nuevoSimbolo = new Simbolo(Tipo.XQ_VAR, this.identificador, nuevaLista, this.linea, this.columna);\r\n            XQueryEnt.sobreEscribirSimbolo(this.identificador, nuevoSimbolo);\r\n            listaS = XQueryEnt.obtenerSimbolo(this.identificador);\r\n            return listaS;\r\n        }\r\n        else if (this.otraFuncion != undefined) {\r\n            let ls = [];\r\n            let interior = this.otraFuncion.getValor(XQueryEnt);\r\n            //Para el resultado del interior, aplicar la funcion principal\r\n            interior.valor.forEach((s) => {\r\n                let x = s.valor;\r\n                if (!(typeof x.valor === \"string\")) {\r\n                    if (this.tipo != TipoFuncionXQ.DATA) {\r\n                        //Para cada et buscar si tiene texto.\r\n                        s.valor = this.aplicarFuncionTexto(x);\r\n                    }\r\n                    ls = ls.concat(s);\r\n                }\r\n            });\r\n            let nuevoSimbolo = new Simbolo(Tipo.XQ_VAR, interior.nombre, ls, this.linea, this.columna);\r\n            XQueryEnt.sobreEscribirSimbolo(interior.nombre, nuevoSimbolo);\r\n            return XQueryEnt.obtenerSimbolo(interior.nombre);\r\n        }\r\n    }\r\n    getOnlyTextos(etiqueta) {\r\n        let listaTextos = [];\r\n        for (let i = 0; i < etiqueta.tsimbolos.length; i++) {\r\n            if (etiqueta.tsimbolos[i].valor.getTipo() === Tipo.STRING) {\r\n                listaTextos.push(etiqueta.tsimbolos[i].valor);\r\n            }\r\n            else if (etiqueta.tsimbolos[i].valor.getTipo() === Tipo.ETIQUETA) {\r\n                listaTextos = listaTextos.concat(this.getOnlyTextos(etiqueta.tsimbolos[i].valor.valor));\r\n            }\r\n        }\r\n        return listaTextos;\r\n    }\r\n    aplicarFuncionTexto(str) {\r\n        switch (this.getTipo()) {\r\n            case TipoFuncionXQ.UPPERCASE:\r\n                return str.toUpperCase();\r\n            case TipoFuncionXQ.SUBSTRING:\r\n                if (this.desde != undefined && this.hasta != undefined) {\r\n                    return str.substring(this.desde - 1, this.hasta + 1);\r\n                }\r\n                break;\r\n            case TipoFuncionXQ.LOWERCASE:\r\n                return str.toLowerCase();\r\n            case TipoFuncionXQ.STRING:\r\n                return str.toString();\r\n            case TipoFuncionXQ.NUMBER:\r\n                return +str;\r\n            default:\r\n                return str;\r\n        }\r\n    }\r\n    reemplazarTexto(etiqueta) {\r\n        for (let i = 0; i < etiqueta.tsimbolos.length; i++) {\r\n            if (etiqueta.tsimbolos[i].valor.getTipo() === Tipo.STRING) {\r\n                let x = etiqueta.tsimbolos[i].valor;\r\n                //Ver que tipo de funcion es para saber que hacer.\r\n                let y = this.aplicarFuncionTexto(x.valor);\r\n                etiqueta.tsimbolos[i].valor.valor = y;\r\n            }\r\n            else if (etiqueta.tsimbolos[i].valor.getTipo() === Tipo.ETIQUETA) {\r\n                this.reemplazarTexto(etiqueta.tsimbolos[i].valor.valor);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport var TipoFuncionXQ;\r\n(function (TipoFuncionXQ) {\r\n    TipoFuncionXQ[TipoFuncionXQ[\"UPPERCASE\"] = 0] = \"UPPERCASE\";\r\n    TipoFuncionXQ[TipoFuncionXQ[\"SUBSTRING\"] = 1] = \"SUBSTRING\";\r\n    TipoFuncionXQ[TipoFuncionXQ[\"DATA\"] = 2] = \"DATA\";\r\n    TipoFuncionXQ[TipoFuncionXQ[\"LOWERCASE\"] = 3] = \"LOWERCASE\";\r\n    TipoFuncionXQ[TipoFuncionXQ[\"NUMBER\"] = 4] = \"NUMBER\";\r\n    TipoFuncionXQ[TipoFuncionXQ[\"STRING\"] = 5] = \"STRING\";\r\n})(TipoFuncionXQ || (TipoFuncionXQ = {}));\r\n","\"use strict\";\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XML_GramaticaAsc = (function () {\r\n    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)\r\n        ; return o; }, $V0 = [1, 10], $V1 = [1, 9], $V2 = [2, 5, 6], $V3 = [1, 13], $V4 = [1, 14], $V5 = [1, 19], $V6 = [2, 12], $V7 = [1, 18], $V8 = [2, 7, 10, 13, 14], $V9 = [1, 38], $Va = [1, 34], $Vb = [1, 35], $Vc = [1, 36], $Vd = [1, 37], $Ve = [1, 39], $Vf = [1, 40], $Vg = [1, 41], $Vh = [1, 42], $Vi = [1, 43], $Vj = [1, 44], $Vk = [2, 6, 8, 13, 22, 23, 24, 25, 26, 27, 28, 29, 30], $Vl = [2, 31];\r\n    var parser = { trace: function trace() { },\r\n        yy: {},\r\n        symbols_: { \"error\": 2, \"START\": 3, \"ENCABEZADO\": 4, \"EOF\": 5, \"lt\": 6, \"interrog\": 7, \"xml\": 8, \"LISTAATRIBUTOS\": 9, \"gt\": 10, \"LISTAELEMENTOS\": 11, \"ELEMENTO\": 12, \"identifier\": 13, \"diag\": 14, \"TEXTCONTENT\": 15, \"ATRIBUTOS\": 16, \"ATRIBUTO\": 17, \"asig\": 18, \"cadena\": 19, \"cadena2\": 20, \"TEXT\": 21, \"content\": 22, \"DoubleLiteral\": 23, \"IntegerLiteral\": 24, \"apos\": 25, \"less\": 26, \"greater\": 27, \"ampersand\": 28, \"apostrophe\": 29, \"quot\": 30, \"$accept\": 0, \"$end\": 1 },\r\n        terminals_: { 2: \"error\", 5: \"EOF\", 6: \"lt\", 7: \"interrog\", 8: \"xml\", 10: \"gt\", 13: \"identifier\", 14: \"diag\", 18: \"asig\", 19: \"cadena\", 20: \"cadena2\", 22: \"content\", 23: \"DoubleLiteral\", 24: \"IntegerLiteral\", 25: \"apos\", 26: \"less\", 27: \"greater\", 28: \"ampersand\", 29: \"apostrophe\", 30: \"quot\" },\r\n        productions_: [0, [3, 2], [4, 7], [4, 2], [11, 2], [11, 1], [12, 5], [12, 9], [12, 9], [12, 8], [12, 2], [9, 1], [9, 0], [16, 2], [16, 1], [17, 3], [17, 3], [17, 1], [15, 2], [15, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1]],\r\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n            /* this == yyval */\r\n            var $0 = $$.length - 1;\r\n            switch (yystate) {\r\n                case 1:\r\n                    /* CONSTRUCCION DE CST */\r\n                    let raiz = new Nodo(cst.cstXmlAsc.getId(), 'START', null, [cst.cstXmlAsc.obtenerUltimoNodo()]);\r\n                    cst.cstXmlAsc.setRaiz(raiz);\r\n                    return $$[$0 - 1];\r\n                    break;\r\n                case 2:\r\n                    $$[$0].unshift(new Objeto($$[$0 - 4], '', _$[$0 - 6].first_line, _$[$0 - 6].first_column, $$[$0 - 3], [], true));\r\n                    this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let elementos = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    let atributosE = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ENCABEZADO', null, [new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), '<', null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'interrog', null, [new Nodo(cst.cstXmlAsc.getId(), '?', null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'xml', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 4].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        atributosE,\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'interrog', null, [new Nodo(cst.cstXmlAsc.getId(), '?', null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), '>', null, [])]),\r\n                        elementos]));\r\n                    break;\r\n                case 3:\r\n                    errores.default.agregarError('sintáctico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ENCABEZADO', null, [cst.cstXmlAsc.obtenerUltimoNodo()]));\r\n                    break;\r\n                case 4:\r\n                    if ($$[$0 - 1] !== null) {\r\n                        if ($$[$0] !== null)\r\n                            $$[$0 - 1].push($$[$0]);\r\n                        this.$ = $$[$0 - 1];\r\n                    }\r\n                    else if ($$[$0] !== null)\r\n                        this.$ = [$$[$0 - 1]];\r\n                    else\r\n                        this.$ = [];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let elem = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    let listaElem = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'LISTAELEMENTOS', null, [listaElem, elem]));\r\n                    break;\r\n                case 5:\r\n                    if ($$[$0] !== null)\r\n                        this.$ = [$$[$0]];\r\n                    else\r\n                        this.$ = [];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let padreLE = new Nodo(cst.cstXmlAsc.getId(), 'LISTAELEMENTOS', null, [cst.cstXmlAsc.obtenerUltimoNodo()]);\r\n                    cst.cstXmlAsc.agregarPila(padreLE);\r\n                    break;\r\n                case 6:\r\n                    this.$ = new Objeto($$[$0 - 3], '', _$[$0 - 4].first_line, _$[$0 - 4].first_column, $$[$0 - 2], [], true);\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ELEMENTO', null, [new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 4].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 3].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        cst.cstXmlAsc.obtenerUltimoNodo(),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'diag', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 1].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 7:\r\n                    console.log(Objeto);\r\n                    if ($$[$0 - 7] === $$[$0 - 1]) {\r\n                        this.$ = new Objeto($$[$0 - 7], $$[$0 - 4].toString().replaceAll(\"\\\"\", \"\"), _$[$0 - 8].first_line, _$[$0 - 8].first_column, $$[$0 - 6], [], false);\r\n                    }\r\n                    else {\r\n                        console.log(errores.default);\r\n                        console.log('Linea 111: Error semantico: Las etiquetas deben ser iguales:\\n' + $$[$0 - 7] + \"!=\" + $$[$0 - 1] + \" \\natributos: \" + $$[$0 - 6] + \"\\ntexto: \\n\" + $$[$0 - 4]);\r\n                        errores.default.agregarError('semantico', 'Las etiquetas deben ser iguales', _$[$0 - 8].first_line, _$[$0 - 8].first_column);\r\n                        this.$ = null;\r\n                    }\r\n                    /* CONSTRUCCION DE CST */\r\n                    var elemText = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    var elemAtr = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ELEMENTO', null, [new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 8].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 7].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        elemAtr,\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 5].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        elemText,\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 3].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'diag', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 2].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 1].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 8:\r\n                    if ($$[$0 - 7] === $$[$0 - 1]) {\r\n                        this.$ = new Objeto($$[$0 - 7], '', _$[$0 - 8].first_line, _$[$0 - 8].first_column, $$[$0 - 6], $$[$0 - 4], false);\r\n                    }\r\n                    else {\r\n                        console.log(errores.default);\r\n                        console.log('Linea 120: Error semantico: Las etiquetas deben ser iguales');\r\n                        errores.default.agregarError('semantico', 'Las etiquetas deben ser iguales', _$[$0 - 8].first_line, _$[$0 - 8].first_column);\r\n                        this.$ = null;\r\n                    }\r\n                    /* CONSTRUCCION DE CST */\r\n                    let elem1 = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    let atr1 = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ELEMENTO', null, [new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 8].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 7].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        atr1,\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 5].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        elem1,\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 3].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'diag', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 2].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 1].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 9:\r\n                    if ($$[$0 - 6] === $$[$0 - 1]) {\r\n                        this.$ = new Objeto($$[$0 - 6], '', _$[$0 - 7].first_line, _$[$0 - 7].first_column, $$[$0 - 5], [], false);\r\n                    }\r\n                    else {\r\n                        console.log(errores.default);\r\n                        console.log('Linea 129: Error semantico: Las etiquetas deben ser iguales');\r\n                        errores.default.agregarError('semantico', 'Las etiquetas deben ser iguales', _$[$0 - 7].first_line, _$[$0 - 7].first_column);\r\n                        this.$ = null;\r\n                    }\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ELEMENTO', null, [new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 7].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 6].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        cst.cstXmlAsc.obtenerUltimoNodo(),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 4].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 3].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'diag', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 2].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 1].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 10:\r\n                    console.log('Entra a error sintactico');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = null;\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ELEMENTO', null, []));\r\n                    break;\r\n                case 11:\r\n                    this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'LISTAATRIBUTOS', null, [cst.cstXmlAsc.obtenerUltimoNodo()]));\r\n                    break;\r\n                case 12:\r\n                    this.$ = [];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'LISTAATRIBUTOS', null, [new Nodo(cst.cstXmlAsc.getId(), 'epsilon', null, [])]));\r\n                    break;\r\n                case 13:\r\n                    $$[$0 - 1].push($$[$0]);\r\n                    this.$ = $$[$0 - 1];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let atr2 = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    let atrs2 = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ATRIBUTOS', null, [atrs2, atr2]));\r\n                    break;\r\n                case 14:\r\n                    this.$ = [$$[$0]];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ATRIBUTOS', null, [cst.cstXmlAsc.obtenerUltimoNodo()]));\r\n                    break;\r\n                case 15:\r\n                case 16:\r\n                    this.$ = new Atributo($$[$0 - 2].toString().replaceAll(\"\\\"\", \"\"), $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ATRIBUTO', null, [new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 2].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'asignacion', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 1].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'cadena', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 17:\r\n                    console.log('Entra a error Atribut sintactico');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0].first_line, _$[$0].first_column);\r\n                    this.$ = new Atributo(\"\", \"\", _$[$0].first_line, _$[$0].first_column);\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ATRIBUTO', null, []));\r\n                    break;\r\n                case 18:\r\n                    $$[$0 - 1] = $$[$0 - 1] + \" \" + $$[$0];\r\n                    this.$ = $$[$0 - 1];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let text2 = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    let textContent2 = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXTCONTENT', null, [textContent2, text2]));\r\n                    break;\r\n                case 19:\r\n                    this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXTCONTENT', null, [cst.cstXmlAsc.obtenerUltimoNodo()]));\r\n                    break;\r\n                case 20:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 21:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'content', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 22:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'double', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 23:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'integer', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 24:\r\n                    this.$ = $$[$0].toString();\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 25:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'comilla simple', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 26:\r\n                    this.$ = \"<\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'menor que', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 27:\r\n                    this.$ = \">\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'mayor que', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 28:\r\n                    this.$ = \"&\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'ampersand', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 29:\r\n                    this.$ = \"'\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'apostrofe', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 30:\r\n                    this.$ = \"''\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'comilla doble', null, [new Nodo(cst.cstXmlAsc.getId(), '\"', null, [])])]));\r\n                    break;\r\n                case 31:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, []));\r\n                    break;\r\n            }\r\n        },\r\n        table: [{ 2: [1, 4], 3: 1, 4: 2, 6: [1, 3] }, { 1: [3] }, { 5: [1, 5] }, { 7: [1, 6] }, { 2: $V0, 6: $V1, 11: 7, 12: 8 }, { 1: [2, 1] }, { 8: [1, 11] }, { 2: $V0, 5: [2, 3], 6: $V1, 12: 12 }, o($V2, [2, 5]), { 13: $V3 }, { 10: $V4 }, { 2: $V5, 7: $V6, 9: 15, 13: $V7, 16: 16, 17: 17 }, o($V2, [2, 4]), o([10, 14], $V6, { 16: 16, 17: 17, 9: 20, 2: $V5, 13: $V7 }), o($V2, [2, 10]), { 7: [1, 21] }, o([7, 10, 14], [2, 11], { 17: 22, 2: $V5, 13: $V7 }), o($V8, [2, 14]), { 18: [1, 23] }, o($V8, [2, 17]), { 10: [1, 25], 14: [1, 24] }, { 10: [1, 26] }, o($V8, [2, 13]), { 19: [1, 27], 20: [1, 28] }, { 10: [1, 29] }, { 2: [1, 45], 6: [1, 32], 8: $V9, 11: 31, 12: 8, 13: $Va, 15: 30, 21: 33, 22: $Vb, 23: $Vc, 24: $Vd, 25: $Ve, 26: $Vf, 27: $Vg, 28: $Vh, 29: $Vi, 30: $Vj }, { 2: $V0, 6: $V1, 11: 46, 12: 8 }, o($V8, [2, 15]), o($V8, [2, 16]), o($V2, [2, 6]), { 2: [1, 49], 6: [1, 47], 8: $V9, 13: $Va, 21: 48, 22: $Vb, 23: $Vc, 24: $Vd, 25: $Ve, 26: $Vf, 27: $Vg, 28: $Vh, 29: $Vi, 30: $Vj }, { 2: $V0, 6: [1, 50], 12: 12 }, { 13: $V3, 14: [1, 51] }, o($Vk, [2, 19]), o($Vk, [2, 20]), o($Vk, [2, 21]), o($Vk, [2, 22]), o($Vk, [2, 23]), o($Vk, [2, 24]), o($Vk, [2, 25]), o($Vk, [2, 26]), o($Vk, [2, 27]), o($Vk, [2, 28]), o($Vk, [2, 29]), o($Vk, [2, 30]), o($Vk, $Vl, { 10: $V4 }), { 2: $V0, 5: [2, 2], 6: $V1, 12: 12 }, { 14: [1, 52] }, o($Vk, [2, 18]), o($Vk, $Vl), { 13: $V3, 14: [1, 53] }, { 13: [1, 54] }, { 13: [1, 55] }, { 13: [1, 56] }, { 10: [1, 57] }, { 10: [1, 58] }, { 10: [1, 59] }, o($V2, [2, 9]), o($V2, [2, 7]), o($V2, [2, 8])],\r\n        defaultActions: { 5: [2, 1] },\r\n        parseError: function parseError(str, hash) {\r\n            if (hash.recoverable) {\r\n                this.trace(str);\r\n            }\r\n            else {\r\n                var error = new Error(str);\r\n                error.hash = hash;\r\n                throw error;\r\n            }\r\n        },\r\n        parse: function parse(input) {\r\n            var self = this, stack = [0], tstack = [], // token stack\r\n            vstack = [null], // semantic value stack\r\n            lstack = [], // location stack\r\n            table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n            var args = lstack.slice.call(arguments, 1);\r\n            //this.reductionCount = this.shiftCount = 0;\r\n            var lexer = Object.create(this.lexer);\r\n            var sharedState = { yy: {} };\r\n            // copy state\r\n            for (var k in this.yy) {\r\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n                    sharedState.yy[k] = this.yy[k];\r\n                }\r\n            }\r\n            lexer.setInput(input, sharedState.yy);\r\n            sharedState.yy.lexer = lexer;\r\n            sharedState.yy.parser = this;\r\n            if (typeof lexer.yylloc == 'undefined') {\r\n                lexer.yylloc = {};\r\n            }\r\n            var yyloc = lexer.yylloc;\r\n            lstack.push(yyloc);\r\n            var ranges = lexer.options && lexer.options.ranges;\r\n            if (typeof sharedState.yy.parseError === 'function') {\r\n                this.parseError = sharedState.yy.parseError;\r\n            }\r\n            else {\r\n                this.parseError = Object.getPrototypeOf(this).parseError;\r\n            }\r\n            function popStack(n) {\r\n                stack.length = stack.length - 2 * n;\r\n                vstack.length = vstack.length - n;\r\n                lstack.length = lstack.length - n;\r\n            }\r\n            _token_stack: var lex = function () {\r\n                var token;\r\n                token = lexer.lex() || EOF;\r\n                // if token isn't its numeric value, convert\r\n                if (typeof token !== 'number') {\r\n                    token = self.symbols_[token] || token;\r\n                }\r\n                return token;\r\n            };\r\n            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n            while (true) {\r\n                // retreive state number from top of stack\r\n                state = stack[stack.length - 1];\r\n                // use default actions if available\r\n                if (this.defaultActions[state]) {\r\n                    action = this.defaultActions[state];\r\n                }\r\n                else {\r\n                    if (symbol === null || typeof symbol == 'undefined') {\r\n                        symbol = lex();\r\n                    }\r\n                    // read action for current state and first input\r\n                    action = table[state] && table[state][symbol];\r\n                }\r\n                _handle_error: \r\n                // handle parse error\r\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                    var error_rule_depth;\r\n                    var errStr = '';\r\n                    // Return the rule stack depth where the nearest error rule can be found.\r\n                    // Return FALSE when no error recovery rule was found.\r\n                    function locateNearestErrorRecoveryRule(state) {\r\n                        var stack_probe = stack.length - 1;\r\n                        var depth = 0;\r\n                        // try to recover from error\r\n                        for (;;) {\r\n                            // check for error recovery rule in this state\r\n                            if ((TERROR.toString()) in table[state]) {\r\n                                return depth;\r\n                            }\r\n                            if (state === 0 || stack_probe < 2) {\r\n                                return false; // No suitable error recovery rule available.\r\n                            }\r\n                            stack_probe -= 2; // popStack(1): [symbol, action]\r\n                            state = stack[stack_probe];\r\n                            ++depth;\r\n                        }\r\n                    }\r\n                    if (!recovering) {\r\n                        // first see if there's any chance at hitting an error recovery rule:\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                        // Report error\r\n                        expected = [];\r\n                        for (p in table[state]) {\r\n                            if (this.terminals_[p] && p > TERROR) {\r\n                                expected.push(\"'\" + this.terminals_[p] + \"'\");\r\n                            }\r\n                        }\r\n                        if (lexer.showPosition) {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \":\\n\" + lexer.showPosition() + \"\\nExpecting \" + expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\r\n                        }\r\n                        else {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \": Unexpected \" +\r\n                                (symbol == EOF ? \"end of input\" :\r\n                                    (\"'\" + (this.terminals_[symbol] || symbol) + \"'\"));\r\n                        }\r\n                        this.parseError(errStr, {\r\n                            text: lexer.match,\r\n                            token: this.terminals_[symbol] || symbol,\r\n                            line: lexer.yylineno,\r\n                            loc: yyloc,\r\n                            expected: expected,\r\n                            recoverable: (error_rule_depth !== false)\r\n                        });\r\n                    }\r\n                    else if (preErrorSymbol !== EOF) {\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                    }\r\n                    // just recovered from another error\r\n                    if (recovering == 3) {\r\n                        if (symbol === EOF || preErrorSymbol === EOF) {\r\n                            throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                        }\r\n                        // discard current lookahead and grab another\r\n                        yyleng = lexer.yyleng;\r\n                        yytext = lexer.yytext;\r\n                        yylineno = lexer.yylineno;\r\n                        yyloc = lexer.yylloc;\r\n                        symbol = lex();\r\n                    }\r\n                    // try to recover from error\r\n                    if (error_rule_depth === false) {\r\n                        throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n                    }\r\n                    popStack(error_rule_depth);\r\n                    preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n                    symbol = TERROR; // insert generic error symbol as new lookahead\r\n                    state = stack[stack.length - 1];\r\n                    action = table[state] && table[state][TERROR];\r\n                    recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n                }\r\n                // this shouldn't happen, unless resolve defaults are off\r\n                if (action[0] instanceof Array && action.length > 1) {\r\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n                }\r\n                switch (action[0]) {\r\n                    case 1: // shift\r\n                        //this.shiftCount++;\r\n                        stack.push(symbol);\r\n                        vstack.push(lexer.yytext);\r\n                        lstack.push(lexer.yylloc);\r\n                        stack.push(action[1]); // push state\r\n                        symbol = null;\r\n                        if (!preErrorSymbol) { // normal execution/no error\r\n                            yyleng = lexer.yyleng;\r\n                            yytext = lexer.yytext;\r\n                            yylineno = lexer.yylineno;\r\n                            yyloc = lexer.yylloc;\r\n                            if (recovering > 0) {\r\n                                recovering--;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // error just occurred, resume old lookahead f/ before error\r\n                            symbol = preErrorSymbol;\r\n                            preErrorSymbol = null;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        // reduce\r\n                        //this.reductionCount++;\r\n                        len = this.productions_[action[1]][1];\r\n                        // perform semantic action\r\n                        yyval.$ = vstack[vstack.length - len]; // default to $$ = $1\r\n                        // default location, uses first token for firsts, last for lasts\r\n                        yyval._$ = {\r\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                            last_line: lstack[lstack.length - 1].last_line,\r\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                            last_column: lstack[lstack.length - 1].last_column\r\n                        };\r\n                        if (ranges) {\r\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\r\n                        }\r\n                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n                        if (typeof r !== 'undefined') {\r\n                            return r;\r\n                        }\r\n                        // pop off stack\r\n                        if (len) {\r\n                            stack = stack.slice(0, -1 * len * 2);\r\n                            vstack = vstack.slice(0, -1 * len);\r\n                            lstack = lstack.slice(0, -1 * len);\r\n                        }\r\n                        stack.push(this.productions_[action[1]][0]); // push nonterminal (reduce)\r\n                        vstack.push(yyval.$);\r\n                        lstack.push(yyval._$);\r\n                        // goto new state = table[STATE][NONTERMINAL]\r\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n                        stack.push(newState);\r\n                        break;\r\n                    case 3:\r\n                        // accept\r\n                        return true;\r\n                }\r\n            }\r\n            return true;\r\n        } };\r\n    //const Nodo = require(\"./AST/nodo_arbol\");\r\n    //var raiz;\r\n    const { Objeto } = require(\"../XML/Objeto\");\r\n    const { Atributo } = require(\"../XML/Atributo\");\r\n    const errores = require('../Global/ListaError');\r\n    const { Nodo } = require('../Reporte/Nodo');\r\n    const cst = require('../Reporte/CST');\r\n    /* generated by jison-lex 0.3.4 */\r\n    var lexer = (function () {\r\n        var lexer = ({\r\n            EOF: 1,\r\n            parseError: function parseError(str, hash) {\r\n                if (this.yy.parser) {\r\n                    this.yy.parser.parseError(str, hash);\r\n                }\r\n                else {\r\n                    throw new Error(str);\r\n                }\r\n            },\r\n            // resets the lexer, sets new input\r\n            setInput: function (input, yy) {\r\n                this.yy = yy || this.yy || {};\r\n                this._input = input;\r\n                this._more = this._backtrack = this.done = false;\r\n                this.yylineno = this.yyleng = 0;\r\n                this.yytext = this.matched = this.match = '';\r\n                this.conditionStack = ['INITIAL'];\r\n                this.yylloc = {\r\n                    first_line: 1,\r\n                    first_column: 0,\r\n                    last_line: 1,\r\n                    last_column: 0\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [0, 0];\r\n                }\r\n                this.offset = 0;\r\n                return this;\r\n            },\r\n            // consumes and returns one char from the input\r\n            input: function () {\r\n                var ch = this._input[0];\r\n                this.yytext += ch;\r\n                this.yyleng++;\r\n                this.offset++;\r\n                this.match += ch;\r\n                this.matched += ch;\r\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno++;\r\n                    this.yylloc.last_line++;\r\n                }\r\n                else {\r\n                    this.yylloc.last_column++;\r\n                }\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range[1]++;\r\n                }\r\n                this._input = this._input.slice(1);\r\n                return ch;\r\n            },\r\n            // unshifts one char (or a string) into the input\r\n            unput: function (ch) {\r\n                var len = ch.length;\r\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n                this._input = ch + this._input;\r\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n                //this.yyleng -= len;\r\n                this.offset -= len;\r\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n                this.match = this.match.substr(0, this.match.length - 1);\r\n                this.matched = this.matched.substr(0, this.matched.length - 1);\r\n                if (lines.length - 1) {\r\n                    this.yylineno -= lines.length - 1;\r\n                }\r\n                var r = this.yylloc.range;\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: lines ?\r\n                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                            + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n                        this.yylloc.first_column - len\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n                }\r\n                this.yyleng = this.yytext.length;\r\n                return this;\r\n            },\r\n            // When called from action, caches matched text and appends it on next action\r\n            more: function () {\r\n                this._more = true;\r\n                return this;\r\n            },\r\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n            reject: function () {\r\n                if (this.options.backtrack_lexer) {\r\n                    this._backtrack = true;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n                return this;\r\n            },\r\n            // retain first n characters of the match\r\n            less: function (n) {\r\n                this.unput(this.match.slice(n));\r\n            },\r\n            // displays already matched input, i.e. for error messages\r\n            pastInput: function () {\r\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\r\n            },\r\n            // displays upcoming input, i.e. for error messages\r\n            upcomingInput: function () {\r\n                var next = this.match;\r\n                if (next.length < 20) {\r\n                    next += this._input.substr(0, 20 - next.length);\r\n                }\r\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n            },\r\n            // displays the character position where the lexing error occurred, i.e. for error messages\r\n            showPosition: function () {\r\n                var pre = this.pastInput();\r\n                var c = new Array(pre.length + 1).join(\"-\");\r\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n            },\r\n            // test the lexed token: return FALSE when not a match, otherwise return token\r\n            test_match: function (match, indexed_rule) {\r\n                var token, lines, backup;\r\n                if (this.options.backtrack_lexer) {\r\n                    // save context\r\n                    backup = {\r\n                        yylineno: this.yylineno,\r\n                        yylloc: {\r\n                            first_line: this.yylloc.first_line,\r\n                            last_line: this.last_line,\r\n                            first_column: this.yylloc.first_column,\r\n                            last_column: this.yylloc.last_column\r\n                        },\r\n                        yytext: this.yytext,\r\n                        match: this.match,\r\n                        matches: this.matches,\r\n                        matched: this.matched,\r\n                        yyleng: this.yyleng,\r\n                        offset: this.offset,\r\n                        _more: this._more,\r\n                        _input: this._input,\r\n                        yy: this.yy,\r\n                        conditionStack: this.conditionStack.slice(0),\r\n                        done: this.done\r\n                    };\r\n                    if (this.options.ranges) {\r\n                        backup.yylloc.range = this.yylloc.range.slice(0);\r\n                    }\r\n                }\r\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno += lines.length;\r\n                }\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.last_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.last_column,\r\n                    last_column: lines ?\r\n                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                        this.yylloc.last_column + match[0].length\r\n                };\r\n                this.yytext += match[0];\r\n                this.match += match[0];\r\n                this.matches = match;\r\n                this.yyleng = this.yytext.length;\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n                }\r\n                this._more = false;\r\n                this._backtrack = false;\r\n                this._input = this._input.slice(match[0].length);\r\n                this.matched += match[0];\r\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n                if (this.done && this._input) {\r\n                    this.done = false;\r\n                }\r\n                if (token) {\r\n                    return token;\r\n                }\r\n                else if (this._backtrack) {\r\n                    // recover context\r\n                    for (var k in backup) {\r\n                        this[k] = backup[k];\r\n                    }\r\n                    return false; // rule action called reject() implying the next rule should be tested instead.\r\n                }\r\n                return false;\r\n            },\r\n            // return next match in input\r\n            next: function () {\r\n                if (this.done) {\r\n                    return this.EOF;\r\n                }\r\n                if (!this._input) {\r\n                    this.done = true;\r\n                }\r\n                var token, match, tempMatch, index;\r\n                if (!this._more) {\r\n                    this.yytext = '';\r\n                    this.match = '';\r\n                }\r\n                var rules = this._currentRules();\r\n                for (var i = 0; i < rules.length; i++) {\r\n                    tempMatch = this._input.match(this.rules[rules[i]]);\r\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                        match = tempMatch;\r\n                        index = i;\r\n                        if (this.options.backtrack_lexer) {\r\n                            token = this.test_match(tempMatch, rules[i]);\r\n                            if (token !== false) {\r\n                                return token;\r\n                            }\r\n                            else if (this._backtrack) {\r\n                                match = false;\r\n                                continue; // rule action called reject() implying a rule MISmatch.\r\n                            }\r\n                            else {\r\n                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else if (!this.options.flex) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (match) {\r\n                    token = this.test_match(match, rules[index]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    }\r\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                    return false;\r\n                }\r\n                if (this._input === \"\") {\r\n                    return this.EOF;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n            },\r\n            // return next match that has a token\r\n            lex: function lex() {\r\n                var r = this.next();\r\n                if (r) {\r\n                    return r;\r\n                }\r\n                else {\r\n                    return this.lex();\r\n                }\r\n            },\r\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n            begin: function begin(condition) {\r\n                this.conditionStack.push(condition);\r\n            },\r\n            // pop the previously active lexer condition state off the condition stack\r\n            popState: function popState() {\r\n                var n = this.conditionStack.length - 1;\r\n                if (n > 0) {\r\n                    return this.conditionStack.pop();\r\n                }\r\n                else {\r\n                    return this.conditionStack[0];\r\n                }\r\n            },\r\n            // produce the lexer rule set which is active for the currently active lexer condition state\r\n            _currentRules: function _currentRules() {\r\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n                }\r\n                else {\r\n                    return this.conditions[\"INITIAL\"].rules;\r\n                }\r\n            },\r\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n            topState: function topState(n) {\r\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n                if (n >= 0) {\r\n                    return this.conditionStack[n];\r\n                }\r\n                else {\r\n                    return \"INITIAL\";\r\n                }\r\n            },\r\n            // alias for begin(condition)\r\n            pushState: function pushState(condition) {\r\n                this.begin(condition);\r\n            },\r\n            // return the number of states currently on the stack\r\n            stateStackSize: function stateStackSize() {\r\n                return this.conditionStack.length;\r\n            },\r\n            options: {},\r\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n                var YYSTATE = YY_START;\r\n                switch ($avoiding_name_collisions) {\r\n                    case 0: /* skip whitespace */\r\n                        break;\r\n                    case 1:\r\n                        this.begin('comment');\r\n                        break;\r\n                    case 2:\r\n                        this.popState();\r\n                        break;\r\n                    case 3: /* skip comment content*/\r\n                        break;\r\n                    case 4:\r\n                        return 6;\r\n                        break;\r\n                    case 5:\r\n                        return 10;\r\n                        break;\r\n                    case 6:\r\n                        return 18;\r\n                        break;\r\n                    case 7:\r\n                        return 14;\r\n                        break;\r\n                    case 8:\r\n                        return 7;\r\n                        break;\r\n                    case 9:\r\n                        return 25;\r\n                        break;\r\n                    case 10:\r\n                        return \"xml\";\r\n                        break;\r\n                    case 11:\r\n                        return 26;\r\n                        break;\r\n                    case 12:\r\n                        return 27;\r\n                        break;\r\n                    case 13:\r\n                        return 28;\r\n                        break;\r\n                    case 14:\r\n                        return \"apostrophe\";\r\n                        break;\r\n                    case 15:\r\n                        return \"quot\";\r\n                        break;\r\n                    case 16:\r\n                        return 23;\r\n                        break;\r\n                    case 17:\r\n                        return 24;\r\n                        break;\r\n                    case 18:\r\n                        return 13;\r\n                        break;\r\n                    case 19:\r\n                        return 19;\r\n                        break;\r\n                    case 20:\r\n                        return 20;\r\n                        break;\r\n                    case 21:\r\n                        return 22;\r\n                        break;\r\n                    case 22:\r\n                        return 5;\r\n                        break;\r\n                    case 23:\r\n                        console.log(errores.default);\r\n                        errores.default.agregarError('lexico', 'Simbolo inesperado ' + yy_.yytext, yy_.yylloc.first_line, yy_.yylloc.first_column);\r\n                        break;\r\n                }\r\n            },\r\n            rules: [/^(?:\\s+)/, /^(?:<!--)/, /^(?:-->)/, /^(?:.)/, /^(?:<)/, /^(?:>)/, /^(?:=)/, /^(?:\\/)/, /^(?:\\?)/, /^(?:')/, /^(?:[xX][mM][lL])/, /^(?:&lt;)/, /^(?:&gt;)/, /^(?:&amp;)/, /^(?:&apos;)/, /^(?:&quot;)/, /^(?:(([0-9]+\\.[0-9]*)|(\\.[0-9]+)))/, /^(?:[0-9]+)/, /^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ.-]*)/, /^(?:(\"((\\\\([\\'\\\"\\\\]))|([^\\\"\\\\]+))*\"))/, /^(?:('((\\\\([\\'\\\"\\\\]))|([^\\'\\\\]))*'))/, /^(?:([^<]))/, /^(?:$)/, /^(?:.)/],\r\n            conditions: { \"comment\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], \"inclusive\": true }, \"INITIAL\": { \"rules\": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], \"inclusive\": true } }\r\n        });\r\n        return lexer;\r\n    })();\r\n    parser.lexer = lexer;\r\n    function Parser() {\r\n        this.yy = {};\r\n    }\r\n    Parser.prototype = parser;\r\n    parser.Parser = Parser;\r\n    return new Parser;\r\n})();\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\n    exports.parser = XML_GramaticaAsc;\r\n    exports.Parser = XML_GramaticaAsc.Parser;\r\n    exports.parse = function () { return XML_GramaticaAsc.parse.apply(XML_GramaticaAsc, arguments); };\r\n    exports.main = function commonjsMain(args) {\r\n        if (!args[1]) {\r\n            console.log('Usage: ' + args[0] + ' FILE');\r\n            process.exit(1);\r\n        }\r\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n        return exports.parser.parse(source);\r\n    };\r\n    if (typeof module !== 'undefined' && require.main === module) {\r\n        exports.main(process.argv.slice(1));\r\n    }\r\n}\r\n","\"use strict\";\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XML_GramaticaDesc = (function () {\r\n    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)\r\n        ; return o; }, $V0 = [2, 5], $V1 = [1, 9], $V2 = [1, 13], $V3 = [1, 17], $V4 = [2, 9], $V5 = [1, 16], $V6 = [5, 6], $V7 = [7, 10, 21], $V8 = [2, 7, 10, 14, 21], $V9 = [1, 46], $Va = [2, 21], $Vb = [1, 39], $Vc = [1, 35], $Vd = [1, 36], $Ve = [1, 37], $Vf = [1, 38], $Vg = [1, 40], $Vh = [1, 41], $Vi = [1, 42], $Vj = [1, 43], $Vk = [1, 44], $Vl = [1, 45], $Vm = [2, 6, 8, 14, 25, 26, 27, 28, 29, 30, 31, 32, 33], $Vn = [1, 52];\r\n    var parser = { trace: function trace() { },\r\n        yy: {},\r\n        symbols_: { \"error\": 2, \"START\": 3, \"ENCABEZADO\": 4, \"EOF\": 5, \"lt\": 6, \"interrog\": 7, \"xml\": 8, \"LISTAATRIBUTOS\": 9, \"gt\": 10, \"LISTAELEMENTOS\": 11, \"ELEMENTO\": 12, \"ELEM\": 13, \"identifier\": 14, \"TIPOELEM\": 15, \"ATRIBUTO\": 16, \"asig\": 17, \"TIPOCADENA\": 18, \"cadena\": 19, \"cadena2\": 20, \"diag\": 21, \"TEXTCONTENT\": 22, \"MOREELEMENTS\": 23, \"TEXT\": 24, \"content\": 25, \"DoubleLiteral\": 26, \"IntegerLiteral\": 27, \"apos\": 28, \"less\": 29, \"greater\": 30, \"ampersand\": 31, \"apostrophe\": 32, \"quot\": 33, \"$accept\": 0, \"$end\": 1 },\r\n        terminals_: { 2: \"error\", 5: \"EOF\", 6: \"lt\", 7: \"interrog\", 8: \"xml\", 10: \"gt\", 14: \"identifier\", 17: \"asig\", 19: \"cadena\", 20: \"cadena2\", 21: \"diag\", 25: \"content\", 26: \"DoubleLiteral\", 27: \"IntegerLiteral\", 28: \"apos\", 29: \"less\", 30: \"greater\", 31: \"ampersand\", 32: \"apostrophe\", 33: \"quot\" },\r\n        productions_: [0, [3, 2], [4, 7], [4, 2], [11, 2], [11, 0], [12, 2], [13, 3], [9, 2], [9, 0], [16, 3], [16, 2], [16, 2], [18, 1], [18, 1], [15, 2], [15, 4], [15, 3], [23, 3], [23, 3], [22, 2], [22, 0], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1]],\r\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n            /* this == yyval */\r\n            var $0 = $$.length - 1;\r\n            switch (yystate) {\r\n                case 1:\r\n                    let raiz = new Nodo(cst.cstXmlDesc.getId(), 'START', null, [cst.cstXmlDesc.obtenerUltimoNodo()]);\r\n                    cst.cstXmlDesc.setRaiz(raiz);\r\n                    return $$[$0 - 1];\r\n                    break;\r\n                case 2:\r\n                    $$[$0].unshift(new Objeto($$[$0 - 4], '', _$[$0 - 6].first_line, _$[$0 - 6].first_column, $$[$0 - 3], [], true));\r\n                    this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let listaElem2 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let listAtrs3 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'ENCABEZADO', null, [new Nodo(cst.cstXmlDesc.getId(), 'lt', null, [new Nodo(cst.cstXmlDesc.getId(), '<', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'interrog', null, [new Nodo(cst.cstXmlDesc.getId(), '?', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'xml', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0 - 4].toString(), null, [])]),\r\n                        listAtrs3,\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'interrog', null, [new Nodo(cst.cstXmlDesc.getId(), '?', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'gt', null, [new Nodo(cst.cstXmlDesc.getId(), '>', null, [])]),\r\n                        listaElem2]));\r\n                    break;\r\n                case 3:\r\n                    errores.default.agregarError('sintáctico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'ENCABEZADO', null, [new Nodo(cst.cstXmlDesc.getId(), 'error', null, []),\r\n                        cst.cstXmlDesc.obtenerUltimoNodo()]));\r\n                    break;\r\n                case 4:\r\n                    $$[$0 - 1] = $$[$0 - 1].concat($$[$0]);\r\n                    this.$ = $$[$0 - 1];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let listaElem = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let elem2 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'LISTAELEMENTOS', null, [elem2, listaElem]));\r\n                    break;\r\n                case 5:\r\n                    this.$ = [];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'LISTAELEMENTOS', null, [new Nodo(cst.cstXmlDesc.getId(), 'epsilon', null, [])]));\r\n                    break;\r\n                case 6:\r\n                    this.$ = [$$[$0]];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'ELEMENTO', null, [new Nodo(cst.cstXmlDesc.getId(), 'lt', null, [new Nodo(cst.cstXmlDesc.getId(), '<', null, [])]),\r\n                        cst.cstXmlDesc.obtenerUltimoNodo()]));\r\n                    break;\r\n                case 7:\r\n                    let newObj = null;\r\n                    if ($$[$0] !== null) {\r\n                        if ($$[$0].idCierre === '' && $$[$0].texto === '' && $$[$0].content === null) { /** Etiqueta unica */\r\n                            newObj = new Objeto($$[$0 - 2], '', _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 1], [], true);\r\n                        }\r\n                        else if ($$[$0].idCierre !== '') { /** Etiqueta doble */\r\n                            if ($$[$0 - 2] === $$[$0].idCierre) {\r\n                                //newObj = new Objeto($$[$0-2], $$[$0].texto, _$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], $$[$0].content !=== null?$$[$0].content:[], false);\r\n                                if ($$[$0].content !== null) /** El contenido es mas objetos */\r\n                                    newObj = new Objeto($$[$0 - 2], '', _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 1], $$[$0].content, false);\r\n                                else if ($$[$0].texto !== '') /** El contenido es un texto */\r\n                                    newObj = new Objeto($$[$0 - 2], $$[$0].texto, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 1], [], false);\r\n                                else\r\n                                    newObj = new Objeto($$[$0 - 2], '', _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 1], [], false);\r\n                            }\r\n                            else {\r\n                                console.log('Linea 85: Error semantico: Las etiquetas deben ser iguales');\r\n                                errores.default.agregarError('semantico', 'Las etiquetas deben ser iguales', _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                            }\r\n                        }\r\n                    }\r\n                    this.$ = newObj;\r\n                    /* CONSTRUCCION DE CST */\r\n                    let tElement = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let listAtrs2 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'ELEM', null, [new Nodo(cst.cstXmlDesc.getId(), 'identifier', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0 - 2].toString(), null, [])]),\r\n                        listAtrs2, tElement]));\r\n                    break;\r\n                case 8:\r\n                    if ($$[$0 - 1] !== null) {\r\n                        $$[$0 - 1] = $$[$0 - 1].concat($$[$0]);\r\n                        this.$ = $$[$0 - 1];\r\n                    }\r\n                    else\r\n                        this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let listAtrs = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let atr = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'LISTAATRIBUTOS', null, [atr, listAtrs]));\r\n                    break;\r\n                case 9:\r\n                    this.$ = [];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'LISTAATRIBUTOS', null, [new Nodo(cst.cstXmlDesc.getId(), 'epsilon', null, [])]));\r\n                    break;\r\n                case 10:\r\n                    this.$ = [new Atributo($$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column)];\r\n                    break;\r\n                case 11:\r\n                    console.log('Entra a error sintactico de atributo');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = null;\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'ATRIBUTO', null, [new Nodo(cst.cstXmlDesc.getId(), 'identifier', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0 - 1].toString(), null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'asignacion', null, [new Nodo(cst.cstXmlDesc.getId(), '=', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), cst.cstXmlDesc.obtenerUltimoNodo(), null, [])]));\r\n                    break;\r\n                case 12:\r\n                    console.log('Entra a error sintactico de atributo 2');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = null;\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'ATRIBUTO', null, [new Nodo(cst.cstXmlDesc.getId(), 'error', null, []),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'lt', null, [new Nodo(cst.cstXmlDesc.getId(), '<', null, [])])]));\r\n                    break;\r\n                case 13:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TIPOCADENA', null, [new Nodo(cst.cstXmlDesc.getId(), 'cadena', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 14:\r\n                    this.$ = $$[$0].toString().replaceAll(\"'\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TIPOCADENA', null, [new Nodo(cst.cstXmlDesc.getId(), 'cadena', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"'\", \"\"), null, [])])]));\r\n                    break;\r\n                case 15:\r\n                    this.$ = { 'texto': '', 'content': null, 'idCierre': '' };\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TIPOELEM', null, [new Nodo(cst.cstXmlDesc.getId(), 'diag', null, [new Nodo(cst.cstXmlDesc.getId(), '/', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'gt', null, [new Nodo(cst.cstXmlDesc.getId(), '>', null, [])])]));\r\n                    break;\r\n                case 16:\r\n                    if ($$[$0].idCierre !== '') {\r\n                        if ($$[$0 - 2] !== '') /* Etiqueta con texto*/\r\n                            $$[$0].texto = $$[$0 - 2];\r\n                        this.$ = $$[$0];\r\n                    }\r\n                    /* CONSTRUCCION DE CST */\r\n                    let mElem2 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let textContent2 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TIPOELEM', null, [new Nodo(cst.cstXmlDesc.getId(), 'gt', null, [new Nodo(cst.cstXmlDesc.getId(), '>', null, [])]),\r\n                        textContent2,\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'lt', null, [new Nodo(cst.cstXmlDesc.getId(), '<', null, [])]),\r\n                        mElem2]));\r\n                    break;\r\n                case 17:\r\n                    console.log('Entra a error sintactico de TIPOELEM');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    this.$ = null;\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TIPOELEM', null, [new Nodo(cst.cstXmlDesc.getId(), 'diag', null, [new Nodo(cst.cstXmlDesc.getId(), '/', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'error', null, []),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'gt', null, [new Nodo(cst.cstXmlDesc.getId(), '>', null, [])])]));\r\n                    break;\r\n                case 18:\r\n                    this.$ = { 'texto': '', 'content': null, 'idCierre': $$[$0 - 1] };\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'MOREELEMENTS', null, [new Nodo(cst.cstXmlDesc.getId(), 'diag', null, [new Nodo(cst.cstXmlDesc.getId(), '/', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'identifier', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0 - 1].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'gt', null, [new Nodo(cst.cstXmlDesc.getId(), '>', null, [])])]));\r\n                    break;\r\n                case 19:\r\n                    if ($$[$0].idCierre !== '') { /** Se esta cerrando una etiqueta y se comienza a subir **/\r\n                        if ($$[$0 - 2] instanceof Objeto) {\r\n                            if ($$[$0].content === null)\r\n                                this.$ = { 'texto': '', 'content': [$$[$0 - 2]], 'idCierre': $$[$0].idCierre };\r\n                            else {\r\n                                $$[$0].content.unshift($$[$0 - 2]);\r\n                                this.$ = { 'texto': '', 'content': $$[$0].content, 'idCierre': $$[$0].idCierre };\r\n                            }\r\n                        }\r\n                        else if ($$[$0 - 2] === null) {\r\n                            this.$ = $$[$0];\r\n                        }\r\n                        else {\r\n                        }\r\n                    }\r\n                    /* CONSTRUCCION DE CST */\r\n                    let mElem1 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let elem1 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'MOREELEMENTS', null, [elem1,\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'lt', null, [new Nodo(cst.cstXmlDesc.getId(), '<', null, [])]),\r\n                        mElem1]));\r\n                    break;\r\n                case 20:\r\n                    $$[$0 - 1] = $$[$0 - 1] + $$[$0];\r\n                    this.$ = $$[$0 - 1];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let textContent = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let t1 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXTCONTENT', null, [t1, textContent]));\r\n                    break;\r\n                case 21:\r\n                    this.$ = '';\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXTCONTENT', null, [new Nodo(cst.cstXmlDesc.getId(), 'epsilon', null, [])]));\r\n                    break;\r\n                case 22:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'identificador', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 23:\r\n                    this.$ = $$[$0].toString();\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'content', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 24:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'double', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 25:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'integer', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 26:\r\n                    this.$ = $$[$0].toString();\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'identificador', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 27:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'comilla simple', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 28:\r\n                    this.$ = \"<\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'menor que', null, [new Nodo(cst.cstXmlDesc.getId(), \"<\", null, [])])]));\r\n                    break;\r\n                case 29:\r\n                    this.$ = \">\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'mayor que', null, [new Nodo(cst.cstXmlDesc.getId(), \">\", null, [])])]));\r\n                    break;\r\n                case 30:\r\n                    this.$ = \"&\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'ampersand', null, [new Nodo(cst.cstXmlDesc.getId(), \"&\", null, [])])]));\r\n                    break;\r\n                case 31:\r\n                    this.$ = \"'\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'apostrofe', null, [new Nodo(cst.cstXmlDesc.getId(), \"'\", null, [])])]));\r\n                    break;\r\n                case 32:\r\n                    this.$ = \"\\\"\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'comilla doble', null, [new Nodo(cst.cstXmlDesc.getId(), '\"', null, [])])]));\r\n                    break;\r\n                case 33:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, []));\r\n                    break;\r\n            }\r\n        },\r\n        table: [{ 2: [1, 4], 3: 1, 4: 2, 6: [1, 3] }, { 1: [3] }, { 5: [1, 5] }, { 7: [1, 6] }, { 5: $V0, 6: $V1, 11: 7, 12: 8 }, { 1: [2, 1] }, { 8: [1, 10] }, { 5: [2, 3] }, { 5: $V0, 6: $V1, 11: 11, 12: 8 }, { 13: 12, 14: $V2 }, { 2: $V3, 7: $V4, 9: 14, 14: $V5, 16: 15 }, { 5: [2, 4] }, o($V6, [2, 6]), o([10, 21], $V4, { 16: 15, 9: 18, 2: $V3, 14: $V5 }), { 7: [1, 19] }, o($V7, $V4, { 16: 15, 9: 20, 2: $V3, 14: $V5 }), { 17: [1, 21] }, { 6: [1, 23], 10: [1, 22] }, { 10: [1, 26], 15: 24, 21: [1, 25] }, { 10: [1, 27] }, o($V7, [2, 8]), { 18: 28, 19: [1, 29], 20: [1, 30] }, o($V8, [2, 11]), o($V8, [2, 12]), o($V6, [2, 7]), { 2: [1, 32], 10: [1, 31] }, { 2: $V9, 6: $Va, 8: $Vb, 14: $Vc, 22: 33, 24: 34, 25: $Vd, 26: $Ve, 27: $Vf, 28: $Vg, 29: $Vh, 30: $Vi, 31: $Vj, 32: $Vk, 33: $Vl }, { 5: $V0, 6: $V1, 11: 47, 12: 8 }, o($V8, [2, 10]), o($V8, [2, 13]), o($V8, [2, 14]), o($V6, [2, 15]), { 10: [1, 48] }, { 6: [1, 49] }, { 2: $V9, 6: $Va, 8: $Vb, 14: $Vc, 22: 50, 24: 34, 25: $Vd, 26: $Ve, 27: $Vf, 28: $Vg, 29: $Vh, 30: $Vi, 31: $Vj, 32: $Vk, 33: $Vl }, o($Vm, [2, 22]), o($Vm, [2, 23]), o($Vm, [2, 24]), o($Vm, [2, 25]), o($Vm, [2, 26]), o($Vm, [2, 27]), o($Vm, [2, 28]), o($Vm, [2, 29]), o($Vm, [2, 30]), o($Vm, [2, 31]), o($Vm, [2, 32]), o($Vm, [2, 33]), { 5: [2, 2] }, o($V6, [2, 17]), { 13: 53, 14: $V2, 21: $Vn, 23: 51 }, { 6: [2, 20] }, o($V6, [2, 16]), { 14: [1, 54] }, { 6: [1, 55] }, { 10: [1, 56] }, { 13: 53, 14: $V2, 21: $Vn, 23: 57 }, o($V6, [2, 18]), o($V6, [2, 19])],\r\n        defaultActions: { 5: [2, 1], 7: [2, 3], 11: [2, 4], 47: [2, 2], 50: [2, 20] },\r\n        parseError: function parseError(str, hash) {\r\n            if (hash.recoverable) {\r\n                this.trace(str);\r\n            }\r\n            else {\r\n                var error = new Error(str);\r\n                error.hash = hash;\r\n                throw error;\r\n            }\r\n        },\r\n        parse: function parse(input) {\r\n            var self = this, stack = [0], tstack = [], // token stack\r\n            vstack = [null], // semantic value stack\r\n            lstack = [], // location stack\r\n            table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n            var args = lstack.slice.call(arguments, 1);\r\n            //this.reductionCount = this.shiftCount = 0;\r\n            var lexer = Object.create(this.lexer);\r\n            var sharedState = { yy: {} };\r\n            // copy state\r\n            for (var k in this.yy) {\r\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n                    sharedState.yy[k] = this.yy[k];\r\n                }\r\n            }\r\n            lexer.setInput(input, sharedState.yy);\r\n            sharedState.yy.lexer = lexer;\r\n            sharedState.yy.parser = this;\r\n            if (typeof lexer.yylloc == 'undefined') {\r\n                lexer.yylloc = {};\r\n            }\r\n            var yyloc = lexer.yylloc;\r\n            lstack.push(yyloc);\r\n            var ranges = lexer.options && lexer.options.ranges;\r\n            if (typeof sharedState.yy.parseError === 'function') {\r\n                this.parseError = sharedState.yy.parseError;\r\n            }\r\n            else {\r\n                this.parseError = Object.getPrototypeOf(this).parseError;\r\n            }\r\n            function popStack(n) {\r\n                stack.length = stack.length - 2 * n;\r\n                vstack.length = vstack.length - n;\r\n                lstack.length = lstack.length - n;\r\n            }\r\n            _token_stack: var lex = function () {\r\n                var token;\r\n                token = lexer.lex() || EOF;\r\n                // if token isn't its numeric value, convert\r\n                if (typeof token !== 'number') {\r\n                    token = self.symbols_[token] || token;\r\n                }\r\n                return token;\r\n            };\r\n            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n            while (true) {\r\n                // retreive state number from top of stack\r\n                state = stack[stack.length - 1];\r\n                // use default actions if available\r\n                if (this.defaultActions[state]) {\r\n                    action = this.defaultActions[state];\r\n                }\r\n                else {\r\n                    if (symbol === null || typeof symbol == 'undefined') {\r\n                        symbol = lex();\r\n                    }\r\n                    // read action for current state and first input\r\n                    action = table[state] && table[state][symbol];\r\n                }\r\n                _handle_error: \r\n                // handle parse error\r\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                    var error_rule_depth;\r\n                    var errStr = '';\r\n                    // Return the rule stack depth where the nearest error rule can be found.\r\n                    // Return FALSE when no error recovery rule was found.\r\n                    function locateNearestErrorRecoveryRule(state) {\r\n                        var stack_probe = stack.length - 1;\r\n                        var depth = 0;\r\n                        // try to recover from error\r\n                        for (;;) {\r\n                            // check for error recovery rule in this state\r\n                            if ((TERROR.toString()) in table[state]) {\r\n                                return depth;\r\n                            }\r\n                            if (state === 0 || stack_probe < 2) {\r\n                                return false; // No suitable error recovery rule available.\r\n                            }\r\n                            stack_probe -= 2; // popStack(1): [symbol, action]\r\n                            state = stack[stack_probe];\r\n                            ++depth;\r\n                        }\r\n                    }\r\n                    if (!recovering) {\r\n                        // first see if there's any chance at hitting an error recovery rule:\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                        // Report error\r\n                        expected = [];\r\n                        for (p in table[state]) {\r\n                            if (this.terminals_[p] && p > TERROR) {\r\n                                expected.push(\"'\" + this.terminals_[p] + \"'\");\r\n                            }\r\n                        }\r\n                        if (lexer.showPosition) {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \":\\n\" + lexer.showPosition() + \"\\nExpecting \" + expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\r\n                        }\r\n                        else {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \": Unexpected \" +\r\n                                (symbol == EOF ? \"end of input\" :\r\n                                    (\"'\" + (this.terminals_[symbol] || symbol) + \"'\"));\r\n                        }\r\n                        this.parseError(errStr, {\r\n                            text: lexer.match,\r\n                            token: this.terminals_[symbol] || symbol,\r\n                            line: lexer.yylineno,\r\n                            loc: yyloc,\r\n                            expected: expected,\r\n                            recoverable: (error_rule_depth !== false)\r\n                        });\r\n                    }\r\n                    else if (preErrorSymbol !== EOF) {\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                    }\r\n                    // just recovered from another error\r\n                    if (recovering == 3) {\r\n                        if (symbol === EOF || preErrorSymbol === EOF) {\r\n                            throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                        }\r\n                        // discard current lookahead and grab another\r\n                        yyleng = lexer.yyleng;\r\n                        yytext = lexer.yytext;\r\n                        yylineno = lexer.yylineno;\r\n                        yyloc = lexer.yylloc;\r\n                        symbol = lex();\r\n                    }\r\n                    // try to recover from error\r\n                    if (error_rule_depth === false) {\r\n                        throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n                    }\r\n                    popStack(error_rule_depth);\r\n                    preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n                    symbol = TERROR; // insert generic error symbol as new lookahead\r\n                    state = stack[stack.length - 1];\r\n                    action = table[state] && table[state][TERROR];\r\n                    recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n                }\r\n                // this shouldn't happen, unless resolve defaults are off\r\n                if (action[0] instanceof Array && action.length > 1) {\r\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n                }\r\n                switch (action[0]) {\r\n                    case 1: // shift\r\n                        //this.shiftCount++;\r\n                        stack.push(symbol);\r\n                        vstack.push(lexer.yytext);\r\n                        lstack.push(lexer.yylloc);\r\n                        stack.push(action[1]); // push state\r\n                        symbol = null;\r\n                        if (!preErrorSymbol) { // normal execution/no error\r\n                            yyleng = lexer.yyleng;\r\n                            yytext = lexer.yytext;\r\n                            yylineno = lexer.yylineno;\r\n                            yyloc = lexer.yylloc;\r\n                            if (recovering > 0) {\r\n                                recovering--;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // error just occurred, resume old lookahead f/ before error\r\n                            symbol = preErrorSymbol;\r\n                            preErrorSymbol = null;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        // reduce\r\n                        //this.reductionCount++;\r\n                        len = this.productions_[action[1]][1];\r\n                        // perform semantic action\r\n                        yyval.$ = vstack[vstack.length - len]; // default to $$ = $1\r\n                        // default location, uses first token for firsts, last for lasts\r\n                        yyval._$ = {\r\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                            last_line: lstack[lstack.length - 1].last_line,\r\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                            last_column: lstack[lstack.length - 1].last_column\r\n                        };\r\n                        if (ranges) {\r\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\r\n                        }\r\n                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n                        if (typeof r !== 'undefined') {\r\n                            return r;\r\n                        }\r\n                        // pop off stack\r\n                        if (len) {\r\n                            stack = stack.slice(0, -1 * len * 2);\r\n                            vstack = vstack.slice(0, -1 * len);\r\n                            lstack = lstack.slice(0, -1 * len);\r\n                        }\r\n                        stack.push(this.productions_[action[1]][0]); // push nonterminal (reduce)\r\n                        vstack.push(yyval.$);\r\n                        lstack.push(yyval._$);\r\n                        // goto new state = table[STATE][NONTERMINAL]\r\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n                        stack.push(newState);\r\n                        break;\r\n                    case 3:\r\n                        // accept\r\n                        return true;\r\n                }\r\n            }\r\n            return true;\r\n        } };\r\n    //const Nodo = require(\"./AST/nodo_arbol\");\r\n    //var raiz;\r\n    const { Objeto } = require(\"../XML/Objeto\");\r\n    const { Atributo } = require(\"../XML/Atributo\");\r\n    const errores = require('../Global/ListaError');\r\n    const { Nodo } = require('../Reporte/Nodo');\r\n    const cst = require('../Reporte/CST');\r\n    /* generated by jison-lex 0.3.4 */\r\n    var lexer = (function () {\r\n        var lexer = ({\r\n            EOF: 1,\r\n            parseError: function parseError(str, hash) {\r\n                if (this.yy.parser) {\r\n                    this.yy.parser.parseError(str, hash);\r\n                }\r\n                else {\r\n                    throw new Error(str);\r\n                }\r\n            },\r\n            // resets the lexer, sets new input\r\n            setInput: function (input, yy) {\r\n                this.yy = yy || this.yy || {};\r\n                this._input = input;\r\n                this._more = this._backtrack = this.done = false;\r\n                this.yylineno = this.yyleng = 0;\r\n                this.yytext = this.matched = this.match = '';\r\n                this.conditionStack = ['INITIAL'];\r\n                this.yylloc = {\r\n                    first_line: 1,\r\n                    first_column: 0,\r\n                    last_line: 1,\r\n                    last_column: 0\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [0, 0];\r\n                }\r\n                this.offset = 0;\r\n                return this;\r\n            },\r\n            // consumes and returns one char from the input\r\n            input: function () {\r\n                var ch = this._input[0];\r\n                this.yytext += ch;\r\n                this.yyleng++;\r\n                this.offset++;\r\n                this.match += ch;\r\n                this.matched += ch;\r\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno++;\r\n                    this.yylloc.last_line++;\r\n                }\r\n                else {\r\n                    this.yylloc.last_column++;\r\n                }\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range[1]++;\r\n                }\r\n                this._input = this._input.slice(1);\r\n                return ch;\r\n            },\r\n            // unshifts one char (or a string) into the input\r\n            unput: function (ch) {\r\n                var len = ch.length;\r\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n                this._input = ch + this._input;\r\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n                //this.yyleng -= len;\r\n                this.offset -= len;\r\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n                this.match = this.match.substr(0, this.match.length - 1);\r\n                this.matched = this.matched.substr(0, this.matched.length - 1);\r\n                if (lines.length - 1) {\r\n                    this.yylineno -= lines.length - 1;\r\n                }\r\n                var r = this.yylloc.range;\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: lines ?\r\n                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                            + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n                        this.yylloc.first_column - len\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n                }\r\n                this.yyleng = this.yytext.length;\r\n                return this;\r\n            },\r\n            // When called from action, caches matched text and appends it on next action\r\n            more: function () {\r\n                this._more = true;\r\n                return this;\r\n            },\r\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n            reject: function () {\r\n                if (this.options.backtrack_lexer) {\r\n                    this._backtrack = true;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n                return this;\r\n            },\r\n            // retain first n characters of the match\r\n            less: function (n) {\r\n                this.unput(this.match.slice(n));\r\n            },\r\n            // displays already matched input, i.e. for error messages\r\n            pastInput: function () {\r\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\r\n            },\r\n            // displays upcoming input, i.e. for error messages\r\n            upcomingInput: function () {\r\n                var next = this.match;\r\n                if (next.length < 20) {\r\n                    next += this._input.substr(0, 20 - next.length);\r\n                }\r\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n            },\r\n            // displays the character position where the lexing error occurred, i.e. for error messages\r\n            showPosition: function () {\r\n                var pre = this.pastInput();\r\n                var c = new Array(pre.length + 1).join(\"-\");\r\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n            },\r\n            // test the lexed token: return FALSE when not a match, otherwise return token\r\n            test_match: function (match, indexed_rule) {\r\n                var token, lines, backup;\r\n                if (this.options.backtrack_lexer) {\r\n                    // save context\r\n                    backup = {\r\n                        yylineno: this.yylineno,\r\n                        yylloc: {\r\n                            first_line: this.yylloc.first_line,\r\n                            last_line: this.last_line,\r\n                            first_column: this.yylloc.first_column,\r\n                            last_column: this.yylloc.last_column\r\n                        },\r\n                        yytext: this.yytext,\r\n                        match: this.match,\r\n                        matches: this.matches,\r\n                        matched: this.matched,\r\n                        yyleng: this.yyleng,\r\n                        offset: this.offset,\r\n                        _more: this._more,\r\n                        _input: this._input,\r\n                        yy: this.yy,\r\n                        conditionStack: this.conditionStack.slice(0),\r\n                        done: this.done\r\n                    };\r\n                    if (this.options.ranges) {\r\n                        backup.yylloc.range = this.yylloc.range.slice(0);\r\n                    }\r\n                }\r\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno += lines.length;\r\n                }\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.last_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.last_column,\r\n                    last_column: lines ?\r\n                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                        this.yylloc.last_column + match[0].length\r\n                };\r\n                this.yytext += match[0];\r\n                this.match += match[0];\r\n                this.matches = match;\r\n                this.yyleng = this.yytext.length;\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n                }\r\n                this._more = false;\r\n                this._backtrack = false;\r\n                this._input = this._input.slice(match[0].length);\r\n                this.matched += match[0];\r\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n                if (this.done && this._input) {\r\n                    this.done = false;\r\n                }\r\n                if (token) {\r\n                    return token;\r\n                }\r\n                else if (this._backtrack) {\r\n                    // recover context\r\n                    for (var k in backup) {\r\n                        this[k] = backup[k];\r\n                    }\r\n                    return false; // rule action called reject() implying the next rule should be tested instead.\r\n                }\r\n                return false;\r\n            },\r\n            // return next match in input\r\n            next: function () {\r\n                if (this.done) {\r\n                    return this.EOF;\r\n                }\r\n                if (!this._input) {\r\n                    this.done = true;\r\n                }\r\n                var token, match, tempMatch, index;\r\n                if (!this._more) {\r\n                    this.yytext = '';\r\n                    this.match = '';\r\n                }\r\n                var rules = this._currentRules();\r\n                for (var i = 0; i < rules.length; i++) {\r\n                    tempMatch = this._input.match(this.rules[rules[i]]);\r\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                        match = tempMatch;\r\n                        index = i;\r\n                        if (this.options.backtrack_lexer) {\r\n                            token = this.test_match(tempMatch, rules[i]);\r\n                            if (token !== false) {\r\n                                return token;\r\n                            }\r\n                            else if (this._backtrack) {\r\n                                match = false;\r\n                                continue; // rule action called reject() implying a rule MISmatch.\r\n                            }\r\n                            else {\r\n                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else if (!this.options.flex) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (match) {\r\n                    token = this.test_match(match, rules[index]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    }\r\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                    return false;\r\n                }\r\n                if (this._input === \"\") {\r\n                    return this.EOF;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n            },\r\n            // return next match that has a token\r\n            lex: function lex() {\r\n                var r = this.next();\r\n                if (r) {\r\n                    return r;\r\n                }\r\n                else {\r\n                    return this.lex();\r\n                }\r\n            },\r\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n            begin: function begin(condition) {\r\n                this.conditionStack.push(condition);\r\n            },\r\n            // pop the previously active lexer condition state off the condition stack\r\n            popState: function popState() {\r\n                var n = this.conditionStack.length - 1;\r\n                if (n > 0) {\r\n                    return this.conditionStack.pop();\r\n                }\r\n                else {\r\n                    return this.conditionStack[0];\r\n                }\r\n            },\r\n            // produce the lexer rule set which is active for the currently active lexer condition state\r\n            _currentRules: function _currentRules() {\r\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n                }\r\n                else {\r\n                    return this.conditions[\"INITIAL\"].rules;\r\n                }\r\n            },\r\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n            topState: function topState(n) {\r\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n                if (n >= 0) {\r\n                    return this.conditionStack[n];\r\n                }\r\n                else {\r\n                    return \"INITIAL\";\r\n                }\r\n            },\r\n            // alias for begin(condition)\r\n            pushState: function pushState(condition) {\r\n                this.begin(condition);\r\n            },\r\n            // return the number of states currently on the stack\r\n            stateStackSize: function stateStackSize() {\r\n                return this.conditionStack.length;\r\n            },\r\n            options: {},\r\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n                var YYSTATE = YY_START;\r\n                switch ($avoiding_name_collisions) {\r\n                    case 0:\r\n                        this.begin('comment');\r\n                        break;\r\n                    case 1:\r\n                        this.popState();\r\n                        break;\r\n                    case 2: /* skip comment content*/\r\n                        break;\r\n                    case 3: /* skip whitespace */\r\n                        break;\r\n                    case 4:\r\n                        return 6;\r\n                        break;\r\n                    case 5:\r\n                        return 10;\r\n                        break;\r\n                    case 6:\r\n                        return 17;\r\n                        break;\r\n                    case 7:\r\n                        return 21;\r\n                        break;\r\n                    case 8:\r\n                        return 7;\r\n                        break;\r\n                    case 9:\r\n                        return 28;\r\n                        break;\r\n                    case 10:\r\n                        return \"xml\";\r\n                        break;\r\n                    case 11:\r\n                        return 29;\r\n                        break;\r\n                    case 12:\r\n                        return 30;\r\n                        break;\r\n                    case 13:\r\n                        return 31;\r\n                        break;\r\n                    case 14:\r\n                        return \"apostrophe\";\r\n                        break;\r\n                    case 15:\r\n                        return \"quot\";\r\n                        break;\r\n                    case 16:\r\n                        return 26;\r\n                        break;\r\n                    case 17:\r\n                        return 27;\r\n                        break;\r\n                    case 18:\r\n                        return 14;\r\n                        break;\r\n                    case 19:\r\n                        return 19;\r\n                        break;\r\n                    case 20:\r\n                        return 20;\r\n                        break;\r\n                    case 21:\r\n                        return 25;\r\n                        break;\r\n                    case 22:\r\n                        return 5;\r\n                        break;\r\n                    case 23:\r\n                        errores.default.agregarError('lexico', 'Simbolo inesperado ' + yy_.yytext, yy_.yylloc.first_line, yy_.yylloc.first_column);\r\n                        break;\r\n                }\r\n            },\r\n            rules: [/^(?:<!--)/, /^(?:-->)/, /^(?:.)/, /^(?:\\s+)/, /^(?:<)/, /^(?:>)/, /^(?:=)/, /^(?:\\/)/, /^(?:\\?)/, /^(?:')/, /^(?:[xX][mM][lL])/, /^(?:&lt;)/, /^(?:&gt;)/, /^(?:&amp;)/, /^(?:&apos;)/, /^(?:&quot;)/, /^(?:(([0-9]+\\.[0-9]*)|(\\.[0-9]+)))/, /^(?:[0-9]+)/, /^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ.-]*)/, /^(?:(\"((\\\\([\\'\\\"\\\\]))|([^\\\"\\\\]+))*\"))/, /^(?:('((\\\\([\\'\\\"\\\\]))|([^\\'\\\\]))*'))/, /^(?:([^<]))/, /^(?:$)/, /^(?:.)/],\r\n            conditions: { \"comment\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], \"inclusive\": true }, \"INITIAL\": { \"rules\": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], \"inclusive\": true } }\r\n        });\r\n        return lexer;\r\n    })();\r\n    parser.lexer = lexer;\r\n    function Parser() {\r\n        this.yy = {};\r\n    }\r\n    Parser.prototype = parser;\r\n    parser.Parser = Parser;\r\n    return new Parser;\r\n})();\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\n    exports.parser = XML_GramaticaDesc;\r\n    exports.Parser = XML_GramaticaDesc.Parser;\r\n    exports.parse = function () { return XML_GramaticaDesc.parse.apply(XML_GramaticaDesc, arguments); };\r\n    exports.main = function commonjsMain(args) {\r\n        if (!args[1]) {\r\n            console.log('Usage: ' + args[0] + ' FILE');\r\n            process.exit(1);\r\n        }\r\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n        return exports.parser.parse(source);\r\n    };\r\n    if (typeof module !== 'undefined' && require.main === module) {\r\n        exports.main(process.argv.slice(1));\r\n    }\r\n}\r\n","\"use strict\";\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XPath_GramaticaAsc = (function () {\r\n    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)\r\n        ; return o; }, $V0 = [1, 4], $V1 = [1, 16], $V2 = [1, 7], $V3 = [1, 9], $V4 = [1, 8], $V5 = [1, 15], $V6 = [1, 14], $V7 = [1, 12], $V8 = [1, 13], $V9 = [5, 6], $Va = [5, 6, 12, 16, 20, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56], $Vb = [2, 39], $Vc = [1, 26], $Vd = [1, 31], $Ve = [1, 34], $Vf = [1, 35], $Vg = [1, 36], $Vh = [1, 37], $Vi = [1, 38], $Vj = [1, 39], $Vk = [1, 40], $Vl = [1, 41], $Vm = [1, 42], $Vn = [1, 43], $Vo = [1, 44], $Vp = [1, 45], $Vq = [1, 46], $Vr = [1, 58], $Vs = [1, 59], $Vt = [1, 60], $Vu = [1, 62], $Vv = [1, 54], $Vw = [1, 55], $Vx = [1, 56], $Vy = [1, 57], $Vz = [1, 80], $VA = [1, 81], $VB = [1, 82], $VC = [1, 83], $VD = [1, 84], $VE = [1, 85], $VF = [1, 86], $VG = [1, 87], $VH = [1, 88], $VI = [1, 89], $VJ = [1, 90], $VK = [1, 91], $VL = [1, 92], $VM = [16, 20, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56], $VN = [1, 99], $VO = [1, 102], $VP = [1, 100], $VQ = [1, 101], $VR = [16, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56], $VS = [16, 46, 47, 48, 49, 50, 51, 52, 53, 56];\r\n    var parser = { trace: function trace() { },\r\n        yy: {},\r\n        symbols_: { \"error\": 2, \"START\": 3, \"LISTACONSULTAS\": 4, \"EOF\": 5, \"andSelect\": 6, \"CONSULTA\": 7, \"identifier\": 8, \"LISTANODOS\": 9, \"MASTIPOS\": 10, \"NODO\": 11, \"diag\": 12, \"TIPONODO\": 13, \"corA\": 14, \"EXPRESION\": 15, \"corC\": 16, \"AXES\": 17, \"attr\": 18, \"PREDICATE\": 19, \"asterisco\": 20, \"dot\": 21, \"FUNCIONES\": 22, \"ancestor\": 23, \"dospuntos\": 24, \"NODETEST\": 25, \"ancestorSelf\": 26, \"attribute\": 27, \"child\": 28, \"descendant\": 29, \"descendantSelf\": 30, \"following\": 31, \"followingSib\": 32, \"namespace\": 33, \"parent\": 34, \"preced\": 35, \"precedSib\": 36, \"self\": 37, \"textFunc\": 38, \"nodeFunc\": 39, \"LISTAEXPRESIONES\": 40, \"PRIMITIVA\": 41, \"OPERACION\": 42, \"mas\": 43, \"menos\": 44, \"div\": 45, \"lte\": 46, \"lt\": 47, \"gte\": 48, \"gt\": 49, \"igual\": 50, \"nequal\": 51, \"or\": 52, \"and\": 53, \"mod\": 54, \"parA\": 55, \"parC\": 56, \"DoubleLiteral\": 57, \"IntegerLiteral\": 58, \"cadena\": 59, \"cadena2\": 60, \"lastFunc\": 61, \"positionFunc\": 62, \"$accept\": 0, \"$end\": 1 },\r\n        terminals_: { 2: \"error\", 5: \"EOF\", 6: \"andSelect\", 8: \"identifier\", 12: \"diag\", 14: \"corA\", 16: \"corC\", 18: \"attr\", 20: \"asterisco\", 21: \"dot\", 23: \"ancestor\", 24: \"dospuntos\", 26: \"ancestorSelf\", 27: \"attribute\", 28: \"child\", 29: \"descendant\", 30: \"descendantSelf\", 31: \"following\", 32: \"followingSib\", 33: \"namespace\", 34: \"parent\", 35: \"preced\", 36: \"precedSib\", 37: \"self\", 38: \"textFunc\", 39: \"nodeFunc\", 43: \"mas\", 44: \"menos\", 45: \"div\", 46: \"lte\", 47: \"lt\", 48: \"gte\", 49: \"gt\", 50: \"igual\", 51: \"nequal\", 52: \"or\", 53: \"and\", 54: \"mod\", 55: \"parA\", 56: \"parC\", 57: \"DoubleLiteral\", 58: \"IntegerLiteral\", 59: \"cadena\", 60: \"cadena2\", 61: \"lastFunc\", 62: \"positionFunc\" },\r\n        productions_: [0, [3, 2], [4, 3], [4, 1], [7, 1], [7, 2], [7, 2], [7, 1], [7, 1], [9, 2], [9, 1], [11, 2], [11, 3], [11, 2], [11, 3], [13, 1], [13, 4], [13, 1], [13, 1], [10, 3], [10, 3], [10, 2], [10, 3], [10, 2], [10, 1], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [19, 3], [19, 0], [25, 2], [25, 2], [25, 2], [25, 2], [40, 2], [40, 1], [15, 1], [15, 1], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [41, 1], [41, 1], [41, 1], [41, 1], [41, 1], [41, 2], [41, 2], [41, 1], [41, 2], [41, 1], [22, 1], [22, 1], [22, 1], [22, 1]],\r\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n            /* this == yyval */\r\n            var $0 = $$.length - 1;\r\n            switch (yystate) {\r\n                case 1:\r\n                    this.$ = $$[$0 - 1];\r\n                    return this.$;\r\n                    break;\r\n                case 2:\r\n                    $$[$0 - 2].push(new Consulta($$[$0], _$[$0].first_line, _$[$0].first_column));\r\n                    this.$ = $$[$0 - 2];\r\n                    break;\r\n                case 3:\r\n                    this.$ = [new Consulta($$[$0], _$[$0].first_line, _$[$0].first_column)];\r\n                    break;\r\n                case 4:\r\n                    this.$ = [new Nodo($$[$0], TipoNodo.IDENTIFIER, _$[$0].first_line, _$[$0].first_column)];\r\n                    break;\r\n                case 5:\r\n                    this.$ = [new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column)];\r\n                    this.$ = this.$.concat($$[$0]);\r\n                    break;\r\n                case 6:\r\n                    this.$ = [$$[$0 - 1]];\r\n                    this.$ = this.$.concat($$[$0]);\r\n                    break;\r\n                case 7:\r\n                case 47:\r\n                case 74:\r\n                case 75:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 8:\r\n                    this.$ = [$$[$0]];\r\n                    break;\r\n                case 9:\r\n                    $$[$0 - 1].push($$[$0]);\r\n                    this.$ = $$[$0 - 1];\r\n                    break;\r\n                case 10:\r\n                    this.$ = [$$[$0]];\r\n                    break;\r\n                case 11:\r\n                    if (this.$ != null) {\r\n                        $$[$0].fromRoot = true;\r\n                        this.$ = $$[$0];\r\n                    }\r\n                    break;\r\n                case 12:\r\n                    if (this.$ != null) {\r\n                        $$[$0].fromRoot = false;\r\n                        this.$ = $$[$0];\r\n                    }\r\n                    break;\r\n                case 13:\r\n                    console.log('Entra a error sintactico de one diag');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = new Nodo($$[$0], TipoNodo.NODOERROR, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 14:\r\n                    console.log('Entra a error sintactico de two diags');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    this.$ = new Nodo($$[$0], TipoNodo.NODOERROR, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 15:\r\n                    this.$ = new Nodo($$[$0], TipoNodo.IDENTIFIER, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 16:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.IDENTIFIER, _$[$0 - 3].first_line, _$[$0 - 3].first_column, new Predicate($$[$0 - 1], _$[$0 - 3].first_line, _$[$0 - 3].first_column));\r\n                    break;\r\n                case 17:\r\n                case 18:\r\n                case 46:\r\n                case 72:\r\n                case 73:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 19:\r\n                case 20:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.ATRIBUTO, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 21:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.DOT, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 22:\r\n                    this.$ = new Nodo($$[$0 - 2] + $$[$0 - 1], TipoNodo.DOTDOT, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 23:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 24:\r\n                    this.$ = new Nodo($$[$0], TipoNodo.FUNCION, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 25:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.ANCESTOR, $$[$0]);\r\n                    break;\r\n                case 26:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.ANCESTORORSELF, $$[$0]);\r\n                    break;\r\n                case 27:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.ATTRIBUTE, $$[$0]);\r\n                    break;\r\n                case 28:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.CHILD, $$[$0]);\r\n                    break;\r\n                case 29:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.DESCENDANT, $$[$0]);\r\n                    break;\r\n                case 30:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.DESCENDANTORSELF, $$[$0]);\r\n                    break;\r\n                case 31:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.FOLLOWING, $$[$0]);\r\n                    break;\r\n                case 32:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.FOLLOWINGSIBLING, $$[$0]);\r\n                    break;\r\n                case 33:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.NAMESPACE, $$[$0]);\r\n                    break;\r\n                case 34:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.PARENT, $$[$0]);\r\n                    break;\r\n                case 35:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.PRECEDING, $$[$0]);\r\n                    break;\r\n                case 36:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.PRECEDINGSIBLING, $$[$0]);\r\n                    break;\r\n                case 37:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.SELF, $$[$0]);\r\n                    break;\r\n                case 38:\r\n                    this.$ = new Predicate($$[$0 - 1], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 39:\r\n                    this.$ = [];\r\n                    break;\r\n                case 40:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    break;\r\n                case 41:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.FUNCION, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    break;\r\n                case 42:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.FUNCION, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.FUNCION, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    break;\r\n                case 43:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    break;\r\n                case 44:\r\n                    $$[$0 - 1].push($$[$0]);\r\n                    this.$ = $$[$0 - 1];\r\n                    break;\r\n                case 45:\r\n                    this.$ = [$$[$0]];\r\n                    break;\r\n                case 48:\r\n                    this.$ = new Operacion(TipoOperacion.MULTIPLICACION, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 49:\r\n                    this.$ = new Operacion(TipoOperacion.SUMA, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 50:\r\n                    this.$ = new Operacion(TipoOperacion.RESTA, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 51:\r\n                    this.$ = new Operacion(TipoOperacion.DIVISION, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 52:\r\n                    this.$ = new Operacion(TipoOperacion.MENORIGUALQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 53:\r\n                    this.$ = new Operacion(TipoOperacion.MENORQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 54:\r\n                    this.$ = new Operacion(TipoOperacion.MAYORIGUALQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 55:\r\n                    this.$ = new Operacion(TipoOperacion.MAYORQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 56:\r\n                    this.$ = new Operacion(TipoOperacion.IGUAL, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 57:\r\n                    this.$ = new Operacion(TipoOperacion.DIFERENTEQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 58:\r\n                    this.$ = new Operacion(TipoOperacion.OR, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 59:\r\n                    this.$ = new Operacion(TipoOperacion.AND, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 60:\r\n                    this.$ = new Operacion(TipoOperacion.MOD, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 61:\r\n                    this.$ = new Operacion(TipoOperacion.PAR, $$[$0 - 1], null, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 62:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.DOUBLE, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 63:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.INTEGER, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 64:\r\n                case 65:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.CADENA, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 66:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.IDENTIFIER, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 67:\r\n                case 68:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.ATRIBUTO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 69:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.DOT, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 70:\r\n                    this.$ = [new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column)];\r\n                    this.$ = this.$.concat($$[$0]);\r\n                    this.$ = new Primitiva(this.$, TipoPrim.CONSULTA, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 71:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.FUNCION, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n            }\r\n        },\r\n        table: [{ 3: 1, 4: 2, 7: 3, 8: $V0, 9: 6, 10: 5, 11: 11, 12: $V1, 18: $V2, 20: $V3, 21: $V4, 22: 10, 38: $V5, 39: $V6, 61: $V7, 62: $V8 }, { 1: [3] }, { 5: [1, 17], 6: [1, 18] }, o($V9, [2, 3]), o($V9, [2, 4], { 11: 11, 9: 19, 12: $V1 }), o($V9, [2, 8], { 11: 11, 9: 20, 12: $V1 }), o($V9, [2, 7], { 11: 21, 12: $V1 }), { 8: [1, 22], 20: [1, 23] }, o($Va, $Vb, { 19: 24, 14: $Vc, 21: [1, 25] }), o($Va, $Vb, { 19: 27, 14: $Vc }), o($Va, [2, 24]), o($Va, [2, 10]), o($Va, [2, 72]), o($Va, [2, 73]), o($Va, [2, 74]), o($Va, [2, 75]), { 2: [1, 30], 8: $Vd, 10: 32, 12: [1, 29], 13: 28, 17: 33, 18: $V2, 20: $V3, 21: $V4, 22: 10, 23: $Ve, 26: $Vf, 27: $Vg, 28: $Vh, 29: $Vi, 30: $Vj, 31: $Vk, 32: $Vl, 33: $Vm, 34: $Vn, 35: $Vo, 36: $Vp, 37: $Vq, 38: $V5, 39: $V6, 61: $V7, 62: $V8 }, { 1: [2, 1] }, { 7: 47, 8: $V0, 9: 6, 10: 5, 11: 11, 12: $V1, 18: $V2, 20: $V3, 21: $V4, 22: 10, 38: $V5, 39: $V6, 61: $V7, 62: $V8 }, o($V9, [2, 5], { 11: 21, 12: $V1 }), o($V9, [2, 6], { 11: 21, 12: $V1 }), o($Va, [2, 9]), o($Va, $Vb, { 19: 48, 14: $Vc }), o($Va, $Vb, { 19: 49, 14: $Vc }), o($Va, [2, 21]), o($Va, $Vb, { 19: 50, 14: $Vc }), { 8: $Vr, 15: 51, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, o($Va, [2, 23]), o($Va, [2, 11]), { 2: [1, 64], 8: $Vd, 10: 32, 13: 63, 17: 33, 18: $V2, 20: $V3, 21: $V4, 22: 10, 23: $Ve, 26: $Vf, 27: $Vg, 28: $Vh, 29: $Vi, 30: $Vj, 31: $Vk, 32: $Vl, 33: $Vm, 34: $Vn, 35: $Vo, 36: $Vp, 37: $Vq, 38: $V5, 39: $V6, 61: $V7, 62: $V8 }, o($Va, [2, 13]), o($Va, [2, 15], { 14: [1, 65] }), o($Va, [2, 17]), o($Va, [2, 18]), { 24: [1, 66] }, { 24: [1, 67] }, { 24: [1, 68] }, { 24: [1, 69] }, { 24: [1, 70] }, { 24: [1, 71] }, { 24: [1, 72] }, { 24: [1, 73] }, { 24: [1, 74] }, { 24: [1, 75] }, { 24: [1, 76] }, { 24: [1, 77] }, { 24: [1, 78] }, o($V9, [2, 2]), o($Va, [2, 19]), o($Va, [2, 20]), o($Va, [2, 22]), { 16: [1, 79], 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 46: $VD, 47: $VE, 48: $VF, 49: $VG, 50: $VH, 51: $VI, 52: $VJ, 53: $VK, 54: $VL }, o($VM, [2, 46]), o($VM, [2, 47]), o($VM, [2, 62]), o($VM, [2, 63]), o($VM, [2, 64]), o($VM, [2, 65]), o($VM, [2, 66], { 11: 11, 9: 93, 12: $V1 }), { 8: [1, 94], 20: [1, 95] }, o($VM, [2, 69]), o($VM, [2, 71]), { 8: $Vr, 15: 96, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, o($Va, [2, 12]), o($Va, [2, 14]), { 8: $Vr, 15: 97, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $VN, 20: $VO, 25: 98, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 103, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 104, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 105, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 106, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 107, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 108, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 109, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 110, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 111, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 112, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 113, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 114, 38: $VP, 39: $VQ }, o($Va, [2, 38]), { 8: $Vr, 15: 115, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 116, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 117, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 118, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 119, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 120, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 121, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 122, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 123, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 124, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 125, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 126, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 127, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, o($VM, [2, 70], { 11: 21, 12: $V1 }), o($VM, [2, 67]), o($VM, [2, 68]), { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 46: $VD, 47: $VE, 48: $VF, 49: $VG, 50: $VH, 51: $VI, 52: $VJ, 53: $VK, 54: $VL, 56: [1, 128] }, { 16: [1, 129], 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 46: $VD, 47: $VE, 48: $VF, 49: $VG, 50: $VH, 51: $VI, 52: $VJ, 53: $VK, 54: $VL }, o($Va, [2, 25]), o($Va, $Vb, { 19: 130, 14: $Vc }), o($Va, $Vb, { 19: 131, 14: $Vc }), o($Va, $Vb, { 19: 132, 14: $Vc }), o($Va, $Vb, { 19: 133, 14: $Vc }), o($Va, [2, 26]), o($Va, [2, 27]), o($Va, [2, 28]), o($Va, [2, 29]), o($Va, [2, 30]), o($Va, [2, 31]), o($Va, [2, 32]), o($Va, [2, 33]), o($Va, [2, 34]), o($Va, [2, 35]), o($Va, [2, 36]), o($Va, [2, 37]), o($VM, [2, 48]), o($VR, [2, 49], { 20: $Vz, 45: $VC, 54: $VL }), o($VR, [2, 50], { 20: $Vz, 45: $VC, 54: $VL }), o($VM, [2, 51]), o($VS, [2, 52], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 54: $VL }), o($VS, [2, 53], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 54: $VL }), o($VS, [2, 54], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 54: $VL }), o($VS, [2, 55], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 54: $VL }), o($VS, [2, 56], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 54: $VL }), o($VS, [2, 57], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 54: $VL }), o([16, 52, 56], [2, 58], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 46: $VD, 47: $VE, 48: $VF, 49: $VG, 50: $VH, 51: $VI, 53: $VK, 54: $VL }), o([16, 52, 53, 56], [2, 59], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 46: $VD, 47: $VE, 48: $VF, 49: $VG, 50: $VH, 51: $VI, 54: $VL }), o($VM, [2, 60]), o($VM, [2, 61]), o($Va, [2, 16]), o($Va, [2, 40]), o($Va, [2, 41]), o($Va, [2, 42]), o($Va, [2, 43])],\r\n        defaultActions: { 17: [2, 1] },\r\n        parseError: function parseError(str, hash) {\r\n            if (hash.recoverable) {\r\n                this.trace(str);\r\n            }\r\n            else {\r\n                var error = new Error(str);\r\n                error.hash = hash;\r\n                throw error;\r\n            }\r\n        },\r\n        parse: function parse(input) {\r\n            var self = this, stack = [0], tstack = [], // token stack\r\n            vstack = [null], // semantic value stack\r\n            lstack = [], // location stack\r\n            table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n            var args = lstack.slice.call(arguments, 1);\r\n            //this.reductionCount = this.shiftCount = 0;\r\n            var lexer = Object.create(this.lexer);\r\n            var sharedState = { yy: {} };\r\n            // copy state\r\n            for (var k in this.yy) {\r\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n                    sharedState.yy[k] = this.yy[k];\r\n                }\r\n            }\r\n            lexer.setInput(input, sharedState.yy);\r\n            sharedState.yy.lexer = lexer;\r\n            sharedState.yy.parser = this;\r\n            if (typeof lexer.yylloc == 'undefined') {\r\n                lexer.yylloc = {};\r\n            }\r\n            var yyloc = lexer.yylloc;\r\n            lstack.push(yyloc);\r\n            var ranges = lexer.options && lexer.options.ranges;\r\n            if (typeof sharedState.yy.parseError === 'function') {\r\n                this.parseError = sharedState.yy.parseError;\r\n            }\r\n            else {\r\n                this.parseError = Object.getPrototypeOf(this).parseError;\r\n            }\r\n            function popStack(n) {\r\n                stack.length = stack.length - 2 * n;\r\n                vstack.length = vstack.length - n;\r\n                lstack.length = lstack.length - n;\r\n            }\r\n            _token_stack: var lex = function () {\r\n                var token;\r\n                token = lexer.lex() || EOF;\r\n                // if token isn't its numeric value, convert\r\n                if (typeof token !== 'number') {\r\n                    token = self.symbols_[token] || token;\r\n                }\r\n                return token;\r\n            };\r\n            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n            while (true) {\r\n                // retreive state number from top of stack\r\n                state = stack[stack.length - 1];\r\n                // use default actions if available\r\n                if (this.defaultActions[state]) {\r\n                    action = this.defaultActions[state];\r\n                }\r\n                else {\r\n                    if (symbol === null || typeof symbol == 'undefined') {\r\n                        symbol = lex();\r\n                    }\r\n                    // read action for current state and first input\r\n                    action = table[state] && table[state][symbol];\r\n                }\r\n                _handle_error: \r\n                // handle parse error\r\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                    var error_rule_depth;\r\n                    var errStr = '';\r\n                    // Return the rule stack depth where the nearest error rule can be found.\r\n                    // Return FALSE when no error recovery rule was found.\r\n                    function locateNearestErrorRecoveryRule(state) {\r\n                        var stack_probe = stack.length - 1;\r\n                        var depth = 0;\r\n                        // try to recover from error\r\n                        for (;;) {\r\n                            // check for error recovery rule in this state\r\n                            if ((TERROR.toString()) in table[state]) {\r\n                                return depth;\r\n                            }\r\n                            if (state === 0 || stack_probe < 2) {\r\n                                return false; // No suitable error recovery rule available.\r\n                            }\r\n                            stack_probe -= 2; // popStack(1): [symbol, action]\r\n                            state = stack[stack_probe];\r\n                            ++depth;\r\n                        }\r\n                    }\r\n                    if (!recovering) {\r\n                        // first see if there's any chance at hitting an error recovery rule:\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                        // Report error\r\n                        expected = [];\r\n                        for (p in table[state]) {\r\n                            if (this.terminals_[p] && p > TERROR) {\r\n                                expected.push(\"'\" + this.terminals_[p] + \"'\");\r\n                            }\r\n                        }\r\n                        if (lexer.showPosition) {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \":\\n\" + lexer.showPosition() + \"\\nExpecting \" + expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\r\n                        }\r\n                        else {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \": Unexpected \" +\r\n                                (symbol == EOF ? \"end of input\" :\r\n                                    (\"'\" + (this.terminals_[symbol] || symbol) + \"'\"));\r\n                        }\r\n                        this.parseError(errStr, {\r\n                            text: lexer.match,\r\n                            token: this.terminals_[symbol] || symbol,\r\n                            line: lexer.yylineno,\r\n                            loc: yyloc,\r\n                            expected: expected,\r\n                            recoverable: (error_rule_depth !== false)\r\n                        });\r\n                    }\r\n                    else if (preErrorSymbol !== EOF) {\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                    }\r\n                    // just recovered from another error\r\n                    if (recovering == 3) {\r\n                        if (symbol === EOF || preErrorSymbol === EOF) {\r\n                            throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                        }\r\n                        // discard current lookahead and grab another\r\n                        yyleng = lexer.yyleng;\r\n                        yytext = lexer.yytext;\r\n                        yylineno = lexer.yylineno;\r\n                        yyloc = lexer.yylloc;\r\n                        symbol = lex();\r\n                    }\r\n                    // try to recover from error\r\n                    if (error_rule_depth === false) {\r\n                        throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n                    }\r\n                    popStack(error_rule_depth);\r\n                    preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n                    symbol = TERROR; // insert generic error symbol as new lookahead\r\n                    state = stack[stack.length - 1];\r\n                    action = table[state] && table[state][TERROR];\r\n                    recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n                }\r\n                // this shouldn't happen, unless resolve defaults are off\r\n                if (action[0] instanceof Array && action.length > 1) {\r\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n                }\r\n                switch (action[0]) {\r\n                    case 1: // shift\r\n                        //this.shiftCount++;\r\n                        stack.push(symbol);\r\n                        vstack.push(lexer.yytext);\r\n                        lstack.push(lexer.yylloc);\r\n                        stack.push(action[1]); // push state\r\n                        symbol = null;\r\n                        if (!preErrorSymbol) { // normal execution/no error\r\n                            yyleng = lexer.yyleng;\r\n                            yytext = lexer.yytext;\r\n                            yylineno = lexer.yylineno;\r\n                            yyloc = lexer.yylloc;\r\n                            if (recovering > 0) {\r\n                                recovering--;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // error just occurred, resume old lookahead f/ before error\r\n                            symbol = preErrorSymbol;\r\n                            preErrorSymbol = null;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        // reduce\r\n                        //this.reductionCount++;\r\n                        len = this.productions_[action[1]][1];\r\n                        // perform semantic action\r\n                        yyval.$ = vstack[vstack.length - len]; // default to $$ = $1\r\n                        // default location, uses first token for firsts, last for lasts\r\n                        yyval._$ = {\r\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                            last_line: lstack[lstack.length - 1].last_line,\r\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                            last_column: lstack[lstack.length - 1].last_column\r\n                        };\r\n                        if (ranges) {\r\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\r\n                        }\r\n                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n                        if (typeof r !== 'undefined') {\r\n                            return r;\r\n                        }\r\n                        // pop off stack\r\n                        if (len) {\r\n                            stack = stack.slice(0, -1 * len * 2);\r\n                            vstack = vstack.slice(0, -1 * len);\r\n                            lstack = lstack.slice(0, -1 * len);\r\n                        }\r\n                        stack.push(this.productions_[action[1]][0]); // push nonterminal (reduce)\r\n                        vstack.push(yyval.$);\r\n                        lstack.push(yyval._$);\r\n                        // goto new state = table[STATE][NONTERMINAL]\r\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n                        stack.push(newState);\r\n                        break;\r\n                    case 3:\r\n                        // accept\r\n                        return true;\r\n                }\r\n            }\r\n            return true;\r\n        } };\r\n    //const Nodo = require(\"./AST/nodo_arbol\");\r\n    //var raiz;\r\n    const { Primitiva } = require(\"../Expresiones/Primitiva\");\r\n    const { Operacion } = require(\"../Expresiones/Operacion\");\r\n    const { Consulta } = require(\"../XPath/Consulta\");\r\n    const { Nodo } = require(\"../XPath/Nodo\");\r\n    const { Predicate } = require(\"../XPath/Predicate\");\r\n    const { TipoPrim } = require(\"../Expresiones/Primitiva\");\r\n    const { TipoOperacion } = require(\"../Expresiones/Operacion\");\r\n    const { TipoNodo } = require(\"../XPath/Nodo\");\r\n    const { TipoAxis } = require(\"../XPath/Nodo\");\r\n    const errores = require('../Global/ListaError');\r\n    /* generated by jison-lex 0.3.4 */\r\n    var lexer = (function () {\r\n        var lexer = ({\r\n            EOF: 1,\r\n            parseError: function parseError(str, hash) {\r\n                if (this.yy.parser) {\r\n                    this.yy.parser.parseError(str, hash);\r\n                }\r\n                else {\r\n                    throw new Error(str);\r\n                }\r\n            },\r\n            // resets the lexer, sets new input\r\n            setInput: function (input, yy) {\r\n                this.yy = yy || this.yy || {};\r\n                this._input = input;\r\n                this._more = this._backtrack = this.done = false;\r\n                this.yylineno = this.yyleng = 0;\r\n                this.yytext = this.matched = this.match = '';\r\n                this.conditionStack = ['INITIAL'];\r\n                this.yylloc = {\r\n                    first_line: 1,\r\n                    first_column: 0,\r\n                    last_line: 1,\r\n                    last_column: 0\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [0, 0];\r\n                }\r\n                this.offset = 0;\r\n                return this;\r\n            },\r\n            // consumes and returns one char from the input\r\n            input: function () {\r\n                var ch = this._input[0];\r\n                this.yytext += ch;\r\n                this.yyleng++;\r\n                this.offset++;\r\n                this.match += ch;\r\n                this.matched += ch;\r\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno++;\r\n                    this.yylloc.last_line++;\r\n                }\r\n                else {\r\n                    this.yylloc.last_column++;\r\n                }\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range[1]++;\r\n                }\r\n                this._input = this._input.slice(1);\r\n                return ch;\r\n            },\r\n            // unshifts one char (or a string) into the input\r\n            unput: function (ch) {\r\n                var len = ch.length;\r\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n                this._input = ch + this._input;\r\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n                //this.yyleng -= len;\r\n                this.offset -= len;\r\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n                this.match = this.match.substr(0, this.match.length - 1);\r\n                this.matched = this.matched.substr(0, this.matched.length - 1);\r\n                if (lines.length - 1) {\r\n                    this.yylineno -= lines.length - 1;\r\n                }\r\n                var r = this.yylloc.range;\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: lines ?\r\n                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                            + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n                        this.yylloc.first_column - len\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n                }\r\n                this.yyleng = this.yytext.length;\r\n                return this;\r\n            },\r\n            // When called from action, caches matched text and appends it on next action\r\n            more: function () {\r\n                this._more = true;\r\n                return this;\r\n            },\r\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n            reject: function () {\r\n                if (this.options.backtrack_lexer) {\r\n                    this._backtrack = true;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n                return this;\r\n            },\r\n            // retain first n characters of the match\r\n            less: function (n) {\r\n                this.unput(this.match.slice(n));\r\n            },\r\n            // displays already matched input, i.e. for error messages\r\n            pastInput: function () {\r\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\r\n            },\r\n            // displays upcoming input, i.e. for error messages\r\n            upcomingInput: function () {\r\n                var next = this.match;\r\n                if (next.length < 20) {\r\n                    next += this._input.substr(0, 20 - next.length);\r\n                }\r\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n            },\r\n            // displays the character position where the lexing error occurred, i.e. for error messages\r\n            showPosition: function () {\r\n                var pre = this.pastInput();\r\n                var c = new Array(pre.length + 1).join(\"-\");\r\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n            },\r\n            // test the lexed token: return FALSE when not a match, otherwise return token\r\n            test_match: function (match, indexed_rule) {\r\n                var token, lines, backup;\r\n                if (this.options.backtrack_lexer) {\r\n                    // save context\r\n                    backup = {\r\n                        yylineno: this.yylineno,\r\n                        yylloc: {\r\n                            first_line: this.yylloc.first_line,\r\n                            last_line: this.last_line,\r\n                            first_column: this.yylloc.first_column,\r\n                            last_column: this.yylloc.last_column\r\n                        },\r\n                        yytext: this.yytext,\r\n                        match: this.match,\r\n                        matches: this.matches,\r\n                        matched: this.matched,\r\n                        yyleng: this.yyleng,\r\n                        offset: this.offset,\r\n                        _more: this._more,\r\n                        _input: this._input,\r\n                        yy: this.yy,\r\n                        conditionStack: this.conditionStack.slice(0),\r\n                        done: this.done\r\n                    };\r\n                    if (this.options.ranges) {\r\n                        backup.yylloc.range = this.yylloc.range.slice(0);\r\n                    }\r\n                }\r\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno += lines.length;\r\n                }\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.last_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.last_column,\r\n                    last_column: lines ?\r\n                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                        this.yylloc.last_column + match[0].length\r\n                };\r\n                this.yytext += match[0];\r\n                this.match += match[0];\r\n                this.matches = match;\r\n                this.yyleng = this.yytext.length;\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n                }\r\n                this._more = false;\r\n                this._backtrack = false;\r\n                this._input = this._input.slice(match[0].length);\r\n                this.matched += match[0];\r\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n                if (this.done && this._input) {\r\n                    this.done = false;\r\n                }\r\n                if (token) {\r\n                    return token;\r\n                }\r\n                else if (this._backtrack) {\r\n                    // recover context\r\n                    for (var k in backup) {\r\n                        this[k] = backup[k];\r\n                    }\r\n                    return false; // rule action called reject() implying the next rule should be tested instead.\r\n                }\r\n                return false;\r\n            },\r\n            // return next match in input\r\n            next: function () {\r\n                if (this.done) {\r\n                    return this.EOF;\r\n                }\r\n                if (!this._input) {\r\n                    this.done = true;\r\n                }\r\n                var token, match, tempMatch, index;\r\n                if (!this._more) {\r\n                    this.yytext = '';\r\n                    this.match = '';\r\n                }\r\n                var rules = this._currentRules();\r\n                for (var i = 0; i < rules.length; i++) {\r\n                    tempMatch = this._input.match(this.rules[rules[i]]);\r\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                        match = tempMatch;\r\n                        index = i;\r\n                        if (this.options.backtrack_lexer) {\r\n                            token = this.test_match(tempMatch, rules[i]);\r\n                            if (token !== false) {\r\n                                return token;\r\n                            }\r\n                            else if (this._backtrack) {\r\n                                match = false;\r\n                                continue; // rule action called reject() implying a rule MISmatch.\r\n                            }\r\n                            else {\r\n                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else if (!this.options.flex) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (match) {\r\n                    token = this.test_match(match, rules[index]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    }\r\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                    return false;\r\n                }\r\n                if (this._input === \"\") {\r\n                    return this.EOF;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n            },\r\n            // return next match that has a token\r\n            lex: function lex() {\r\n                var r = this.next();\r\n                if (r) {\r\n                    return r;\r\n                }\r\n                else {\r\n                    return this.lex();\r\n                }\r\n            },\r\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n            begin: function begin(condition) {\r\n                this.conditionStack.push(condition);\r\n            },\r\n            // pop the previously active lexer condition state off the condition stack\r\n            popState: function popState() {\r\n                var n = this.conditionStack.length - 1;\r\n                if (n > 0) {\r\n                    return this.conditionStack.pop();\r\n                }\r\n                else {\r\n                    return this.conditionStack[0];\r\n                }\r\n            },\r\n            // produce the lexer rule set which is active for the currently active lexer condition state\r\n            _currentRules: function _currentRules() {\r\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n                }\r\n                else {\r\n                    return this.conditions[\"INITIAL\"].rules;\r\n                }\r\n            },\r\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n            topState: function topState(n) {\r\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n                if (n >= 0) {\r\n                    return this.conditionStack[n];\r\n                }\r\n                else {\r\n                    return \"INITIAL\";\r\n                }\r\n            },\r\n            // alias for begin(condition)\r\n            pushState: function pushState(condition) {\r\n                this.begin(condition);\r\n            },\r\n            // return the number of states currently on the stack\r\n            stateStackSize: function stateStackSize() {\r\n                return this.conditionStack.length;\r\n            },\r\n            options: {},\r\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n                var YYSTATE = YY_START;\r\n                switch ($avoiding_name_collisions) {\r\n                    case 0: /* skip whitespace */\r\n                        break;\r\n                    case 1:\r\n                        return 50;\r\n                        break;\r\n                    case 2:\r\n                        return 12;\r\n                        break;\r\n                    case 3:\r\n                        return \"dot\";\r\n                        break;\r\n                    case 4:\r\n                        return \"attr\";\r\n                        break;\r\n                    case 5:\r\n                        return \"corA\";\r\n                        break;\r\n                    case 6:\r\n                        return \"corC\";\r\n                        break;\r\n                    case 7:\r\n                        return \"andSelect\";\r\n                        break;\r\n                    case 8:\r\n                        return \"dospuntos\";\r\n                        break;\r\n                    case 9:\r\n                        return \"parA\";\r\n                        break;\r\n                    case 10:\r\n                        return \"parC\";\r\n                        break;\r\n                    case 11:\r\n                        return 20;\r\n                        break;\r\n                    case 12:\r\n                        return \"mas\";\r\n                        break;\r\n                    case 13:\r\n                        return \"menos\";\r\n                        break;\r\n                    case 14:\r\n                        return \"div\";\r\n                        break;\r\n                    case 15:\r\n                        return 46;\r\n                        break;\r\n                    case 16:\r\n                        return \"gte\";\r\n                        break;\r\n                    case 17:\r\n                        return 47;\r\n                        break;\r\n                    case 18:\r\n                        return 49;\r\n                        break;\r\n                    case 19:\r\n                        return \"nequal\";\r\n                        break;\r\n                    case 20:\r\n                        return \"or\";\r\n                        break;\r\n                    case 21:\r\n                        return \"and\";\r\n                        break;\r\n                    case 22:\r\n                        return \"mod\";\r\n                        break;\r\n                    case 23:\r\n                        return \"ancestorSelf\";\r\n                        break;\r\n                    case 24:\r\n                        return \"ancestor\";\r\n                        break;\r\n                    case 25:\r\n                        return \"attribute\";\r\n                        break;\r\n                    case 26:\r\n                        return \"child\";\r\n                        break;\r\n                    case 27:\r\n                        return \"descendantSelf\";\r\n                        break;\r\n                    case 28:\r\n                        return \"descendant\";\r\n                        break;\r\n                    case 29:\r\n                        return \"followingSib\";\r\n                        break;\r\n                    case 30:\r\n                        return \"following\";\r\n                        break;\r\n                    case 31:\r\n                        return \"namespace\";\r\n                        break;\r\n                    case 32:\r\n                        return \"parent\";\r\n                        break;\r\n                    case 33:\r\n                        return \"precedSib\";\r\n                        break;\r\n                    case 34:\r\n                        return \"preced\";\r\n                        break;\r\n                    case 35:\r\n                        return \"self\";\r\n                        break;\r\n                    case 36:\r\n                        return \"lastFunc\";\r\n                        break;\r\n                    case 37:\r\n                        return \"positionFunc\";\r\n                        break;\r\n                    case 38:\r\n                        return \"nodeFunc\";\r\n                        break;\r\n                    case 39:\r\n                        return \"textFunc\";\r\n                        break;\r\n                    case 40:\r\n                        return 57;\r\n                        break;\r\n                    case 41:\r\n                        return 58;\r\n                        break;\r\n                    case 42:\r\n                        return 8;\r\n                        break;\r\n                    case 43:\r\n                        return 59;\r\n                        break;\r\n                    case 44:\r\n                        return 60;\r\n                        break;\r\n                    case 45:\r\n                        console.log(errores.default);\r\n                        errores.default.agregarError('lexico', 'Simbolo inesperado ' + yy_.yytext, yy_.yylloc.first_line, yy_.yylloc.first_column);\r\n                        break;\r\n                    case 46:\r\n                        return 5;\r\n                        break;\r\n                }\r\n            },\r\n            rules: [/^(?:\\s+)/, /^(?:=)/, /^(?:\\/)/, /^(?:\\.)/, /^(?:@)/, /^(?:\\[)/, /^(?:\\])/, /^(?:\\|)/, /^(?:::)/, /^(?:\\()/, /^(?:\\))/, /^(?:\\*)/, /^(?:\\+)/, /^(?:-)/, /^(?:div\\b)/, /^(?:<=)/, /^(?:>=)/, /^(?:<)/, /^(?:>)/, /^(?:!=)/, /^(?:or\\b)/, /^(?:and\\b)/, /^(?:mod\\b)/, /^(?:ancestor-or-self\\b)/, /^(?:ancestor\\b)/, /^(?:attribute\\b)/, /^(?:child\\b)/, /^(?:descendant-or-self\\b)/, /^(?:descendant\\b)/, /^(?:following-sibling\\b)/, /^(?:following\\b)/, /^(?:namespace\\b)/, /^(?:parent\\b)/, /^(?:preceding-sibling\\b)/, /^(?:preceding\\b)/, /^(?:self\\b)/, /^(?:last\\(\\))/, /^(?:position\\(\\))/, /^(?:node\\(\\))/, /^(?:text\\(\\))/, /^(?:(([0-9]+\\.[0-9]*)|(\\.[0-9]+)))/, /^(?:[0-9]+)/, /^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ.-]*)/, /^(?:(\"((\\\\([\\'\\\"\\\\]))|([^\\\"\\\\]+))*\"))/, /^(?:('((\\\\([\\'\\\"\\\\]))|([^\\'\\\\]))*'))/, /^(?:.)/, /^(?:$)/],\r\n            conditions: { \"comment\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], \"inclusive\": true }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], \"inclusive\": true } }\r\n        });\r\n        return lexer;\r\n    })();\r\n    parser.lexer = lexer;\r\n    function Parser() {\r\n        this.yy = {};\r\n    }\r\n    Parser.prototype = parser;\r\n    parser.Parser = Parser;\r\n    return new Parser;\r\n})();\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\n    exports.parser = XPath_GramaticaAsc;\r\n    exports.Parser = XPath_GramaticaAsc.Parser;\r\n    exports.parse = function () { return XPath_GramaticaAsc.parse.apply(XPath_GramaticaAsc, arguments); };\r\n    exports.main = function commonjsMain(args) {\r\n        if (!args[1]) {\r\n            console.log('Usage: ' + args[0] + ' FILE');\r\n            process.exit(1);\r\n        }\r\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n        return exports.parser.parse(source);\r\n    };\r\n    if (typeof module !== 'undefined' && require.main === module) {\r\n        exports.main(process.argv.slice(1));\r\n    }\r\n}\r\n","\"use strict\";\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XPath_GramaticaDesc = (function () {\r\n    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)\r\n        ; return o; }, $V0 = [5, 7], $V1 = [2, 8], $V2 = [1, 4], $V3 = [1, 16], $V4 = [1, 7], $V5 = [1, 9], $V6 = [1, 8], $V7 = [1, 15], $V8 = [1, 14], $V9 = [1, 12], $Va = [1, 13], $Vb = [5, 7, 12, 16, 20, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55], $Vc = [2, 41], $Vd = [1, 25], $Ve = [5, 7, 16, 20, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55], $Vf = [1, 31], $Vg = [1, 34], $Vh = [1, 35], $Vi = [1, 36], $Vj = [1, 37], $Vk = [1, 38], $Vl = [1, 39], $Vm = [1, 40], $Vn = [1, 41], $Vo = [1, 42], $Vp = [1, 43], $Vq = [1, 44], $Vr = [1, 45], $Vs = [1, 46], $Vt = [1, 60], $Vu = [1, 58], $Vv = [1, 59], $Vw = [1, 62], $Vx = [1, 54], $Vy = [1, 55], $Vz = [1, 56], $VA = [1, 57], $VB = [1, 80], $VC = [1, 81], $VD = [1, 82], $VE = [1, 83], $VF = [1, 84], $VG = [1, 85], $VH = [1, 86], $VI = [1, 87], $VJ = [1, 88], $VK = [1, 89], $VL = [1, 90], $VM = [1, 91], $VN = [1, 92], $VO = [16, 20, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55], $VP = [1, 99], $VQ = [1, 102], $VR = [1, 100], $VS = [1, 101], $VT = [16, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55], $VU = [16, 45, 46, 47, 48, 49, 50, 51, 52, 55];\r\n    var parser = { trace: function trace() { },\r\n        yy: {},\r\n        symbols_: { \"error\": 2, \"START\": 3, \"LISTACONSULTAS\": 4, \"EOF\": 5, \"CONSULTA\": 6, \"andSelect\": 7, \"identifier\": 8, \"LISTANODOS\": 9, \"MASTIPOS\": 10, \"NODO\": 11, \"diag\": 12, \"TIPONODO\": 13, \"corA\": 14, \"EXPRESION\": 15, \"corC\": 16, \"AXES\": 17, \"attr\": 18, \"PREDICATE\": 19, \"asterisco\": 20, \"dot\": 21, \"FUNCIONES\": 22, \"ancestor\": 23, \"dospuntos\": 24, \"NODETEST\": 25, \"ancestorSelf\": 26, \"attribute\": 27, \"child\": 28, \"descendant\": 29, \"descendantSelf\": 30, \"following\": 31, \"followingSib\": 32, \"namespace\": 33, \"parent\": 34, \"preced\": 35, \"precedSib\": 36, \"self\": 37, \"textFunc\": 38, \"nodeFunc\": 39, \"PRIMITIVA\": 40, \"OPERACION\": 41, \"mas\": 42, \"menos\": 43, \"div\": 44, \"lte\": 45, \"lt\": 46, \"gte\": 47, \"gt\": 48, \"igual\": 49, \"nequal\": 50, \"or\": 51, \"and\": 52, \"mod\": 53, \"parA\": 54, \"parC\": 55, \"DoubleLiteral\": 56, \"IntegerLiteral\": 57, \"cadena\": 58, \"cadena2\": 59, \"lastFunc\": 60, \"positionFunc\": 61, \"$accept\": 0, \"$end\": 1 },\r\n        terminals_: { 2: \"error\", 5: \"EOF\", 7: \"andSelect\", 8: \"identifier\", 12: \"diag\", 14: \"corA\", 16: \"corC\", 18: \"attr\", 20: \"asterisco\", 21: \"dot\", 23: \"ancestor\", 24: \"dospuntos\", 26: \"ancestorSelf\", 27: \"attribute\", 28: \"child\", 29: \"descendant\", 30: \"descendantSelf\", 31: \"following\", 32: \"followingSib\", 33: \"namespace\", 34: \"parent\", 35: \"preced\", 36: \"precedSib\", 37: \"self\", 38: \"textFunc\", 39: \"nodeFunc\", 42: \"mas\", 43: \"menos\", 44: \"div\", 45: \"lte\", 46: \"lt\", 47: \"gte\", 48: \"gt\", 49: \"igual\", 50: \"nequal\", 51: \"or\", 52: \"and\", 53: \"mod\", 54: \"parA\", 55: \"parC\", 56: \"DoubleLiteral\", 57: \"IntegerLiteral\", 58: \"cadena\", 59: \"cadena2\", 60: \"lastFunc\", 61: \"positionFunc\" },\r\n        productions_: [0, [3, 2], [4, 3], [4, 1], [6, 2], [6, 2], [6, 1], [9, 2], [9, 0], [11, 2], [11, 3], [11, 2], [11, 3], [13, 1], [13, 4], [13, 1], [13, 1], [10, 3], [10, 3], [10, 2], [10, 3], [10, 2], [10, 1], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [25, 2], [25, 2], [25, 2], [25, 2], [19, 3], [19, 0], [15, 1], [15, 1], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [40, 1], [40, 1], [40, 1], [40, 1], [40, 2], [40, 2], [40, 1], [40, 2], [40, 1], [22, 1], [22, 1], [22, 1], [22, 1]],\r\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n            /* this == yyval */\r\n            var $0 = $$.length - 1;\r\n            switch (yystate) {\r\n                case 1:\r\n                    this.$ = $$[$0 - 1];\r\n                    return this.$;\r\n                    break;\r\n                case 2:\r\n                    this.$ = [new Consulta($$[$0 - 2], _$[$0 - 2].first_line, _$[$0 - 2].first_column)];\r\n                    this.$ = this.$.concat($$[$0]);\r\n                    break;\r\n                case 3:\r\n                    this.$ = [new Consulta($$[$0], _$[$0].first_line, _$[$0].first_column)];\r\n                    break;\r\n                case 4:\r\n                    this.$ = [new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column)];\r\n                    if ($$[$0].length > 0) {\r\n                        this.$ = this.$.concat($$[$0]);\r\n                    }\r\n                    break;\r\n                case 5:\r\n                    this.$ = [$$[$0 - 1]];\r\n                    if ($$[$0].length > 0) {\r\n                        this.$ = this.$.concat($$[$0]);\r\n                    }\r\n                    break;\r\n                case 6:\r\n                case 69:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 7:\r\n                    this.$ = [$$[$0 - 1]];\r\n                    this.$ = this.$.concat($$[$0]);\r\n                    break;\r\n                case 8:\r\n                    this.$ = [];\r\n                    break;\r\n                case 9:\r\n                    $$[$0].fromRoot = true;\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 10:\r\n                    $$[$0].fromRoot = false;\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 11:\r\n                    console.log('Entra a error sintactico de one diag');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = new Nodo($$[$0], TipoNodo.NODOERROR, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 12:\r\n                    console.log('Entra a error sintactico de two diags');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    this.$ = new Nodo($$[$0], TipoNodo.NODOERROR, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 13:\r\n                    this.$ = new Nodo($$[$0], TipoNodo.IDENTIFIER, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 14:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.IDENTIFIER, _$[$0 - 3].first_line, _$[$0 - 3].first_column, new Predicate($$[$0 - 1], _$[$0 - 1].first_line, _$[$0 - 1].first_column));\r\n                    break;\r\n                case 15:\r\n                case 16:\r\n                case 42:\r\n                case 67:\r\n                case 68:\r\n                case 70:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 17:\r\n                case 18:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.ATRIBUTO, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 19:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.DOT, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 20:\r\n                    this.$ = new Nodo($$[$0 - 2] + $$[$0 - 1], TipoNodo.DOTDOT, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 21:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 22:\r\n                    this.$ = new Nodo($$[$0], TipoNodo.FUNCION, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 23:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.ANCESTOR, $$[$0]);\r\n                    break;\r\n                case 24:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.ANCESTORORSELF, $$[$0]);\r\n                    break;\r\n                case 25:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.ATTRIBUTE, $$[$0]);\r\n                    break;\r\n                case 26:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.CHILD, $$[$0]);\r\n                    break;\r\n                case 27:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.DESCENDANT, $$[$0]);\r\n                    break;\r\n                case 28:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.DESCENDANTORSELF, $$[$0]);\r\n                    break;\r\n                case 29:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.FOLLOWING, $$[$0]);\r\n                    break;\r\n                case 30:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.FOLLOWINGSIBLING, $$[$0]);\r\n                    break;\r\n                case 31:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.NAMESPACE, $$[$0]);\r\n                    break;\r\n                case 32:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.PARENT, $$[$0]);\r\n                    break;\r\n                case 33:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.PRECEDING, $$[$0]);\r\n                    break;\r\n                case 34:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.PRECEDINGSIBLING, $$[$0]);\r\n                    break;\r\n                case 35:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.SELF, $$[$0]);\r\n                    break;\r\n                case 36:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    break;\r\n                case 37:\r\n                case 38:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.FUNCION, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.FUNCION, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    break;\r\n                case 39:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    break;\r\n                case 40:\r\n                    this.$ = $$[$0 - 1];\r\n                    break;\r\n                case 41:\r\n                    this.$ = [];\r\n                    break;\r\n                case 43:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 44:\r\n                    this.$ = new Operacion(TipoOperacion.MULTIPLICACION, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 45:\r\n                    this.$ = new Operacion(TipoOperacion.SUMA, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 46:\r\n                    this.$ = new Operacion(TipoOperacion.RESTA, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 47:\r\n                    this.$ = new Operacion(TipoOperacion.DIVISION, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 48:\r\n                    this.$ = new Operacion(TipoOperacion.MENORIGUALQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 49:\r\n                    this.$ = new Operacion(TipoOperacion.MENORQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 50:\r\n                    this.$ = new Operacion(TipoOperacion.MAYORIGUALQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 51:\r\n                    this.$ = new Operacion(TipoOperacion.MAYORQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 52:\r\n                    this.$ = new Operacion(TipoOperacion.IGUAL, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 53:\r\n                    this.$ = new Operacion(TipoOperacion.DIFERENTEQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 54:\r\n                    this.$ = new Operacion(TipoOperacion.OR, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 55:\r\n                    this.$ = new Operacion(TipoOperacion.AND, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 56:\r\n                    this.$ = new Operacion(TipoOperacion.MOD, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 57:\r\n                    this.$ = new Operacion(TipoOperacion.PAR, $$[$0 - 1], null, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 58:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.DOUBLE, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 59:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.INTEGER, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 60:\r\n                case 61:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.CADENA, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 62:\r\n                case 63:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.ATRIBUTO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 64:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.DOT, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 65:\r\n                    if ($$[$0].length > 0) {\r\n                        this.$ = [new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column)];\r\n                        this.$ = this.$.concat($$[$0]);\r\n                        this.$ = new Primitiva(this.$, TipoPrim.CONSULTA, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    else {\r\n                        this.$ = new Primitiva($$[$0 - 1], TipoPrim.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    break;\r\n                case 66:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.FUNCION, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n            }\r\n        },\r\n        table: [o($V0, $V1, { 3: 1, 4: 2, 6: 3, 10: 5, 9: 6, 22: 10, 11: 11, 8: $V2, 12: $V3, 18: $V4, 20: $V5, 21: $V6, 38: $V7, 39: $V8, 60: $V9, 61: $Va }), { 1: [3] }, { 5: [1, 17] }, { 5: [2, 3], 7: [1, 18] }, o($V0, $V1, { 11: 11, 9: 19, 12: $V3 }), o($V0, $V1, { 11: 11, 9: 20, 12: $V3 }), o($V0, [2, 6]), { 8: [1, 21], 20: [1, 22] }, o($Vb, $Vc, { 19: 23, 14: $Vd, 21: [1, 24] }), o($Vb, $Vc, { 19: 26, 14: $Vd }), o($Vb, [2, 22]), o($Ve, $V1, { 11: 11, 9: 27, 12: $V3 }), o($Vb, [2, 67]), o($Vb, [2, 68]), o($Vb, [2, 69]), o($Vb, [2, 70]), { 2: [1, 30], 8: $Vf, 10: 32, 12: [1, 29], 13: 28, 17: 33, 18: $V4, 20: $V5, 21: $V6, 22: 10, 23: $Vg, 26: $Vh, 27: $Vi, 28: $Vj, 29: $Vk, 30: $Vl, 31: $Vm, 32: $Vn, 33: $Vo, 34: $Vp, 35: $Vq, 36: $Vr, 37: $Vs, 38: $V7, 39: $V8, 60: $V9, 61: $Va }, { 1: [2, 1] }, o($V0, $V1, { 6: 3, 10: 5, 9: 6, 22: 10, 11: 11, 4: 47, 8: $V2, 12: $V3, 18: $V4, 20: $V5, 21: $V6, 38: $V7, 39: $V8, 60: $V9, 61: $Va }), o($V0, [2, 4]), o($V0, [2, 5]), o($Vb, $Vc, { 19: 48, 14: $Vd }), o($Vb, $Vc, { 19: 49, 14: $Vd }), o($Vb, [2, 19]), o($Vb, $Vc, { 19: 50, 14: $Vd }), { 8: $Vt, 15: 51, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, o($Vb, [2, 21]), o($Ve, [2, 7]), o($Vb, [2, 9]), { 2: [1, 64], 8: $Vf, 10: 32, 13: 63, 17: 33, 18: $V4, 20: $V5, 21: $V6, 22: 10, 23: $Vg, 26: $Vh, 27: $Vi, 28: $Vj, 29: $Vk, 30: $Vl, 31: $Vm, 32: $Vn, 33: $Vo, 34: $Vp, 35: $Vq, 36: $Vr, 37: $Vs, 38: $V7, 39: $V8, 60: $V9, 61: $Va }, o($Vb, [2, 11]), o($Vb, [2, 13], { 14: [1, 65] }), o($Vb, [2, 15]), o($Vb, [2, 16]), { 24: [1, 66] }, { 24: [1, 67] }, { 24: [1, 68] }, { 24: [1, 69] }, { 24: [1, 70] }, { 24: [1, 71] }, { 24: [1, 72] }, { 24: [1, 73] }, { 24: [1, 74] }, { 24: [1, 75] }, { 24: [1, 76] }, { 24: [1, 77] }, { 24: [1, 78] }, { 5: [2, 2] }, o($Vb, [2, 17]), o($Vb, [2, 18]), o($Vb, [2, 20]), { 16: [1, 79], 20: $VB, 42: $VC, 43: $VD, 44: $VE, 45: $VF, 46: $VG, 47: $VH, 48: $VI, 49: $VJ, 50: $VK, 51: $VL, 52: $VM, 53: $VN }, o($VO, [2, 42]), o($VO, [2, 43]), o($VO, [2, 58]), o($VO, [2, 59]), o($VO, [2, 60]), o($VO, [2, 61]), { 8: [1, 93], 20: [1, 94] }, o($VO, [2, 64]), o($VO, $V1, { 11: 11, 9: 95, 12: $V3 }), o($VO, [2, 66]), { 8: $Vt, 15: 96, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, o($Vb, [2, 10]), o($Vb, [2, 12]), { 8: $Vt, 15: 97, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $VP, 20: $VQ, 25: 98, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 103, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 104, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 105, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 106, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 107, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 108, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 109, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 110, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 111, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 112, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 113, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 114, 38: $VR, 39: $VS }, o($Vb, [2, 40]), { 8: $Vt, 15: 115, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 116, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 117, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 118, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 119, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 120, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 121, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 122, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 123, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 124, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 125, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 126, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 127, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, o($VO, [2, 62]), o($VO, [2, 63]), o($VO, [2, 65]), { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 45: $VF, 46: $VG, 47: $VH, 48: $VI, 49: $VJ, 50: $VK, 51: $VL, 52: $VM, 53: $VN, 55: [1, 128] }, { 16: [1, 129], 20: $VB, 42: $VC, 43: $VD, 44: $VE, 45: $VF, 46: $VG, 47: $VH, 48: $VI, 49: $VJ, 50: $VK, 51: $VL, 52: $VM, 53: $VN }, o($Vb, [2, 23]), o($Vb, $Vc, { 19: 130, 14: $Vd }), o($Vb, $Vc, { 19: 131, 14: $Vd }), o($Vb, $Vc, { 19: 132, 14: $Vd }), o($Vb, $Vc, { 19: 133, 14: $Vd }), o($Vb, [2, 24]), o($Vb, [2, 25]), o($Vb, [2, 26]), o($Vb, [2, 27]), o($Vb, [2, 28]), o($Vb, [2, 29]), o($Vb, [2, 30]), o($Vb, [2, 31]), o($Vb, [2, 32]), o($Vb, [2, 33]), o($Vb, [2, 34]), o($Vb, [2, 35]), o($VO, [2, 44]), o($VT, [2, 45], { 20: $VB, 44: $VE, 53: $VN }), o($VT, [2, 46], { 20: $VB, 44: $VE, 53: $VN }), o($VO, [2, 47]), o($VU, [2, 48], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 53: $VN }), o($VU, [2, 49], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 53: $VN }), o($VU, [2, 50], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 53: $VN }), o($VU, [2, 51], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 53: $VN }), o($VU, [2, 52], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 53: $VN }), o($VU, [2, 53], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 53: $VN }), o([16, 51, 55], [2, 54], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 45: $VF, 46: $VG, 47: $VH, 48: $VI, 49: $VJ, 50: $VK, 52: $VM, 53: $VN }), o([16, 51, 52, 55], [2, 55], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 45: $VF, 46: $VG, 47: $VH, 48: $VI, 49: $VJ, 50: $VK, 53: $VN }), o($VO, [2, 56]), o($VO, [2, 57]), o($Vb, [2, 14]), o($Vb, [2, 36]), o($Vb, [2, 37]), o($Vb, [2, 38]), o($Vb, [2, 39])],\r\n        defaultActions: { 17: [2, 1], 47: [2, 2] },\r\n        parseError: function parseError(str, hash) {\r\n            if (hash.recoverable) {\r\n                this.trace(str);\r\n            }\r\n            else {\r\n                var error = new Error(str);\r\n                error.hash = hash;\r\n                throw error;\r\n            }\r\n        },\r\n        parse: function parse(input) {\r\n            var self = this, stack = [0], tstack = [], // token stack\r\n            vstack = [null], // semantic value stack\r\n            lstack = [], // location stack\r\n            table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n            var args = lstack.slice.call(arguments, 1);\r\n            //this.reductionCount = this.shiftCount = 0;\r\n            var lexer = Object.create(this.lexer);\r\n            var sharedState = { yy: {} };\r\n            // copy state\r\n            for (var k in this.yy) {\r\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n                    sharedState.yy[k] = this.yy[k];\r\n                }\r\n            }\r\n            lexer.setInput(input, sharedState.yy);\r\n            sharedState.yy.lexer = lexer;\r\n            sharedState.yy.parser = this;\r\n            if (typeof lexer.yylloc == 'undefined') {\r\n                lexer.yylloc = {};\r\n            }\r\n            var yyloc = lexer.yylloc;\r\n            lstack.push(yyloc);\r\n            var ranges = lexer.options && lexer.options.ranges;\r\n            if (typeof sharedState.yy.parseError === 'function') {\r\n                this.parseError = sharedState.yy.parseError;\r\n            }\r\n            else {\r\n                this.parseError = Object.getPrototypeOf(this).parseError;\r\n            }\r\n            function popStack(n) {\r\n                stack.length = stack.length - 2 * n;\r\n                vstack.length = vstack.length - n;\r\n                lstack.length = lstack.length - n;\r\n            }\r\n            _token_stack: var lex = function () {\r\n                var token;\r\n                token = lexer.lex() || EOF;\r\n                // if token isn't its numeric value, convert\r\n                if (typeof token !== 'number') {\r\n                    token = self.symbols_[token] || token;\r\n                }\r\n                return token;\r\n            };\r\n            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n            while (true) {\r\n                // retreive state number from top of stack\r\n                state = stack[stack.length - 1];\r\n                // use default actions if available\r\n                if (this.defaultActions[state]) {\r\n                    action = this.defaultActions[state];\r\n                }\r\n                else {\r\n                    if (symbol === null || typeof symbol == 'undefined') {\r\n                        symbol = lex();\r\n                    }\r\n                    // read action for current state and first input\r\n                    action = table[state] && table[state][symbol];\r\n                }\r\n                _handle_error: \r\n                // handle parse error\r\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                    var error_rule_depth;\r\n                    var errStr = '';\r\n                    // Return the rule stack depth where the nearest error rule can be found.\r\n                    // Return FALSE when no error recovery rule was found.\r\n                    function locateNearestErrorRecoveryRule(state) {\r\n                        var stack_probe = stack.length - 1;\r\n                        var depth = 0;\r\n                        // try to recover from error\r\n                        for (;;) {\r\n                            // check for error recovery rule in this state\r\n                            if ((TERROR.toString()) in table[state]) {\r\n                                return depth;\r\n                            }\r\n                            if (state === 0 || stack_probe < 2) {\r\n                                return false; // No suitable error recovery rule available.\r\n                            }\r\n                            stack_probe -= 2; // popStack(1): [symbol, action]\r\n                            state = stack[stack_probe];\r\n                            ++depth;\r\n                        }\r\n                    }\r\n                    if (!recovering) {\r\n                        // first see if there's any chance at hitting an error recovery rule:\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                        // Report error\r\n                        expected = [];\r\n                        for (p in table[state]) {\r\n                            if (this.terminals_[p] && p > TERROR) {\r\n                                expected.push(\"'\" + this.terminals_[p] + \"'\");\r\n                            }\r\n                        }\r\n                        if (lexer.showPosition) {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \":\\n\" + lexer.showPosition() + \"\\nExpecting \" + expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\r\n                        }\r\n                        else {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \": Unexpected \" +\r\n                                (symbol == EOF ? \"end of input\" :\r\n                                    (\"'\" + (this.terminals_[symbol] || symbol) + \"'\"));\r\n                        }\r\n                        this.parseError(errStr, {\r\n                            text: lexer.match,\r\n                            token: this.terminals_[symbol] || symbol,\r\n                            line: lexer.yylineno,\r\n                            loc: yyloc,\r\n                            expected: expected,\r\n                            recoverable: (error_rule_depth !== false)\r\n                        });\r\n                    }\r\n                    else if (preErrorSymbol !== EOF) {\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                    }\r\n                    // just recovered from another error\r\n                    if (recovering == 3) {\r\n                        if (symbol === EOF || preErrorSymbol === EOF) {\r\n                            throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                        }\r\n                        // discard current lookahead and grab another\r\n                        yyleng = lexer.yyleng;\r\n                        yytext = lexer.yytext;\r\n                        yylineno = lexer.yylineno;\r\n                        yyloc = lexer.yylloc;\r\n                        symbol = lex();\r\n                    }\r\n                    // try to recover from error\r\n                    if (error_rule_depth === false) {\r\n                        throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n                    }\r\n                    popStack(error_rule_depth);\r\n                    preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n                    symbol = TERROR; // insert generic error symbol as new lookahead\r\n                    state = stack[stack.length - 1];\r\n                    action = table[state] && table[state][TERROR];\r\n                    recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n                }\r\n                // this shouldn't happen, unless resolve defaults are off\r\n                if (action[0] instanceof Array && action.length > 1) {\r\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n                }\r\n                switch (action[0]) {\r\n                    case 1: // shift\r\n                        //this.shiftCount++;\r\n                        stack.push(symbol);\r\n                        vstack.push(lexer.yytext);\r\n                        lstack.push(lexer.yylloc);\r\n                        stack.push(action[1]); // push state\r\n                        symbol = null;\r\n                        if (!preErrorSymbol) { // normal execution/no error\r\n                            yyleng = lexer.yyleng;\r\n                            yytext = lexer.yytext;\r\n                            yylineno = lexer.yylineno;\r\n                            yyloc = lexer.yylloc;\r\n                            if (recovering > 0) {\r\n                                recovering--;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // error just occurred, resume old lookahead f/ before error\r\n                            symbol = preErrorSymbol;\r\n                            preErrorSymbol = null;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        // reduce\r\n                        //this.reductionCount++;\r\n                        len = this.productions_[action[1]][1];\r\n                        // perform semantic action\r\n                        yyval.$ = vstack[vstack.length - len]; // default to $$ = $1\r\n                        // default location, uses first token for firsts, last for lasts\r\n                        yyval._$ = {\r\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                            last_line: lstack[lstack.length - 1].last_line,\r\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                            last_column: lstack[lstack.length - 1].last_column\r\n                        };\r\n                        if (ranges) {\r\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\r\n                        }\r\n                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n                        if (typeof r !== 'undefined') {\r\n                            return r;\r\n                        }\r\n                        // pop off stack\r\n                        if (len) {\r\n                            stack = stack.slice(0, -1 * len * 2);\r\n                            vstack = vstack.slice(0, -1 * len);\r\n                            lstack = lstack.slice(0, -1 * len);\r\n                        }\r\n                        stack.push(this.productions_[action[1]][0]); // push nonterminal (reduce)\r\n                        vstack.push(yyval.$);\r\n                        lstack.push(yyval._$);\r\n                        // goto new state = table[STATE][NONTERMINAL]\r\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n                        stack.push(newState);\r\n                        break;\r\n                    case 3:\r\n                        // accept\r\n                        return true;\r\n                }\r\n            }\r\n            return true;\r\n        } };\r\n    //const Nodo = require(\"./AST/nodo_arbol\");\r\n    //var raiz;\r\n    const { Primitiva } = require(\"../Expresiones/Primitiva\");\r\n    const { Operacion } = require(\"../Expresiones/Operacion\");\r\n    const { Consulta } = require(\"../XPath/Consulta\");\r\n    const { Nodo } = require(\"../XPath/Nodo\");\r\n    const { Predicate } = require(\"../XPath/Predicate\");\r\n    const { TipoPrim } = require(\"../Expresiones/Primitiva\");\r\n    const { TipoOperacion } = require(\"../Expresiones/Operacion\");\r\n    const { TipoNodo } = require(\"../XPath/Nodo\");\r\n    const { TipoAxis } = require(\"../XPath/Nodo\");\r\n    const errores = require('../Global/ListaError');\r\n    /* generated by jison-lex 0.3.4 */\r\n    var lexer = (function () {\r\n        var lexer = ({\r\n            EOF: 1,\r\n            parseError: function parseError(str, hash) {\r\n                if (this.yy.parser) {\r\n                    this.yy.parser.parseError(str, hash);\r\n                }\r\n                else {\r\n                    throw new Error(str);\r\n                }\r\n            },\r\n            // resets the lexer, sets new input\r\n            setInput: function (input, yy) {\r\n                this.yy = yy || this.yy || {};\r\n                this._input = input;\r\n                this._more = this._backtrack = this.done = false;\r\n                this.yylineno = this.yyleng = 0;\r\n                this.yytext = this.matched = this.match = '';\r\n                this.conditionStack = ['INITIAL'];\r\n                this.yylloc = {\r\n                    first_line: 1,\r\n                    first_column: 0,\r\n                    last_line: 1,\r\n                    last_column: 0\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [0, 0];\r\n                }\r\n                this.offset = 0;\r\n                return this;\r\n            },\r\n            // consumes and returns one char from the input\r\n            input: function () {\r\n                var ch = this._input[0];\r\n                this.yytext += ch;\r\n                this.yyleng++;\r\n                this.offset++;\r\n                this.match += ch;\r\n                this.matched += ch;\r\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno++;\r\n                    this.yylloc.last_line++;\r\n                }\r\n                else {\r\n                    this.yylloc.last_column++;\r\n                }\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range[1]++;\r\n                }\r\n                this._input = this._input.slice(1);\r\n                return ch;\r\n            },\r\n            // unshifts one char (or a string) into the input\r\n            unput: function (ch) {\r\n                var len = ch.length;\r\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n                this._input = ch + this._input;\r\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n                //this.yyleng -= len;\r\n                this.offset -= len;\r\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n                this.match = this.match.substr(0, this.match.length - 1);\r\n                this.matched = this.matched.substr(0, this.matched.length - 1);\r\n                if (lines.length - 1) {\r\n                    this.yylineno -= lines.length - 1;\r\n                }\r\n                var r = this.yylloc.range;\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: lines ?\r\n                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                            + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n                        this.yylloc.first_column - len\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n                }\r\n                this.yyleng = this.yytext.length;\r\n                return this;\r\n            },\r\n            // When called from action, caches matched text and appends it on next action\r\n            more: function () {\r\n                this._more = true;\r\n                return this;\r\n            },\r\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n            reject: function () {\r\n                if (this.options.backtrack_lexer) {\r\n                    this._backtrack = true;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n                return this;\r\n            },\r\n            // retain first n characters of the match\r\n            less: function (n) {\r\n                this.unput(this.match.slice(n));\r\n            },\r\n            // displays already matched input, i.e. for error messages\r\n            pastInput: function () {\r\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\r\n            },\r\n            // displays upcoming input, i.e. for error messages\r\n            upcomingInput: function () {\r\n                var next = this.match;\r\n                if (next.length < 20) {\r\n                    next += this._input.substr(0, 20 - next.length);\r\n                }\r\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n            },\r\n            // displays the character position where the lexing error occurred, i.e. for error messages\r\n            showPosition: function () {\r\n                var pre = this.pastInput();\r\n                var c = new Array(pre.length + 1).join(\"-\");\r\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n            },\r\n            // test the lexed token: return FALSE when not a match, otherwise return token\r\n            test_match: function (match, indexed_rule) {\r\n                var token, lines, backup;\r\n                if (this.options.backtrack_lexer) {\r\n                    // save context\r\n                    backup = {\r\n                        yylineno: this.yylineno,\r\n                        yylloc: {\r\n                            first_line: this.yylloc.first_line,\r\n                            last_line: this.last_line,\r\n                            first_column: this.yylloc.first_column,\r\n                            last_column: this.yylloc.last_column\r\n                        },\r\n                        yytext: this.yytext,\r\n                        match: this.match,\r\n                        matches: this.matches,\r\n                        matched: this.matched,\r\n                        yyleng: this.yyleng,\r\n                        offset: this.offset,\r\n                        _more: this._more,\r\n                        _input: this._input,\r\n                        yy: this.yy,\r\n                        conditionStack: this.conditionStack.slice(0),\r\n                        done: this.done\r\n                    };\r\n                    if (this.options.ranges) {\r\n                        backup.yylloc.range = this.yylloc.range.slice(0);\r\n                    }\r\n                }\r\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno += lines.length;\r\n                }\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.last_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.last_column,\r\n                    last_column: lines ?\r\n                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                        this.yylloc.last_column + match[0].length\r\n                };\r\n                this.yytext += match[0];\r\n                this.match += match[0];\r\n                this.matches = match;\r\n                this.yyleng = this.yytext.length;\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n                }\r\n                this._more = false;\r\n                this._backtrack = false;\r\n                this._input = this._input.slice(match[0].length);\r\n                this.matched += match[0];\r\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n                if (this.done && this._input) {\r\n                    this.done = false;\r\n                }\r\n                if (token) {\r\n                    return token;\r\n                }\r\n                else if (this._backtrack) {\r\n                    // recover context\r\n                    for (var k in backup) {\r\n                        this[k] = backup[k];\r\n                    }\r\n                    return false; // rule action called reject() implying the next rule should be tested instead.\r\n                }\r\n                return false;\r\n            },\r\n            // return next match in input\r\n            next: function () {\r\n                if (this.done) {\r\n                    return this.EOF;\r\n                }\r\n                if (!this._input) {\r\n                    this.done = true;\r\n                }\r\n                var token, match, tempMatch, index;\r\n                if (!this._more) {\r\n                    this.yytext = '';\r\n                    this.match = '';\r\n                }\r\n                var rules = this._currentRules();\r\n                for (var i = 0; i < rules.length; i++) {\r\n                    tempMatch = this._input.match(this.rules[rules[i]]);\r\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                        match = tempMatch;\r\n                        index = i;\r\n                        if (this.options.backtrack_lexer) {\r\n                            token = this.test_match(tempMatch, rules[i]);\r\n                            if (token !== false) {\r\n                                return token;\r\n                            }\r\n                            else if (this._backtrack) {\r\n                                match = false;\r\n                                continue; // rule action called reject() implying a rule MISmatch.\r\n                            }\r\n                            else {\r\n                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else if (!this.options.flex) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (match) {\r\n                    token = this.test_match(match, rules[index]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    }\r\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                    return false;\r\n                }\r\n                if (this._input === \"\") {\r\n                    return this.EOF;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n            },\r\n            // return next match that has a token\r\n            lex: function lex() {\r\n                var r = this.next();\r\n                if (r) {\r\n                    return r;\r\n                }\r\n                else {\r\n                    return this.lex();\r\n                }\r\n            },\r\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n            begin: function begin(condition) {\r\n                this.conditionStack.push(condition);\r\n            },\r\n            // pop the previously active lexer condition state off the condition stack\r\n            popState: function popState() {\r\n                var n = this.conditionStack.length - 1;\r\n                if (n > 0) {\r\n                    return this.conditionStack.pop();\r\n                }\r\n                else {\r\n                    return this.conditionStack[0];\r\n                }\r\n            },\r\n            // produce the lexer rule set which is active for the currently active lexer condition state\r\n            _currentRules: function _currentRules() {\r\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n                }\r\n                else {\r\n                    return this.conditions[\"INITIAL\"].rules;\r\n                }\r\n            },\r\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n            topState: function topState(n) {\r\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n                if (n >= 0) {\r\n                    return this.conditionStack[n];\r\n                }\r\n                else {\r\n                    return \"INITIAL\";\r\n                }\r\n            },\r\n            // alias for begin(condition)\r\n            pushState: function pushState(condition) {\r\n                this.begin(condition);\r\n            },\r\n            // return the number of states currently on the stack\r\n            stateStackSize: function stateStackSize() {\r\n                return this.conditionStack.length;\r\n            },\r\n            options: { \"case-insensitive\": true },\r\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n                var YYSTATE = YY_START;\r\n                switch ($avoiding_name_collisions) {\r\n                    case 0: /* skip whitespace */\r\n                        break;\r\n                    case 1:\r\n                        return 49;\r\n                        break;\r\n                    case 2:\r\n                        return 12;\r\n                        break;\r\n                    case 3:\r\n                        return \"dot\";\r\n                        break;\r\n                    case 4:\r\n                        return \"attr\";\r\n                        break;\r\n                    case 5:\r\n                        return \"corA\";\r\n                        break;\r\n                    case 6:\r\n                        return \"corC\";\r\n                        break;\r\n                    case 7:\r\n                        return \"andSelect\";\r\n                        break;\r\n                    case 8:\r\n                        return \"dospuntos\";\r\n                        break;\r\n                    case 9:\r\n                        return \"parA\";\r\n                        break;\r\n                    case 10:\r\n                        return \"parC\";\r\n                        break;\r\n                    case 11:\r\n                        return 20;\r\n                        break;\r\n                    case 12:\r\n                        return \"mas\";\r\n                        break;\r\n                    case 13:\r\n                        return \"menos\";\r\n                        break;\r\n                    case 14:\r\n                        return \"div\";\r\n                        break;\r\n                    case 15:\r\n                        return 45;\r\n                        break;\r\n                    case 16:\r\n                        return \"gte\";\r\n                        break;\r\n                    case 17:\r\n                        return 46;\r\n                        break;\r\n                    case 18:\r\n                        return 48;\r\n                        break;\r\n                    case 19:\r\n                        return \"nequal\";\r\n                        break;\r\n                    case 20:\r\n                        return \"or\";\r\n                        break;\r\n                    case 21:\r\n                        return \"and\";\r\n                        break;\r\n                    case 22:\r\n                        return \"mod\";\r\n                        break;\r\n                    case 23:\r\n                        return \"ancestorSelf\";\r\n                        break;\r\n                    case 24:\r\n                        return \"ancestor\";\r\n                        break;\r\n                    case 25:\r\n                        return \"attribute\";\r\n                        break;\r\n                    case 26:\r\n                        return \"child\";\r\n                        break;\r\n                    case 27:\r\n                        return \"descendantSelf\";\r\n                        break;\r\n                    case 28:\r\n                        return \"descendant\";\r\n                        break;\r\n                    case 29:\r\n                        return \"followingSib\";\r\n                        break;\r\n                    case 30:\r\n                        return \"following\";\r\n                        break;\r\n                    case 31:\r\n                        return \"namespace\";\r\n                        break;\r\n                    case 32:\r\n                        return \"parent\";\r\n                        break;\r\n                    case 33:\r\n                        return \"precedSib\";\r\n                        break;\r\n                    case 34:\r\n                        return \"preced\";\r\n                        break;\r\n                    case 35:\r\n                        return \"self\";\r\n                        break;\r\n                    case 36:\r\n                        return \"lastFunc\";\r\n                        break;\r\n                    case 37:\r\n                        return \"positionFunc\";\r\n                        break;\r\n                    case 38:\r\n                        return \"nodeFunc\";\r\n                        break;\r\n                    case 39:\r\n                        return \"textFunc\";\r\n                        break;\r\n                    case 40:\r\n                        return 56;\r\n                        break;\r\n                    case 41:\r\n                        return 57;\r\n                        break;\r\n                    case 42:\r\n                        return 8;\r\n                        break;\r\n                    case 43:\r\n                        return 58;\r\n                        break;\r\n                    case 44:\r\n                        return 59;\r\n                        break;\r\n                    case 45:\r\n                        console.error('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                        break;\r\n                    case 46:\r\n                        return 5;\r\n                        break;\r\n                }\r\n            },\r\n            rules: [/^(?:\\s+)/i, /^(?:=)/i, /^(?:\\/)/i, /^(?:\\.)/i, /^(?:@)/i, /^(?:\\[)/i, /^(?:\\])/i, /^(?:\\|)/i, /^(?:::)/i, /^(?:\\()/i, /^(?:\\))/i, /^(?:\\*)/i, /^(?:\\+)/i, /^(?:-)/i, /^(?:div\\b)/i, /^(?:<=)/i, /^(?:>=)/i, /^(?:<)/i, /^(?:>)/i, /^(?:!=)/i, /^(?:or\\b)/i, /^(?:and\\b)/i, /^(?:mod\\b)/i, /^(?:ancestor-or-self\\b)/i, /^(?:ancestor\\b)/i, /^(?:attribute\\b)/i, /^(?:child\\b)/i, /^(?:descendant-or-self\\b)/i, /^(?:descendant\\b)/i, /^(?:following-sibling\\b)/i, /^(?:following\\b)/i, /^(?:namespace\\b)/i, /^(?:parent\\b)/i, /^(?:preceding-sibling\\b)/i, /^(?:preceding\\b)/i, /^(?:self\\b)/i, /^(?:last\\(\\))/i, /^(?:position\\(\\))/i, /^(?:node\\(\\))/i, /^(?:text\\(\\))/i, /^(?:(([0-9]+\\.[0-9]*)|(\\.[0-9]+)))/i, /^(?:[0-9]+)/i, /^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ.-]*)/i, /^(?:(\"((\\\\([\\'\\\"\\\\]))|([^\\\"\\\\]+))*\"))/i, /^(?:('((\\\\([\\'\\\"\\\\]))|([^\\'\\\\]))*'))/i, /^(?:.)/i, /^(?:$)/i],\r\n            conditions: { \"comment\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], \"inclusive\": true }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], \"inclusive\": true } }\r\n        });\r\n        return lexer;\r\n    })();\r\n    parser.lexer = lexer;\r\n    function Parser() {\r\n        this.yy = {};\r\n    }\r\n    Parser.prototype = parser;\r\n    parser.Parser = Parser;\r\n    return new Parser;\r\n})();\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\n    exports.parser = XPath_GramaticaDesc;\r\n    exports.Parser = XPath_GramaticaDesc.Parser;\r\n    exports.parse = function () { return XPath_GramaticaDesc.parse.apply(XPath_GramaticaDesc, arguments); };\r\n    exports.main = function commonjsMain(args) {\r\n        if (!args[1]) {\r\n            console.log('Usage: ' + args[0] + ' FILE');\r\n            process.exit(1);\r\n        }\r\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n        return exports.parser.parse(source);\r\n    };\r\n    if (typeof module !== 'undefined' && require.main === module) {\r\n        exports.main(process.argv.slice(1));\r\n    }\r\n}\r\n","\"use strict\";\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar Optimizacion_Grammar = (function () {\r\n    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)\r\n        ; return o; }, $V0 = [1, 4], $V1 = [1, 6], $V2 = [1, 7], $V3 = [1, 8], $V4 = [1, 9], $V5 = [1, 10], $V6 = [5, 7, 24, 26, 27, 28, 29], $V7 = [9, 18, 20], $V8 = [16, 25], $V9 = [1, 36], $Va = [1, 37], $Vb = [1, 38], $Vc = [1, 39], $Vd = [1, 40], $Ve = [9, 23, 35, 36, 38, 39], $Vf = [1, 58], $Vg = [1, 60], $Vh = [1, 59], $Vi = [1, 66], $Vj = [1, 74], $Vk = [1, 75], $Vl = [1, 69], $Vm = [1, 70], $Vn = [1, 71], $Vo = [1, 72], $Vp = [1, 73], $Vq = [1, 76], $Vr = [1, 77], $Vs = [1, 78], $Vt = [1, 79], $Vu = [8, 11, 16, 42, 43, 44, 45, 46, 47, 48, 49, 50], $Vv = [2, 43], $Vw = [8, 11, 16, 20, 42, 43, 44, 45, 46, 47, 48, 49, 50], $Vx = [8, 11, 15, 16, 20, 42, 43, 44, 45, 46, 47, 48, 49, 50], $Vy = [8, 11, 16, 20, 42, 43, 47, 48, 49, 50], $Vz = [8, 11, 16, 20, 47, 48, 49, 50];\r\n    var parser = { trace: function trace() { },\r\n        yy: {},\r\n        symbols_: { \"error\": 2, \"START\": 3, \"DECLARACIONES\": 4, \"EOF\": 5, \"DECLARACION\": 6, \"include\": 7, \"lt\": 8, \"identifier\": 9, \"ext_h\": 10, \"gt\": 11, \"DATATYPE\": 12, \"corA\": 13, \"IntegerLiteral\": 14, \"corC\": 15, \"puntocoma\": 16, \"LISTAIDS\": 17, \"main\": 18, \"parA\": 19, \"parC\": 20, \"llaveA\": 21, \"LISTAINSTRUCCIONES\": 22, \"llaveC\": 23, \"void\": 24, \"coma\": 25, \"int\": 26, \"double\": 27, \"float\": 28, \"char\": 29, \"INSTRUCCION\": 30, \"asig\": 31, \"EXPRESION\": 32, \"PRIMITIVA\": 33, \"dospuntos\": 34, \"goto\": 35, \"printf\": 36, \"cadena\": 37, \"if\": 38, \"return\": 39, \"TIPORETURN\": 40, \"OPERACION\": 41, \"mas\": 42, \"menos\": 43, \"por\": 44, \"div\": 45, \"mod\": 46, \"lte\": 47, \"gte\": 48, \"eq\": 49, \"neq\": 50, \"DoubleLiteral\": 51, \"$accept\": 0, \"$end\": 1 },\r\n        terminals_: { 2: \"error\", 5: \"EOF\", 7: \"include\", 8: \"lt\", 9: \"identifier\", 10: \"ext_h\", 11: \"gt\", 13: \"corA\", 14: \"IntegerLiteral\", 15: \"corC\", 16: \"puntocoma\", 18: \"main\", 19: \"parA\", 20: \"parC\", 21: \"llaveA\", 23: \"llaveC\", 24: \"void\", 25: \"coma\", 26: \"int\", 27: \"double\", 28: \"float\", 29: \"char\", 31: \"asig\", 34: \"dospuntos\", 35: \"goto\", 36: \"printf\", 37: \"cadena\", 38: \"if\", 39: \"return\", 42: \"mas\", 43: \"menos\", 44: \"por\", 45: \"div\", 46: \"mod\", 47: \"lte\", 48: \"gte\", 49: \"eq\", 50: \"neq\", 51: \"DoubleLiteral\" },\r\n        productions_: [0, [3, 2], [4, 2], [4, 1], [6, 5], [6, 6], [6, 3], [6, 7], [6, 7], [17, 3], [17, 1], [12, 1], [12, 1], [12, 1], [12, 1], [22, 2], [22, 1], [30, 4], [30, 10], [30, 10], [30, 16], [30, 2], [30, 3], [30, 4], [30, 10], [30, 7], [30, 3], [40, 1], [40, 0], [32, 1], [32, 1], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 2], [33, 1], [33, 1], [33, 1]],\r\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n            /* this == yyval */\r\n            var $0 = $$.length - 1;\r\n            switch (yystate) {\r\n                case 1:\r\n                    this.$ = $$[$0 - 1];\r\n                    return this.$;\r\n                    break;\r\n                case 2:\r\n                case 15:\r\n                    $$[$0 - 1].push($$[$0]);\r\n                    this.$ = $$[$0 - 1];\r\n                    break;\r\n                case 3:\r\n                case 10:\r\n                case 16:\r\n                    this.$ = [$$[$0]];\r\n                    break;\r\n                case 4:\r\n                    codigo3D = $$[$0 - 4] + $$[$0 - 3] + $$[$0 - 2] + $$[$0 - 1] + $$[$0];\r\n                    this.$ = new Include(TipoDeclaracion3D.INCLUDE, codigo3D, _$[$0 - 4].first_line, _$[$0 - 4].first_column);\r\n                    break;\r\n                case 5:\r\n                    codigo3D = $$[$0 - 5] + \" \" + $$[$0 - 4] + $$[$0 - 3] + $$[$0 - 2] + $$[$0 - 1] + $$[$0];\r\n                    this.$ = new Variable(TipoDeclaracion3D.VARIABLE, codigo3D, _$[$0 - 5].first_line, _$[$0 - 5].first_column);\r\n                    break;\r\n                case 6:\r\n                    let firstId = $$[$0 - 1][0];\r\n                    codigo3D = $$[$0 - 2] + \" \" + firstId;\r\n                    for (let i = 1; i < $$[$0 - 1].length; i++) {\r\n                        codigo3D += \", \" + $$[$0 - 1][i];\r\n                    }\r\n                    codigo3D += \";\";\r\n                    this.$ = new Variable(TipoDeclaracion3D.VARIABLE, codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 7:\r\n                    codigo3D = $$[$0 - 6] + $$[$0 - 5] + $$[$0 - 4] + $$[$0 - 3] + $$[$0 - 2];\r\n                    this.$ = new Main(TipoDeclaracion3D.MAIN, $$[$0 - 1], codigo3D, _$[$0 - 6].first_line, _$[$0 - 6].first_column);\r\n                    break;\r\n                case 8:\r\n                    this.$ = new Metodo(TipoDeclaracion3D.METODO, $$[$0 - 1], $$[$0 - 5], _$[$0 - 6].first_line, _$[$0 - 6].first_column);\r\n                    break;\r\n                case 9:\r\n                    $$[$0 - 2].push($$[$0]);\r\n                    this.$ = $$[$0 - 2];\r\n                    break;\r\n                case 11:\r\n                case 12:\r\n                case 13:\r\n                case 14:\r\n                case 27:\r\n                case 29:\r\n                case 30:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 17:\r\n                    codigo3D = $$[$0 - 3] + \" \" + $$[$0 - 2] + \" \" + $$[$0 - 1].codigo3D + $$[$0];\r\n                    this.$ = new Asignacion3D(TipoInstruccion3D.ASIGNORMAL, $$[$0 - 3], $$[$0 - 1], codigo3D, _$[$0 - 3].first_line, _$[$0 - 3].first_column);\r\n                    break;\r\n                case 18:\r\n                    codigo3D = $$[$0 - 9] + \" \" + $$[$0 - 8] + \" \" + $$[$0 - 7] + $$[$0 - 6] + $$[$0 - 5] + $$[$0 - 4] + $$[$0 - 3] + $$[$0 - 2].codigo3D + $$[$0 - 1] + $$[$0];\r\n                    this.$ = new Asignacion3D(TipoInstruccion3D.ASIGARREGLO, $$[$0 - 9], $$[$0 - 2], codigo3D, _$[$0 - 9].first_line, _$[$0 - 9].first_column);\r\n                    break;\r\n                case 19:\r\n                    codigo3D = $$[$0 - 9] + $$[$0 - 8] + $$[$0 - 7] + $$[$0 - 6] + $$[$0 - 5] + $$[$0 - 4].codigo3D + $$[$0 - 3] + \" \" + $$[$0 - 2] + \" \" + $$[$0 - 1].codigo3D + $$[$0];\r\n                    this.$ = new Asignacion3D(TipoInstruccion3D.ARREGLOASIG, $$[$0 - 9], $$[$0 - 1], codigo3D, _$[$0 - 9].first_line, _$[$0 - 9].first_column);\r\n                    break;\r\n                case 20:\r\n                    codigo3D = $$[$0 - 15] + $$[$0 - 14] + $$[$0 - 13] + $$[$0 - 12] + $$[$0 - 11] + $$[$0 - 10].codigo3D + $$[$0 - 9] + \" \" + $$[$0 - 8] + \" \" + $$[$0 - 7] + $$[$0 - 6] + $$[$0 - 5] + $$[$0 - 4] + $$[$0 - 3] + $$[$0 - 2].codigo3D + $$[$0 - 1] + $$[$0];\r\n                    this.$ = new Asignacion3D(TipoInstruccion3D.ARREGLOASIGARREGLO, $$[$0 - 15], $$[$0 - 2], codigo3D, _$[$0 - 15].first_line, _$[$0 - 15].first_column);\r\n                    break;\r\n                case 21:\r\n                    this.$ = new Etiqueta3D(TipoInstruccion3D.ETIQUETA, $$[$0 - 1], $$[$0 - 1] + $$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 22:\r\n                    this.$ = new Goto3D(TipoInstruccion3D.GOTO, $$[$0 - 1], $$[$0 - 2] + \" \" + $$[$0 - 1] + $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 23:\r\n                    codigo3D = $$[$0 - 3] + $$[$0 - 2] + $$[$0 - 1] + $$[$0];\r\n                    this.$ = new Llamada3D(TipoInstruccion3D.LLAMADA, $$[$0 - 3], codigo3D, _$[$0 - 3].first_line, _$[$0 - 3].first_column);\r\n                    break;\r\n                case 24:\r\n                    codigo3D = $$[$0 - 9] + $$[$0 - 8] + $$[$0 - 7] + $$[$0 - 6] + \" \" + $$[$0 - 5] + $$[$0 - 4] + $$[$0 - 3] + $$[$0 - 2].codigo3D + $$[$0 - 1] + $$[$0];\r\n                    this.$ = new Printf3D(TipoInstruccion3D.PRINTF, codigo3D, _$[$0 - 9].first_line, _$[$0 - 9].first_column);\r\n                    break;\r\n                case 25:\r\n                    codigo3D = $$[$0 - 6] + $$[$0 - 5] + $$[$0 - 4].codigo3D + $$[$0 - 3] + \" \" + $$[$0 - 2] + \" \" + $$[$0 - 1] + $$[$0];\r\n                    this.$ = new If3D(TipoInstruccion3D.IF, $$[$0 - 4], new Goto3D(TipoInstruccion3D.GOTO, $$[$0 - 1], $$[$0 - 2] + \" \" + $$[$0 - 1] + $$[$0]), codigo3D, _$[$0 - 6].first_line, _$[$0 - 6].first_column);\r\n                    break;\r\n                case 26:\r\n                    this.$ = new Return3D(TipoInstruccion3D.RETURN, $$[$0 - 2] + \" \" + $$[$0 - 1] + \";\", _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 28:\r\n                    this.$ = \"\";\r\n                    break;\r\n                case 31:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.SUMA, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 32:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.RESTA, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 33:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.MULTIPLICACION, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 34:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.DIVISION, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 35:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.MOD, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 36:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.MENORQUE, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 37:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.MAYORQUE, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 38:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.MENORIGUALQUE, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 39:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.MAYORIGUALQUE, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 40:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.IGUALIGUAL, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 41:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.DIFERENTEQUE, $$[$0 - 2], $$[$0], $$[$0 - 2].codigo3D + \" \" + $$[$0 - 1] + \" \" + $$[$0].codigo3D, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 42:\r\n                    this.$ = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.MENOSUNARIO, $$[$0], null, \"-\" + $$[$0].codigo3D, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 43:\r\n                    this.$ = new Primitiva3D(TipoExpresion3D.PRIMITIVA, TipoPrim3D.IDENTIFIER, $$[$0], $$[$0], _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 44:\r\n                    this.$ = new Primitiva3D(TipoExpresion3D.PRIMITIVA, TipoPrim3D.INTEGER, +$$[$0], $$[$0], _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 45:\r\n                    this.$ = new Primitiva3D(TipoExpresion3D.PRIMITIVA, TipoPrim3D.DOUBLE, +$$[$0], $$[$0], _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n            }\r\n        },\r\n        table: [{ 3: 1, 4: 2, 6: 3, 7: $V0, 12: 5, 24: $V1, 26: $V2, 27: $V3, 28: $V4, 29: $V5 }, { 1: [3] }, { 5: [1, 11], 6: 12, 7: $V0, 12: 5, 24: $V1, 26: $V2, 27: $V3, 28: $V4, 29: $V5 }, o($V6, [2, 3]), { 8: [1, 13] }, { 9: [1, 14], 17: 15, 18: [1, 16] }, { 9: [1, 17] }, o($V7, [2, 11]), o($V7, [2, 12]), o($V7, [2, 13]), o($V7, [2, 14]), { 1: [2, 1] }, o($V6, [2, 2]), { 9: [1, 18] }, o($V8, [2, 10], { 13: [1, 19] }), { 16: [1, 20], 25: [1, 21] }, { 19: [1, 22] }, { 19: [1, 23] }, { 10: [1, 24] }, { 14: [1, 25] }, o($V6, [2, 6]), { 9: [1, 26] }, { 20: [1, 27] }, { 20: [1, 28] }, { 11: [1, 29] }, { 15: [1, 30] }, o($V8, [2, 9]), { 21: [1, 31] }, { 21: [1, 32] }, o($V6, [2, 4]), { 16: [1, 33] }, { 9: $V9, 22: 34, 30: 35, 35: $Va, 36: $Vb, 38: $Vc, 39: $Vd }, { 9: $V9, 22: 41, 30: 35, 35: $Va, 36: $Vb, 38: $Vc, 39: $Vd }, o($V6, [2, 5]), { 9: $V9, 23: [1, 42], 30: 43, 35: $Va, 36: $Vb, 38: $Vc, 39: $Vd }, o($Ve, [2, 16]), { 13: [1, 45], 19: [1, 47], 31: [1, 44], 34: [1, 46] }, { 9: [1, 48] }, { 19: [1, 49] }, { 19: [1, 50] }, { 14: [1, 52], 16: [2, 28], 40: 51 }, { 9: $V9, 23: [1, 53], 30: 43, 35: $Va, 36: $Vb, 38: $Vc, 39: $Vd }, o($V6, [2, 7]), o($Ve, [2, 15]), { 9: [1, 55], 14: $Vf, 32: 54, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 19: [1, 61] }, o($Ve, [2, 21]), { 20: [1, 62] }, { 16: [1, 63] }, { 37: [1, 64] }, { 9: $Vi, 14: $Vf, 32: 65, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 16: [1, 67] }, { 16: [2, 27] }, o($V6, [2, 8]), { 8: $Vj, 11: $Vk, 16: [1, 68], 42: $Vl, 43: $Vm, 44: $Vn, 45: $Vo, 46: $Vp, 47: $Vq, 48: $Vr, 49: $Vs, 50: $Vt }, o($Vu, $Vv, { 13: [1, 80] }), o($Vw, [2, 29]), o($Vw, [2, 30]), o($Vx, [2, 44]), o($Vx, [2, 45]), { 9: $Vi, 14: $Vf, 32: 81, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 12: 82, 26: $V2, 27: $V3, 28: $V4, 29: $V5 }, { 16: [1, 83] }, o($Ve, [2, 22]), { 25: [1, 84] }, { 8: $Vj, 11: $Vk, 20: [1, 85], 42: $Vl, 43: $Vm, 44: $Vn, 45: $Vo, 46: $Vp, 47: $Vq, 48: $Vr, 49: $Vs, 50: $Vt }, o($Vx, $Vv), o($Ve, [2, 26]), o($Ve, [2, 17]), { 9: $Vi, 14: $Vf, 32: 86, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 9: $Vi, 14: $Vf, 32: 87, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 9: $Vi, 14: $Vf, 32: 88, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 9: $Vi, 14: $Vf, 32: 89, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 9: $Vi, 14: $Vf, 32: 90, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 9: $Vi, 14: $Vf, 32: 91, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 9: $Vi, 14: $Vf, 32: 92, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 9: $Vi, 14: $Vf, 32: 93, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 9: $Vi, 14: $Vf, 32: 94, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 9: $Vi, 14: $Vf, 32: 95, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 9: $Vi, 14: $Vf, 32: 96, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 19: [1, 97] }, o($Vw, [2, 42]), { 20: [1, 98] }, o($Ve, [2, 23]), { 19: [1, 99] }, { 35: [1, 100] }, o($Vy, [2, 31], { 44: $Vn, 45: $Vo, 46: $Vp }), o($Vy, [2, 32], { 44: $Vn, 45: $Vo, 46: $Vp }), o($Vw, [2, 33]), o($Vw, [2, 34]), o($Vw, [2, 35]), o($Vz, [2, 36], { 42: $Vl, 43: $Vm, 44: $Vn, 45: $Vo, 46: $Vp }), o($Vz, [2, 37], { 42: $Vl, 43: $Vm, 44: $Vn, 45: $Vo, 46: $Vp }), o($Vz, [2, 38], { 42: $Vl, 43: $Vm, 44: $Vn, 45: $Vo, 46: $Vp }), o($Vz, [2, 39], { 42: $Vl, 43: $Vm, 44: $Vn, 45: $Vo, 46: $Vp }), o($Vz, [2, 40], { 42: $Vl, 43: $Vm, 44: $Vn, 45: $Vo, 46: $Vp }), o($Vz, [2, 41], { 42: $Vl, 43: $Vm, 44: $Vn, 45: $Vo, 46: $Vp }), { 12: 101, 26: $V2, 27: $V3, 28: $V4, 29: $V5 }, { 9: $Vi, 14: $Vf, 33: 102, 51: $Vh }, { 12: 103, 26: $V2, 27: $V3, 28: $V4, 29: $V5 }, { 9: [1, 104] }, { 20: [1, 105] }, { 15: [1, 106] }, { 20: [1, 107] }, { 16: [1, 108] }, { 9: $Vi, 14: $Vf, 33: 109, 51: $Vh }, { 31: [1, 110] }, { 9: $Vi, 14: $Vf, 33: 111, 51: $Vh }, o($Ve, [2, 25]), { 15: [1, 112] }, { 9: [1, 114], 14: $Vf, 32: 113, 33: 56, 41: 57, 43: $Vg, 51: $Vh }, { 20: [1, 115] }, { 16: [1, 116] }, { 8: $Vj, 11: $Vk, 16: [1, 117], 42: $Vl, 43: $Vm, 44: $Vn, 45: $Vo, 46: $Vp, 47: $Vq, 48: $Vr, 49: $Vs, 50: $Vt }, o($Vu, $Vv, { 13: [1, 118] }), { 16: [1, 119] }, o($Ve, [2, 18]), o($Ve, [2, 19]), { 19: [1, 120] }, o($Ve, [2, 24]), { 12: 121, 26: $V2, 27: $V3, 28: $V4, 29: $V5 }, { 20: [1, 122] }, { 9: $Vi, 14: $Vf, 33: 123, 51: $Vh }, { 15: [1, 124] }, { 16: [1, 125] }, o($Ve, [2, 20])],\r\n        defaultActions: { 11: [2, 1], 52: [2, 27] },\r\n        parseError: function parseError(str, hash) {\r\n            if (hash.recoverable) {\r\n                this.trace(str);\r\n            }\r\n            else {\r\n                var error = new Error(str);\r\n                error.hash = hash;\r\n                throw error;\r\n            }\r\n        },\r\n        parse: function parse(input) {\r\n            var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n            var args = lstack.slice.call(arguments, 1);\r\n            var lexer = Object.create(this.lexer);\r\n            var sharedState = { yy: {} };\r\n            for (var k in this.yy) {\r\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n                    sharedState.yy[k] = this.yy[k];\r\n                }\r\n            }\r\n            lexer.setInput(input, sharedState.yy);\r\n            sharedState.yy.lexer = lexer;\r\n            sharedState.yy.parser = this;\r\n            if (typeof lexer.yylloc == 'undefined') {\r\n                lexer.yylloc = {};\r\n            }\r\n            var yyloc = lexer.yylloc;\r\n            lstack.push(yyloc);\r\n            var ranges = lexer.options && lexer.options.ranges;\r\n            if (typeof sharedState.yy.parseError === 'function') {\r\n                this.parseError = sharedState.yy.parseError;\r\n            }\r\n            else {\r\n                this.parseError = Object.getPrototypeOf(this).parseError;\r\n            }\r\n            function popStack(n) {\r\n                stack.length = stack.length - 2 * n;\r\n                vstack.length = vstack.length - n;\r\n                lstack.length = lstack.length - n;\r\n            }\r\n            _token_stack: var lex = function () {\r\n                var token;\r\n                token = lexer.lex() || EOF;\r\n                if (typeof token !== 'number') {\r\n                    token = self.symbols_[token] || token;\r\n                }\r\n                return token;\r\n            };\r\n            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n            while (true) {\r\n                state = stack[stack.length - 1];\r\n                if (this.defaultActions[state]) {\r\n                    action = this.defaultActions[state];\r\n                }\r\n                else {\r\n                    if (symbol === null || typeof symbol == 'undefined') {\r\n                        symbol = lex();\r\n                    }\r\n                    action = table[state] && table[state][symbol];\r\n                }\r\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                    var errStr = '';\r\n                    expected = [];\r\n                    for (p in table[state]) {\r\n                        if (this.terminals_[p] && p > TERROR) {\r\n                            expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                        }\r\n                    }\r\n                    if (lexer.showPosition) {\r\n                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                    }\r\n                    else {\r\n                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                    }\r\n                    this.parseError(errStr, {\r\n                        text: lexer.match,\r\n                        token: this.terminals_[symbol] || symbol,\r\n                        line: lexer.yylineno,\r\n                        loc: yyloc,\r\n                        expected: expected\r\n                    });\r\n                }\r\n                if (action[0] instanceof Array && action.length > 1) {\r\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n                }\r\n                switch (action[0]) {\r\n                    case 1:\r\n                        stack.push(symbol);\r\n                        vstack.push(lexer.yytext);\r\n                        lstack.push(lexer.yylloc);\r\n                        stack.push(action[1]);\r\n                        symbol = null;\r\n                        if (!preErrorSymbol) {\r\n                            yyleng = lexer.yyleng;\r\n                            yytext = lexer.yytext;\r\n                            yylineno = lexer.yylineno;\r\n                            yyloc = lexer.yylloc;\r\n                            if (recovering > 0) {\r\n                                recovering--;\r\n                            }\r\n                        }\r\n                        else {\r\n                            symbol = preErrorSymbol;\r\n                            preErrorSymbol = null;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        len = this.productions_[action[1]][1];\r\n                        yyval.$ = vstack[vstack.length - len];\r\n                        yyval._$ = {\r\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                            last_line: lstack[lstack.length - 1].last_line,\r\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                            last_column: lstack[lstack.length - 1].last_column\r\n                        };\r\n                        if (ranges) {\r\n                            yyval._$.range = [\r\n                                lstack[lstack.length - (len || 1)].range[0],\r\n                                lstack[lstack.length - 1].range[1]\r\n                            ];\r\n                        }\r\n                        r = this.performAction.apply(yyval, [\r\n                            yytext,\r\n                            yyleng,\r\n                            yylineno,\r\n                            sharedState.yy,\r\n                            action[1],\r\n                            vstack,\r\n                            lstack\r\n                        ].concat(args));\r\n                        if (typeof r !== 'undefined') {\r\n                            return r;\r\n                        }\r\n                        if (len) {\r\n                            stack = stack.slice(0, -1 * len * 2);\r\n                            vstack = vstack.slice(0, -1 * len);\r\n                            lstack = lstack.slice(0, -1 * len);\r\n                        }\r\n                        stack.push(this.productions_[action[1]][0]);\r\n                        vstack.push(yyval.$);\r\n                        lstack.push(yyval._$);\r\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n                        stack.push(newState);\r\n                        break;\r\n                    case 3:\r\n                        return true;\r\n                }\r\n            }\r\n            return true;\r\n        } };\r\n    //const Nodo = require(\"./AST/nodo_arbol\");\r\n    //var raiz;\r\n    const { Include } = require(\"../Optimizacion/Declaraciones3D/Include\");\r\n    const { Main } = require(\"../Optimizacion/Declaraciones3D/Main\");\r\n    const { Metodo } = require(\"../Optimizacion/Declaraciones3D/Metodo\");\r\n    const { Variable } = require(\"../Optimizacion/Declaraciones3D/Variable\");\r\n    const { TipoDeclaracion3D } = require(\"../Optimizacion/Declaraciones3D/Declaracion3D\");\r\n    const { Operacion3D } = require(\"../Optimizacion/Expresiones3D/Operacion3D\");\r\n    const { TipoOperacion3D } = require(\"../Optimizacion/Expresiones3D/Operacion3D\");\r\n    const { Primitiva3D } = require(\"../Optimizacion/Expresiones3D/Primitiva3D\");\r\n    const { TipoPrim3D } = require(\"../Optimizacion/Expresiones3D/Primitiva3D\");\r\n    const { TipoExpresion3D } = require(\"../Optimizacion/Expresiones3D/Expresion3D\");\r\n    const { TipoInstruccion3D } = require(\"../Optimizacion/Instrucciones3D/Instruccion3D\");\r\n    const { Asignacion3D } = require(\"../Optimizacion/Instrucciones3D/Asignacion3D\");\r\n    const { Llamada3D } = require(\"../Optimizacion/Instrucciones3D/Llamada3D\");\r\n    const { Etiqueta3D } = require(\"../Optimizacion/Instrucciones3D/Etiqueta3D\");\r\n    const { Goto3D } = require(\"../Optimizacion/Instrucciones3D/Goto3D\");\r\n    const { If3D } = require(\"../Optimizacion/Instrucciones3D/If3D\");\r\n    const { Printf3D } = require(\"../Optimizacion/Instrucciones3D/Printf3D\");\r\n    const { Return3D } = require(\"../Optimizacion/Instrucciones3D/Return3D\");\r\n    const errores = require('../Global/ListaError');\r\n    let codigo3D = \"\";\r\n    /* generated by jison-lex 0.3.4 */\r\n    var lexer = (function () {\r\n        var lexer = ({\r\n            EOF: 1,\r\n            parseError: function parseError(str, hash) {\r\n                if (this.yy.parser) {\r\n                    this.yy.parser.parseError(str, hash);\r\n                }\r\n                else {\r\n                    throw new Error(str);\r\n                }\r\n            },\r\n            // resets the lexer, sets new input\r\n            setInput: function (input, yy) {\r\n                this.yy = yy || this.yy || {};\r\n                this._input = input;\r\n                this._more = this._backtrack = this.done = false;\r\n                this.yylineno = this.yyleng = 0;\r\n                this.yytext = this.matched = this.match = '';\r\n                this.conditionStack = ['INITIAL'];\r\n                this.yylloc = {\r\n                    first_line: 1,\r\n                    first_column: 0,\r\n                    last_line: 1,\r\n                    last_column: 0\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [0, 0];\r\n                }\r\n                this.offset = 0;\r\n                return this;\r\n            },\r\n            // consumes and returns one char from the input\r\n            input: function () {\r\n                var ch = this._input[0];\r\n                this.yytext += ch;\r\n                this.yyleng++;\r\n                this.offset++;\r\n                this.match += ch;\r\n                this.matched += ch;\r\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno++;\r\n                    this.yylloc.last_line++;\r\n                }\r\n                else {\r\n                    this.yylloc.last_column++;\r\n                }\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range[1]++;\r\n                }\r\n                this._input = this._input.slice(1);\r\n                return ch;\r\n            },\r\n            // unshifts one char (or a string) into the input\r\n            unput: function (ch) {\r\n                var len = ch.length;\r\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n                this._input = ch + this._input;\r\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n                //this.yyleng -= len;\r\n                this.offset -= len;\r\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n                this.match = this.match.substr(0, this.match.length - 1);\r\n                this.matched = this.matched.substr(0, this.matched.length - 1);\r\n                if (lines.length - 1) {\r\n                    this.yylineno -= lines.length - 1;\r\n                }\r\n                var r = this.yylloc.range;\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: lines ?\r\n                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                            + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n                        this.yylloc.first_column - len\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n                }\r\n                this.yyleng = this.yytext.length;\r\n                return this;\r\n            },\r\n            // When called from action, caches matched text and appends it on next action\r\n            more: function () {\r\n                this._more = true;\r\n                return this;\r\n            },\r\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n            reject: function () {\r\n                if (this.options.backtrack_lexer) {\r\n                    this._backtrack = true;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n                return this;\r\n            },\r\n            // retain first n characters of the match\r\n            less: function (n) {\r\n                this.unput(this.match.slice(n));\r\n            },\r\n            // displays already matched input, i.e. for error messages\r\n            pastInput: function () {\r\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\r\n            },\r\n            // displays upcoming input, i.e. for error messages\r\n            upcomingInput: function () {\r\n                var next = this.match;\r\n                if (next.length < 20) {\r\n                    next += this._input.substr(0, 20 - next.length);\r\n                }\r\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n            },\r\n            // displays the character position where the lexing error occurred, i.e. for error messages\r\n            showPosition: function () {\r\n                var pre = this.pastInput();\r\n                var c = new Array(pre.length + 1).join(\"-\");\r\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n            },\r\n            // test the lexed token: return FALSE when not a match, otherwise return token\r\n            test_match: function (match, indexed_rule) {\r\n                var token, lines, backup;\r\n                if (this.options.backtrack_lexer) {\r\n                    // save context\r\n                    backup = {\r\n                        yylineno: this.yylineno,\r\n                        yylloc: {\r\n                            first_line: this.yylloc.first_line,\r\n                            last_line: this.last_line,\r\n                            first_column: this.yylloc.first_column,\r\n                            last_column: this.yylloc.last_column\r\n                        },\r\n                        yytext: this.yytext,\r\n                        match: this.match,\r\n                        matches: this.matches,\r\n                        matched: this.matched,\r\n                        yyleng: this.yyleng,\r\n                        offset: this.offset,\r\n                        _more: this._more,\r\n                        _input: this._input,\r\n                        yy: this.yy,\r\n                        conditionStack: this.conditionStack.slice(0),\r\n                        done: this.done\r\n                    };\r\n                    if (this.options.ranges) {\r\n                        backup.yylloc.range = this.yylloc.range.slice(0);\r\n                    }\r\n                }\r\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno += lines.length;\r\n                }\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.last_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.last_column,\r\n                    last_column: lines ?\r\n                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                        this.yylloc.last_column + match[0].length\r\n                };\r\n                this.yytext += match[0];\r\n                this.match += match[0];\r\n                this.matches = match;\r\n                this.yyleng = this.yytext.length;\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n                }\r\n                this._more = false;\r\n                this._backtrack = false;\r\n                this._input = this._input.slice(match[0].length);\r\n                this.matched += match[0];\r\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n                if (this.done && this._input) {\r\n                    this.done = false;\r\n                }\r\n                if (token) {\r\n                    return token;\r\n                }\r\n                else if (this._backtrack) {\r\n                    // recover context\r\n                    for (var k in backup) {\r\n                        this[k] = backup[k];\r\n                    }\r\n                    return false; // rule action called reject() implying the next rule should be tested instead.\r\n                }\r\n                return false;\r\n            },\r\n            // return next match in input\r\n            next: function () {\r\n                if (this.done) {\r\n                    return this.EOF;\r\n                }\r\n                if (!this._input) {\r\n                    this.done = true;\r\n                }\r\n                var token, match, tempMatch, index;\r\n                if (!this._more) {\r\n                    this.yytext = '';\r\n                    this.match = '';\r\n                }\r\n                var rules = this._currentRules();\r\n                for (var i = 0; i < rules.length; i++) {\r\n                    tempMatch = this._input.match(this.rules[rules[i]]);\r\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                        match = tempMatch;\r\n                        index = i;\r\n                        if (this.options.backtrack_lexer) {\r\n                            token = this.test_match(tempMatch, rules[i]);\r\n                            if (token !== false) {\r\n                                return token;\r\n                            }\r\n                            else if (this._backtrack) {\r\n                                match = false;\r\n                                continue; // rule action called reject() implying a rule MISmatch.\r\n                            }\r\n                            else {\r\n                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else if (!this.options.flex) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (match) {\r\n                    token = this.test_match(match, rules[index]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    }\r\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                    return false;\r\n                }\r\n                if (this._input === \"\") {\r\n                    return this.EOF;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n            },\r\n            // return next match that has a token\r\n            lex: function lex() {\r\n                var r = this.next();\r\n                if (r) {\r\n                    return r;\r\n                }\r\n                else {\r\n                    return this.lex();\r\n                }\r\n            },\r\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n            begin: function begin(condition) {\r\n                this.conditionStack.push(condition);\r\n            },\r\n            // pop the previously active lexer condition state off the condition stack\r\n            popState: function popState() {\r\n                var n = this.conditionStack.length - 1;\r\n                if (n > 0) {\r\n                    return this.conditionStack.pop();\r\n                }\r\n                else {\r\n                    return this.conditionStack[0];\r\n                }\r\n            },\r\n            // produce the lexer rule set which is active for the currently active lexer condition state\r\n            _currentRules: function _currentRules() {\r\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n                }\r\n                else {\r\n                    return this.conditions[\"INITIAL\"].rules;\r\n                }\r\n            },\r\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n            topState: function topState(n) {\r\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n                if (n >= 0) {\r\n                    return this.conditionStack[n];\r\n                }\r\n                else {\r\n                    return \"INITIAL\";\r\n                }\r\n            },\r\n            // alias for begin(condition)\r\n            pushState: function pushState(condition) {\r\n                this.begin(condition);\r\n            },\r\n            // return the number of states currently on the stack\r\n            stateStackSize: function stateStackSize() {\r\n                return this.conditionStack.length;\r\n            },\r\n            options: { \"case-insensitive\": true },\r\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n                var YYSTATE = YY_START;\r\n                switch ($avoiding_name_collisions) {\r\n                    case 0: /* skip whitespace */\r\n                        break;\r\n                    case 1:\r\n                        this.begin('comment');\r\n                        break;\r\n                    case 2:\r\n                        this.popState();\r\n                        break;\r\n                    case 3: /* skip comment content*/\r\n                        break;\r\n                    case 4:\r\n                        return \"ext_h\";\r\n                        break;\r\n                    case 5:\r\n                        return \"corA\";\r\n                        break;\r\n                    case 6:\r\n                        return \"corC\";\r\n                        break;\r\n                    case 7:\r\n                        return \"llaveA\";\r\n                        break;\r\n                    case 8:\r\n                        return \"llaveC\";\r\n                        break;\r\n                    case 9:\r\n                        return \"parA\";\r\n                        break;\r\n                    case 10:\r\n                        return \"parC\";\r\n                        break;\r\n                    case 11:\r\n                        return \"dospuntos\";\r\n                        break;\r\n                    case 12:\r\n                        return \"puntocoma\";\r\n                        break;\r\n                    case 13:\r\n                        return \"coma\";\r\n                        break;\r\n                    case 14:\r\n                        return 48;\r\n                        break;\r\n                    case 15:\r\n                        return 47;\r\n                        break;\r\n                    case 16:\r\n                        return 8;\r\n                        break;\r\n                    case 17:\r\n                        return 11;\r\n                        break;\r\n                    case 18:\r\n                        return 49;\r\n                        break;\r\n                    case 19:\r\n                        return 31;\r\n                        break;\r\n                    case 20:\r\n                        return \"neq\";\r\n                        break;\r\n                    case 21:\r\n                        return 45;\r\n                        break;\r\n                    case 22:\r\n                        return 46;\r\n                        break;\r\n                    case 23:\r\n                        return 44;\r\n                        break;\r\n                    case 24:\r\n                        return \"mas\";\r\n                        break;\r\n                    case 25:\r\n                        return \"menos\";\r\n                        break;\r\n                    case 26:\r\n                        return \"main\";\r\n                        break;\r\n                    case 27:\r\n                        return \"return\";\r\n                        break;\r\n                    case 28:\r\n                        return \"void\";\r\n                        break;\r\n                    case 29:\r\n                        return \"float\";\r\n                        break;\r\n                    case 30:\r\n                        return \"printf\";\r\n                        break;\r\n                    case 31:\r\n                        return \"char\";\r\n                        break;\r\n                    case 32:\r\n                        return \"int\";\r\n                        break;\r\n                    case 33:\r\n                        return \"double\";\r\n                        break;\r\n                    case 34:\r\n                        return \"if\";\r\n                        break;\r\n                    case 35:\r\n                        return \"goto\";\r\n                        break;\r\n                    case 36:\r\n                        return \"include\";\r\n                        break;\r\n                    case 37:\r\n                        return 51;\r\n                        break;\r\n                    case 38:\r\n                        return 14;\r\n                        break;\r\n                    case 39:\r\n                        return 9;\r\n                        break;\r\n                    case 40:\r\n                        return 37;\r\n                        break;\r\n                    case 41:\r\n                        return 'cadena2';\r\n                        break;\r\n                    case 42:\r\n                        break;\r\n                    case 43:\r\n                        return 5;\r\n                        break;\r\n                    case 44:\r\n                        console.log(\"Error Lexico: \" + yy_.yytext);\r\n                        break;\r\n                }\r\n            },\r\n            rules: [/^(?:\\/\\/.*\\s+)/i, /^(?:\\/\\*)/i, /^(?:\\*\\/)/i, /^(?:.)/i, /^(?:\\.h\\b)/i, /^(?:\\[)/i, /^(?:\\])/i, /^(?:\\{)/i, /^(?:\\})/i, /^(?:\\()/i, /^(?:\\))/i, /^(?::)/i, /^(?:;)/i, /^(?:,)/i, /^(?:>=)/i, /^(?:<=)/i, /^(?:<)/i, /^(?:>)/i, /^(?:==)/i, /^(?:=)/i, /^(?:!=)/i, /^(?:\\/)/i, /^(?:%)/i, /^(?:\\*)/i, /^(?:\\+)/i, /^(?:-)/i, /^(?:main\\b)/i, /^(?:return\\b)/i, /^(?:void\\b)/i, /^(?:float\\b)/i, /^(?:printf\\b)/i, /^(?:char\\b)/i, /^(?:int\\b)/i, /^(?:double\\b)/i, /^(?:if\\b)/i, /^(?:goto\\b)/i, /^(?:#include\\b)/i, /^(?:(([0-9]+\\.[0-9]*)|(\\.[0-9]+)))/i, /^(?:[0-9]+)/i, /^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ]*)/i, /^(?:(\"((\\\\([\\'\\\"\\\\]))|([^\\\"\\\\]+))*\"))/i, /^(?:('((\\\\([\\'\\\"\\\\]))|([^\\'\\\\]))*'))/i, /^(?:[ \\t\\r\\n\\f])/i, /^(?:$)/i, /^(?:.)/i],\r\n            conditions: { \"comment\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], \"inclusive\": true }, \"INITIAL\": { \"rules\": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], \"inclusive\": true } }\r\n        });\r\n        return lexer;\r\n    })();\r\n    parser.lexer = lexer;\r\n    function Parser() {\r\n        this.yy = {};\r\n    }\r\n    Parser.prototype = parser;\r\n    parser.Parser = Parser;\r\n    return new Parser;\r\n})();\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\n    exports.parser = Optimizacion_Grammar;\r\n    exports.Parser = Optimizacion_Grammar.Parser;\r\n    exports.parse = function () { return Optimizacion_Grammar.parse.apply(Optimizacion_Grammar, arguments); };\r\n    exports.main = function commonjsMain(args) {\r\n        if (!args[1]) {\r\n            console.log('Usage: ' + args[0] + ' FILE');\r\n            process.exit(1);\r\n        }\r\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n        return exports.parser.parse(source);\r\n    };\r\n    if (typeof module !== 'undefined' && require.main === module) {\r\n        exports.main(process.argv.slice(1));\r\n    }\r\n}\r\n","export class Flwor {\r\n    constructor(opcionales, retType, linea, columna) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.retType = retType;\r\n        this.opcionales = opcionales;\r\n    }\r\n    ejecutar(XQEnt, xmlEnt) {\r\n        //Se ejecutan las intrucciones opcionales (Let, for, where, order by) ( Si es que hay)\r\n        this.opcionales.forEach((opcional) => {\r\n            opcional.ejecutar(XQEnt, xmlEnt);\r\n        });\r\n        //Se ejecuta el return y se retorna el resultado (Objeto)\r\n        return this.retType.ejecutar(XQEnt, xmlEnt);\r\n    }\r\n}\r\n","import { Simbolo } from \"../AST/Simbolo\";\r\nimport { Tipo } from \"../AST/Tipo\";\r\nimport { Operacion } from \"../Expresiones/Operacion\";\r\nimport { Consulta } from \"../XPath/Consulta\";\r\nimport { Nodo, TipoNodo } from \"../XPath/Nodo\";\r\nexport class Where {\r\n    constructor(identificador, condicion, fromRoot, linea, columna) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.identificador = identificador;\r\n        this.condicion = condicion;\r\n        this.fromRoot = fromRoot;\r\n    }\r\n    isFromRoot() {\r\n        //SI el nodo es // devuelve false, si el nodo es de tipo / devuelve true.\r\n        return this.fromRoot;\r\n    }\r\n    ejecutar(XQEnt, xmlEnt) {\r\n        let listaRedefinida = [];\r\n        //ej: where $x/price>30   <-- id: $x , condicion = price > 30, fromRoot = / o //\r\n        //1. Obtener $x\r\n        let simb = XQEnt.obtenerSimbolo(this.identificador);\r\n        //2. Sobre $x buscar quienes cumplen con la condicion.\r\n        if (simb != null) {\r\n            if (this.isFromRoot()) {\r\n                //simb.valor es la respuesta a la consulta del for ( Array<any> )\r\n                simb.valor.forEach((s) => {\r\n                    //s.valor es un entorno donde se debe validar la condicion\r\n                    let auxEnt = s.valor;\r\n                    let respuesta = this.condicion.getValor(auxEnt);\r\n                    //Si la respuesta tiene algun valor, agregar S\r\n                    if (respuesta != null) {\r\n                        if (respuesta.tsimbolos != undefined && respuesta.tsimbolos.length > 0) {\r\n                            listaRedefinida = listaRedefinida.concat(s);\r\n                        }\r\n                        else if (respuesta.tsimbolos === undefined && respuesta) {\r\n                            listaRedefinida = listaRedefinida.concat(s);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            if (listaRedefinida.length == 0 && !this.isFromRoot()) {\r\n                //Si es // buscar en este entorno y en los hijos a ver si se encuentra la condicion.\r\n                //Obtener operador izquierdo.\r\n                let izq = null;\r\n                if (this.condicion instanceof Operacion) {\r\n                    izq = this.condicion.op_izq;\r\n                    let auxLista = [];\r\n                    simb.valor.forEach((s) => {\r\n                        let newNodo = new Nodo(izq.getValorInicial(xmlEnt), TipoNodo.IDENTIFIER, this.linea, this.columna);\r\n                        newNodo.fromRoot = false;\r\n                        let auxCons = new Consulta([newNodo], this.linea, this.columna);\r\n                        let newEnt = auxCons.ejecutar(s.valor);\r\n                        if (newEnt.length > 0) {\r\n                            auxLista.push(s);\r\n                        }\r\n                    });\r\n                    if (auxLista.length > 0) {\r\n                        //Para cada elemento aca realizar la operacion\r\n                        auxLista.forEach((s) => {\r\n                            let respuesta = this.condicion.getValor(s.getValor());\r\n                            if (respuesta != null) {\r\n                                if (respuesta.tsimbolos != undefined && respuesta.tsimbolos.length > 0) {\r\n                                    listaRedefinida = listaRedefinida.concat(s);\r\n                                }\r\n                                else if (respuesta.tsimbolos === undefined && respuesta) {\r\n                                    listaRedefinida = listaRedefinida.concat(s);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            //Sobreescribir la variable con la lista redefinida\r\n            let nuevoSimbolo = new Simbolo(Tipo.XQ_VAR, this.identificador, listaRedefinida, this.linea, this.columna);\r\n            if (XQEnt.sobreEscribirSimbolo(this.identificador, nuevoSimbolo)) {\r\n            }\r\n            else {\r\n                console.log(\"Error, no se pudo sobreescribir simbolo: $\", this.identificador);\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"ERROR WHERE, SIMBOLO NO ENCONTRADO: \", simb);\r\n        }\r\n    }\r\n}\r\n","export class For {\r\n    constructor(listaFor, linea, columna) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.listaFor = listaFor;\r\n    }\r\n    ejecutar(XQueryEnt, xmlEnt) {\r\n        //Un for puede ser: for $x in //book, at $i in //bok (Separados por coma)\r\n        for (let i = 0; i < this.listaFor.length; i++) {\r\n            let forElem = this.listaFor[i];\r\n            forElem.ejecutar(XQueryEnt, xmlEnt);\r\n        }\r\n    }\r\n}\r\n","import { Simbolo } from \"../AST/Simbolo\";\r\nimport { Tipo } from \"../AST/Tipo\";\r\nexport class Let {\r\n    constructor(identifier, consultas, linea, columna, desde, hasta, listaEnteros, expresion) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.consultas = consultas;\r\n        this.listaEnteros = listaEnteros;\r\n        this.identifier = identifier;\r\n        this.expresion = expresion;\r\n        if (desde != undefined && hasta != undefined) {\r\n            this.desde = +desde;\r\n            this.hasta = +hasta;\r\n        }\r\n    }\r\n    ejecutar(XQEnt, xmlEnt) {\r\n        console.log(\"Se ejecuta let; ID \", this.identifier);\r\n        let listaSimbolos = [];\r\n        if (this.consultas != undefined) {\r\n            this.consultas.forEach((consulta) => {\r\n                listaSimbolos.push(consulta.ejecutar(xmlEnt));\r\n            });\r\n            let newSimb = new Simbolo(Tipo.XQ_VAR, this.identifier, listaSimbolos, this.linea, this.columna);\r\n            XQEnt.agregarSimbolo(this.identifier, newSimb);\r\n        }\r\n        else if (this.listaEnteros != undefined) {\r\n            let newSimb = new Simbolo(Tipo.XQ_VAR, this.identifier, this.listaEnteros, this.linea, this.columna);\r\n            XQEnt.agregarSimbolo(this.identifier, newSimb);\r\n        }\r\n        else if (this.desde != undefined && this.hasta != undefined) {\r\n            for (let i = this.desde; i <= this.hasta; i++) {\r\n                console.log(\"i: \", i);\r\n                listaSimbolos.push(\"\" + i);\r\n            }\r\n            let newSimb = new Simbolo(Tipo.XQ_VAR, this.identifier, listaSimbolos, this.linea, this.columna);\r\n            XQEnt.agregarSimbolo(this.identifier, newSimb);\r\n            console.log(\"SIMBOLO: \", XQEnt.obtenerSimbolo(this.identifier));\r\n        }\r\n        else if (this.expresion != undefined) {\r\n            let newSimb = new Simbolo(Tipo.XQ_VAR, this.identifier, this.expresion.getValor(XQEnt), this.linea, this.columna);\r\n            XQEnt.agregarSimbolo(this.identifier, newSimb);\r\n        }\r\n    }\r\n}\r\n","import { Simbolo } from \"../AST/Simbolo\";\r\nimport { Tipo } from \"../AST/Tipo\";\r\nimport { Consulta } from \"../XPath/Consulta\";\r\nexport class OrderBy {\r\n    constructor(listaSort, linea, columna) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.listaSort = listaSort;\r\n    }\r\n    ejecutar(XQEnt, xmlEnt) {\r\n        //Order by $x/book/title\r\n        //this.listaSort[0].ejecutar(XQEnt, xmlEnt)\r\n        let listaOrdenada = [];\r\n        let n = 0;\r\n        let criterioActual = this.listaSort[n];\r\n        //Ordernar alfabeticamente o numericamente ascendente\r\n        //1. Obtener $id\r\n        let listaSimbs = XQEnt.obtenerSimbolo(criterioActual.identifier);\r\n        //2. simb.valor tiene la lista de simbolos con la consulta.\r\n        //Obtener la consulta completa (listanodos)\r\n        listaOrdenada = this.ordenarPorCriterios(listaOrdenada, listaSimbs, n);\r\n        //3. Guardar la lista ordenada en la tabla de simbolos\r\n        let Ordenada = new Simbolo(Tipo.XQ_VAR, criterioActual.identifier, listaOrdenada, this.linea, this.columna);\r\n        XQEnt.sobreEscribirSimbolo(criterioActual.identifier, Ordenada);\r\n    }\r\n    ordenarPorCriterios(listaOrdenada, listaSimbs, n) {\r\n        let listaTextos = [];\r\n        let criterioActual = this.listaSort[n];\r\n        for (let i = 0; i < listaSimbs.valor.length; i++) {\r\n            let consultaTemp = new Consulta(criterioActual.listaNodos, this.linea, this.columna);\r\n            let auxSimb = listaSimbs.valor[i].valor;\r\n            let auxRespuesta = consultaTemp.ejecutar(auxSimb);\r\n            for (let j = 0; j < auxRespuesta.length; j++) {\r\n                let auxSimbRes = auxRespuesta[j];\r\n                let textoCompare = this.obtenerTexto(auxSimbRes);\r\n                if (textoCompare != null) {\r\n                    //Comparar este texto con todos los anteriores en la lista.\r\n                    let flag = false;\r\n                    if (i > 0) {\r\n                        for (let k = 0; k < i; k++) {\r\n                            let numero = +textoCompare;\r\n                            let numLista = +listaTextos[k];\r\n                            if (!isNaN(numero) && !isNaN(numLista)) {\r\n                                if (numLista > numero) {\r\n                                    [listaTextos, listaOrdenada] = this.reOrdenar(listaTextos, textoCompare, listaOrdenada, listaSimbs.valor[i], k);\r\n                                    flag = true;\r\n                                    break;\r\n                                }\r\n                                else if (numLista === numero) {\r\n                                    //Si son iguales, ver el proximo criterio de ordenamiento\r\n                                    let sigCriterio = this.listaSort[n + 1];\r\n                                    if (sigCriterio != undefined) {\r\n                                        let desemp = this.desempatar(listaSimbs.valor[i], listaOrdenada[k], n + 1);\r\n                                        if (desemp) {\r\n                                            flag = true;\r\n                                            [listaTextos, listaOrdenada] = this.reOrdenar(listaTextos, textoCompare, listaOrdenada, listaSimbs.valor[i], k);\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            else if (listaTextos[k] > textoCompare) {\r\n                                //poner el nuevo texto en esta posicion k\r\n                                //Desplazar lo que ya existia una posicioon\r\n                                [listaTextos, listaOrdenada] = this.reOrdenar(listaTextos, textoCompare, listaOrdenada, listaSimbs.valor[i], k);\r\n                                flag = true;\r\n                                break;\r\n                            }\r\n                            else if (listaTextos[k] === textoCompare) {\r\n                                //Si son iguales. Obtener el proximo criterio de ordenamiento\r\n                                let sigCriterio = this.listaSort[n + 1];\r\n                                if (sigCriterio != undefined) {\r\n                                    let desemp = this.desempatar(listaSimbs.valor[i], listaOrdenada[k], n + 1);\r\n                                    if (desemp) {\r\n                                        flag = true;\r\n                                        [listaTextos, listaOrdenada] = this.reOrdenar(listaTextos, textoCompare, listaOrdenada, listaSimbs.valor[i], k);\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if (!flag) {\r\n                            listaTextos.push(textoCompare);\r\n                            listaOrdenada.push(listaSimbs.valor[i]);\r\n                        }\r\n                    }\r\n                    else {\r\n                        listaTextos.push(textoCompare);\r\n                        listaOrdenada.push(listaSimbs.valor[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return listaOrdenada;\r\n    }\r\n    desempatar(valComparar, valYaEnLista, posCriterio) {\r\n        let nuevoCriterio = this.listaSort[posCriterio];\r\n        let consultaTemp = new Consulta(nuevoCriterio.listaNodos, this.linea, this.columna);\r\n        let auxSimb = valComparar.valor;\r\n        let auxRespuesta = consultaTemp.ejecutar(auxSimb);\r\n        let auxYaEnLista = valYaEnLista.valor;\r\n        let auxRespuestaYaEnLista = consultaTemp.ejecutar(auxYaEnLista);\r\n        for (let i = 0; i < auxRespuesta.length; i++) {\r\n            let auxSimbRes = auxRespuesta[i];\r\n            let textoCompare = this.obtenerTexto(auxSimbRes);\r\n            if (textoCompare != null) {\r\n                for (let j = 0; j < auxRespuestaYaEnLista.length; j++) {\r\n                    let auxSimbYaRes = auxRespuestaYaEnLista[j];\r\n                    let textoYaEnLista = this.obtenerTexto(auxSimbYaRes);\r\n                    if (textoYaEnLista != null) {\r\n                        let numero = +textoCompare;\r\n                        let numLista = +textoYaEnLista;\r\n                        if (!isNaN(numero) && !isNaN(numLista)) {\r\n                            if (numLista > numero) {\r\n                                return true;\r\n                            }\r\n                            else if (numLista === numero) {\r\n                                let sigCriterio = this.listaSort[posCriterio + 1];\r\n                                if (sigCriterio != undefined) {\r\n                                    return this.desempatar(valComparar, valYaEnLista, posCriterio + 1);\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (textoYaEnLista > textoCompare) {\r\n                            return true;\r\n                        }\r\n                        else if (textoYaEnLista === textoCompare) {\r\n                            let sigCriterio = this.listaSort[posCriterio + 1];\r\n                            if (sigCriterio != undefined) {\r\n                                return this.desempatar(valComparar, valYaEnLista, posCriterio + 1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    reOrdenar(listaTextos, nuevoTexto, listaOrdenada, nuevoSimb, indiceReemplazar) {\r\n        let nuevaListaText = [];\r\n        let nuevaListaSimb = [];\r\n        for (let i = 0; i < listaTextos.length; i++) {\r\n            if (i === indiceReemplazar) {\r\n                nuevaListaText.push(nuevoTexto);\r\n                nuevaListaSimb.push(nuevoSimb);\r\n            }\r\n            nuevaListaText.push(listaTextos[i]);\r\n            nuevaListaSimb.push(listaOrdenada[i]);\r\n        }\r\n        return [nuevaListaText, nuevaListaSimb];\r\n    }\r\n    obtenerTexto(etiqueta) {\r\n        for (let i = 0; i < etiqueta.valor.tsimbolos.length; i++) {\r\n            if (etiqueta.valor.tsimbolos[i].valor.getTipo() === Tipo.STRING) {\r\n                return etiqueta.valor.tsimbolos[i].valor.getValor();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","export class Sort {\r\n    constructor(identifier, listaNodos, linea, columna) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.identifier = identifier;\r\n        this.listaNodos = listaNodos;\r\n    }\r\n}\r\n","import { Consulta } from \"../XPath/Consulta\";\r\nexport class CondicionIf {\r\n    constructor(identificador, listaNodos, etiqueta, funcionXQ, vacio, linea, columna) {\r\n        this.etiqueta = etiqueta;\r\n        this.identificador = identificador;\r\n        this.listaNodos = listaNodos;\r\n        this.funcionXQ = funcionXQ;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.vacio = vacio;\r\n    }\r\n    isVacio() {\r\n        return this.vacio;\r\n    }\r\n    obtenerResponse(simbolo) {\r\n        if (this.identificador != undefined && this.listaNodos != undefined) {\r\n            //Es del tipo: $x/algo/otro\r\n            //1. Sobre el simbolo recibido, obtener la consulta\r\n            let tempC = new Consulta(this.listaNodos, this.linea, this.columna);\r\n            let resp = [];\r\n            return resp.concat(tempC.ejecutar(simbolo.valor));\r\n        }\r\n        else if (this.funcionXQ != undefined) {\r\n            //Es del tipo: data($id/algo)\r\n            let resp = [];\r\n            resp = resp.concat(this.funcionXQ.getSobreEntornoXML(simbolo.valor));\r\n            //resp.concat(simbolo);\r\n            return resp;\r\n        }\r\n        return [];\r\n    }\r\n}\r\n","export class Html {\r\n    constructor(identifier, atributos, texto, listaHtml, listaVarCall, isUnica, linea, columna) {\r\n        this.linea = linea;\r\n        this.listaVarCall = listaVarCall;\r\n        this.columna = columna;\r\n        this.isUnica = isUnica;\r\n        this.identifier = identifier;\r\n        this.listaHtml = listaHtml;\r\n        this.atributos = atributos;\r\n        this.texto = texto;\r\n    }\r\n    ejecutar(ent) {\r\n    }\r\n}\r\n","export class IfThenElse {\r\n    constructor(identificador, condicion, respThen, listaElseIf, respElse, fromRoot, linea, columna) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.identificador = identificador;\r\n        this.condicion = condicion;\r\n        this.condicionElse = respElse;\r\n        this.condicionThen = respThen;\r\n        this.listaElseIf = listaElseIf;\r\n        this.fromRoot = fromRoot;\r\n    }\r\n    isFromRoot() {\r\n        return this.fromRoot;\r\n    }\r\n    ejecutar(XQEnt, xmlEnt) {\r\n        let nuevaLista = [];\r\n        //1. Obtener simbolo\r\n        let ls = XQEnt.obtenerSimbolo(this.identificador);\r\n        //2. Ver si es fromRoot / o no //\r\n        if (this.isFromRoot()) {\r\n            //Es /, buscar la expresion solo sobre este entorno\r\n            ls.valor.forEach((s) => {\r\n                let et = s.valor;\r\n                let respuesta = this.condicion.getValor(et);\r\n                if (respuesta != null && respuesta != undefined) {\r\n                    //Aplicarle la response del THEN\r\n                    if (respuesta.tsimbolos !== undefined && respuesta.tsimbolos.length > 0) {\r\n                        if (!this.condicionThen.isVacio()) {\r\n                            nuevaLista = nuevaLista.concat(this.condicionThen.obtenerResponse(s));\r\n                        }\r\n                    }\r\n                    else if (respuesta.tsimbolos === undefined && respuesta) {\r\n                        if (!this.condicionThen.isVacio()) {\r\n                            nuevaLista = nuevaLista.concat(this.condicionThen.obtenerResponse(s));\r\n                        }\r\n                    }\r\n                    else {\r\n                        //Ver si aplicar la respuesta de algun ELSE IF o ELSE\r\n                        let aplicado = false;\r\n                        for (let x = 0; x < this.listaElseIf.length; x++) {\r\n                            //Para cada else if valuar para ver si aplica uno.\r\n                            let unElseIf = this.listaElseIf[x];\r\n                            if (unElseIf.condicionCumple(et)) {\r\n                                //Si cumple, aplicar la respuesta de este else if y break.\r\n                                aplicado = true;\r\n                                nuevaLista = nuevaLista.concat(unElseIf.obtenerResponse(s));\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!aplicado && !this.condicionElse.isVacio()) {\r\n                            nuevaLista = nuevaLista.concat(this.condicionElse.obtenerResponse(s));\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    //Ver si aplicar la respuesta de algun ELSE IF o ELSE\r\n                    let aplicado = false;\r\n                    for (let x = 0; x < this.listaElseIf.length; x++) {\r\n                        //Para cada else if valuar para ver si aplica uno.\r\n                        let unElseIf = this.listaElseIf[x];\r\n                        if (unElseIf.condicionCumple(et)) {\r\n                            //Si cumple, aplicar la respuesta de este else if y break.\r\n                            aplicado = true;\r\n                            nuevaLista = nuevaLista.concat(unElseIf.obtenerResponse(s));\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!aplicado && !this.condicionElse.isVacio()) {\r\n                        nuevaLista = nuevaLista.concat(this.condicionElse.obtenerResponse(s));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return nuevaLista;\r\n    }\r\n}\r\n","export class ElseIf {\r\n    constructor(identifier, condicion, respThen, fila, columna) {\r\n        this.identifier = identifier;\r\n        this.condicion = condicion;\r\n        this.respThen = respThen;\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n    }\r\n    condicionCumple(entorno) {\r\n        let respuesta = this.condicion.getValor(entorno);\r\n        if (respuesta != null && respuesta != undefined) {\r\n            if (respuesta.tsimbolos !== undefined && respuesta.tsimbolos.length > 0) {\r\n                return true;\r\n            }\r\n            else if (respuesta.tsimbolos === undefined && respuesta) {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    obtenerResponse(s) {\r\n        if (!this.respThen.isVacio()) {\r\n            return this.respThen.obtenerResponse(s);\r\n        }\r\n        return [];\r\n    }\r\n}\r\n","export class VarCall {\r\n    constructor(identifier, listaNodos, flwor, linea, columna) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.identifier = identifier;\r\n        this.listaNodos = listaNodos;\r\n        this.flwor = flwor;\r\n    }\r\n    ejecutar(ent) {\r\n    }\r\n}\r\n","import errores from '../Global/ListaError';\r\nimport { Simbolo } from '../AST/Simbolo';\r\nimport { Tipo } from '../AST/Tipo';\r\nexport class UserFunction {\r\n    constructor(tipo, ambito, nombre, parametros, instrucciones, linea, columna) {\r\n        this.tipo = tipo;\r\n        this.ambito = ambito;\r\n        this.nombre = nombre;\r\n        this.parametros = parametros;\r\n        this.instrucciones = instrucciones;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n    ejecutar(entornoXQuery, entornoXML) {\r\n        if (!entornoXQuery.existeMetodo(this.nombre)) {\r\n            let sim = new Simbolo(Tipo.XQ_FUNC, this.nombre, null, this.linea, this.columna);\r\n            sim.setParametros(this.parametros);\r\n            sim.setInstrucciones(this.instrucciones);\r\n            entornoXQuery.global.agregarSimbolo(this.nombre, sim);\r\n        }\r\n        else\r\n            errores.agregarError('semantico', 'Ya existe el metodo/funcion ' + this.nombre, this.linea, this.columna);\r\n    }\r\n}\r\n","import { Entorno } from \"../AST/Entorno\";\r\nimport { Primitiva, TipoPrim } from \"../Expresiones/Primitiva\";\r\nimport errores from \"../Global/ListaError\";\r\nexport class Llamada {\r\n    constructor(nombre, parametros, linea, columna) {\r\n        this.nombre = nombre;\r\n        this.parametros = parametros;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n    ejecutar(entornoXQuery, entornoXML) {\r\n        if (entornoXQuery.existeMetodo(this.nombre)) {\r\n            let funcion = entornoXQuery.obtenerMetodo(this.nombre);\r\n            let entXQLocal = new Entorno(\"Funcion \" + this.nombre, entornoXQuery, entornoXQuery.global);\r\n            /* SE VALIDAN LOS PARAMETROS: PRIMERO LA CANTIDAD Y LUEGO LOS TIPOS */\r\n            let sizeParam = funcion.getParametros().length;\r\n            if (sizeParam === this.parametros.length) {\r\n                /* SE AGREGAN LOS PARAMETROS A LA TABLA DE SIMBOLOS */\r\n                let i;\r\n                let bandera = true;\r\n                let valoresLlamada = [];\r\n                /*for(i = 0; i < sizeParam; i++){\r\n                    let paramActual = this.parametros[i];\r\n                    if (paramActual instanceof expresion){\r\n                        valoresLlamada.push(paramActual.getValor(entXQLocal));\r\n                    }else if (paramActual instanceof Llamada){\r\n                        let res = paramActual.ejecutar(entXQLocal, entornoXML);\r\n                        valoresLlamada.push(res.getValor(entXQLocal));\r\n                    }\r\n                }*/\r\n                /*if (bandera){\r\n                    /* SE AGREGAN LOS PARAMETROS A LA TABLA DE SIMBOLOS\r\n                    for(i = 0; i < sizeParam; i++){\r\n                        let param = funcion.getParametros()[i];\r\n                        entXQLocal.agregarSimbolo(param.nombre, new Simbolo(Tipo.XQ_VARI, param.nombre, valoresLlamada[i], this.linea, this.columna));\r\n                    }\r\n\r\n                    //console.log('se ejecuta llamada');\r\n                    /* SE EJECUTAN LAS INSTRUCCIONES\r\n                    sizeParam = metFunc.getInstrucciones();\r\n                    for(i = 0; i < sizeParam.length; i++){\r\n                        let inst = sizeParam[i];\r\n                        console.log(inst);\r\n                        if (inst instanceof expresion){\r\n                            let valor = auxiliar.getValor(local);\r\n                        }else if (inst instanceof instruccion){\r\n                            //console.log('entra aca');\r\n                            let auxiliar = inst.ejecutar(local);\r\n                            console.log(auxiliar);\r\n                            if (auxiliar instanceof _return){ // return;\r\n                                if (auxiliar.expresion === null){ // Es un metodo\r\n                                    display.deleteUltimo();\r\n                                    break;\r\n                                }else{//Es funcion\r\n                                    let t;\r\n                                    let val;\r\n                                    if (auxiliar.expresion instanceof expresion){\r\n                                        val = auxiliar.expresion.getValor(local);\r\n                                        t = auxiliar.expresion.getTipo(local);\r\n                                    }else if (auxiliar.expresion instanceof llamada){\r\n                                        let res = auxiliar.expresion.ejecutar(local);\r\n                                        val = res.getValor(local);\r\n                                        t = res.getTipo(local);\r\n                                    }\r\n                                    //let val = auxiliar.expresion.getValor(local);\r\n                                    //let t = auxiliar.expresion.getTipo(local);\r\n                                    if (t === metFunc.getTipo()){\r\n                                        if (display.getUltimo() === 'metodo' || display.getUltimo() === 'funcion')\r\n                                            display.deleteUltimo();\r\n                                        return new primitivo(this.tipo, val);\r\n                                    }else\r\n                                        errores.agregarError('semantico', 'El tipo de retorno es distinto al tipo de funcion',\r\n                                                                this.linea, this.columna);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }*/\r\n            }\r\n            else\r\n                errores.agregarError('semantico', 'La cantidad de parametros no es igual', this.linea, this.columna);\r\n        }\r\n        else\r\n            errores.agregarError('semantico', 'No existe la funcion ' + this.nombre, this.linea, this.columna);\r\n        return new Primitiva('', TipoPrim.ERROR, this.linea, this.columna);\r\n    }\r\n}\r\n","export class Include {\r\n    constructor(tipo, codigo3D, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.codigo3Dir = codigo3D;\r\n    }\r\n    getCodigo3Dir() {\r\n        return this.codigo3Dir;\r\n    }\r\n    setCodigo3Dir(codigo) {\r\n        this.codigo3Dir = codigo;\r\n    }\r\n    optimizar() {\r\n    }\r\n}\r\n","export class Variable {\r\n    constructor(tipo, codigo3D, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.codigo3Dir = codigo3D;\r\n    }\r\n    getCodigo3Dir() {\r\n        return this.codigo3Dir;\r\n    }\r\n    setCodigo3Dir(codigo) {\r\n        this.codigo3Dir = codigo;\r\n    }\r\n    optimizar() {\r\n    }\r\n}\r\n","export var TipoDeclaracion3D;\r\n(function (TipoDeclaracion3D) {\r\n    TipoDeclaracion3D[TipoDeclaracion3D[\"INCLUDE\"] = 0] = \"INCLUDE\";\r\n    TipoDeclaracion3D[TipoDeclaracion3D[\"ARREGLO\"] = 1] = \"ARREGLO\";\r\n    TipoDeclaracion3D[TipoDeclaracion3D[\"VARIABLE\"] = 2] = \"VARIABLE\";\r\n    TipoDeclaracion3D[TipoDeclaracion3D[\"MAIN\"] = 3] = \"MAIN\";\r\n    TipoDeclaracion3D[TipoDeclaracion3D[\"METODO\"] = 4] = \"METODO\";\r\n})(TipoDeclaracion3D || (TipoDeclaracion3D = {}));\r\n","export class Llamada3D {\r\n    constructor(tipo, nombreMetodo, codigo3d, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.codigo3D = codigo3d;\r\n        this.metodo = nombreMetodo;\r\n        this.eliminada = false;\r\n        this.optimizada = false;\r\n    }\r\n    isOptimizada() {\r\n        return this.optimizada;\r\n    }\r\n    setOptimizada(optimizada) {\r\n        this.optimizada = optimizada;\r\n    }\r\n    isEliminada() {\r\n        return this.eliminada;\r\n    }\r\n    setEliminada(eliminada) {\r\n        this.eliminada = eliminada;\r\n    }\r\n    getTipoInstruccion() {\r\n        return this.tipo;\r\n    }\r\n    setCodigo3D(codigo) {\r\n        this.codigo3D = codigo;\r\n    }\r\n    getCodigo3D() {\r\n        return this.codigo3D;\r\n    }\r\n}\r\n","export class Printf3D {\r\n    constructor(tipo, codigo3d, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.codigo3D = codigo3d;\r\n        this.eliminada = false;\r\n        this.optimizada = false;\r\n    }\r\n    isOptimizada() {\r\n        return this.optimizada;\r\n    }\r\n    setOptimizada(optimizada) {\r\n        this.optimizada = optimizada;\r\n    }\r\n    isEliminada() {\r\n        return this.eliminada;\r\n    }\r\n    setEliminada(eliminada) {\r\n        this.eliminada = eliminada;\r\n    }\r\n    getTipoInstruccion() {\r\n        return this.tipo;\r\n    }\r\n    setCodigo3D(codigo) {\r\n        this.codigo3D = codigo;\r\n    }\r\n    getCodigo3D() {\r\n        return this.codigo3D;\r\n    }\r\n}\r\n","export class Return3D {\r\n    constructor(tipo, codigo3d, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.codigo3D = codigo3d;\r\n        this.eliminada = false;\r\n        this.optimizada = false;\r\n    }\r\n    isOptimizada() {\r\n        return this.optimizada;\r\n    }\r\n    setOptimizada(optimizada) {\r\n        this.optimizada = optimizada;\r\n    }\r\n    isEliminada() {\r\n        return this.eliminada;\r\n    }\r\n    setEliminada(eliminada) {\r\n        this.eliminada = eliminada;\r\n    }\r\n    getTipoInstruccion() {\r\n        return this.tipo;\r\n    }\r\n    setCodigo3D(codigo) {\r\n        this.codigo3D = codigo;\r\n    }\r\n    getCodigo3D() {\r\n        return this.codigo3D;\r\n    }\r\n}\r\n","import { Tipo } from \"../AST/Tipo\";\r\nimport { TipoNodo } from \"../XPath/Nodo\";\r\nexport class TranslateXPath {\r\n    constructor(listaConsultas, tabla, xmlHeap, xmlStack) {\r\n        this.contHP = 0;\r\n        this.contSP = 0;\r\n        this.contT = 0;\r\n        this.contL = 0;\r\n        this.xPathHeap = [];\r\n        this.xPathStack = [];\r\n        this.funcionesUtilizadas = [];\r\n        this.tabla = tabla;\r\n        this.listaConsultas = listaConsultas;\r\n        this.xmlHeap = xmlHeap;\r\n        this.xmlStack = xmlStack;\r\n        this.strTraduccion = \"\";\r\n    }\r\n    getFuncionesUtilizadas() {\r\n        let funciones = \"\";\r\n        this.funcionesUtilizadas = this.funcionesUtilizadas.reverse();\r\n        this.funcionesUtilizadas.forEach((func) => {\r\n            switch (func) {\r\n                case NativaXPath.TRASLADARSIMBOLO:\r\n                    funciones += this.getTrasladarSimbolo();\r\n                    break;\r\n                case NativaXPath.IMPRIMIRATRIBUTO:\r\n                    funciones += this.getImprimirAtributo();\r\n                    break;\r\n                case NativaXPath.IMPRIMIRCONSULTA:\r\n                    funciones += this.getImprimirConsulta();\r\n                    break;\r\n                case NativaXPath.IMPRIMIRETIQUETA:\r\n                    funciones += this.getImprimirEtiqueta();\r\n                    break;\r\n                case NativaXPath.IMPRIMIRTEXTO:\r\n                    funciones += this.getImprimirTexto();\r\n                    break;\r\n                case NativaXPath.BUSCARTEXTO:\r\n                    funciones += this.getBuscarTexto();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        return funciones;\r\n    }\r\n    getDeclaraTempsXPATH() {\r\n        //Ver cuantos temporales fueron utlizados.\r\n        let temps = \"\";\r\n        if (this.contT > 0) {\r\n            let i = 0;\r\n            temps = \"double tx\" + i;\r\n            i++;\r\n            while (i < this.contT) {\r\n                temps += \", tx\" + i;\r\n                i++;\r\n            }\r\n            temps += \";\\n\";\r\n        }\r\n        return temps;\r\n    }\r\n    traducirXPath() {\r\n        console.log('/* Inicio Traduccion XPATH */');\r\n        let resultadoTraduccion = this.traducir();\r\n        console.log('/* Fin Traduccion  XPATH*/');\r\n        return resultadoTraduccion;\r\n    }\r\n    traducir() {\r\n        for (let x = 0; x < this.listaConsultas.length; x++) {\r\n            let listaNodos = this.listaConsultas[x].listaNodos;\r\n            this.strTraduccion += this.traduccionMain(this.tabla, listaNodos, 0);\r\n        }\r\n        return this.strTraduccion;\r\n    }\r\n    traduccionMain(entActual, listaNodos, pos) {\r\n        let trad = \"\";\r\n        //Recorrer la lista de nodos ej: bookstore/book/title\r\n        for (let i = pos; i < listaNodos.length; i++) {\r\n            let nodo = listaNodos[i];\r\n            /* Para cada nodo se requiere:  */\r\n            /*  1. Buscar el nombre de este nodo en la lista de simbolos */\r\n            switch (nodo.getTipo()) {\r\n                case TipoNodo.IDENTIFIER:\r\n                    let listaSimbs = this.buscarSimbolos(nodo, entActual);\r\n                    //Para cada entorno obtener posicion del stack y traducir desde ahi.\r\n                    console.log(\"WHAT I FOUND in\" + entActual.nombre + \" FOR \", nodo.getNombre() + \" is: \\n\", listaSimbs);\r\n                    console.log(\"--------------------------------------\");\r\n                    let n = 0;\r\n                    for (let j = 0; j < listaSimbs.length; j++) {\r\n                        /* 0. Escribir el nodo en el stack del xpath */\r\n                        trad += this.traducirNodo(nodo);\r\n                        let enx = listaSimbs[j];\r\n                        trad += this.traducirSimb(enx.posicion);\r\n                        if (i + 1 == listaNodos.length) {\r\n                            //Llamar a la funcion de impresion\r\n                            trad += \"\\n\\t/* IMPRIMIR ESTE NODO */\\n\";\r\n                            trad += \"\\ttx\" + this.contT + \" = XPStack[(int)SP];\\n\";\r\n                            trad += \"\\tHP = tx\" + this.contT + \";\\n\";\r\n                            this.contT = this.contT + 1;\r\n                            trad += '\\tSP = SP + 1;\\n';\r\n                            trad += \"\\t imprimirConsulta();\\n\";\r\n                            //Pushear las funciones utlizadas para imprimir.\r\n                            if (this.funcionesUtilizadas.indexOf(NativaXPath.IMPRIMIRCONSULTA) == -1) {\r\n                                this.funcionesUtilizadas.push(NativaXPath.IMPRIMIRCONSULTA);\r\n                            }\r\n                            if (this.funcionesUtilizadas.indexOf(NativaXPath.IMPRIMIRETIQUETA) == -1) {\r\n                                this.funcionesUtilizadas.push(NativaXPath.IMPRIMIRETIQUETA);\r\n                            }\r\n                            if (this.funcionesUtilizadas.indexOf(NativaXPath.IMPRIMIRATRIBUTO) == -1) {\r\n                                this.funcionesUtilizadas.push(NativaXPath.IMPRIMIRATRIBUTO);\r\n                            }\r\n                            if (this.funcionesUtilizadas.indexOf(NativaXPath.IMPRIMIRTEXTO) == -1) {\r\n                                this.funcionesUtilizadas.push(NativaXPath.IMPRIMIRTEXTO);\r\n                            }\r\n                        }\r\n                        else {\r\n                            trad += this.traduccionMain(enx.valor, listaNodos, i + 1);\r\n                        }\r\n                    }\r\n                    return trad;\r\n                    break;\r\n                case TipoNodo.ASTERISCO:\r\n                    break;\r\n                case TipoNodo.ATRIBUTO:\r\n                    break;\r\n                case TipoNodo.DOT:\r\n                    break;\r\n                case TipoNodo.DOTDOT:\r\n                    break;\r\n                case TipoNodo.FUNCION:\r\n                    if (i + 1 == listaNodos.length) {\r\n                        let nombre = nodo.getValor().toLowerCase();\r\n                        console.log(\"ENTACTUAL: \", entActual);\r\n                        if (nombre === \"text()\") {\r\n                            //Llamar a la funcion de busqueda de TEXTO\r\n                            trad += \"\\n\\t/* BUSCAR EL TEXTO DE ESTE NODO E IMPRIMIRLO. */\\n\";\r\n                            trad += \"\\ttx\" + this.contT + \" = XPStack[(int)SP];\\n\";\r\n                            trad += \"\\tHP = tx\" + this.contT + \";\\n\";\r\n                            this.contT = this.contT + 1;\r\n                            trad += '\\tSP = SP + 1;\\n';\r\n                            trad += \"\\t buscarTexto();\\n\";\r\n                            //Pushear las funciones utlizadas para imprimir.\r\n                            if (this.funcionesUtilizadas.indexOf(NativaXPath.BUSCARTEXTO) == -1) {\r\n                                this.funcionesUtilizadas.push(NativaXPath.BUSCARTEXTO);\r\n                            }\r\n                            if (this.funcionesUtilizadas.indexOf(NativaXPath.IMPRIMIRCONSULTA) == -1) {\r\n                                this.funcionesUtilizadas.push(NativaXPath.IMPRIMIRCONSULTA);\r\n                            }\r\n                            if (this.funcionesUtilizadas.indexOf(NativaXPath.IMPRIMIRETIQUETA) == -1) {\r\n                                this.funcionesUtilizadas.push(NativaXPath.IMPRIMIRETIQUETA);\r\n                            }\r\n                            if (this.funcionesUtilizadas.indexOf(NativaXPath.IMPRIMIRATRIBUTO) == -1) {\r\n                                this.funcionesUtilizadas.push(NativaXPath.IMPRIMIRATRIBUTO);\r\n                            }\r\n                            if (this.funcionesUtilizadas.indexOf(NativaXPath.IMPRIMIRTEXTO) == -1) {\r\n                                this.funcionesUtilizadas.push(NativaXPath.IMPRIMIRTEXTO);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TipoNodo.AXIS:\r\n                    break;\r\n                case TipoNodo.NODOERROR:\r\n                    break;\r\n            }\r\n        }\r\n        return trad;\r\n    }\r\n    traducirNodo(nodo) {\r\n        let nombre = nodo.getNombre();\r\n        let predicado = nodo.getPredicado();\r\n        let tradNodo = '\\n\\t /* NODO \"' + nombre + '\" EN STACK*/ \\n';\r\n        //XPStack[(int)0] = 30\r\n        nombre.split('').forEach((element) => {\r\n            tradNodo = tradNodo\r\n                + '\\t XPStack[(int)SP] = ' + element.charCodeAt(0) + '; \\n'\r\n                + '\\t SP = SP + 1; \\n';\r\n            this.xPathStack.push(element.charCodeAt(0));\r\n            this.contSP++;\r\n        });\r\n        if (predicado != undefined) {\r\n            //Escribir tambien el predicado\r\n        }\r\n        //Se coloca un -1 para indicar que ya se termino de escribir este nombre.\r\n        tradNodo += '\\t XPStack[(int)SP] = -1; \\n';\r\n        tradNodo += '\\t SP = SP + 1; \\n';\r\n        this.xPathStack.push(-1);\r\n        this.contSP++;\r\n        return tradNodo;\r\n    }\r\n    traducirSimb(stackPointer) {\r\n        //1. Crear Txn = stack[(int)stackpointer];\r\n        let simb3dir = '\\t H = stack[(int)' + stackPointer + ']; \\n';\r\n        //H tiene la posicion del heap (xml) donde inicia el simbolo.\r\n        //2. Llamar a funcion para que escribe el simbolo en el heap del xpath.\r\n        simb3dir += '\\t trasladarSimbolo();';\r\n        if (this.funcionesUtilizadas.indexOf(NativaXPath.TRASLADARSIMBOLO) === -1) {\r\n            //Agregar a la lista de funciones que se utilizaran.\r\n            this.funcionesUtilizadas.push(NativaXPath.TRASLADARSIMBOLO);\r\n        }\r\n        return simb3dir;\r\n    }\r\n    getTrasladarSimbolo() {\r\n        //Escribir nombre de la funcion\r\n        let code = 'void trasladarSimbolo(){\\n';\r\n        //Guardar en un temporal el inicio del simbolo en el heap del XPATH \r\n        //0. tx0 = HP\r\n        let primerTemp = 'tx' + this.contT;\r\n        this.contT = this.contT + 1;\r\n        code += '\\t' + primerTemp + \" = HP;\\n\";\r\n        code += '\\t/*--- TX' + this.contT + ' TIENE EL VALOR CON EL QUE FINALIZA EL AMBITO --- */ \\n';\r\n        let segundoTemp = 'tx' + this.contT;\r\n        this.contT = this.contT + 1;\r\n        //Un segundo temporal para guardar el valor con el que se finaliza el ambito.\r\n        //1. tx2 = heap[(int)H];\r\n        code += \"\\t\" + segundoTemp + \" = heap[(int)H];\\n\";\r\n        //2. Empezar a copiar lo que hay en el heap del xml hacia el heap del XPATH\r\n        code += '\\tXPHeap[(int)HP] = heap[(int)H];\\n';\r\n        //3. Sumar los contadores del heap del xml y el heap de XPATH\r\n        code += '\\t HP = HP + 1;\\n\\t H = H+1;\\n';\r\n        //Tercer temporal para ir copiando del heap xml hacia el heap del xpath\r\n        let tercerTemp = 'tx' + this.contT;\r\n        this.contT = this.contT + 1;\r\n        //Empezar con la primera etiqueta\r\n        code += '\\tL1:\\n'\r\n            + '\\t\\t' + tercerTemp + ' = heap[(int)H];\\n'\r\n            + '\\t\\tif(' + tercerTemp + ' == ' + segundoTemp + ') goto L2;\\n'\r\n            + '\\t\\tXPHeap[(int)HP] = ' + tercerTemp + ';\\n';\r\n        //4. Sumar los contadores del heap del xml y el heap de XPATH\r\n        code += '\\t\\t HP = HP + 1;\\n\\t\\t H = H+1;\\n';\r\n        //5. Regresar a primer etiqueta para seguir copiando.\r\n        code += '\\t\\tgoto L1;\\n';\r\n        //6. Escribir el contenido de la etiqueta 2.\r\n        code += '\\tL2: \\n'\r\n            + '\\t\\t/*--- Ya se completo el ambito en el heap del xpath ---*/\\n'\r\n            + '\\t\\tXPHeap[(int)HP] = heap[(int)H];\\n'\r\n            + '\\t\\t H = H + 1;\\n \\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\tXPStack[(int)SP] = ' + primerTemp + ';\\n';\r\n        //7. Return.\r\n        code += '\\treturn;\\n';\r\n        code += '}\\n';\r\n        return code;\r\n    }\r\n    buscarSimbolos(nodo, entActual) {\r\n        let entSimbolo = [];\r\n        for (let i = 0; i < entActual.tsimbolos.length; i++) {\r\n            let el = entActual.tsimbolos[i].valor;\r\n            if (el.getNombre() === nodo.getNombre()) {\r\n                let predicado = nodo.getPredicado();\r\n                if (predicado != undefined) {\r\n                    entSimbolo.concat(this.traducirPredicado(predicado));\r\n                    break;\r\n                }\r\n                else {\r\n                    entSimbolo.push(el);\r\n                }\r\n            }\r\n            if (!nodo.isFromRoot()) {\r\n                //Si es // entrar a buscar a cada entorno.\r\n                if (el.getTipo() === Tipo.ETIQUETA) {\r\n                    entSimbolo.concat(this.buscarSimbolos(nodo, el.valor));\r\n                }\r\n            }\r\n        }\r\n        return entSimbolo;\r\n    }\r\n    getBuscarTexto() {\r\n        let code = \"void buscarTexto(){\\n\";\r\n        let primerTemp = \"tx\" + this.contT; //tx34\r\n        this.contT = this.contT + 1;\r\n        let tercerTemp = \"tx\" + this.contT; //tx36\r\n        code += '\\t\\t' + tercerTemp + ' = 0;\\n';\r\n        this.contT = this.contT + 1;\r\n        code += \"\\t\" + primerTemp + ' = XPHeap[(int)HP];\\n';\r\n        code += '\\tHP = HP + 1;\\n'\r\n            + '\\t//Buscar en este nodo, donde hay texto.\\n';\r\n        let segundoTemp = \"tx\" + this.contT; //tx35\r\n        this.contT = this.contT + 1;\r\n        //Primer etiqueta, Valida si se encontro texto (-3)\r\n        code += '\\tL1:\\n'\r\n            + '\\t\\t' + segundoTemp + ' = XPHeap[(int)HP];\\n'\r\n            + '\\t\\tif(' + segundoTemp + ' == -3) goto L7;\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\tgoto L2;\\n';\r\n        //Segunda etiqueta, verifica si es atributo\r\n        code += '\\tL2:\\n'\r\n            + '\\t\\t//ver si es atributo\\n'\r\n            + '\\t\\tif(' + segundoTemp + ' != -2) goto L6;\\n'\r\n            + '\\t\\t//Es atributo, ignorar su cadena (-3) y luego continuar\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\t' + segundoTemp + ' = XPHeap[(int)HP];\\n'\r\n            + '\\t\\tgoto L3;\\n';\r\n        //Tercera etiqueta, ignora -3 dos veces\r\n        code += '\\tL3:\\n'\r\n            + '\\t\\t//Ignorar dos veces -3 (texto inicio-final)\\n'\r\n            + '\\t\\tif(' + segundoTemp + ' == -3) goto L4;\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\t' + segundoTemp + ' = XPHeap[(int)HP];\\n'\r\n            + '\\t\\tgoto L3;\\n';\r\n        code += '\\tL4:\\n'\r\n            + '\\t\\tif(' + tercerTemp + ' == 1) goto L5;\\n'\r\n            + '\\t\\t' + tercerTemp + ' = 1;\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\t' + segundoTemp + ' = XPHeap[(int)HP];\\n'\r\n            + '\\t\\tgoto L3;\\n';\r\n        //Cuarta etiqueta, Regresa a buscar texto normal.\r\n        code += '\\tL5:\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\t' + tercerTemp + ' = 0;\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Quinta etiqueta, Revisa si este no es finalizacion de entorno.\r\n        code += '\\tL6:\\n'\r\n            + '\\t\\t//Ver si no es finalizacion de entorno\\n'\r\n            + '\\t\\tif(' + segundoTemp + ' <= ' + primerTemp + ') goto L8;\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Sexta etiqueta, imprime la consulta.\r\n        code += '\\tL7:\\n'\r\n            + '\\t\\t//Se encontro donde inicia el texto, imprimirlo.\\n'\r\n            + '\\t\\timprimirConsulta();\\n';\r\n        //Septima etiqueta, solo retorna.\r\n        code += '\\tL8:\\n'\r\n            + '\\treturn;\\n';\r\n        code += \"}\\n\";\r\n        return code;\r\n    }\r\n    getImprimirConsulta() {\r\n        let code = \"void imprimirConsulta(){\\n\";\r\n        code += \"\\t/* --- tx\" + this.contT + \" TIENE EL VALOR CON EL QUE FINALIZA LA CONSULTA -- */\\n\";\r\n        let primerTemp = 'tx' + this.contT;\r\n        this.contT = this.contT + 1;\r\n        //Guardar el valor con el que termina la consulta.\r\n        code += '\\t' + primerTemp + ' = XPHeap[(int)HP];\\n';\r\n        //Empezar con la primera et para verificar que tipo de consulta es\r\n        code += '\\tL1:\\n'; //Este verifica si es etiqueta <\r\n        code += '\\t\\t /* -- Ver si es etiqueta -- */\\n';\r\n        code += '\\t\\t if(' + primerTemp + ' > -5) goto L2;\\n';\r\n        code += '\\t\\timprimirEtiqueta();\\n';\r\n        //La segunda etiqueta verifica si es atributo o texto.\r\n        code += '\\tL2:\\n';\r\n        code += '\\t\\t /* -- Ver si es atributo(-2) o texto(-3) -- */\\n';\r\n        code += '\\t\\tif(' + primerTemp + ' == -2) goto L3;\\n';\r\n        code += '\\t\\tif(' + primerTemp + ' == -3) goto L4;\\n';\r\n        code += '\\t\\tgoto L5;\\n';\r\n        //La tercera etiqueta llama al metodo para imprimir atributo.\r\n        code += '\\tL3: \\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\timprimirAtributo();\\n'\r\n            + '\\t\\tgoto L5;\\n';\r\n        //La cuarta etiqueta llama al metodo para imprimir texto\r\n        code += '\\tL4: \\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\timprimirTexto();\\n'\r\n            + '\\t\\tgoto L5;\\n';\r\n        //La quinta etiqueta es el fin del metodo.\r\n        code += '\\tL5: \\n'\r\n            + '\\tprintf(\"%c\", (char) 10);\\n'\r\n            + '\\treturn;\\n'\r\n            + '}\\n';\r\n        return code;\r\n    }\r\n    getImprimirEtiqueta() {\r\n        let code = \"void imprimirEtiqueta() {\\n\";\r\n        let primerTemp = \"tx\" + this.contT; //tx5\r\n        this.contT = this.contT + 1;\r\n        code += \"\\t\" + primerTemp + ' = XPHeap[(int)HP];\\n';\r\n        code += '\\tHP = HP + 1;\\n';\r\n        let segundoTemp = \"tx\" + this.contT;\r\n        this.contT = this.contT + 1;\r\n        code += '\\t' + segundoTemp + ' = 0;\\n'; //tx11\r\n        let tercerTemp = \"tx\" + this.contT;\r\n        this.contT = this.contT + 1;\r\n        code += '\\t' + tercerTemp + ' = HP;\\n'; //tx10\r\n        //Empezar a imprimir la etiqueta.\r\n        code += '\\tprintf(\"%c\", (int) 60); //Ascii <\\n';\r\n        let cuartoTemp = \"tx\" + this.contT; // tx6\r\n        this.contT = this.contT + 1;\r\n        //Primer etiqueta, verifica si ya se acabo el ambito.\r\n        code += '\\tL1:\\n'\r\n            + '\\t\\t' + cuartoTemp + ' = XPHeap[(int)HP];\\n'\r\n            + '\\t\\tif(' + cuartoTemp + ' == ' + primerTemp + ') goto L2;\\n'\r\n            + '\\t\\tgoto L3;\\n';\r\n        //Etiqueta L3, verifica si es atributo (-2)\r\n        code += '\\tL3:\\n'\r\n            + '\\t\\tif(' + cuartoTemp + ' != -2) goto L4;\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 32); // Espacio\\n'\r\n            + '\\t\\timprimirAtributo();\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Etiqueta L4, verifica si es texto (-3)\r\n        code += '\\tL4:\\n'\r\n            + '\\t\\t//Ver si es texto\\n'\r\n            + '\\t\\tif(' + cuartoTemp + ' != -3) goto L5;\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 62); //Ascii >\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\t' + segundoTemp + ' = 1;\\n'\r\n            + '\\t\\timprimirTexto();\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Etiqueta L5, verifica si es -1 (ya termino el id de la etiqueta)\r\n        code += '\\tL5:\\n'\r\n            + '\\t\\tif(' + cuartoTemp + ' != -1) goto L6;\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Etiqueta L6\r\n        code += '\\tL6:\\n'\r\n            + '\\t\\t//Revisar si hay otra etiqueta\\n'\r\n            + '\\t\\tif(' + cuartoTemp + ' < ' + primerTemp + ') goto L7;\\n'\r\n            + '\\t\\t//Aun no, solo imprimir caracter.\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) ' + cuartoTemp + ');\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Etiqueta L7, imprimir el entorno de la etiqueta interior.\r\n        let quintoTemp = \"tx\" + this.contT; // tx13\r\n        this.contT = this.contT + 1;\r\n        code += '\\tL7:\\n'\r\n            + '\\t\\tif(' + segundoTemp + ' == 0) goto L10;\\n'\r\n            + '\\t\\tXPStack[(int)SP] = ' + primerTemp + ';\\n'\r\n            + '\\t\\tSP = SP + 1;\\n'\r\n            + '\\t\\tXPStack[(int)SP] = ' + tercerTemp + ';\\n'\r\n            + '\\t\\tSP = SP + 1;\\n'\r\n            + '\\t\\timprimirEtiqueta();\\n'\r\n            + '\\t\\t' + primerTemp + ' = XPStack[(int)SP];\\n'\r\n            + '\\t\\t' + quintoTemp + ' = SP + 1;\\n'\r\n            + '\\t\\t' + segundoTemp + ' = 1;\\n'\r\n            + '\\t\\t' + tercerTemp + ' = XPStack[(int)' + quintoTemp + '];\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Etiqueta L10, imprime caracter de cierre. >\r\n        code += '\\tL10:\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 62); //Ascii >\\n'\r\n            + '\\t\\t' + segundoTemp + ' = 1;\\n'\r\n            + '\\t\\tgoto L7;\\n';\r\n        //Etiqueta L2: Escribe una etiqueta de cierra </cierre>\r\n        code += '\\tL2:\\n'\r\n            + '\\t\\t//EScribir etiqueta de cierre.\\n'\r\n            + '\\t\\tif(' + segundoTemp + '== 0) goto L11;\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 60); //Ascii <\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 47); //Ascii /\\n'\r\n            + '\\t\\tgoto L8;\\n';\r\n        //Etiqueta L11: Imprime caracter de cierre. >\r\n        code += '\\tL11:\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 62); //Ascii >\\n'\r\n            + '\\t\\t' + segundoTemp + ' = 1;\\n'\r\n            + '\\t\\tgoto L2;\\n';\r\n        //Etiqueta L8: Escribe id de cierre </ cierre >\r\n        code += '\\tL8:\\n'\r\n            + '\\t\\t' + cuartoTemp + ' = XPHeap[(int)' + tercerTemp + '];\\n'\r\n            + '\\t\\tif(' + cuartoTemp + ' == -1) goto L9;\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) ' + cuartoTemp + ');\\n'\r\n            + '\\t\\t' + tercerTemp + ' = ' + tercerTemp + ' + 1;\\n'\r\n            + '\\t\\tgoto L8;\\n';\r\n        //Etiqueta L9: imprimire caracter de cierre > y termina el metodo :D\r\n        code += '\\tL9:\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 62); //Ascii >\\n'\r\n            + '\\tSP = SP - 2;\\n'\r\n            + '\\treturn;\\n';\r\n        code += \"}\\n\";\r\n        return code;\r\n    }\r\n    getImprimirAtributo() {\r\n        let code = \"void imprimirAtributo(){\\n\";\r\n        let primerTemp = 'tx' + this.contT;\r\n        this.contT = this.contT + 1;\r\n        code += '\\tL1:\\n'\r\n            + '\\t\\t' + primerTemp + ' = XPHeap[(int)HP];\\n'\r\n            + '\\t\\tif(' + primerTemp + ' == -2) goto L2;\\n'\r\n            + '\\t\\tprintf(\"%c\", (char)' + primerTemp + ');\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\tgoto L1;\\n';\r\n        //Etiqueta L2, imprimir espacio = y el valor del atributo\r\n        code += '\\tL2:\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 32); // Espacio\\n'\r\n            + '\\t\\tprintf(\"%c\", (char)61); // = \\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 32); // Espacio\\n'\r\n            + '\\t\\tHP = HP + 2;\\n';\r\n        //Etiqueta L3, imprime el valor del atributo.\r\n        code += '\\tL3:\\n';\r\n        code += '\\t\\t' + primerTemp + ' = XPHeap[(int)HP];\\n';\r\n        code += '\\t\\tif(' + primerTemp + ' == -3) goto L4;\\n';\r\n        code += '\\t\\tprintf(\"%c\", (char)' + primerTemp + ');\\n';\r\n        code += '\\t\\tHP = HP + 1;\\n';\r\n        code += '\\t\\tgoto L3;\\n';\r\n        //Etiqueta L4; Imprime espacio y termina el metodo.\r\n        code += '\\tL4:\\n'\r\n            + '\\t\\tprintf(\"%c\", (char) 32);// Espacio\\n'\r\n            + '\\treturn;\\n';\r\n        code += '}\\n';\r\n        return code;\r\n    }\r\n    getImprimirTexto() {\r\n        let code = \"void imprimirTexto(){\\n\";\r\n        code += \"\\t//Texto termina con -3\\n\";\r\n        let primerTemp = 'tx' + this.contT;\r\n        this.contT = this.contT + 1;\r\n        code += '\\tL1:\\n'\r\n            + '\\t\\t' + primerTemp + ' = XPHeap[(int)HP];\\n'\r\n            + '\\t\\tif(' + primerTemp + ' == -3) goto L2;\\n'\r\n            + '\\t\\tprintf(\"%c\", (char)' + primerTemp + ');\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\t\\tgoto L1;\\n'\r\n            + '\\tL2:\\n'\r\n            + '\\t\\tHP = HP + 1;\\n'\r\n            + '\\treturn;\\n';\r\n        code += \"}\\n\";\r\n        return code;\r\n    }\r\n    traducirPredicado(predicado) {\r\n        return [];\r\n    }\r\n}\r\nexport var NativaXPath;\r\n(function (NativaXPath) {\r\n    NativaXPath[NativaXPath[\"PRINTSTRING\"] = 0] = \"PRINTSTRING\";\r\n    NativaXPath[NativaXPath[\"COMPARESTRINGS\"] = 1] = \"COMPARESTRINGS\";\r\n    NativaXPath[NativaXPath[\"TRASLADARSIMBOLO\"] = 2] = \"TRASLADARSIMBOLO\";\r\n    NativaXPath[NativaXPath[\"IMPRIMIRCONSULTA\"] = 3] = \"IMPRIMIRCONSULTA\";\r\n    NativaXPath[NativaXPath[\"IMPRIMIRETIQUETA\"] = 4] = \"IMPRIMIRETIQUETA\";\r\n    NativaXPath[NativaXPath[\"IMPRIMIRTEXTO\"] = 5] = \"IMPRIMIRTEXTO\";\r\n    NativaXPath[NativaXPath[\"IMPRIMIRATRIBUTO\"] = 6] = \"IMPRIMIRATRIBUTO\";\r\n    NativaXPath[NativaXPath[\"BUSCARTEXTO\"] = 7] = \"BUSCARTEXTO\";\r\n})(NativaXPath || (NativaXPath = {}));\r\n","import React, { Component } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/xquery/xquery'\r\nimport 'codemirror/mode/clike/clike'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class Editor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //console.log(props)\r\n        this.state = {\r\n            open: true,\r\n            language: this.props.language,\r\n            displayName: this.props.displayName,\r\n            value: this.props.value,\r\n            onChange: this.props.onChange,\r\n        }\r\n    }\r\n\r\n    handleChange = (editor, data, value) => {\r\n        //console.log(value);\r\n        this.props.onChange(value)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className={`editor-container`}>\r\n                <div className=\"editor-title\">\r\n                    {this.state.displayName}\r\n                    <button\r\n                    type=\"button\"\r\n                    className=\"expand-collapse-btn\"\r\n                    onClick={() => this.setState({open: !this.state.open})}\r\n                    >\r\n                    <FontAwesomeIcon icon={this.state.open ? faCompressAlt : faExpandAlt} />\r\n                    </button>\r\n                </div>\r\n                <ControlledEditor\r\n                    onBeforeChange={this.handleChange}\r\n                    value={this.props.value}\r\n                    className=\"code-mirror-wrapper\"\r\n                    options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: this.props.language,\r\n                    theme: 'material',\r\n                    lineNumbers: true\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Entorno } from '../AST/Entorno';\r\nimport { Tipo } from '../AST/Tipo';\r\nimport analizador from '../indexAnalizador';\r\nimport { TranslateXPath } from './TranslateXPath';\r\nexport class TraduceXML {\r\n    constructor(listaNodos) {\r\n        this.contS = 0;\r\n        this.contH = 0;\r\n        this.indice = 0;\r\n        this.heap = new Array();\r\n        this.stack = new Array();\r\n        this.listaConsultas = listaNodos;\r\n        this.strXPathTraduccion = \"\";\r\n        this.strTraduccion = '';\r\n    }\r\n    getHeap() {\r\n        return this.heap;\r\n    }\r\n    getStack() {\r\n        return this.stack;\r\n    }\r\n    getContS() {\r\n        return this.contS;\r\n    }\r\n    getContH() {\r\n        return this.contS;\r\n    }\r\n    getStrTraduccion() {\r\n        return this.strTraduccion;\r\n    }\r\n    getEncabezado() {\r\n        let encabezado = '/*------HEADER------*/ \\n'\r\n            + '#include <stdio.h> \\n'\r\n            + '#include <math.h> \\n'\r\n            + '\\n'\r\n            + 'double heap[30101999]; \\n'\r\n            + 'double stack[30101999]; \\n'\r\n            + 'double XPStack[30101999];\\n'\r\n            + 'double XPHeap[30101999];\\n'\r\n            + 'double HP;\\n'\r\n            + 'double SP;\\n'\r\n            + 'double S; \\n'\r\n            + 'double H; \\n';\r\n        return encabezado;\r\n    }\r\n    getMain(cuerpo) {\r\n        let main;\r\n        main = '/*------MAIN------*/ \\n'\r\n            + 'int main() { \\n'\r\n            + '    S = 0; \\n'\r\n            + '    H = 0; \\n'\r\n            + '\\n/********* INICIA TRADUCCION XML **********/ \\n'\r\n            + cuerpo + '\\n'\r\n            + '\\n/********* TERMINA TRADUCCION XML **********/ \\n'\r\n            + '\\n/********* INICIA TRADUCCION XPATH **********/ \\n'\r\n            + '\\t HP = 0;\\n\\t SP = 0;\\n'\r\n            + this.strXPathTraduccion + '\\n'\r\n            + '\\n/********* TERMINA TRADUCCION XPATH **********/ \\n'\r\n            + '    return 0; \\n'\r\n            + '} \\n';\r\n        return main;\r\n    }\r\n    getCodeC() {\r\n        var codigo3d;\r\n        codigo3d = this.getEncabezado();\r\n        codigo3d = codigo3d + this.getDeclaraTemps();\r\n        //Hacer traduccion de xpath\r\n        if (this.listaConsultas.length > 0) {\r\n            let traductorXPath = new TranslateXPath(this.listaConsultas, analizador.global, this.heap, this.stack);\r\n            this.strXPathTraduccion = traductorXPath.traducirXPath();\r\n            let strFuncs = traductorXPath.getFuncionesUtilizadas();\r\n            codigo3d += traductorXPath.getDeclaraTempsXPATH() + \"\\n\";\r\n            //Ahora obtener las funciones que se utilizaron para la traduccion.\r\n            codigo3d += strFuncs;\r\n        }\r\n        //Obtener el main\r\n        codigo3d = codigo3d + this.getMain(this.strTraduccion);\r\n        return codigo3d;\r\n    }\r\n    getDeclaraTemps() {\r\n        let temps = 'double ';\r\n        for (let c = 0; c < this.stack.length; c++) {\r\n            temps = temps + 't' + c.toString();\r\n            temps = temps + ((c == this.stack.length - 1) ? ';' : ', ');\r\n            if ((c % 100) == 0) {\r\n                temps = temps + '\\n';\r\n            }\r\n        }\r\n        temps = temps + '\\n';\r\n        temps = temps + '\\n';\r\n        return temps;\r\n    }\r\n    traducirXML() {\r\n        console.log('/* Inicio Traduccion */');\r\n        this.traducir(analizador.global, -5);\r\n        this.strTraduccion = this.getCodeC();\r\n        console.log('/* Fin Traduccion */');\r\n        return this.strTraduccion;\r\n    }\r\n    traducir(entrada, finalPadre) {\r\n        let tabla = entrada.tsimbolos;\r\n        tabla.forEach((elem) => {\r\n            if (elem.valor.padre !== null || elem.valor.padre == undefined) {\r\n                if (elem.valor.valor instanceof Entorno) {\r\n                    this.strTraduccion = this.strTraduccion + '\\n /*--- SE AGREGA NUEVO NODO ---*/';\r\n                    elem.valor.setPosicion(this.contS);\r\n                    //Al iniciar una etiqueta nueva, se coloca el num de Finalizacion que tendra este padre (-5, -10, etcc..)\r\n                    this.strTraduccion = this.strTraduccion + '\\n /*--- EL AMBITO DE \"' + elem.valor.nombre + '\" TERMINA CON: ' + finalPadre + ' ---*/';\r\n                    this.strTraduccion = this.strTraduccion + '\\n\\t heap[(int)H] = ' + finalPadre + ' ; \\n';\r\n                    this.strTraduccion = this.strTraduccion + '\\t H = H + 1; \\n';\r\n                    this.heap.push(finalPadre);\r\n                    this.contH++;\r\n                    //Iniciar con la traduccion de la etiqueta\r\n                    this.strTraduccion = this.strTraduccion + this.getIDAsignacionHeap(elem.valor.nombre.toString(), \"ETIQUETA\");\r\n                    this.traducir(elem.valor.valor, finalPadre - 5);\r\n                    //Al finalizar una etiqueta colocar finalizacion del ambito ( -5, -10, -15, etc.. )\r\n                    this.strTraduccion = this.strTraduccion + '\\n /*--- FINALIZACION DE NODO \"' + elem.valor.nombre + '\" ---*/';\r\n                    this.strTraduccion = this.strTraduccion + '\\n\\t heap[(int)H] = ' + finalPadre + ' ; \\n';\r\n                    this.strTraduccion = this.strTraduccion + '\\t H = H + 1; \\n';\r\n                    this.heap.push(finalPadre);\r\n                    this.contH++;\r\n                }\r\n                else {\r\n                    if (elem.valor.valor !== false && elem.valor.valor !== false) {\r\n                        this.strTraduccion = this.strTraduccion + '\\n /*--- SE AGREGA NUEVO SIMBOLO ---*/';\r\n                        elem.valor.setPosicion(this.contS);\r\n                        if (elem.valor.getTipo() === Tipo.ATRIBUTO) {\r\n                            this.strTraduccion = this.strTraduccion + this.getIDAsignacionHeap(elem.valor.nombre.toString(), \"ATRIBUTO\");\r\n                        }\r\n                        this.strTraduccion = this.strTraduccion + this.getVALAsignacionHeap(elem.valor.valor.toString());\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    getIDAsignacionHeap(palabra, tipo) {\r\n        let asignacion = '\\n\\t /* ' + tipo + ' \"' + palabra + '\" EN HEAP*/ \\n';\r\n        asignacion = asignacion + '\\t t' + this.contS + ' = H-1;\\n';\r\n        /* Coloca un -1 para indicar que el valor es un nodo(etiqueta) o un -2 si es atributo*/\r\n        let numFinalizacion = -1;\r\n        if (tipo === \"ATRIBUTO\") {\r\n            numFinalizacion = -2;\r\n            asignacion = asignacion\r\n                + '\\t heap[(int)H] = ' + numFinalizacion + '; \\n'\r\n                + '\\t H = H + 1; \\n';\r\n            this.heap.push(numFinalizacion);\r\n            this.contH++;\r\n        }\r\n        /* Descompone la palabra en caracteres y los asigna al Heap */\r\n        palabra.split('').forEach((element) => {\r\n            asignacion = asignacion\r\n                + '\\t heap[(int)H] = ' + element.charCodeAt(0) + '; \\n'\r\n                + '\\t H = H + 1; \\n';\r\n            this.heap.push(element.charCodeAt(0));\r\n            this.contH++;\r\n        });\r\n        /* Coloca un -1 para indicar que el valor es un nodo(etiqueta) o un -2 si es atributo y ya termino*/\r\n        asignacion = asignacion\r\n            + '\\t heap[(int)H] = ' + numFinalizacion + '; \\n'\r\n            + '\\t H = H + 1; \\n';\r\n        this.heap.push(numFinalizacion);\r\n        this.contH++;\r\n        asignacion = asignacion\r\n            + '\\t stack[(int)' + this.contS + '] = t' + this.contS + '; \\n';\r\n        this.stack.push(this.contS);\r\n        this.contS++;\r\n        return asignacion;\r\n    }\r\n    getVALAsignacionHeap(palabra) {\r\n        let asignacion = '\\n\\t /* VALOR \"' + palabra + '\" EN HEAP*/ \\n';\r\n        asignacion = asignacion + '\\t t' + this.contS + ' = H;\\n';\r\n        asignacion = asignacion\r\n            + '\\t heap[(int)H] = -3; \\n'\r\n            + '\\t H = H + 1; \\n';\r\n        this.heap.push(-3);\r\n        this.contH++;\r\n        /* Descompone la palabra en caracteres y los asigna al Heap */\r\n        palabra.split('').forEach((element) => {\r\n            asignacion = asignacion\r\n                + '\\t heap[(int)H] = ' + element.charCodeAt(0) + '; \\n'\r\n                + '\\t H = H + 1; \\n';\r\n            this.heap.push(element.charCodeAt(0));\r\n            this.contH++;\r\n        });\r\n        /* Coloca un -3 para indicar que el valor es una cadena y ya termino*/\r\n        asignacion = asignacion\r\n            + '\\t heap[(int)H] = -3; \\n'\r\n            + '\\t H = H + 1; \\n';\r\n        this.heap.push(-3);\r\n        this.contH++;\r\n        asignacion = asignacion\r\n            + '\\t stack[(int)' + this.contS + '] = t' + this.contS + '; \\n';\r\n        this.stack.push(this.contS);\r\n        this.contS++;\r\n        return asignacion;\r\n    }\r\n}\r\n","export class Optimizacion {\r\n    constructor(tipo, codigoAntes, codigoAhora, fila, columna) {\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.codigoAntes = codigoAntes;\r\n        this.codigoAhora = codigoAhora;\r\n    }\r\n    getFila() {\r\n        return this.fila;\r\n    }\r\n    getColumna() {\r\n        return this.columna;\r\n    }\r\n    getCodigoAntes() {\r\n        return this.codigoAntes;\r\n    }\r\n    getCodigoAhora() {\r\n        return this.codigoAhora;\r\n    }\r\n    tipoReglaToString() {\r\n        switch (this.tipo) {\r\n            case ReglaOptimizacion.REGLA1:\r\n                return \"Regla 1\";\r\n            case ReglaOptimizacion.REGLA2:\r\n                return \"Regla 2\";\r\n            case ReglaOptimizacion.REGLA3:\r\n                return \"Regla 3\";\r\n            case ReglaOptimizacion.REGLA4:\r\n                return \"Regla 4\";\r\n            case ReglaOptimizacion.REGLA5:\r\n                return \"Regla 5\";\r\n            case ReglaOptimizacion.REGLA6:\r\n                return \"Regla 6\";\r\n            case ReglaOptimizacion.REGLA7:\r\n                return \"Regla 7\";\r\n            case ReglaOptimizacion.REGLA8:\r\n                return \"Regla 8\";\r\n            case ReglaOptimizacion.REGLA9:\r\n                return \"Regla 9\";\r\n            case ReglaOptimizacion.REGLA10:\r\n                return \"Regla 10\";\r\n            case ReglaOptimizacion.REGLA10:\r\n                return \"Regla 11\";\r\n            case ReglaOptimizacion.REGLA10:\r\n                return \"Regla 12\";\r\n            case ReglaOptimizacion.REGLA10:\r\n                return \"Regla 13\";\r\n            case ReglaOptimizacion.REGLA10:\r\n                return \"Regla 14\";\r\n            case ReglaOptimizacion.REGLA10:\r\n                return \"Regla 15\";\r\n            case ReglaOptimizacion.REGLA10:\r\n                return \"Regla 16\";\r\n            default:\r\n                return \"Regla x\";\r\n        }\r\n    }\r\n}\r\nexport var ReglaOptimizacion;\r\n(function (ReglaOptimizacion) {\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA1\"] = 0] = \"REGLA1\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA2\"] = 1] = \"REGLA2\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA3\"] = 2] = \"REGLA3\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA4\"] = 3] = \"REGLA4\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA5\"] = 4] = \"REGLA5\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA6\"] = 5] = \"REGLA6\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA7\"] = 6] = \"REGLA7\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA8\"] = 7] = \"REGLA8\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA9\"] = 8] = \"REGLA9\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA10\"] = 9] = \"REGLA10\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA11\"] = 10] = \"REGLA11\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA12\"] = 11] = \"REGLA12\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA13\"] = 12] = \"REGLA13\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA14\"] = 13] = \"REGLA14\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA15\"] = 14] = \"REGLA15\";\r\n    ReglaOptimizacion[ReglaOptimizacion[\"REGLA16\"] = 15] = \"REGLA16\";\r\n})(ReglaOptimizacion || (ReglaOptimizacion = {}));\r\n","/*\r\n**  CLASE AUXILIAR PARA MEJORAR EL REPORTE DE OPTIMIZACION\r\n** SERVIRA PARA ENVIAR REPRESENTACIONES DE TIPO '<instrucciones L2>'\r\n** Para acortar el codigo eliminado y mejorado (asi no se incluye literalmente las instrucciones)\r\n*/\r\nexport class Representacion3D {\r\n    constructor(tipo, codigo3D, fila, columna) {\r\n        this.codigo3D = codigo3D;\r\n        this.tipo = tipo;\r\n        this.fila = fila;\r\n        this.columna = columna;\r\n        this.eliminada = false;\r\n        this.optimizada = false;\r\n    }\r\n    isOptimizada() {\r\n        return this.optimizada;\r\n    }\r\n    setOptimizada(optimizada) {\r\n        this.optimizada = optimizada;\r\n    }\r\n    isEliminada() {\r\n        return this.eliminada;\r\n    }\r\n    setEliminada(eliminada) {\r\n        this.eliminada = eliminada;\r\n    }\r\n    getCodigo3D() {\r\n        return this.codigo3D;\r\n    }\r\n    setCodigo3D(codigo) {\r\n        this.codigo3D = codigo;\r\n    }\r\n    getTipoInstruccion() {\r\n        return this.tipo;\r\n    }\r\n}\r\n","import { Optimizacion, ReglaOptimizacion } from \"../Reporte/Optimizacion\";\r\nimport { TipoExpresion3D } from \"./Expresiones3D/Expresion3D\";\r\nimport { Operacion3D, TipoOperacion3D } from \"./Expresiones3D/Operacion3D\";\r\nimport { Primitiva3D, TipoPrim3D } from \"./Expresiones3D/Primitiva3D\";\r\nimport { Asignacion3D } from \"./Instrucciones3D/Asignacion3D\";\r\nimport { Etiqueta3D } from \"./Instrucciones3D/Etiqueta3D\";\r\nimport { Goto3D } from \"./Instrucciones3D/Goto3D\";\r\nimport { If3D } from \"./Instrucciones3D/If3D\";\r\nimport { TipoInstruccion3D } from \"./Instrucciones3D/Instruccion3D\";\r\nimport { Representacion3D } from \"./Instrucciones3D/Representacion3D\";\r\nexport class Optimizer {\r\n    constructor() {\r\n        this.reporte = [];\r\n    }\r\n    aplicar(listaInstrucciones, reporte) {\r\n        this.reporte = reporte;\r\n        listaInstrucciones = this.regla1(listaInstrucciones);\r\n        listaInstrucciones = this.regla2(listaInstrucciones);\r\n        listaInstrucciones = this.regla3_y_regla4(listaInstrucciones);\r\n        listaInstrucciones = this.regla5(listaInstrucciones);\r\n        listaInstrucciones = this.reglasAlgebraicas(listaInstrucciones);\r\n        return listaInstrucciones;\r\n    }\r\n    instruccionesToString(arrayInst) {\r\n        let cadena = \"\";\r\n        arrayInst.forEach((inst) => {\r\n            cadena += inst.getCodigo3D() + \"\\n\";\r\n        });\r\n        return cadena;\r\n    }\r\n    agregarReporte(codigoNuevo, codigoEliminado, numRegla) {\r\n        let codeBefore = this.instruccionesToString(codigoEliminado);\r\n        let codeNow = this.instruccionesToString(codigoNuevo);\r\n        let fila, col;\r\n        if (codigoNuevo.length > 0) {\r\n            fila = codigoNuevo[0].fila;\r\n            col = codigoNuevo[0].columna;\r\n        }\r\n        else {\r\n            fila = codigoEliminado[0].fila;\r\n            col = codigoEliminado[0].columna;\r\n        }\r\n        let nodoOpt = new Optimizacion(numRegla, codeBefore, codeNow, fila, col);\r\n        this.reporte.push(nodoOpt);\r\n    }\r\n    /*          REGLA 1\r\n        goto L1;\r\n        <instrucciones>                     goto L1;\r\n        L1:             ------------->      L1:\r\n        T3 = T1+T3;                         T3 = T1+T3;\r\n    */\r\n    regla1(listaInstrucciones) {\r\n        console.log(\"--------- Aplicando REGLA 1 ------------- \");\r\n        let contador = 0;\r\n        let nuevasInstrucciones = [];\r\n        let codigoEliminado = [];\r\n        let codigoNuevo = [];\r\n        if (listaInstrucciones != null) {\r\n            //Recorrer la lista de instrucciones\r\n            let flag = false;\r\n            for (let i = 0; i < listaInstrucciones.length; i++) {\r\n                let instruccion = listaInstrucciones[i];\r\n                //Ver si la instruccion es un GOTO\r\n                if (instruccion.getTipoInstruccion() === TipoInstruccion3D.GOTO) {\r\n                    flag = true;\r\n                    codigoNuevo.push(instruccion);\r\n                    continue;\r\n                }\r\n                else if (instruccion.getTipoInstruccion() === TipoInstruccion3D.ETIQUETA) {\r\n                    flag = false;\r\n                    codigoNuevo.push(instruccion);\r\n                    if (codigoEliminado.length > 1) {\r\n                        //Agregar a reporte.\r\n                        this.agregarReporte(codigoNuevo, codigoEliminado, ReglaOptimizacion.REGLA1);\r\n                    }\r\n                    //Vaciar listas auxiliares\r\n                    codigoNuevo = this.marcarAsOptimizadas(codigoNuevo, true);\r\n                    nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                    contador += codigoEliminado.length;\r\n                    codigoNuevo = [];\r\n                    codigoEliminado = [];\r\n                    continue;\r\n                }\r\n                //Si no se ha encontrado un GOTO pushear la instruccion\r\n                if (!flag) {\r\n                    if (!instruccion.isOptimizada()) {\r\n                        instruccion.setOptimizada(true);\r\n                        nuevasInstrucciones.push(instruccion);\r\n                    }\r\n                }\r\n                else {\r\n                    codigoEliminado.push(instruccion);\r\n                }\r\n            }\r\n        }\r\n        console.log(\"Se eliminaron :\", contador + \" instrucciones\");\r\n        console.log(\"-------------------------------------------\");\r\n        return this.marcarAsOptimizadas(nuevasInstrucciones, false);\r\n    }\r\n    /*          REGLA 2\r\n        if(4 == 4) goto L1;\r\n        goto L2;                            if(4 != 4) goto L2;\r\n        L1:             ------------->      <instr L1>\r\n        <instr L1>                          L2:\r\n        L2:                                 <instr L2>\r\n        <instr L2>\r\n    */\r\n    regla2(listaInstrucciones) {\r\n        console.log(\"--------- Aplicando REGLA 2 ------------- \");\r\n        let contador = 0;\r\n        let nuevasInstrucciones = [];\r\n        let nombreEtiqueta = \"\";\r\n        if (listaInstrucciones != null) {\r\n            let codigoEliminado = [];\r\n            let codigoNuevo = [];\r\n            //Recorrer Instrucciones\r\n            let seOptimizo = false;\r\n            for (let i = 0; i < listaInstrucciones.length; i++) {\r\n                let instruccion = listaInstrucciones[i];\r\n                //Ver si la instruccion es un IF\r\n                if (instruccion instanceof Etiqueta3D) {\r\n                    nombreEtiqueta = instruccion.identificador;\r\n                }\r\n                if (instruccion instanceof If3D) {\r\n                    let miIf;\r\n                    miIf = instruccion;\r\n                    if (i + 1 < listaInstrucciones.length) {\r\n                        //Revisar si la siguiente instruccion (codigo falso)\r\n                        //Es un salto (Goto);\r\n                        let sigInst = listaInstrucciones[i + 1];\r\n                        if (sigInst instanceof Goto3D) {\r\n                            //Si es un salto, proceder con la optimizacion regla 2.\r\n                            //0. Agregar a la lista de codigo eliminado\r\n                            let ifAnterior = this.crearIfAnterior(miIf);\r\n                            codigoEliminado.push(ifAnterior);\r\n                            codigoEliminado.push(sigInst);\r\n                            //1. Negar condicion del If\r\n                            let etFalsa = sigInst.identificador;\r\n                            miIf.negarCondicion();\r\n                            //2. Hacer que la etVerdadera sea el salto de 'sigInst'\r\n                            let gotoAnterior = miIf.gotoEtiqueta;\r\n                            miIf.gotoEtiqueta = sigInst;\r\n                            //3. Obtener el nombre de la etiqueta del goto anterior\r\n                            let nameEtiquetaLV = gotoAnterior.identificador;\r\n                            //4. Buscar en la lista de instrucciones esta etiqueta\r\n                            let instEtAnterior;\r\n                            instEtAnterior = this.getCodigoEtiqueta(nameEtiquetaLV, listaInstrucciones, 0, true);\r\n                            this.cambiarReferencias(nameEtiquetaLV, nombreEtiqueta, listaInstrucciones, 0);\r\n                            let instEtNueva;\r\n                            instEtNueva = this.getCodigoEtiqueta(etFalsa, listaInstrucciones, 0, true);\r\n                            codigoEliminado = codigoEliminado.concat(instEtAnterior[0]);\r\n                            let auxiliar1 = new Representacion3D(TipoInstruccion3D.REPRESENTACION, \"[Instrucciones_\" + nameEtiquetaLV + \"]\", -1, -1);\r\n                            codigoEliminado.push(auxiliar1);\r\n                            let auxiliar2 = new Representacion3D(TipoInstruccion3D.REPRESENTACION, \"[Instrucciones_\" + etFalsa + \"]\", -1, -1);\r\n                            codigoEliminado = codigoEliminado.concat(instEtNueva[0]);\r\n                            codigoEliminado.push(auxiliar2);\r\n                            seOptimizo = true;\r\n                            //Pushear el If nuevo (con condicion negada y salto Lf;)\r\n                            codigoNuevo.push(miIf);\r\n                            //Concatenar las instrucciones de la etiqueta anterior L1 (ahora estaran como codigo falso)\r\n                            let auxReporte = [];\r\n                            auxReporte = auxReporte.concat(codigoNuevo);\r\n                            auxReporte.push(auxiliar1);\r\n                            auxReporte.push(instEtNueva[0]);\r\n                            auxReporte.push(auxiliar2);\r\n                            instEtAnterior.shift();\r\n                            codigoNuevo = codigoNuevo.concat(instEtAnterior);\r\n                            codigoNuevo = codigoNuevo.concat(instEtNueva);\r\n                            //Agregar el codigoNuevo a la lista de nuevas instrucciones\r\n                            codigoNuevo = this.marcarAsOptimizadas(codigoNuevo, true);\r\n                            nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                            //Agregar a reporte.\r\n                            this.agregarReporte(auxReporte, codigoEliminado, ReglaOptimizacion.REGLA2);\r\n                            codigoNuevo = [];\r\n                            contador += codigoEliminado.length;\r\n                            codigoEliminado = [];\r\n                        }\r\n                    }\r\n                }\r\n                if (!seOptimizo) {\r\n                    if (!instruccion.isEliminada() && !instruccion.isOptimizada()) {\r\n                        instruccion.setOptimizada(true);\r\n                        nuevasInstrucciones.push(instruccion);\r\n                    }\r\n                }\r\n                else {\r\n                    seOptimizo = false;\r\n                }\r\n            }\r\n        }\r\n        console.log(\"Se eliminaron :\", contador + \" instrucciones\");\r\n        console.log(\"-------------------------------------------\");\r\n        return this.marcarAsOptimizadas(nuevasInstrucciones, false);\r\n    }\r\n    /*          REGLA 3\r\n        if(1 == 1) goto L1;\r\n        goto L2;            ------------->      goto L1;\r\n\r\n                REGLA 4\r\n        if( 4 == 1) goto L1; ------------->      goto L2;\r\n        goto L2;\r\n        \r\n    */\r\n    regla3_y_regla4(listaInstrucciones) {\r\n        console.log(\"--------- Aplicando REGLA 3 y REGLA 4 ------------- \");\r\n        let contador = 0;\r\n        let nuevasInstrucciones = [];\r\n        let codigoNuevo = [];\r\n        let codigoEliminado = [];\r\n        let seOptimizo = false;\r\n        for (let i = 0; i < listaInstrucciones.length; i++) {\r\n            let instruccion = listaInstrucciones[i];\r\n            if (instruccion instanceof If3D) {\r\n                //Si es If ver si sus condiciones son constantes (INTEGER, DOUBLE)\r\n                let condicion = instruccion.condicion;\r\n                if (condicion instanceof Operacion3D) {\r\n                    //Ver si el operando izquierdo y derecho son constantes\r\n                    let izq = condicion.op_izq;\r\n                    let der = condicion.op_der;\r\n                    if (this.sonConstantes(izq, der)) {\r\n                        //Obtener su resultado.\r\n                        let resultado = condicion.getValorRelacional();\r\n                        //1. Obtener la etiqueta verdadera\r\n                        let etVerdadera = instruccion.gotoEtiqueta;\r\n                        //2. Obtener codigo Falso\r\n                        let etFalsa;\r\n                        let numRegla = null;\r\n                        if (i + 1 < listaInstrucciones.length) {\r\n                            if (listaInstrucciones[i + 1] instanceof Etiqueta3D) {\r\n                                etFalsa = listaInstrucciones[i + 1];\r\n                                seOptimizo = true;\r\n                                //Si es verdadero, aplicar regla 3;\r\n                                if (resultado) {\r\n                                    //Se deja solo el goto Verdadero\r\n                                    codigoNuevo.push(etVerdadera);\r\n                                    numRegla = ReglaOptimizacion.REGLA3;\r\n                                }\r\n                                else {\r\n                                    //Si es falso, aplicar regla 4;\r\n                                    codigoNuevo.push(etFalsa);\r\n                                    numRegla = ReglaOptimizacion.REGLA4;\r\n                                }\r\n                                //Se pushea el if al codigo eliminado\r\n                                codigoEliminado.push(instruccion);\r\n                                //Se pushea el salto falso al codigo eliminado\r\n                                codigoEliminado.push(etFalsa);\r\n                                //Se agrega al reporte\r\n                                this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                //Se agrega a la lista de instrucciones el codigo nuevo\r\n                                codigoNuevo = this.marcarAsOptimizadas(codigoNuevo, true);\r\n                                nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                                //Se vacian las listas\r\n                                codigoEliminado = [];\r\n                                codigoNuevo = [];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!seOptimizo) {\r\n                if (!instruccion.isOptimizada()) {\r\n                    instruccion.setOptimizada(true);\r\n                    nuevasInstrucciones.push(instruccion);\r\n                }\r\n            }\r\n            else {\r\n                seOptimizo = false;\r\n            }\r\n        }\r\n        console.log(\"Se eliminaron :\", contador + \" instrucciones\");\r\n        console.log(\"-------------------------------------------\");\r\n        return this.marcarAsOptimizadas(nuevasInstrucciones, false);\r\n    }\r\n    /*          REGLA 5\r\n        T3 = T2;\r\n        <instrucciones>            ------------->      T3 = T2;\r\n        T2 = T3;                                        <instrucciones>\r\n        \r\n    */\r\n    regla5(listaInstrucciones) {\r\n        console.log(\"--------- Aplicando REGLA 5------------- \");\r\n        let contador = 0;\r\n        let nuevasInstrucciones = [];\r\n        let codigoNuevo = [];\r\n        let codigoEliminado = [];\r\n        let seOptimizo = false;\r\n        for (let i = 0; i < listaInstrucciones.length; i++) {\r\n            let instruccion = listaInstrucciones[i];\r\n            if (instruccion instanceof Asignacion3D) {\r\n                //Ver si su asignacion es hacia otra variable.\r\n                let asignacion = instruccion.expresion;\r\n                if (asignacion instanceof Primitiva3D) {\r\n                    if (asignacion.getTipoPrim3D() === TipoPrim3D.IDENTIFIER) {\r\n                        let Id1 = instruccion.identificador;\r\n                        let Id2 = asignacion.getValor();\r\n                        //Seguir iterando sobre las instrucciones y ver si se encuentra\r\n                        //una asignacion del tipo id2 = id1;\r\n                        let n = i + 1;\r\n                        let auxInst;\r\n                        let auxiliarInstr = [];\r\n                        while (n < listaInstrucciones.length) {\r\n                            auxInst = listaInstrucciones[n];\r\n                            //Ver si es asignacion\r\n                            if (auxInst instanceof Asignacion3D) {\r\n                                if (auxInst.identificador == Id1) {\r\n                                    //a cambia de valor, salir del ciclo.\r\n                                    break;\r\n                                }\r\n                                //ver si es = idx\r\n                                let auxAsig = auxInst.expresion;\r\n                                if (auxAsig instanceof Primitiva3D) {\r\n                                    if (auxAsig.getTipoPrim3D() === TipoPrim3D.IDENTIFIER) {\r\n                                        //Ver si es id2 = id1;\r\n                                        if (auxInst.identificador == Id2 && auxAsig.getValor() == Id1) {\r\n                                            //Se optimiza. (eliminar esta)\r\n                                            seOptimizo = true;\r\n                                            codigoEliminado.push(auxInst);\r\n                                            codigoNuevo.push(instruccion);\r\n                                            codigoNuevo = codigoNuevo.concat(auxiliarInstr);\r\n                                            //Agregar a reporte.\r\n                                            this.agregarReporte(codigoNuevo, codigoEliminado, ReglaOptimizacion.REGLA5);\r\n                                            //Agregar a la lista deinstrucciones nueva\r\n                                            codigoNuevo = this.marcarAsOptimizadas(codigoNuevo, true);\r\n                                            nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                                            contador += codigoEliminado.length;\r\n                                            codigoEliminado = [];\r\n                                            codigoNuevo = [];\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            else if (auxInst instanceof Etiqueta3D) {\r\n                                break;\r\n                            }\r\n                            auxiliarInstr.push(auxInst);\r\n                            n = n + 1;\r\n                        }\r\n                        if (seOptimizo) {\r\n                            i = n;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!seOptimizo) {\r\n                if (!instruccion.isOptimizada()) {\r\n                    instruccion.setOptimizada(true);\r\n                    nuevasInstrucciones.push(instruccion);\r\n                }\r\n            }\r\n            else {\r\n                seOptimizo = false;\r\n            }\r\n        }\r\n        console.log(\"Se eliminaron :\", contador + \" instrucciones\");\r\n        console.log(\"-------------------------------------------\");\r\n        return this.marcarAsOptimizadas(nuevasInstrucciones, false);\r\n    }\r\n    reglasAlgebraicas(listaInstrucciones) {\r\n        console.log(\"--------- Aplicando REGLAS SIMPLIFICACION ALGEBRAICA  ------------- \");\r\n        let contador = 0;\r\n        let nuevasInstrucciones = [];\r\n        let codigoEliminado = [];\r\n        let codigoNuevo = [];\r\n        let seOptimizo = false;\r\n        for (let i = 0; i < listaInstrucciones.length; i++) {\r\n            let instruccion = listaInstrucciones[i];\r\n            if (instruccion instanceof Asignacion3D) {\r\n                //Ver si la asignacion corresponde a una operacion Tx = Ty op x\r\n                let expr = instruccion.expresion;\r\n                if (expr instanceof Operacion3D) {\r\n                    let izq = expr.op_izq;\r\n                    let der = expr.op_der;\r\n                    if (der != null) {\r\n                        if (izq.getTipoPrim3D() === TipoPrim3D.IDENTIFIER) {\r\n                            if (izq.getValor() === instruccion.identificador) {\r\n                                //REGLA 6 T1 = T1+0 <-- ELIMINAR\r\n                                if (der.getValor() == 0) {\r\n                                    //Si es regla 6 o 7, optimizar\r\n                                    //Agregar a reporte.\r\n                                    let numRegla;\r\n                                    if (expr.getTipoOperacion() === TipoOperacion3D.SUMA) {\r\n                                        codigoEliminado.push(instruccion);\r\n                                        numRegla = ReglaOptimizacion.REGLA6;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                    else if (expr.getTipoOperacion() === TipoOperacion3D.RESTA) {\r\n                                        codigoEliminado.push(instruccion);\r\n                                        numRegla = ReglaOptimizacion.REGLA7;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                    else if (expr.getTipoOperacion() === TipoOperacion3D.MULTIPLICACION) {\r\n                                        //Es x = X * 0 (REGLA 15)\r\n                                        codigoEliminado.push(instruccion);\r\n                                        let nuevaExpr = new Primitiva3D(TipoExpresion3D.PRIMITIVA, TipoPrim3D.INTEGER, 0, \"0\", izq.fila, izq.columna);\r\n                                        let nuevaAsig = new Asignacion3D(TipoInstruccion3D.ASIGNORMAL, instruccion.identificador, nuevaExpr, \"\", instruccion.fila, instruccion.columna);\r\n                                        codigoNuevo.push(nuevaAsig);\r\n                                        numRegla = ReglaOptimizacion.REGLA15;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                }\r\n                                else if (der.getValor() === 1) {\r\n                                    //Si es regla 8 o 9, optimizar\r\n                                    //Agregar a reporte.\r\n                                    let numRegla;\r\n                                    if (expr.getTipoOperacion() === TipoOperacion3D.MULTIPLICACION) {\r\n                                        codigoEliminado.push(instruccion);\r\n                                        numRegla = ReglaOptimizacion.REGLA8;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                    else if (expr.getTipoOperacion() === TipoOperacion3D.DIVISION) {\r\n                                        codigoEliminado.push(instruccion);\r\n                                        numRegla = ReglaOptimizacion.REGLA9;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                //Es de la forma X = y op algo\r\n                                if (der.getValor() === 0) {\r\n                                    let numRegla;\r\n                                    if (expr.getTipoOperacion() === TipoOperacion3D.SUMA) {\r\n                                        //Es suma x = y + 0 (Regla 10) => x = y\r\n                                        codigoEliminado.push(instruccion);\r\n                                        let nuevaExpr = new Primitiva3D(TipoExpresion3D.PRIMITIVA, TipoPrim3D.IDENTIFIER, izq.getValor(), izq.getCodigo3D(), izq.fila, izq.columna);\r\n                                        let nuevaAsig = new Asignacion3D(TipoInstruccion3D.ASIGNORMAL, instruccion.identificador, nuevaExpr, \"\", instruccion.fila, instruccion.columna);\r\n                                        codigoNuevo.push(nuevaAsig);\r\n                                        numRegla = ReglaOptimizacion.REGLA10;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                    else if (expr.getTipoOperacion() === TipoOperacion3D.RESTA) {\r\n                                        //Es x = y - 0 --> x = y; (Regla 11)\r\n                                        codigoEliminado.push(instruccion);\r\n                                        let nuevaExpr = new Primitiva3D(TipoExpresion3D.PRIMITIVA, TipoPrim3D.IDENTIFIER, izq.getValor(), izq.getCodigo3D(), izq.fila, izq.columna);\r\n                                        let nuevaAsig = new Asignacion3D(TipoInstruccion3D.ASIGNORMAL, instruccion.identificador, nuevaExpr, \"\", instruccion.fila, instruccion.columna);\r\n                                        codigoNuevo.push(nuevaAsig);\r\n                                        numRegla = ReglaOptimizacion.REGLA11;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                    else if (expr.getTipoOperacion() === TipoOperacion3D.MULTIPLICACION) {\r\n                                        //Es x = y * 0 (REGLA 15)\r\n                                        codigoEliminado.push(instruccion);\r\n                                        let nuevaExpr = new Primitiva3D(TipoExpresion3D.PRIMITIVA, TipoPrim3D.INTEGER, 0, \"0\", izq.fila, izq.columna);\r\n                                        let nuevaAsig = new Asignacion3D(TipoInstruccion3D.ASIGNORMAL, instruccion.identificador, nuevaExpr, \"\", instruccion.fila, instruccion.columna);\r\n                                        codigoNuevo.push(nuevaAsig);\r\n                                        numRegla = ReglaOptimizacion.REGLA15;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                }\r\n                                else if (der.getValor() === 1) {\r\n                                    let numRegla;\r\n                                    if (expr.getTipoOperacion() === TipoOperacion3D.MULTIPLICACION) {\r\n                                        codigoEliminado.push(instruccion);\r\n                                        let nuevaExpr = new Primitiva3D(TipoExpresion3D.PRIMITIVA, TipoPrim3D.IDENTIFIER, izq.getValor(), izq.getCodigo3D(), izq.fila, izq.columna);\r\n                                        let nuevaAsig = new Asignacion3D(TipoInstruccion3D.ASIGNORMAL, instruccion.identificador, nuevaExpr, \"\", instruccion.fila, instruccion.columna);\r\n                                        codigoNuevo.push(nuevaAsig);\r\n                                        numRegla = ReglaOptimizacion.REGLA12;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                    else if (expr.getTipoOperacion() === TipoOperacion3D.DIVISION) {\r\n                                        codigoEliminado.push(instruccion);\r\n                                        let nuevaExpr = new Primitiva3D(TipoExpresion3D.PRIMITIVA, TipoPrim3D.IDENTIFIER, izq.getValor(), izq.getCodigo3D(), izq.fila, izq.columna);\r\n                                        let nuevaAsig = new Asignacion3D(TipoInstruccion3D.ASIGNORMAL, instruccion.identificador, nuevaExpr, \"\", instruccion.fila, instruccion.columna);\r\n                                        codigoNuevo.push(nuevaAsig);\r\n                                        numRegla = ReglaOptimizacion.REGLA13;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                }\r\n                                else if (der.getValor() === 2) {\r\n                                    let numRegla;\r\n                                    if (expr.getTipoOperacion() === TipoOperacion3D.MULTIPLICACION) {\r\n                                        //Es x = y *2 -> x = y + y (REGLA 14)\r\n                                        codigoEliminado.push(instruccion);\r\n                                        let nuevaExpr = new Operacion3D(TipoExpresion3D.OPERACION, TipoOperacion3D.SUMA, izq, izq, \"\", izq.fila, izq.columna);\r\n                                        let nuevaAsig = new Asignacion3D(TipoInstruccion3D.ASIGNORMAL, instruccion.identificador, nuevaExpr, \"\", instruccion.fila, instruccion.columna);\r\n                                        codigoNuevo.push(nuevaAsig);\r\n                                        numRegla = ReglaOptimizacion.REGLA14;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (izq.getTipoPrim3D() === TipoPrim3D.INTEGER) {\r\n                            if (izq.getValor() === 0) {\r\n                                if (expr.getTipoOperacion() === TipoOperacion3D.DIVISION) {\r\n                                    //Ver si el derecho es id.\r\n                                    let numRegla;\r\n                                    if (der.getTipoPrim3D() === TipoPrim3D.IDENTIFIER) {\r\n                                        //Regla 16: x = 0/y -> x = 0\r\n                                        codigoEliminado.push(instruccion);\r\n                                        let nuevaExpr = new Primitiva3D(TipoExpresion3D.PRIMITIVA, TipoPrim3D.INTEGER, 0, \"0\", izq.fila, izq.columna);\r\n                                        let nuevaAsig = new Asignacion3D(TipoInstruccion3D.ASIGNORMAL, instruccion.identificador, nuevaExpr, \"\", instruccion.fila, instruccion.columna);\r\n                                        codigoNuevo.push(nuevaAsig);\r\n                                        numRegla = ReglaOptimizacion.REGLA15;\r\n                                        this.agregarReporte(codigoNuevo, codigoEliminado, numRegla);\r\n                                        contador += codigoEliminado.length;\r\n                                        nuevasInstrucciones = nuevasInstrucciones.concat(codigoNuevo);\r\n                                        codigoEliminado = [];\r\n                                        codigoNuevo = [];\r\n                                        seOptimizo = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!seOptimizo) {\r\n                nuevasInstrucciones.push(instruccion);\r\n            }\r\n            else {\r\n                seOptimizo = false;\r\n            }\r\n        }\r\n        console.log(\"Se eliminaron :\", contador + \" instrucciones\");\r\n        console.log(\"-------------------------------------------\");\r\n        console.log(\"MY INST ARE: \", nuevasInstrucciones);\r\n        return nuevasInstrucciones;\r\n    }\r\n    cambiarReferencias(etiquetaEliminada, nuevaReferencia, listaInstrucciones, pos) {\r\n        while (pos < listaInstrucciones.length) {\r\n            let auxInst = listaInstrucciones[pos];\r\n            if (auxInst instanceof Goto3D) {\r\n                if (auxInst.getReferencia() === etiquetaEliminada) {\r\n                    auxInst.changeReferencia(nuevaReferencia);\r\n                }\r\n            }\r\n            pos = pos + 1;\r\n        }\r\n    }\r\n    marcarAsOptimizadas(codigoNuevo, optimizada) {\r\n        let opt = [];\r\n        codigoNuevo.forEach((s) => {\r\n            s.setOptimizada(optimizada);\r\n            opt.push(s);\r\n        });\r\n        console.log(\"RETURNING: \", opt);\r\n        return opt;\r\n    }\r\n    getCodigoEtiqueta(etiquetaBuscar, listaInstrucciones, pos, addEtiqueta) {\r\n        let instruccionesEtiqueta = [];\r\n        let found = false;\r\n        while (pos < listaInstrucciones.length) {\r\n            let auxInst = listaInstrucciones[pos];\r\n            if (found) {\r\n                //Pushear a las instrucciones de la etiqueta anterior\r\n                if (auxInst instanceof Etiqueta3D) {\r\n                    break;\r\n                }\r\n                instruccionesEtiqueta.push(auxInst);\r\n                auxInst.setEliminada(true);\r\n            }\r\n            if (auxInst instanceof Etiqueta3D) {\r\n                //Comparar nombres.\r\n                if (auxInst.identificador === etiquetaBuscar) {\r\n                    //Se encontro.\r\n                    if (addEtiqueta) {\r\n                        auxInst.setEliminada(true);\r\n                        instruccionesEtiqueta.push(auxInst);\r\n                    }\r\n                    found = true;\r\n                }\r\n            }\r\n            pos = pos + 1;\r\n        }\r\n        return instruccionesEtiqueta;\r\n    }\r\n    crearIfAnterior(unIf) {\r\n        let cond = Object.create(unIf.condicion);\r\n        let nuevoIf = new If3D(TipoInstruccion3D.IF, cond, unIf.gotoEtiqueta, unIf.codigo3D, unIf.fila, unIf.columna);\r\n        return nuevoIf;\r\n    }\r\n    sonConstantes(izq, der) {\r\n        if (izq.getTipoPrim3D() == TipoPrim3D.IDENTIFIER) {\r\n            return false;\r\n        }\r\n        if (der != null) {\r\n            if (der.getTipoPrim3D() == TipoPrim3D.IDENTIFIER) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import * as XMLGramAsc from './Gramatica/XML_GramaticaAsc';\r\nimport * as XQuery from './Gramatica/XQuery';\r\nimport { Entorno } from './AST/Entorno';\r\nimport { Objeto } from './XML/Objeto';\r\nimport { Atributo } from './XML/Atributo';\r\nimport * as XMLGramDesc from './Gramatica/XML_GramaticaDesc';\r\nimport errores from './Global/ListaError';\r\nimport * as XPathGramAsc from './Gramatica/XPath_GramaticaAsc';\r\nimport * as XPathGramDesc from \"./Gramatica/XPath_GramaticaDesc\";\r\nimport { cstXmlAsc, cstXmlDesc } from './Reporte/CST';\r\nimport { TraduceXML } from './Traduccion/TraduceXML';\r\nimport * as OptimizacionGrammar from './Gramatica/Optimizacion_Grammar';\r\nimport { Optimizer } from './Optimizacion/Optimizer';\r\nimport { Metodo } from './Optimizacion/Declaraciones3D/Metodo';\r\nimport { Main } from './Optimizacion/Declaraciones3D/Main';\r\n//const XPathGramAsc = require('../XPath_GramaticaAsc');\r\n//const XPathGramDesc = require('../XPath_GramaticaDesc');\r\nclass Analizador {\r\n    constructor() {\r\n        this.global = new Entorno('global', null, null);\r\n        this.xqGlobal = new Entorno('xqGlobal', null, null);\r\n        this.xQueryEntry = '';\r\n        this.instrucciones = [];\r\n        errores.limpiar();\r\n        this.indice = 0;\r\n        this.reporteOptimiza = [];\r\n        this.consultas = [];\r\n        if (typeof Analizador._instance === \"object\") {\r\n            return Analizador._instance;\r\n        }\r\n        Analizador._instance = this;\r\n        return this;\r\n    }\r\n    static getInstance() {\r\n        return this._instance;\r\n    }\r\n    iniciarVariables() {\r\n        this.global = new Entorno('global', null, null);\r\n        this.xqGlobal = new Entorno('xqGlobal', null, null);\r\n        errores.limpiar();\r\n    }\r\n    optimizacion(entrada) {\r\n        const codigo3d = OptimizacionGrammar.parse(entrada);\r\n        let salida = \"\";\r\n        let optimizador = new Optimizer();\r\n        this.reporteOptimiza = [];\r\n        let antes = \"\";\r\n        codigo3d.forEach((c) => {\r\n            antes += c.getCodigo3Dir() + \"\\n\";\r\n            if (c instanceof Main || c instanceof Metodo) {\r\n                c.listaInstrucciones = optimizador.aplicar(c.listaInstrucciones, this.reporteOptimiza);\r\n            }\r\n            salida += c.getCodigo3Dir() + \"\\n\";\r\n        });\r\n        console.log(\"REPORTE: \", this.reporteOptimiza);\r\n        return salida;\r\n    }\r\n    xmlDescendente(entrada) {\r\n        console.log(\"---GRAMATICA DESCENDENTE---\");\r\n        cstXmlDesc.id = 0;\r\n        const objetos = XMLGramDesc.parse(entrada);\r\n        objetos.forEach((elem) => {\r\n            if (elem instanceof Objeto || elem instanceof Atributo) {\r\n                elem.ejecutar(this.global);\r\n            }\r\n        });\r\n        console.log(this.global);\r\n        console.log(errores);\r\n    }\r\n    xmlAscendente(entrada) {\r\n        console.log(\"---GRAMATICA ASCENDENTE---\");\r\n        cstXmlAsc.id = 0;\r\n        const objetos = XMLGramAsc.parse(entrada);\r\n        this.global = new Entorno('global', null, null);\r\n        if (objetos !== null) {\r\n            objetos.forEach((elem) => {\r\n                console.log('Elemento: ' + elem);\r\n                if (elem instanceof Objeto || elem instanceof Atributo) {\r\n                    elem.ejecutar(this.global);\r\n                }\r\n            });\r\n        }\r\n        console.log(this.global);\r\n        console.log(errores);\r\n        /*global.tsimbolos.forEach((elem:any) => {\r\n          console.log(elem);\r\n        });*/\r\n    }\r\n    XPathAscendente(entrada) {\r\n        console.log(\"-- XPATH ASCENDENTE -- \");\r\n        this.consultas = XPathGramAsc.parse(entrada);\r\n        let salida = \"\";\r\n        console.log(\"---------------------------------------\");\r\n        this.consultas.forEach((elem) => {\r\n            console.log(\"CONSULTA: \" + elem.ToString());\r\n            let resultado = elem.ejecutar(this.global);\r\n            salida += elem.simbolosToString(resultado) + \"\\n\";\r\n            console.log(\"-----------RESULTADO----------------\");\r\n            console.log(resultado);\r\n            console.log(\"StringResult:\");\r\n            console.log(elem.simbolosToString(resultado));\r\n            console.log(\"---------------FIN---------------------\");\r\n        });\r\n        return salida;\r\n    }\r\n    XPathDescendente(entrada) {\r\n        console.log(\"-- XPATH DESCENDENTE -- \");\r\n        this.consultas = XPathGramDesc.parse(entrada);\r\n        let salida = \"\";\r\n        console.log(\"---------------------------------------\");\r\n        this.consultas.forEach((elem) => {\r\n            console.log(\"CONSULTA: \" + elem.ToString());\r\n            let resultado = elem.ejecutar(this.global);\r\n            salida += elem.simbolosToString(resultado) + \"\\n\";\r\n            console.log(\"-----------RESULTADO----------------\");\r\n            console.log(resultado);\r\n            console.log(\"TOSTRING:\");\r\n            console.log(elem.simbolosToString(resultado));\r\n            console.log(\"---------------FIN---------------------\");\r\n        });\r\n        return salida;\r\n    }\r\n    XQueryAscendente(entrada) {\r\n        console.log(\"---- XQUERY ASCENDENTE ----- \");\r\n        this.instrucciones = XQuery.parse(entrada);\r\n        this.xQueryEntry = entrada;\r\n        let salida = \"\";\r\n        console.log(\"RAIZ: \", this.instrucciones);\r\n        if (this.instrucciones !== null) {\r\n            this.instrucciones.forEach((elem) => {\r\n                if (typeof (elem) !== \"string\")\r\n                    elem.ejecutar(this.xqGlobal, this.global);\r\n            });\r\n            //salida += this.instrucciones.ejecutar(this.xqGlobal, this.global);\r\n        }\r\n        this.global.tsimbolos = this.global.tsimbolos.concat(this.xqGlobal.tsimbolos);\r\n        console.log(this.global);\r\n        console.log(\"SALIDA: \", salida);\r\n        return salida;\r\n    }\r\n    getTablaSimbolos() {\r\n        return this.global;\r\n    }\r\n    getErrores() {\r\n        let err = '';\r\n        errores.listaError.forEach((elem) => {\r\n            err = err + elem.getMensaje() + '\\n';\r\n        });\r\n        return err;\r\n    }\r\n    getRepTablaSimbolos() {\r\n        let cadenaDot = '';\r\n        let tabla = this.global.tsimbolos;\r\n        this.indice = 0;\r\n        cadenaDot = 'digraph {'\r\n            + 'tbl ['\r\n            + 'shape=plaintext,'\r\n            + 'label=<'\r\n            + '<table border=\"0\" cellborder=\"1\" color=\"#ddd\" cellspacing=\"0\">'\r\n            + '<tr bgcolor=\"#04AA6D\">'\r\n            + '<td><b>NO.</b></td>'\r\n            + '<td><b>NOMBRE</b></td>'\r\n            + '<td><b>TIPO</b></td>'\r\n            + '<td><b>AMBITO</b></td>'\r\n            + '<td><b>NODO</b></td>'\r\n            + '<td><b>VALOR</b></td>'\r\n            + '<td><b>FILA</b></td>'\r\n            + '<td><b>COLUMNA</b></td>'\r\n            + '<td><b>POSICION</b></td>'\r\n            + '</tr>';\r\n        cadenaDot = cadenaDot + this.getSimbolosEntorno(this.global);\r\n        cadenaDot = cadenaDot + '</table>'\r\n            + '>];'\r\n            + '}';\r\n        return cadenaDot;\r\n    }\r\n    getSimbolosEntorno(entrada) {\r\n        let simbolos = '';\r\n        entrada.tsimbolos.forEach((elem) => {\r\n            if (elem.valor.valor instanceof Entorno) {\r\n                this.indice++;\r\n                simbolos = simbolos\r\n                    + '<tr>'\r\n                    + '<td>' + this.indice + '</td>'\r\n                    + '<td>' + elem.valor.getNombre() + '</td>'\r\n                    + '<td>' + this.getTipoDato(elem.valor.getTipo()) + '</td>'\r\n                    + '<td>' + entrada.nombre + '</td>'\r\n                    + '<td>' + elem.nombre + '</td>'\r\n                    + '<td>Nodo</td>'\r\n                    + '<td>' + elem.valor.getLinea() + '</td>'\r\n                    + '<td>' + elem.valor.getColumna() + '</td>'\r\n                    + '<td>' + elem.valor.getPosicion() + '</td>'\r\n                    + '</tr>';\r\n                simbolos = simbolos + this.getSimbolosEntorno(elem.valor.valor);\r\n            }\r\n            else {\r\n                if (elem.valor.valor !== false) {\r\n                    this.indice++;\r\n                    simbolos = simbolos\r\n                        + '<tr>'\r\n                        + '<td>' + this.indice + '</td>'\r\n                        + '<td>' + elem.valor.getNombre() + '</td>'\r\n                        + '<td>' + this.getTipoDato(elem.valor.getTipo()) + '</td>'\r\n                        + '<td>' + entrada.nombre + '</td>'\r\n                        + '<td>' + elem.nombre + '</td>'\r\n                        + '<td>' + elem.valor.getValor().toString().replace('&', 'and') + '</td>'\r\n                        + '<td>' + elem.valor.getLinea() + '</td>'\r\n                        + '<td>' + elem.valor.getColumna() + '</td>'\r\n                        + '<td>' + elem.valor.getPosicion() + '</td>'\r\n                        + '</tr>';\r\n                }\r\n            }\r\n        });\r\n        return simbolos;\r\n    }\r\n    getTipoDato(t) {\r\n        switch (t) {\r\n            case 0:\r\n                return 'Texto';\r\n            case 1:\r\n                return 'Cadena';\r\n            case 2:\r\n                return 'Etiqueta';\r\n            case 3:\r\n                return 'Atributo';\r\n        }\r\n        ;\r\n        return '';\r\n    }\r\n    getRepErrores() {\r\n        let cadenaDot = '';\r\n        let indice = 0;\r\n        cadenaDot = '<table class=\"tablaDatos\" >'\r\n            + '<tr>'\r\n            + '<th>No.</th><th>Tipo</th><th>Descripcion</th><th>Linea</th><th>Columna</th>'\r\n            + '</th>';\r\n        errores.listaError.forEach((elem) => {\r\n            indice++;\r\n            cadenaDot = cadenaDot\r\n                + '<tr>'\r\n                + '<td>' + indice + '</td>'\r\n                + '<td>' + elem.getTipo() + '</td>'\r\n                + '<td>' + elem.getDescripcion() + '</td>'\r\n                + '<td>' + elem.getLinea() + '</td>'\r\n                + '<td>' + elem.getColumna() + '</td>'\r\n                + '</tr>';\r\n        });\r\n        cadenaDot = cadenaDot + '</table>';\r\n        return cadenaDot;\r\n    }\r\n    getRepOptimizacion() {\r\n        let cadenaDot = '';\r\n        let indice = 0;\r\n        cadenaDot = '<table class=\"tblRepOpti\" >'\r\n            + '<tr>'\r\n            + '<th>No.</th><th>CODIGO ANTES</th><th>CODIGO AHORA</th><th>REGLA</th><th>Columna</th><th>FILA</th>'\r\n            + '</th>';\r\n        this.reporteOptimiza.forEach((elem) => {\r\n            indice++;\r\n            cadenaDot = cadenaDot\r\n                + '<tr>'\r\n                + '<td>' + indice + '</td>'\r\n                + '<td>' + elem.getCodigoAntes() + '</td>'\r\n                + '<td>' + elem.getCodigoAhora() + '</td>'\r\n                + '<td>' + elem.tipoReglaToString() + '</td>'\r\n                + '<td>' + elem.getColumna() + '</td>'\r\n                + '<td>' + elem.getFila() + '</td>'\r\n                + '</tr>';\r\n        });\r\n        cadenaDot = cadenaDot + '</table>';\r\n        return cadenaDot;\r\n    }\r\n    getCSTXmlAsc() {\r\n        let cadenaDot = 'digraph {';\r\n        cadenaDot = cadenaDot + this.recorridoCst(cstXmlAsc.getRaiz());\r\n        cadenaDot = cadenaDot + '}';\r\n        return cadenaDot;\r\n    }\r\n    getCSTXmlDesc() {\r\n        let cadenaDot = 'digraph {';\r\n        cadenaDot += this.recorridoCst(cstXmlDesc.getRaiz());\r\n        cadenaDot += '}';\r\n        return cadenaDot;\r\n    }\r\n    recorridoCst(nodo) {\r\n        let concatena = '';\r\n        if (nodo !== null) {\r\n            concatena += nodo.id + '[label=\"' + nodo.valor + '\"];\\n';\r\n            nodo.hijos.forEach((hijo) => {\r\n                concatena += this.recorridoCst(hijo);\r\n                concatena += nodo.id + ' -> ' + hijo.id + ';\\n';\r\n            });\r\n        }\r\n        return concatena;\r\n    }\r\n    traduceXML() {\r\n        let resultado = '';\r\n        let traductor = new TraduceXML(this.consultas);\r\n        resultado = traductor.traducirXML();\r\n        console.log(this.global);\r\n        return resultado;\r\n    }\r\n}\r\nconst analizador = new Analizador();\r\nexport default analizador;\r\nfunction pruebaXQuery(entrada) {\r\n    console.log(\"-- XQUERY --\");\r\n    const objetos = XQuery.parse(entrada);\r\n    objetos.forEach((elem) => {\r\n        console.log(elem);\r\n    });\r\n}\r\nanalizador.XQueryAscendente(`\r\ndeclare function local:ackerman($m as xs:integer, $n as xs:integer ) as xs:integer\r\n{\r\n  if ($m eq 0) then $n+1\r\n  else if ($m gt 0 and $n eq 0) then local:ackerman($m - 1, 1)\r\n  else local:ackerman ($m - 1, local:ackerman($m, $n - 1))\r\n};\r\n\r\ndeclare function local:factorial($x as xs:integer)as xs:integer\r\n{\r\n  if ($x eq 0) then 1\r\n  else ($x*local:factorial($x - 1))\r\n};\r\n\r\ndeclare function local:fibonacci($num as xs:integer) as xs:integer\r\n{\r\n  let $a := $num + 1\r\n  let $b := $a * 8\r\n  for $l in (4 to 6)\r\n  return if ($num eq 0) then 0\r\n  else if ($num eq 1) then 1\r\n  else (local:fibonacci($num - 1) + local:fibonacci($num - 2))\r\n};\r\n\r\ndeclare function local:tipo1() as xs:integer\r\n{\r\n  let $a := 1\r\n  let $b := $a * 8\r\n  return local:fibonacci($a - 2)\r\n};\r\n\r\ndeclare function local:tipo2() as xs:integer\r\n{\r\n  for $a in (1)\r\n  where $a/price < 5\r\n  let $b := $a * 8\r\n  return if ($b eq 8) then local:factorial($a)\r\nelse 5\r\n};\r\n\r\nlet $go := 5\r\nlet $ruta := /pruebas\r\n`);\r\n/*\r\ndeclare function local:ackerman($m as xs:integer, $n as xs:integer ) as xs:integer\r\n{\r\n  if ($m eq 0) then $n+1\r\n  else if ($m gt 0 and $n eq 0) then local:ackerman($m - 1, 1)\r\n  else local:ackerman ($m - 1, local:ackerman($m, $n - 1))\r\n};\r\n\r\ndeclare function local:factorial($x as xs:integer)as xs:integer\r\n{\r\n  if ($x eq 0) then 1\r\n  else ($x*local:factorial($x - 1))\r\n};\r\n\r\ndeclare function local:fibonacci($num as xs:integer) as xs:integer\r\n{\r\n  let $a := $num + 1\r\n  let $b := $a * 8\r\n  for $l in (4 to 6)\r\n  return if ($num eq 0) then 0\r\n  else if ($num eq 1) then 1\r\n  else (local:fibonacci($num - 1) + local:fibonacci($num - 2))\r\n};\r\n\r\ndeclare function local:tipo1() as xs:integer\r\n{\r\n  let $a := 1\r\n  let $b := $a * 8\r\n  return local:fibonacci($a - 2)\r\n};\r\n\r\ndeclare function local:tipo2() as xs:integer\r\n{\r\n  for $a in (1)\r\n  where $a < 5\r\n  let $b := $a * 8\r\n  return if ($b eq 8) then local:factorial($a)\r\nelse 5\r\n};\r\n\r\n\r\n\r\nlet $go := (1,3)\r\nlet $ruta := /pruebas\r\nfor $x in (1 to 2)\r\nlet $y := (4)\r\nreturn if(1 eq 1) then \"FUNCIONA\"\r\nelse \"NO FUNCIONA\"\r\n\r\n(:\r\nreturn if ($ruta/m eq 5) then local:tipo2()\r\nelse 3\r\n(:($y eq 4) then local:tipo2()\r\nelse local:factorial(0):)\r\n:)\r\n*/\r\n/*pruebaXQuery(`\r\ndeclare function local:ackerman($m as xs:integer, $n as xs:integer ) as xs:integer\r\n{\r\n  if ($m eq 0) then $n+1\r\n  else if ($m gt 0 and $n eq 0) then local:ackerman($m - 1, 1)\r\n  else local:ackerman ($m - 1, local:ackerman($m, $n - 1))\r\n};\r\n\r\n\r\ndeclare function local:factorial($x as xs:integer)as xs:integer\r\n{\r\n  if ($x eq 0) then 1\r\n  else ($x*local:factorial($x - 1))\r\n};\r\n\r\ndeclare function local:fibonacci($num as xs:integer) as xs:integer\r\n{\r\n  for $l in (4 to 6)\r\n  return if ($num eq 0) then 0\r\n  else if ($num eq 1) then 1\r\n  else (local:fibonacci($num - 1) + local:fibonacci($num - 2))\r\n};\r\n\r\nlet $go := (5)\r\nfor $x in (1 to 2)\r\nlet $y := (4)\r\nreturn if ($y eq 4) then local:factorial($y)\r\nelse local:factorial(0)\r\n`);\r\n/*\r\nfunction xpathAscendente(entrada:string){\r\n  console.log(\"-- XPATH ASCENDENTE -- \")\r\n  const objetos = XPathGramAsc.parse(entrada);\r\n\r\n  objetos.forEach((elem: any) => {\r\n      console.log(elem);\r\n  });\r\n}\r\n\r\nfunction xpathDescendente(entrada:string){\r\n  console.log(\"-- XPATH DESCENDENTE -- \")\r\n  const objetos = XPathGramDesc.parse(entrada);\r\n\r\n  objetos.forEach((elem: any) => {\r\n      console.log(elem);\r\n  });\r\n}\r\n\r\nXPathAscendente(`\r\nbookstore/book\r\n|\r\n//@category\r\n`);\r\n*/\r\n/*\r\nxmlAscendente(`\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<bookstore>\r\n  <book category=\"children\">\r\n    <title>Harry Potter</title>\r\n    <author>J K. Rowlin</author>\r\n    <price at=\"asd\"></price>\r\n    <hola> </hola>\r\n  </book>\r\n  <book category=\"web\">\r\n    <title>Learning XML</title>\r\n    <author>Erik T. Ray</author>\r\n    <year>2003</year>\r\n    <price>39.95 &lt 30</price>\r\n  </book>\r\n</bookstore>\r\n`);*/\r\n//export default Analizador;\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../Styles/App.css';\r\nimport Editor from './Editor';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileAlt, faFileUpload, faPlay, faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { faCode, faCogs } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport {Graphviz} from 'graphviz-react';\r\n\r\nimport analizador from '../Analizador/indexAnalizador';\r\nconsole.log(analizador);\r\nclass App extends React.Component {\r\n  state = {\r\n    open: false,\r\n    modalOpen: false,\r\n    modalOpenCst: false,\r\n    alertOpen: false,\r\n    opcion: '',\r\n    consoleText: '',\r\n    fileName: '',\r\n    xml: '',\r\n    xpath: '',\r\n    reptHtml: '',\r\n    fileDownloadUrl: null,\r\n    selectedOption: '',\r\n    dot: `digraph {}`,\r\n    c3d: '',\r\n    open3D: false,\r\n    tituloRepHTML: ''\r\n  }\r\n\r\n  abrirModal = () => {\r\n    this.setState({modalOpen: !this.state.modalOpen});\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({open: false});\r\n  }\r\n\r\n  handleOpen = () => {\r\n    this.setState({open: true});\r\n  }\r\n  \r\n  handleXML = (value) => {\r\n    this.setState({xml: value});\r\n  }\r\n\r\n  handleXPath = (value) => {\r\n    this.setState({xpath: value});\r\n  }\r\n\r\n  handleDot = (value) => {\r\n    this.setState({dot: value});\r\n  }\r\n\r\n  handleC3d = (value) => {\r\n    this.setState({c3d: value});\r\n  }\r\n\r\n  nuevo = () => {\r\n    this.setState({fileName: '', xml: '', xpath: '', c3d: '', open3D: false});\r\n  }\r\n\r\n  upload = (event) => {\r\n  \tevent.preventDefault();\r\n    this.dofileUpload.click()\r\n  }\r\n\r\n  open = (evt) => {\r\n    const fileObj = evt.target.files[0];\r\n    const reader = new FileReader();\r\n        \r\n    let fileloaded = e => {\r\n      // e.target.result is the file's content as text\r\n      const fileContents = e.target.result;\r\n      this.setState ({xml: fileContents, fileName: fileObj.name})\r\n    }\r\n    \r\n    // Mainline of the method\r\n    fileloaded = fileloaded.bind(this);\r\n    reader.onload = fileloaded;\r\n    reader.readAsText(fileObj);  \r\n  }\r\n\r\n  downloadXML = (event) => {\r\n    event.preventDefault();\r\n  \t// Prepare the file\r\n    let output;\r\n    output = this.state.xml;\r\n    // Download it\r\n    const blob = new Blob([output]);\r\n    const fileDownloadUrl = URL.createObjectURL(blob);\r\n    if(this.state.fileName === null || this.state.fileName === ''){\r\n      var hoy = new Date();\r\n      var dd = hoy.getDate();\r\n      var mm = hoy.getMonth() + 1;\r\n      var yyyy = hoy.getFullYear();\r\n      var HH = hoy.getHours();\r\n      var MM = hoy.getMinutes();\r\n      var formato = dd + \"_\" + mm + \"_\" + yyyy + \"_\" + HH + \"_\" + MM;\r\n      this.setState({fileName: formato})\r\n    }\r\n    this.setState ({fileDownloadUrl: fileDownloadUrl}, \r\n      () => {\r\n        this.dofileDownload.click(); \r\n        URL.revokeObjectURL(fileDownloadUrl);  // free up storage--no longer needed.\r\n        this.setState({fileDownloadUrl: \"\"})\r\n    })    \r\n  }\r\n\r\n  downloadXPath = (event) => {\r\n    event.preventDefault();\r\n  \t// Prepare the file\r\n    let output;\r\n    output = this.state.xml;\r\n    // Download it\r\n    const blob = new Blob([output]);\r\n    const fileDownloadUrl = URL.createObjectURL(blob);\r\n    if(this.state.fileName === null || this.state.fileName === ''){\r\n      var hoy = new Date();\r\n      var dd = hoy.getDate();\r\n      var mm = hoy.getMonth() + 1;\r\n      var yyyy = hoy.getFullYear();\r\n      var HH = hoy.getHours();\r\n      var MM = hoy.getMinutes();\r\n      var formato = dd + \"_\" + mm + \"_\" + yyyy + \"_\" + HH + \"_\" + MM;\r\n      this.setState({fileName: formato})\r\n    }\r\n    this.setState ({fileDownloadUrl: fileDownloadUrl}, \r\n      () => {\r\n        this.dofileDownload.click(); \r\n        URL.revokeObjectURL(fileDownloadUrl);  // free up storage--no longer needed.\r\n        this.setState({fileDownloadUrl: \"\"})\r\n    })    \r\n  }\r\n\r\n  onValueChange = (event) => {\r\n    this.setState({\r\n      selectedOption: event.target.value\r\n    });\r\n  }\r\n\r\n  formSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state.selectedOption)\r\n  }\r\n\r\n  analizar = (event) => {\r\n    this.abrirModal();\r\n    let resultado = '';\r\n    switch(this.state.selectedOption){\r\n      case 'XPath':\r\n        analizador.xmlAscendente(this.state.xml);\r\n        resultado = this.state.xpath !== ''?analizador.XPathAscendente(this.state.xpath):'';\r\n        break;\r\n      case 'XQuery':\r\n        analizador.xmlDescendente(this.state.xml);\r\n        resultado = this.state.xpath !== ''?analizador.XQueryAscendente(this.state.xpath):'';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({consoleText:resultado});\r\n    if (this.state.selectedOption !== '') \r\n      this.setState({alertOpen: true});\r\n  }\r\n\r\n  generar3D = (event) => {\r\n    this.setState({open3D:true, c3d: analizador.traduceXML()});\r\n    \r\n  }\r\n\r\n  optimizar = (event) => {\r\n    if (this.state.c3d !== '' || this.state.xpath !== '')\r\n      this.setState({c3d:analizador.optimizacion(this.state.c3d!==''?this.state.c3d:this.state.xpath)})\r\n    console.log('OPTIMIZACION FINALIZADA CON EXITO!')\r\n    this.setState({open3D:true});\r\n  }\r\n\r\n  reporteTablaSimbolos = (event) => {\r\n    this.setState({dot:analizador.getRepTablaSimbolos()});\r\n  }\r\n\r\n  reporteListaErrores = (event) => {\r\n    this.setState({tituloRepHTML:\"LISTA DE ERRORES\"});\r\n    this.setState({reptHtml:analizador.getRepErrores()});\r\n  }\r\n\r\n  reporteOptimizacion = (event) => {\r\n    this.setState({tituloRepHTML:\"REPORTE DE OPTIMIZACION\"});\r\n    this.setState({reptHtml:analizador.getRepOptimizacion()});\r\n  }\r\n\r\n  mostrarCst = () => {\r\n    this.setState({modalOpenCst: !this.state.modalOpenCst});\r\n    //this.setState({dot:analizador.getCSTXmlAsc()});\r\n  }\r\n\r\n  reporteCst = (event) => {\r\n    this.mostrarCst();\r\n    switch(this.state.selectedOption){\r\n      case 'XPath':\r\n        //this.setState({dot:analizador.getCSTXmlAsc()});\r\n        break;\r\n      case 'XQuery':\r\n        //this.setState({dot:analizador.getCSTXmlDesc()});\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const modalStyles={\r\n      position: \"absolute\",\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)'\r\n    }\r\n    return (\r\n      <>\r\n      <div className=\"App\" style={{width:\"100%\"}}>\r\n        <header className=\"App-header\">\r\n          <AppBar position=\"static\" style={{ background: '#4b6584' }}>\r\n            <Toolbar>\r\n              <IconButton edge=\"start\" className=\"menuButton\" color=\"inherit\" aria-label=\"menu\">\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className=\"title\">\r\n                TytusX\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </header>\r\n        <div className=\"App-body\">\r\n          <Grid container spacing={1}>\r\n          <Grid item xs={1}></Grid>\r\n            <Grid item xs={10}>\r\n              <div className=\"row\">\r\n                <div> \r\n                  <button className=\"Boton\" style={{backgroundColor:\"white\"}} onClick={this.nuevo}>\r\n                    <FontAwesomeIcon icon={faFileAlt} /> \r\n                  </button>\r\n                  <button onClick={this.upload} className=\"Boton\" style={{backgroundColor:\"white\", color:\"yellowgreen\"}}>\r\n                    <FontAwesomeIcon icon={faFileUpload} /> \r\n                  </button> \r\n                  <input type=\"file\" style={{display:'none'}}\r\n                    multiple={false}\r\n                    accept=\".xml,application/xml\"\r\n                    onChange={evt => this.open(evt)}\r\n                    ref={e=>this.dofileUpload = e}\r\n                  />\r\n                  <div style={{display:\"inline-block\", padding:'0px 10px 0px 10px'}}>\r\n                    <Typography style={{color:\"white\"}}>Guardar XML</Typography>\r\n                    <button className=\"Boton\" style={{backgroundColor:\"white\", color:\"gray\"}} onClick={this.downloadXML}>\r\n                      <FontAwesomeIcon icon={faSave} />\r\n                    </button> \r\n                    <a style={{display:'none'}}\r\n                        download={this.state.fileName}\r\n                        href={this.state.fileDownloadUrl}\r\n                        ref={e=>this.dofileDownload = e}>download it</a>\r\n                  </div> \r\n\r\n                  <div style={{display:\"inline-block\", padding:'0px 5px 0px 5px'}}>  \r\n                    <Typography style={{color:\"white\"}}>Guardar XPath</Typography>\r\n                    <button className=\"Boton\" style={{backgroundColor:\"white\", color:\"gray\"}} onClick={this.downloadXPath}>\r\n                      <FontAwesomeIcon icon={faSave} /> \r\n                    </button>\r\n                    <a style={{display:'none'}}\r\n                        download={this.state.fileName}\r\n                        href={this.state.fileDownloadUrl}\r\n                        ref={e=>this.dofileDownload = e}>download it</a>\r\n                  </div>        \r\n                  <button className=\"Boton\" style={{backgroundColor:\"white\", color:\"green\"}} onClick={this.abrirModal}>\r\n                    <FontAwesomeIcon icon={faPlay} /> \r\n                  </button>  \r\n                       \r\n                  <button className=\"Boton\" style={{backgroundColor:\"white\", color:\"gray\"}} onClick={this.generar3D}>\r\n                    <FontAwesomeIcon icon={faCode} /> \r\n                  </button>          \r\n                  <button className=\"Boton\" style={{backgroundColor:\"white\", color:\"gray\"}} onClick={this.optimizar}>\r\n                    <FontAwesomeIcon icon={faCogs} /> \r\n                  </button>  \r\n                </div>\r\n                <div>\r\n\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={5}>\r\n              <Paper className=\"paper\"  /*style={{background: 'rgba(96,113,121,0.3)'}}*/>\r\n                <Editor\r\n                  language=\"xml\"\r\n                  displayName=\"XML\"\r\n                  value={this.state.xml}\r\n                  onChange={this.handleXML}\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <Paper className=\"paper\"  /*style={{background: 'rgba(96,113,121,0.3)'}}*/>\r\n                <Editor \r\n                  language=\"xquery\"\r\n                  displayName=\"XPath / XQuery\"\r\n                  value={this.state.xpath}\r\n                  onChange={this.handleXPath}\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={10}>\r\n              <Paper className=\"paper\"  /*style={{background: 'rgba(96,113,121,0.3)'}}*/ >          \r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                      <InputLabel style={{fontWeight: 'bold', fontFamily: 'sans-serif'}}>CONSOLA</InputLabel> \r\n                      <div id=\"consola\">\r\n                        <textarea \r\n                          id=\"txtConsola\" \r\n                          value={this.state.consoleText} \r\n                          name=\"txtConsola\" \r\n                          disabled={true} \r\n                          className=\"consola\" \r\n                          rows=\"8\" style={{width: \"100%\"}}/>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={10}>\r\n              <Paper className=\"paper\">\r\n                <div className=\"row\" style={{visibility: this.state.open3D?'visible':'hidden'}}>\r\n                  <div className=\"col-md-12\">\r\n                    <InputLabel style={{fontWeight: 'bold', fontFamily: 'sans-serif'}}>Código 3D</InputLabel> \r\n                    <Editor\r\n                      language=\"clike\"\r\n                      displayName=\"3DC\"\r\n                      value={this.state.c3d}\r\n                      onChange={this.handleC3d}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={10}>\r\n              <Paper className=\"paper\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <br></br>\r\n                    <InputLabel style={{fontWeight: 'bold', fontFamily: 'sans-serif'}}>Reportes</InputLabel>\r\n                    <Button className=\"btn bg-primary\" onClick={this.reporteTablaSimbolos}>Tabla de Simbolos</Button> |\r\n                    <Button className=\"btn bg-secondary\">AST</Button> |\r\n                    <Button className=\"btn bg-success\" onClick={this.mostrarCst}>CST</Button> |\r\n                    <Button className=\"btn bg-danger\" onClick={this.reporteListaErrores}>Lista de Errores</Button> |\r\n                    <Button className=\"btn bg-warning\" onClick={this.reporteOptimizacion}>Optimizacion</Button>\r\n                    <br></br>\r\n                    <div style={{borderStyle: 'solid', borderRadius: '2em'}}>\r\n                      <Graphviz dot={this.state.dot} options={{fit:true, width:950,zoom: true}}/>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <InputLabel style={{fontWeight: 'bold', fontFamily: 'sans-serif'}}>{this.state.tituloRepHTML}</InputLabel> \r\n                        <div id=\"pnlErorres\" dangerouslySetInnerHTML={{ __html: this.state.reptHtml }} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Paper> \r\n            </Grid>            \r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={1}></Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n\r\n      <Collapse in={this.state.alertOpen} style={{position: 'fixed', top: '90%', left:'50%', transform: 'translate(-50%, -50%)'}}>\r\n        <Alert\r\n          action={\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                this.setState({alertOpen: false});\r\n              }}\r\n            >\r\n              <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          }\r\n        >\r\n          Analizado correctamente!\r\n        </Alert>\r\n      </Collapse>\r\n\r\n      <Modal isOpen={this.state.modalOpen} style={modalStyles}>\r\n      <ModalHeader>\r\n        Analizar\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <form onSubmit={this.formSubmit}>\r\n          <div className=\"radio\">\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value=\"XPath\"\r\n                checked={this.state.selectedOption === \"XPath\"}\r\n                onChange={this.onValueChange}\r\n              />\r\n              XPath\r\n            </label>\r\n          </div>\r\n          <div className=\"radio\">\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value=\"XQuery\"\r\n                checked={this.state.selectedOption === \"XQuery\"}\r\n                onChange={this.onValueChange}\r\n              />\r\n              XQuery\r\n            </label>\r\n          </div>\r\n        </form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.analizar}>Analizar</Button>\r\n          <Button color=\"secondary\" onClick={() => {this.setState({selectedOption: ''}); this.abrirModal();}}>Cerrar</Button>\r\n      </ModalFooter>\r\n      </Modal>\r\n\r\n\r\n      <Modal isOpen={this.state.modalOpenCst} style={modalStyles}>\r\n      <ModalHeader>\r\n        Reporte CST\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <form onSubmit={this.formSubmit}>\r\n          <div className=\"radio\">\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value=\"XPath\"\r\n                checked={this.state.selectedOption === \"XPath\"}\r\n                onChange={this.onValueChange}\r\n              />\r\n              XPath\r\n            </label>\r\n          </div>\r\n          <div className=\"radio\">\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value=\"XQuery\"\r\n                checked={this.state.selectedOption === \"XQuery\"}\r\n                onChange={this.onValueChange}\r\n              />\r\n              XQuery\r\n            </label>\r\n          </div>\r\n        </form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.reporteCst}>Generar Reporte</Button>\r\n          <Button color=\"secondary\" onClick={() => {this.setState({selectedOption: ''}); this.mostrarCst();}}>Cerrar</Button>\r\n      </ModalFooter>\r\n      </Modal>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}