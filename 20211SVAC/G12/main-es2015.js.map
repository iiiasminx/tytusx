{"version":3,"sources":["./src/Clases/Instrucciones/Llamada.ts","./src/Analizadores/XmlReporteGramatica.js","./src/clases/Analizar.ts","./src/Clases/Analizar.ts","fs (ignored)","./src/Clases/Instrucciones/Ejecutar.ts","path (ignored)","./src/Clases/GeneradorC3D/Nativas.ts","./src/Clases/Expreciones/Operaciones/Logicas.ts","./src/Clases/xpath/intrucciondoble.ts","./src/Analizadores/XML.js","./src/Clases/xpath/barrabarra.ts","./src/Analizadores/XQuery.js","./src/Clases/xpath/informacion.ts","./src/Clases/xml/atributo.ts","./src/Clases/TablaSimbolos/TablaSimbolos.ts","./src/environments/environment.ts","./src/Clases/Expreciones/Identificador.ts","./src/Clases/Instrucciones/SentenciaCiclos/DoWhile.ts","./src/Clases/Instrucciones/SentenciaControl/CS.ts","./src/Analizadores/XMLDescendente.js","./src/Clases/Instrucciones/Asignacion.ts","./src/Clases/xpath/axesbarrabarra.ts","./src/Clases/Instrucciones/SentenciaTransferencia/Break.ts","./src/Clases/xpath/acceso.ts","./src/Clases/xquery/returnXquery.ts","./src/Clases/TablaSimbolos/contenido.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/Clases/Expreciones/position.ts","./src/Analizadores/xPathReporteGramatica.js","./src/Clases/Expreciones/Operaciones/Relaciones.ts","./src/Clases/Instrucciones/SentenciaControl/Ifs.ts","./src/clases/AST/Nodo.ts","./src/clases/TablaSimbolos/contenido.ts","./src/Clases/xpath/puntopunto.ts","./src/clases/TablaSimbolos/Tipo.ts","./src/Clases/xpath/text.ts","./src/app/app.module.ts","./src/Clases/AST/Ast.ts","./src/Clases/AST/Nodo.ts","./src/Clases/TablaSimbolos/ambito.ts","./src/clases/TablaSimbolos/TablaSimbolos.ts","./src/Clases/Evaluar.ts","./src/Clases/xml/objeto.ts","./src/Clases/GeneradorC3D/GeneradorC3D.ts","./src/Clases/xquery/whereXquery.ts","./src/Clases/Instrucciones/SentenciaControl/SW.ts","./src/Clases/Instrucciones/SentenciaCiclos/While.ts","./src/Clases/xquery/ForXquery.ts","./src/Clases/xpath/axes.ts","./src/Clases/Instrucciones/Funcion.ts","./src/Clases/TablaSimbolos/Simbolos.ts","./src/Clases/Controlador.ts","./src/Clases/Expreciones/Operaciones/Aritmetica.ts","./src/Clases/Instrucciones/Print.ts","./src/Clases/TablaSimbolos/Tipo.ts","./src/clases/GeneradorC3D/GeneradorC3D.ts","./src/Analizadores/gramatica.js","./src/clases/Controlador.ts","./src/Clases/Expreciones/Primitivo.ts","./src/Clases/Expreciones/retorno.ts","./src/Clases/Expreciones/last.ts","./src/clases/GeneradorC3D/Nativas.ts","./src/Clases/Expreciones/Ternario.ts","./src/Clases/Instrucciones/SentenciaCiclos/For.ts","./src/Clases/Instrucciones/SentenciaTransferencia/retornar.ts","./src/Clases/Expreciones/Operaciones/Operaciones.ts","./src/Clases/Instrucciones/SentenciaTransferencia/continuar.ts","./src/Clases/AST/ListaError.ts","./src/clases/TablaSimbolos/ambito.ts","./src/main.ts","./src/Clases/Instrucciones/Declaracion.ts","./src/Clases/AST/Errores.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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C9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;;AAEb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC;AACjC,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL,qDAAqD;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,UAAU,wBAAwB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,yBAAyB,cAAc,yCAAyC;AAChF;AACA,qCAAqC,cAAc,0CAA0C,W;AAC7F;AACA,qCAAqC,cAAc,0CAA0C,W;AAC7F;AACA,sCAAsC,cAAc,0CAA0C,W;AAC9F;AACA,uCAAuC,cAAc,0CAA0C,W;AAC/F;AACA,uCAAuC,cAAc,0CAA0C,W;AAC/F;AACA;AACA;AACA;AACA;AACA,+BAA+B,yCAAyC;AACxE;AACA,6CAA6C,cAAc,0CAA0C,W;AACrG;AACA;AACA;AACA;AACA;AACA,iE;;AAEA;AACA;AACA,CAAC;AACD,gLAAgL,aAAa,cAAc,eAAe,eAAe;AACzO,aAAa,MAAM,4DAA4D,YAAY;AAC3F,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,CAAC;;;AAGD,IAAI,IAAgE;AACpE;AACA;AACA,6BAA6B,wEAAwE;AACrG;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,WAAI,eAAe,mBAAO,CAAC,aAAM;AAC1D;AACA;AACA,IAAI,KAA6B,IAAI,4C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A6B,gBAAgB,kCAAkC,0BAA0B,MAAM,eAAe,QAAQ,4BAA4B,qBAAqB,GAAG,mBAAmB,EAAE,SAAS,EAAE,wCAAwC,eAAe,mBAAmB,EAAE,qBAAqB,8BAA8B,UAAU,gBAAgB,gBAAgB,eAAe,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;AACrnB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+DAA+D;AAC/D;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,qCAAqC;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gEAAgE;AAChE,4BAA4B;AAC5B;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,wBAAwB,mBAAO,EAAE,oCAAwB;AACzD,uBAAuB,mBAAO,EAAE,kCAAsB;AACtD,iBAAiB,mBAAO,CAAC,+BAAmB;AAC5C,cAAc,SAAS,EAAE,mBAAO,EAAE,sCAA0B;AAC5D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC;AACjC,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL,qDAAqD;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,UAAU,wBAAwB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,yBAAyB,cAAc,yCAAyC;AAChF;AACA,qCAAqC,cAAc,0CAA0C,W;AAC7F;AACA,sCAAsC,cAAc,0CAA0C,W;AAC9F;AACA,uCAAuC,cAAc,0CAA0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A;AACA;AACA,kBAAkB,qB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mB;AACpB;AACA;AACA,e;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,yF;AACA;AACA;AACA,CAAC;AACD,SAAS,mEAAmE,EAAE,MAAM,EAAE,qEAAqE,eAAe,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,sFAAsF,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,eAAe,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,eAAe,UAAU,EAAE,UAAU,gBAAgB,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,wLAAwL,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,gBAAgB,UAAU,EAAE,SAAS,EAAE,wLAAwL,cAAc,kLAAkL,gBAAgB,2FAA2F,GAAG,mJAAmJ,EAAE,yIAAyI,EAAE,UAAU,EAAE,iFAAiF,EAAE,WAAW,0DAA0D,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,cAAc,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,wBAAwB,EAAE,qBAAqB,EAAE,UAAU,EAAE,UAAU,EAAE,qBAAqB,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,yLAAyL,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,+MAA+M,eAAe,2FAA2F,GAAG,mLAAmL,EAAE,mLAAmL,EAAE,mLAAmL,EAAE,mLAAmL,EAAE,mLAAmL,EAAE,mLAAmL,EAAE,mLAAmL,EAAE,mLAAmL,EAAE,mLAAmL,EAAE,mLAAmL,EAAE,mLAAmL,EAAE,mLAAmL,EAAE,mLAAmL,gBAAgB,WAAW,6BAA6B,WAAW,GAAG,qBAAqB,8BAA8B,WAAW,EAAE,2BAA2B,EAAE,yIAAyI,EAAE,kFAAkF,EAAE,WAAW,EAAE,kFAAkF,EAAE,UAAU,4FAA4F,UAAU,EAAE,kFAAkF,EAAE,sBAAsB,EAAE,UAAU,EAAE,sBAAsB,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,yLAAyL,EAAE,6LAA6L,EAAE,yLAAyL,EAAE,yLAAyL,EAAE,WAAW,EAAE,iEAAiE,cAAc,sBAAsB,kBAAkB,UAAU,EAAE,UAAU,gBAAgB,mCAAmC,iBAAiB,mCAAmC,iBAAiB,mCAAmC,iBAAiB,mCAAmC,iBAAiB,qBAAqB,iBAAiB,qBAAqB,yKAAyK,6EAA6E,4HAA4H,oFAAoF,iBAAiB,mCAAmC,iBAAiB,mCAAmC,GAAG,2BAA2B,EAAE,kFAAkF,8BAA8B,2BAA2B,gBAAgB,kFAAkF,EAAE,kFAAkF,gBAAgB,kFAAkF,EAAE,kFAAkF,EAAE,kFAAkF,EAAE,kFAAkF,EAAE,kFAAkF,EAAE,kFAAkF,EAAE,kFAAkF,EAAE,kFAAkF,EAAE,kFAAkF,EAAE,kFAAkF,EAAE,kFAAkF,EAAE,kFAAkF,EAAE,kFAAkF,iBAAiB,kFAAkF,EAAE,mHAAmH,iCAAiC,mHAAmH,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,cAAc,kLAAkL,gBAAgB,6LAA6L,EAAE,6LAA6L,EAAE,yLAAyL,EAAE,uEAAuE,iBAAiB,UAAU,EAAE,UAAU,gBAAgB,mHAAmH,gBAAgB,mHAAmH,EAAE,mHAAmH,gBAAgB,wBAAwB,iBAAiB,wBAAwB,+GAA+G,wFAAwF,+DAA+D,gGAAgG,iBAAiB,wCAAwC,iBAAiB,wCAAwC,iBAAiB,wCAAwC,iBAAiB,wCAAwC,iBAAiB,wCAAwC,iBAAiB,wCAAwC,GAAG,mHAAmH,+BAA+B,WAAW,EAAE,UAAU,EAAE,WAAW,6BAA6B,6LAA6L,gBAAgB,WAAW,gBAAgB,WAAW,4DAA4D,UAAU,gBAAgB,UAAU,gBAAgB,kFAAkF,EAAE,yLAAyL,eAAe,WAAW,iBAAiB,wGAAwG,iBAAiB,kLAAkL;AAC1tY,iBAAiB,yLAAyL;AAC1M;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAO,CAAC,+BAAmB;AAC/C,sBAAsB,mBAAO,CAAC,0DAA8C;AAC5E,uBAAuB,mBAAO,CAAC,0DAA8C;AAC7E,mBAAmB,mBAAO,CAAC,uDAA2C;AACtE,sBAAsB,mBAAO,CAAC,6CAAiC;;AAE/D,yBAAyB,mBAAO,CAAC,iDAAqC;AACtE,gBAAgB,mBAAO,CAAC,wCAA4B;AACpD,qBAAqB,mBAAO,EAAE,4CAAgC;AAC9D,oBAAoB,mBAAO,CAAC,4CAAgC;AAC5D,eAAe,mBAAO,CAAC,+BAAmB;AAC1C,wBAAwB,mBAAO,EAAE,iDAAqC;AACtE,uBAAuB,mBAAO,EAAE,gDAAoC;AACpE,oBAAoB,mBAAO,EAAE,6CAAiC;AAC9D,oBAAoB,mBAAO,EAAE,6CAAiC;AAC9D,qBAAqB,mBAAO,EAAE,8CAAkC;AAChE,kBAAkB,mBAAO,EAAE,2CAA+B;AAC1D,gBAAgB,mBAAO,EAAE,0DAA8C;AACvE,kBAAkB,mBAAO,EAAE,2DAA+C;AAC1E,mBAAmB,mBAAO,EAAE,6DAAiD;AAC7E,eAAe,mBAAO,EAAE,yDAA6C;AACrE,mBAAmB,mBAAO,EAAE,8CAAkC;AAC9D,gBAAgB,mBAAO,EAAE,0CAA8B;AACvD,oBAAoB,mBAAO,EAAE,kEAAsD;AACnF,sBAAsB,mBAAO,EAAE,sEAA0D;AACzF,qBAAqB,mBAAO,EAAE,qEAAyD;AACvF,eAAe,mBAAO,EAAE,yDAA6C;AACrE,eAAe,mBAAO,EAAE,yDAA6C;AACrE,kBAAkB,mBAAO,EAAE,oCAAwB;AACnD,sBAAsB,mBAAO,EAAE,wCAA4B;AAC3D,wBAAwB,mBAAO,EAAE,yCAA6B;AAC9D,iBAAiB,mBAAO,EAAE,kCAAsB;AAChD,2BAA2B,mBAAO,EAAE,4CAAgC;AACpE,4BAA4B,mBAAO,EAAE,6CAAiC;AACtE,sBAAsB,mBAAO,EAAE,wCAA4B;;AAE3D,qBAAqB,mBAAO,CAAC,wCAA4B;AACzD,sBAAsB,mBAAO,CAAC,0CAA8B;AAC5D,uBAAuB,mBAAO,CAAC,2CAA+B;AAC9D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC;AACjC,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL,qDAAqD;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,UAAU,wBAAwB;AAClC;AACA;AACA;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;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AAkC;AACnD;AACA;AACA;AACA,qBAAqB,IAAI;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mJAAmJ;AACnJ,SAAS;;AAET;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW,YAAY,IAAI,WAAW,SAAS;AACvE,cAAc,0BAA0B,EAAE;AAC1C,MAAM;AACN,WAAW,qNAAqN;AAChO,aAAa,4EAA4E;AACzF;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,mCAAmC,gB;AAC1D;AACA;AACA,uBAAuB;AACvB;AACA;AACA,mB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,mG;AACA;AACA;AACA,yG;AACA;AACA;AACA,yG;AACA;AACA;AACA,iB;AACA;AACA;AACA,a;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,4B;AACA;AACA;AACA,CAAC;AACD,SAAS,sBAAsB,EAAE,MAAM,EAAE,QAAQ,EAAE,0BAA0B,eAAe,OAAO,EAAE,QAAQ,EAAE,QAAQ,eAAe,wBAAwB,GAAG,oBAAoB,6BAA6B,mBAAmB,GAAG,UAAU,EAAE,UAAU,EAAE,6BAA6B,gBAAgB,UAAU,eAAe,SAAS,EAAE,cAAc,EAAE,sBAAsB,EAAE,QAAQ,uBAAuB,UAAU,EAAE,iBAAiB,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAC1f,iBAAiB,4CAA4C;AAC7D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wBAAwB,mBAAO,EAAE,oCAAwB;AACzD,uBAAuB,mBAAO,EAAE,kCAAsB;AACtD,iBAAiB,mBAAO,CAAC,+BAAmB;AAC5C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC;AACjC,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL,qDAAqD;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAA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QAAQ;QACJ,IAAI,KAAK,GAAG,IAAI,iDAAI,CAAC,aAAa,EAAC,EAAE,CAAC,CAAC;QACvC,OAAO,KAAK,CAAC;IACjB,CAAC;IACD,OAAO;IAEN,CAAC;CAEL;;;;;;;;;;;;AC5BD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,eAAe,kCAAkC;AACjD,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA,qBAAqB,IAAI;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mJAAmJ;AACnJ,SAAS;;AAET;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW,YAAY,IAAI,WAAW,SAAS;AACvE,cAAc,0BAA0B,EAAE;AAC1C,MAAM;AACN,WAAW,yoBAAyoB;AACppB,aAAa,wgBAAwgB;AACrhB;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,gB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0E;AACA;AACA;AACA,kD;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,wCAAwC;AACxC;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,qDAAqD;AACrD;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,yBAAyB;AACzB;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,yCAAyC;AACzC;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,gCAAgC;AAChC;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,4CAA4C,K;AAC5C;AACA;AACA,sCAAsC;AACtC;AACA;AACA,iBAAiB;AACjB;AACA;AACA,wBAAwB;AACxB;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,uBAAuB;AACvB;AACA;AACA,qCAAqC;AACrC;AACA;AACA,kDAAkD;AAClD;AACA;AACA,oDAAoD;AACpD;AACA;AACA,wDAAwD;AACxD;AACA;AACA,kDAAkD;AAClD;AACA;AACA,qDAAqD;AACrD;AACA;AACA,kDAAkD;AAClD;AACA;AACA,iDAAiD;AACjD;AACA;AACA,uDAAuD;AACvD;AACA;AACA,yDAAyD;AACzD;AACA;AACA,uDAAuD;AACvD;AACA;AACA,yDAAyD;AACzD;AACA;AACA,wDAAwD;AACxD;AACA;AACA,oDAAoD;AACpD;AACA;AACA,sDAAsD;AACtD;AACA;AACA,gCAAgC;AAChC;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2BAA2B,K;AAC3B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,iCAAiC;AACjC;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,iCAAiC,K;AACjC;AACA;AACA,CAAC;AACD,SAAS,kJAAkJ,EAAE,MAAM,EAAE,SAAS,EAAE,iBAAiB,cAAc,2IAA2I,GAAG,oJAAoJ,EAAE,0IAA0I,EAAE,UAAU,gBAAgB,UAAU,EAAE,UAAU,EAAE,aAAa,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,uBAAuB,EAAE,uBAAuB,EAAE,UAAU,EAAE,UAAU,EAAE,uBAAuB,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,2IAA2I,4BAA4B,UAAU,6BAA6B,UAAU,GAAG,oBAAoB,6BAA6B,UAAU,EAAE,2BAA2B,EAAE,UAAU,EAAE,oBAAoB,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,2BAA2B,EAAE,8DAA8D,8BAA8B,2BAA2B,eAAe,UAAU,EAAE,UAAU,eAAe,wGAAwG,EAAE,8DAA8D,sFAAsF,UAAU,gBAAgB,UAAU,gBAAgB,8DAA8D,EAAE,8DAA8D,EAAE,8DAA8D,EAAE,8DAA8D,EAAE,8DAA8D,EAAE,8DAA8D,EAAE,8DAA8D,EAAE,8DAA8D,EAAE,8DAA8D,EAAE,8DAA8D,EAAE,8DAA8D,EAAE,8DAA8D,EAAE,8DAA8D,8BAA8B,UAAU,eAAe,qBAAqB,gBAAgB,qBAAqB,iEAAiE,6EAA6E,oBAAoB,oFAAoF,gBAAgB,mCAAmC,gBAAgB,mCAAmC,gBAAgB,mCAAmC,gBAAgB,mCAAmC,gBAAgB,mCAAmC,gBAAgB,mCAAmC;AACvtG,iBAAiB,2LAA2L;AAC5M;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;;AAEb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC;AACjC,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL,qDAAqD;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,UAAU,wBAAwB;AAClC;AACA;AACA;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AA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AAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAC5B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACjC;IACL,CAAC;IAED;;;OAGG;IACI,OAAO,CAAC,IAAY;QACvB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC;YAC3B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;CACJ;;;;;;;;;;;;AC7UD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,eAAe,kCAAkC;AACjD,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA,qBAAqB,IAAI;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mJAAmJ;AACnJ,SAAS;;AAET;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW,YAAY,IAAI,WAAW,SAAS;AACvE,cAAc,0BAA0B,EAAE;AAC1C,MAAM;AACN,WAAW,6pBAA6pB;AACxqB,aAAa,4hBAA4hB;AACziB;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mB;AACrB;AACA;AACA,gB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,yF;AACA;AACA;AACA,CAAC;AACD,SAAS,kJAAkJ,EAAE,MAAM,EAAE,SAAS,EAAE,iBAAiB,cAAc,2IAA2I,GAAG,uJAAuJ,EAAE,0IAA0I,EAAE,UAAU,gBAAgB,UAAU,EAAE,UAAU,EAAE,aAAa,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,uBAAuB,EAAE,oBAAoB,EAAE,UAAU,EAAE,UAAU,EAAE,oBAAoB,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,2IAA2I,4BAA4B,UAAU,6BAA6B,OAAO,gBAAgB,UAAU,GAAG,oBAAoB,6BAA6B,UAAU,EAAE,2BAA2B,EAAE,UAAU,EAAE,oBAAoB,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,2BAA2B,EAAE,qEAAqE,8BAA8B,2BAA2B,eAAe,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,eAAe,qGAAqG,EAAE,qEAAqE,EAAE,qEAAqE,sFAAsF,UAAU,gBAAgB,UAAU,gBAAgB,qEAAqE,EAAE,qEAAqE,EAAE,qEAAqE,EAAE,qEAAqE,EAAE,qEAAqE,EAAE,qEAAqE,EAAE,qEAAqE,EAAE,qEAAqE,EAAE,qEAAqE,EAAE,qEAAqE,EAAE,qEAAqE,EAAE,qEAAqE,EAAE,qEAAqE,gBAAgB,qGAAqG,gBAAgB,UAAU,eAAe,qBAAqB,gBAAgB,qBAAqB,oEAAoE,6EAA6E,uBAAuB,oFAAoF,gBAAgB,mCAAmC,gBAAgB,mCAAmC,gBAAgB,mCAAmC,gBAAgB,mCAAmC,gBAAgB,mCAAmC,gBAAgB,mCAAmC;AAC1hH,iBAAiB,2LAA2L;AAC5M;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAO,CAAC,+BAAmB;AAC/C,sBAAsB,mBAAO,CAAC,0DAA8C;AAC5E,uBAAuB,mBAAO,CAAC,0DAA8C;AAC7E,mBAAmB,mBAAO,CAAC,uDAA2C;AACtE,sBAAsB,mBAAO,CAAC,6CAAiC;;AAE/D,yBAAyB,mBAAO,CAAC,iDAAqC;AACtE,gBAAgB,mBAAO,CAAC,wCAA4B;AACpD,qBAAqB,mBAAO,EAAE,4CAAgC;AAC9D,oBAAoB,mBAAO,CAAC,4CAAgC;AAC5D,eAAe,mBAAO,CAAC,+BAAmB;AAC1C,wBAAwB,mBAAO,EAAE,iDAAqC;AACtE,uBAAuB,mBAAO,EAAE,gDAAoC;AACpE,oBAAoB,mBAAO,EAAE,6CAAiC;AAC9D,oBAAoB,mBAAO,EAAE,6CAAiC;AAC9D,qBAAqB,mBAAO,EAAE,8CAAkC;AAChE,kBAAkB,mBAAO,EAAE,2CAA+B;AAC1D,gBAAgB,mBAAO,EAAE,0DAA8C;AACvE,kBAAkB,mBAAO,EAAE,2DAA+C;AAC1E,mBAAmB,mBAAO,EAAE,6DAAiD;AAC7E,eAAe,mBAAO,EAAE,yDAA6C;AACrE,mBAAmB,mBAAO,EAAE,8CAAkC;AAC9D,gBAAgB,mBAAO,EAAE,0CAA8B;AACvD,oBAAoB,mBAAO,EAAE,kEAAsD;AACnF,sBAAsB,mBAAO,EAAE,sEAA0D;AACzF,qBAAqB,mBAAO,EAAE,qEAAyD;AACvF,eAAe,mBAAO,EAAE,yDAA6C;AACrE,eAAe,mBAAO,EAAE,yDAA6C;AACrE,kBAAkB,mBAAO,EAAE,oCAAwB;AACnD,sBAAsB,mBAAO,EAAE,wCAA4B;AAC3D,wBAAwB,mBAAO,EAAE,yCAA6B;AAC9D,iBAAiB,mBAAO,EAAE,kCAAsB;AAChD,2BAA2B,mBAAO,EAAE,4CAAgC;AACpE,4BAA4B,mBAAO,EAAE,6CAAiC;AACtE,sBAAsB,mBAAO,EAAE,wCAA4B;AAC3D,gBAAgB,mBAAO,EAAE,kCAAsB;AAC/C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC;AACjC,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL,qDAAqD;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,UAAU,wBAAwB;AAClC;AACA;AACA;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,gDAAgD;AAChD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,iDAAiD;AACjD;AACA,oDAAoD;AACpD;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,CAAC;AACD;AACA,aAAa,WAAW;AACxB,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,CAAC;;;AAGD,IAAI,IAAgE;AACpE;AACA;AACA,6BAA6B,oDAAoD;AACjF;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,WAAI,eAAe,mBAAO,CAAC,aAAM;AAC1D;AACA;AACA,IAAI,KAA6B,IAAI,4CAAY;AACjD;AACA;AACA,C;;;;;;;;;;;;;ACr1BA;AAAA;AAAA;AAA2D;AAI5C,MAAM,WAAW;IAe5B;QACI,IA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","file":"main-es2015.js","sourcesContent":["import { TOUCH_BUFFER_MS } from \"@angular/cdk/a11y\";\r\nimport Errores from \"../AST/Errores\";\r\nimport Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport { Expreciones } from \"../Interfaces.ts/Expreciones\";\r\nimport { Instruccion } from \"../Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\nimport { tipo } from \"../TablaSimbolos/Tipo\";\r\nimport Declaracion from \"./Declaracion\";\r\nimport Funcion from \"./Funcion\";\r\nimport Detener from \"./SentenciaTransferencia/Break\";\r\nimport Continuar from \"./SentenciaTransferencia/continuar\";\r\nimport retornar from \"./SentenciaTransferencia/retornar\";\r\n\r\n\r\nexport default class Llamada implements Instruccion, Expreciones{\r\n\r\n    public identificador : string;\r\n    public parametros : Array<Expreciones>;\r\n    public linea : number;\r\n    public columna : number;\r\n\r\n    lblTrue: string;\r\n    lblFalse: string;\r\n    constructor(id, param, linea, col) {\r\n        this.identificador = id;\r\n        this.parametros = param;\r\n        this.columna = col;\r\n        this.linea = linea;\r\n    }\r\n    limpiar() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getvalor3d(controlador: Controlador, ts: TablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    \r\n\r\n    getTipo(controlador: Controlador, ts: TablaSimbolos) {\r\n        let valor = this.getValor(controlador,ts);\r\n        \r\n        if(typeof valor == 'number'){\r\n            return tipo.DOBLE;\r\n        }else if(typeof valor == 'string'){\r\n            return tipo.CADENA;\r\n        }else if(typeof valor == 'boolean'){\r\n            return tipo.BOOLEANO;\r\n        }\r\n    }\r\n    getValor(controlador: Controlador, ts: TablaSimbolos) {\r\n      /*  if(ts.existe(this.identificador)){\r\n            let ts_local=new TablaSimbolos(ts);\r\n\r\n            let simbolo_funcion=ts.getSimbolo(this.identificador) as Funcion;\r\n            \r\n            if(this.asociacion(controlador,ts_local,simbolo_funcion,ts)){\r\n                let r=simbolo_funcion.ejecutar(controlador,ts_local);\r\n                controlador.ambito=\"Funcion: \\n\"+this.identificador;\r\n                controlador.graficarEntornos(controlador,ts_local,\"\");\r\n                if(r instanceof Detener || r instanceof Continuar){\r\n                    let error = new Errores('Semantico', `Break y Continue solo son para ciclos`, this.linea, this.columna);\r\n                    controlador.errores.push(error);\r\n                    controlador.append(`Error Semantico : Break y Continue solo son para ciclos. En la linea ${this.linea} y columan ${this.columna}`);\r\n                    return null;\r\n                }\r\n                if( r !=null){\r\n\r\n                    return r;\r\n                }\r\n            }\r\n\r\n        }else{\r\n            //Error semantico\r\n        } */\r\n    }\r\n    ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n       /* if(ts.existe(this.identificador)){\r\n            let ts_local=new TablaSimbolos(ts);\r\n\r\n            let simbolo_funcion=ts.getSimbolo(this.identificador) as Funcion;\r\n            \r\n            if(this.asociacion(controlador,ts_local,simbolo_funcion,ts)){\r\n                let r=simbolo_funcion.ejecutar(controlador,ts_local);\r\n                controlador.ambito=\"Funcion: \\n\"+this.identificador;\r\n                controlador.graficarEntornos(controlador,ts_local,\"\");\r\n                if(r instanceof Detener || r instanceof Continuar){\r\n                    let error = new Errores('Semantico', `Break y Continue solo son para ciclos`, this.linea, this.columna);\r\n                    controlador.errores.push(error);\r\n                    controlador.append(`Error Semantico : Break y Continue solo son para ciclos. En la linea ${this.linea} y columan ${this.columna}`);\r\n                \r\n                    return null;\r\n                }\r\n                if( r !=null){\r\n                    return r;\r\n                }\r\n            }\r\n\r\n        }else{\r\n            //Error semantico\r\n        }*/\r\n    }\r\n    recorrer(): Nodo {\r\n\r\n        let padre = new Nodo(\"Llamada\",\"\"); \r\n        padre.AddHijo(new Nodo(this.identificador,\"\"));\r\n        padre.AddHijo(new Nodo(\"(\",\"\"));\r\n\r\n        for(let x=0; x<this.parametros.length;x++){\r\n            let hijo = new Nodo(\"Exp\",\"\");\r\n            hijo.AddHijo(this.parametros[x].recorrer());\r\n            padre.AddHijo(hijo);\r\n        }\r\n        //TODO: AGREGAR NODOS HIJOS DE PARAMETROS\r\n        \r\n        padre.AddHijo(new Nodo(\")\",\"\"));\r\n        return padre;\r\n    }\r\n\r\n    asociacion(controlador: Controlador , ts: TablaSimbolos , simbolo_funcion: Funcion,ts_ant: TablaSimbolos){\r\n        if(this.parametros.length== simbolo_funcion.lista_params.length){\r\n            for(let x=0; x<this.parametros.length;x++){\r\n                let lista_simbolos = new Array();\r\n                lista_simbolos.push(simbolo_funcion.lista_params[x]);\r\n                let asignacion = new Declaracion(simbolo_funcion.lista_params[x].tipo,lista_simbolos,this.linea,this.columna) as Declaracion;\r\n                asignacion.ejecutar(controlador,ts);\r\n                ts.getSimbolo(simbolo_funcion.lista_params[x].identificador).setValor(this.parametros[x].getValor(controlador,ts_ant));\r\n            }\r\n            return true;\r\n        }else{\r\n            //Error semantico\r\n        }\r\n        return false;\r\n    }\r\n\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XmlReporteGramatica = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[5,8],$V2=[1,8],$V3=[11,12],$V4=[1,12],$V5=[9,11,12],$V6=[8,19];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"inicio\":3,\"raices\":4,\"EOF\":5,\"raiz\":6,\"objeto\":7,\"<\":8,\"ID\":9,\"latributos\":10,\"/\":11,\">\":12,\"texto_libre\":13,\"objetos\":14,\"atributos\":15,\"atributo\":16,\"=\":17,\"CADENA\":18,\"TEXTO\":19,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",8:\"<\",9:\"ID\",11:\"/\",12:\">\",17:\"=\",18:\"CADENA\",19:\"TEXTO\"},\r\nproductions_: [0,[3,2],[4,2],[4,1],[6,1],[7,5],[7,9],[7,9],[14,2],[14,1],[10,1],[10,0],[15,2],[15,1],[16,3],[13,2],[13,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\nthis.$ = \"inicio -> raices \\n\"+$$[$0-1];  return this.$; \r\nbreak;\r\ncase 2:\r\n this.$ = 'raices -> raices raiz; \\n'+$$[$0-1]+$$[$0];\r\nbreak;\r\ncase 3:\r\nthis.$ = 'raices -> raiz; \\n'+$$[$0]; \r\nbreak;\r\ncase 4:\r\n this.$= 'raiz -> objeto; \\n'+$$[$0]; \r\nbreak;\r\ncase 5:\r\n this.$ = 'objeto -> < ID latributos / >; \\n'+$$[$0-2];\r\nbreak;\r\ncase 6:\r\n this.$ = 'objeto -> < ID latributos >  texto_libre  < / ID >; \\n'+$$[$0-6]+$$[$0-4];\r\nbreak;\r\ncase 7:\r\nthis.$ ='objeto -> < ID latributos >  objetos </ID >; \\n'+$$[$0-6]+$$[$0-4];\r\nbreak;\r\ncase 8:\r\n this.$ = 'objetos -> objetos objeto; \\n'+$$[$0-1]+$$[$0];\r\nbreak;\r\ncase 9:\r\n this.$ = 'raiz -> objeto; \\n'+$$[$0];\r\nbreak;\r\ncase 10:\r\n this.$ = 'latributos -> atributos; \\n'+$$[$0];\r\nbreak;\r\ncase 11:\r\n this.$= 'latributos -> []; \\n';\r\nbreak;\r\ncase 12:\r\n this.$ = 'atributos -> atributos atributo; \\n'+$$[$0-1]+$$[$0];\r\nbreak;\r\ncase 13:\r\n this.$ = 'atributos -> atributo; \\n'+$$[$0];\r\nbreak;\r\ncase 14:\r\n this.$ = 'atributo -> ID = CADENA; \\n';\r\nbreak;\r\ncase 15:\r\n this.$ = 'texto_libre -> texto_libre TEXTO; \\n'+$$[$0-1]; \r\nbreak;\r\ncase 16:\r\n this.$ = 'texto_libre -> TEXTO; \\n';\r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,6:3,7:4,8:$V0},{1:[3]},{5:[1,6],6:7,7:4,8:$V0},o($V1,[2,3]),o($V1,[2,4]),{9:$V2},{1:[2,1]},o($V1,[2,2]),o($V3,[2,11],{10:9,15:10,16:11,9:$V4}),{11:[1,13],12:[1,14]},o($V3,[2,10],{16:15,9:$V4}),o($V5,[2,13]),{17:[1,16]},{12:[1,17]},{7:21,8:$V0,13:18,14:19,19:[1,20]},o($V5,[2,12]),{18:[1,22]},o($V1,[2,5]),{8:[1,23],19:[1,24]},{7:26,8:[1,25]},o($V6,[2,16]),{8:[2,9]},o($V5,[2,14]),{11:[1,27]},o($V6,[2,15]),{9:$V2,11:[1,28]},{8:[2,8]},{9:[1,29]},{9:[1,30]},{12:[1,31]},{12:[1,32]},o($V1,[2,6]),o($V1,[2,7])],\r\ndefaultActions: {6:[2,1],21:[2,9],26:[2,8]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n    let $ESPACIOS = \"\";\r\n\r\n     \r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* Ignoro los comentarios simples */\r\nbreak;\r\ncase 1:/* skip whitespace */\r\nbreak;\r\ncase 2: console.log(\"Reconocio : \"+ yy_.yytext); return 18\r\nbreak;\r\ncase 3: console.log(\"Reconocio : \"+ yy_.yytext); return 9\r\nbreak;\r\ncase 4: console.log(\"Reconocio : \"+ yy_.yytext); return 8\r\nbreak;\r\ncase 5: console.log(\"Reconocio : \"+ yy_.yytext); return 17\r\nbreak;\r\ncase 6: console.log(\"Reconocio : \"+ yy_.yytext); return 11\r\nbreak;\r\ncase 7: this.begin(\"S1\"); $ESPACIOS=\"\"; console.log(\"Reconocio : \"+ yy_.yytext); return \">\";\r\nbreak;\r\ncase 8: yy_.yytext = $ESPACIOS + \"<\"; $ESPACIOS=\"\";  console.log(\"Reconocio : \"+ yy_.yytext); return 19; \r\nbreak;\r\ncase 9: yy_.yytext = $ESPACIOS + \">\"; $ESPACIOS=\"\";  console.log(\"Reconocio : \"+ yy_.yytext); return 19; \r\nbreak;\r\ncase 10: yy_.yytext = $ESPACIOS + \"&\"; $ESPACIOS=\"\";  console.log(\"Reconocio : \"+ yy_.yytext); return 19; \r\nbreak;\r\ncase 11: yy_.yytext = $ESPACIOS + \"\\'\"; $ESPACIOS=\"\";  console.log(\"Reconocio : \"+ yy_.yytext); return 19; \r\nbreak;\r\ncase 12: yy_.yytext = $ESPACIOS + \"\\\"\"; $ESPACIOS=\"\";  console.log(\"Reconocio : \"+ yy_.yytext); return 19; \r\nbreak;\r\ncase 13:  /* Ignoro los comentarios simples */\r\nbreak;\r\ncase 14: $ESPACIOS += yy.lexer.match;\r\nbreak;\r\ncase 15: this.begin(\"INITIAL\"); console.log(\"Reconocio : \"+ yy_.yytext); return \"<\";\r\nbreak;\r\ncase 16: yy_.yytext = $ESPACIOS + yy_.yytext; $ESPACIOS=\"\";  console.log(\"Reconocio : \"+ yy_.yytext); return 19; \r\nbreak;\r\ncase 17:return 5\r\nbreak;\r\ncase 18: console.log(\"Error Lexico \"+yy_.yytext\r\n                        +\" linea \"+yy_.yylineno\r\n                        +\" columna \"+(yy_.yylloc.last_column+1));        \r\n                        \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:<!--(.|\\n)*-->)/i,/^(?:\\s+)/i,/^(?:((\"((\\\\([\\'\\\"\\\\ntr]))|([^\\\"\\\\]+))*\")))/i,/^(?:([a-zñA-ZÑ_][a-zñA-ZÑ0-9_]*))/i,/^(?:<)/i,/^(?:=)/i,/^(?:\\/)/i,/^(?:>)/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:<!--(.|\\n)*-->)/i,/^(?:\\s)/i,/^(?:<)/i,/^(?:.)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"S1\":{\"rules\":[0,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,13,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = XmlReporteGramatica;\r\nexports.Parser = XmlReporteGramatica.Parser;\r\nexports.parse = function () { return XmlReporteGramatica.parse.apply(XmlReporteGramatica, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import * as xpath from \"../Analizadores/gramatica\"\r\nimport * as xml from \"../Analizadores/XML\";\r\nimport * as xmlDes from \"../Analizadores/XMLDescendente\";\r\nimport * as xquery from \"../Analizadores/XQuery\";\r\nimport Controlador from \"./Controlador\";\r\nimport { TablaSimbolos } from \"./TablaSimbolos/TablaSimbolos\";\r\nimport { GeneradorC3D } from '../clases/GeneradorC3D/GeneradorC3D';\r\nimport Errores from \"./AST/Errores\";\r\nexport let errorLex: Errores[] = []\r\n\r\n\r\n\r\n\r\n/* let error_html = controlador.graficar_Semantico (controlador,ts_globla);  Metodos para lo errores*/  \r\nexport class Analizador {\r\n    public ejecutar(entradaxml:string,entradaxpath:string):any {\r\n        console.log(\"vamos a analizar la entrada\");\r\n            //Ejecutar xml \r\n            let astxml= xml.parse(entradaxml);\r\n            let controlador = new Controlador();\r\n            let ts_globla =new TablaSimbolos(null,\"Global\");\r\n\r\n            console.log(errorLex);\r\n\r\n            astxml.ejecutar(controlador,ts_globla);   \r\n            \r\n            //Ejecutar xpath\r\n            if(entradaxpath.length>0){\r\n                let astxpaht=xpath.parse(entradaxpath);\r\n                console.log(astxpaht);\r\n                astxml.ejecutarXPath(controlador,ts_globla,astxpaht);\r\n            }\r\n            \r\n            let ts_html =controlador.graficar_ts(controlador,ts_globla);\r\n            let retorno = {\"ts\": ts_html ,\"consola\":controlador.consola };\r\n           \r\n            return retorno;\r\n        \r\n    }\r\n    \r\n    public ejecutarXquery(entradaxml:string,entradaxpath:string):any {\r\n        let controlador;\r\n        let ts_globla;\r\n        if(entradaxml.length>0){\r\n            let astxml= xml.parse(entradaxml);\r\n            controlador = new Controlador();\r\n            ts_globla =new TablaSimbolos(null,\"Global\");\r\n            astxml.ejecutar(controlador,ts_globla);   \r\n        }\r\n\r\n        if(entradaxpath.length>0){\r\n           let astxquery=xquery.parse(entradaxpath);\r\n           astxquery.ejecutarXQuery(controlador,ts_globla);\r\n           console.log(astxquery);\r\n        }\r\n        let ts_html =controlador.graficar_ts(controlador,ts_globla);\r\n        let retorno = {\"ts\": ts_html ,\"consola\":controlador.consola };\r\n        return retorno;\r\n        //x.ejecutarX(controlador,ts_for);\r\n\r\n    }\r\n\r\n    public ejecutarDes(entradaxml:string,entradaxpath:string):any {\r\n        console.log(\"vamos a analizar la entrada\");\r\n            //Ejecutar xml \r\n            let astxml= xmlDes.parse(entradaxml);\r\n            let controlador = new Controlador();\r\n            let ts_globla =new TablaSimbolos(null,\"Global\");\r\n            astxml.ejecutarDescendente(controlador,ts_globla);\r\n            \r\n            //Ejecutar xpath\r\n            if(entradaxpath.length>0){\r\n                let astxpaht=xpath.parse(entradaxpath);\r\n                astxml.ejecutarXPath(controlador,ts_globla,astxpaht);\r\n            }\r\n           // console.log(\"aa\");\r\n            let ts_html =controlador.graficar_ts(controlador,ts_globla);\r\n            let retorno = {\"ts\": ts_html ,\"consola\":controlador.consola };\r\n           \r\n            return retorno;\r\n        \r\n    }\r\n\r\n    public traducirxml(entradaxml:string,entradaxpath:string){\r\n        let astxml=xml.parse(entradaxml);\r\n        let controlador = new Controlador();\r\n            let ts_globla =new TablaSimbolos(null,\"Global\");\r\n            controlador.generador.clearCode();\r\n            astxml.ejecutar(controlador,ts_globla);\r\n            if(entradaxpath.length>0){\r\n                let astxpaht=xpath.parse(entradaxpath);\r\n                astxml.ejecutarXPath(controlador,ts_globla,astxpaht);\r\n            }    \r\n\r\n            let ts_html =controlador.graficar_ts(controlador,ts_globla);\r\n            let retorno = {\"ts\": ts_html ,\"consola\":controlador.generador.getCode() };\r\n            return retorno;\r\n    }\r\n\r\n    public traducirXquery(entradaxml:string,entradaxpath:string){\r\n        let controlador;\r\n        let ts_globla;\r\n        if(entradaxml.length>0){\r\n            let astxml= xml.parse(entradaxml);\r\n            controlador = new Controlador();\r\n            ts_globla =new TablaSimbolos(null,\"Global\");\r\n            controlador.generador.clearCode();\r\n            astxml.ejecutar(controlador,ts_globla);   \r\n        }\r\n\r\n        if(entradaxpath.length>0){\r\n           let astxquery=xquery.parse(entradaxpath);\r\n           astxquery.ejecutarXQuery(controlador,ts_globla);\r\n           console.log(astxquery);\r\n        }\r\n        let ts_html =controlador.graficar_ts(controlador,ts_globla);\r\n        let retorno = {\"ts\": ts_html ,\"consola\":controlador.generador.getCode() };\r\n        return retorno;\r\n    }\r\n    \r\n    public recorrer(input){\r\n\r\n        try {\r\n            let ast = xml.parse(input);\r\n            let nodo_ast = ast.recorrer();\r\n\r\n            return nodo_ast;\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n  \r\n\r\n    public recorrerDes(input){\r\n\r\n        try {\r\n            let ast = xmlDes.parse(input);\r\n            console.log(ast);\r\n            let nodo_ast = ast.recorrer();\r\n            return nodo_ast;\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    public recorrerDesxpath(input){\r\n\r\n        try {\r\n            let ast = xpath.parse(input);\r\n            console.log(ast);\r\n            console.log(ast);\r\n            let nodo_ast = ast.recorrer();\r\n            return nodo_ast;\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n}","import * as xpath from \"../Analizadores/gramatica\"\r\nimport * as xml from \"../Analizadores/XML\";\r\nimport * as xmlDes from \"../Analizadores/XMLDescendente\";\r\nimport * as xquery from \"../Analizadores/XQuery\";\r\nimport Controlador from \"./Controlador\";\r\nimport { TablaSimbolos } from \"./TablaSimbolos/TablaSimbolos\";\r\nimport { GeneradorC3D } from '../clases/GeneradorC3D/GeneradorC3D';\r\nimport Errores from \"./AST/Errores\";\r\nexport let errorLex: Errores[] = []\r\n\r\n\r\n\r\n\r\n/* let error_html = controlador.graficar_Semantico (controlador,ts_globla);  Metodos para lo errores*/  \r\nexport class Analizador {\r\n    public ejecutar(entradaxml:string,entradaxpath:string):any {\r\n        console.log(\"vamos a analizar la entrada\");\r\n            //Ejecutar xml \r\n            let astxml= xml.parse(entradaxml);\r\n            let controlador = new Controlador();\r\n            let ts_globla =new TablaSimbolos(null,\"Global\");\r\n\r\n            console.log(errorLex);\r\n\r\n            astxml.ejecutar(controlador,ts_globla);   \r\n            \r\n            //Ejecutar xpath\r\n            if(entradaxpath.length>0){\r\n                let astxpaht=xpath.parse(entradaxpath);\r\n                console.log(astxpaht);\r\n                astxml.ejecutarXPath(controlador,ts_globla,astxpaht);\r\n            }\r\n            \r\n            let ts_html =controlador.graficar_ts(controlador,ts_globla);\r\n            let retorno = {\"ts\": ts_html ,\"consola\":controlador.consola };\r\n           \r\n            return retorno;\r\n        \r\n    }\r\n    \r\n    public ejecutarXquery(entradaxml:string,entradaxpath:string):any {\r\n        let controlador;\r\n        let ts_globla;\r\n        if(entradaxml.length>0){\r\n            let astxml= xml.parse(entradaxml);\r\n            controlador = new Controlador();\r\n            ts_globla =new TablaSimbolos(null,\"Global\");\r\n            astxml.ejecutar(controlador,ts_globla);   \r\n        }\r\n\r\n        if(entradaxpath.length>0){\r\n           let astxquery=xquery.parse(entradaxpath);\r\n           astxquery.ejecutarXQuery(controlador,ts_globla);\r\n           console.log(astxquery);\r\n        }\r\n        let ts_html =controlador.graficar_ts(controlador,ts_globla);\r\n        let retorno = {\"ts\": ts_html ,\"consola\":controlador.consola };\r\n        return retorno;\r\n        //x.ejecutarX(controlador,ts_for);\r\n\r\n    }\r\n\r\n    public ejecutarDes(entradaxml:string,entradaxpath:string):any {\r\n        console.log(\"vamos a analizar la entrada\");\r\n            //Ejecutar xml \r\n            let astxml= xmlDes.parse(entradaxml);\r\n            let controlador = new Controlador();\r\n            let ts_globla =new TablaSimbolos(null,\"Global\");\r\n            astxml.ejecutarDescendente(controlador,ts_globla);\r\n            \r\n            //Ejecutar xpath\r\n            if(entradaxpath.length>0){\r\n                let astxpaht=xpath.parse(entradaxpath);\r\n                astxml.ejecutarXPath(controlador,ts_globla,astxpaht);\r\n            }\r\n           // console.log(\"aa\");\r\n            let ts_html =controlador.graficar_ts(controlador,ts_globla);\r\n            let retorno = {\"ts\": ts_html ,\"consola\":controlador.consola };\r\n           \r\n            return retorno;\r\n        \r\n    }\r\n\r\n    public traducirxml(entradaxml:string,entradaxpath:string){\r\n        let astxml=xml.parse(entradaxml);\r\n        let controlador = new Controlador();\r\n            let ts_globla =new TablaSimbolos(null,\"Global\");\r\n            controlador.generador.clearCode();\r\n            astxml.ejecutar(controlador,ts_globla);\r\n            if(entradaxpath.length>0){\r\n                let astxpaht=xpath.parse(entradaxpath);\r\n                astxml.ejecutarXPath(controlador,ts_globla,astxpaht);\r\n            }    \r\n\r\n            let ts_html =controlador.graficar_ts(controlador,ts_globla);\r\n            let retorno = {\"ts\": ts_html ,\"consola\":controlador.generador.getCode() };\r\n            return retorno;\r\n    }\r\n\r\n    public traducirXquery(entradaxml:string,entradaxpath:string){\r\n        let controlador;\r\n        let ts_globla;\r\n        if(entradaxml.length>0){\r\n            let astxml= xml.parse(entradaxml);\r\n            controlador = new Controlador();\r\n            ts_globla =new TablaSimbolos(null,\"Global\");\r\n            controlador.generador.clearCode();\r\n            astxml.ejecutar(controlador,ts_globla);   \r\n        }\r\n\r\n        if(entradaxpath.length>0){\r\n           let astxquery=xquery.parse(entradaxpath);\r\n           astxquery.ejecutarXQuery(controlador,ts_globla);\r\n           console.log(astxquery);\r\n        }\r\n        let ts_html =controlador.graficar_ts(controlador,ts_globla);\r\n        let retorno = {\"ts\": ts_html ,\"consola\":controlador.generador.getCode() };\r\n        return retorno;\r\n    }\r\n    \r\n    public recorrer(input){\r\n\r\n        try {\r\n            let ast = xml.parse(input);\r\n            let nodo_ast = ast.recorrer();\r\n\r\n            return nodo_ast;\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n  \r\n\r\n    public recorrerDes(input){\r\n\r\n        try {\r\n            let ast = xmlDes.parse(input);\r\n            console.log(ast);\r\n            let nodo_ast = ast.recorrer();\r\n            return nodo_ast;\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    public recorrerDesxpath(input){\r\n\r\n        try {\r\n            let ast = xpath.parse(input);\r\n            console.log(ast);\r\n            console.log(ast);\r\n            let nodo_ast = ast.recorrer();\r\n            return nodo_ast;\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n}","/* (ignored) */","import Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport { Instruccion } from \"../Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\nimport Llamada from \"./Llamada\";\r\n\r\n\r\nexport default class Ejecutar implements Instruccion{\r\n\r\n\r\n    public llamada : Llamada;\r\n    public linea;\r\n    public column;\r\n    \r\n    constructor(llamada, linea, col) {\r\n        this.llamada = llamada;\r\n        this.linea = linea;\r\n        this.column = col;\r\n    }\r\n\r\n    ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n        this.llamada.ejecutar(controlador,ts);\r\n    }\r\n\r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"exec\",\"\"); \r\n        padre.AddHijo(new Nodo(this.llamada.identificador,\"\"));\r\n        padre.AddHijo(new Nodo(\"(\",\"\"));\r\n\r\n        for(let x=0; x<this.llamada.parametros.length;x++){\r\n            let hijo = new Nodo(\"Exp\",\"\");\r\n            hijo.AddHijo(this.llamada.parametros[x].recorrer());\r\n            padre.AddHijo(hijo);\r\n        }\r\n        //TODO: AGREGAR NODOS HIJOS DE PARAMETROS\r\n        //a\r\n        padre.AddHijo(new Nodo(\")\",\"\"));\r\n        return padre;\r\n    }\r\n\r\n}","/* (ignored) */","import { GeneradorC3D } from \"./GeneradorC3D\";\r\n\r\nexport class Nativas {\r\n\r\n    public generarNativas() {\r\n        this.nativa_print_str();\r\n        //this.nativa_print_integer();\r\n        this.nativa_compararIgual_str_str();\r\n       // this.nativa_compararNoIgual_str_str();\r\n        //this.nativa_ToUpperCase();\r\n        //this.nativa_ToLowerCase();\r\n        this.nativa_concat_str_str();\r\n     //this.nativa_concat_dbl_str();\r\n      //  this.nativa_concat_str_dbl();\r\n        this.nativa_concat_int_str();\r\n        this.nativa_concat_str_int();\r\n        //this.nativa_concat_str_bol();\r\n        // this.nativa_concat_bol_str();\r\n        //this.nativa_lenght_str();\r\n        return GeneradorC3D.getInstancia().getNativas();\r\n    }\r\n\r\n    nativa_lenght_str() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t0 = gen.newTemporal();\r\n        let t1 = gen.newTemporal();\r\n        let t2 = gen.newTemporal();\r\n        let t3 = gen.newTemporal();\r\n        let next = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_lenght_str');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t0, 'p', '1', '+');\r\n        gen.genGetStack(t1, t0);\r\n        gen.genAsignacion(t3, '0');\r\n        gen.genLabel(next);\r\n        gen.genGetHeap(t2, t1);\r\n        gen.genIf(t2, '-1', '==', fin);\r\n        gen.genExpresion(t3, t3, '1', '+');\r\n        gen.genExpresion(t1, t1, '1', '+');\r\n        gen.genGoto(next);\r\n        gen.genLabel(fin);\r\n        gen.genSetStack('p', t3);\r\n        gen.genCode('return;');\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t0);\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(t2);\r\n        gen.freeTemp(t3);\r\n    }\r\n\r\n    nativa_print_str() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t1 = gen.newTemporal();\r\n        let t2 = gen.newTemporal();\r\n        let next = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_print_str');\r\n        gen.isFunc = '\\t';\r\n        gen.genGetStack(t1, 'p');\r\n        gen.genLabel(next);\r\n        gen.genGetHeap(t2, t1);\r\n        gen.genIf(t2, '-1', '==', fin);\r\n        gen.genPrint('c', t2);\r\n        gen.genExpresion(t1, t1, '1', '+');\r\n        gen.genGoto(next);\r\n        gen.genLabel(fin);\r\n        gen.genCode('return;');\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(t2);\r\n    }\r\n    /*\r\n        nativa_print_integer() {\r\n            const gen = GeneradorC3D.getInstancia();\r\n            let t1 = gen.newTemporal();\r\n            let t2 = gen.newTemporal();\r\n            let t3 = gen.newTemporal();\r\n            let inicio = gen.newLabel();\r\n            let nextPos = gen.newLabel();\r\n            let nextPrt = gen.newLabel();\r\n            let fin = gen.newLabel();\r\n    \r\n            gen.genFuncion('nativa_print_integer');\r\n            gen.isFunc = '\\t';\r\n            gen.genGetStack(t1, 'p');\r\n            gen.genIf(t1, '0', '>=', inicio);\r\n            gen.genPrint('c', '45');\r\n            gen.genExpresion(t1, t1, '-1', '*');\r\n            gen.genLabel(inicio);\r\n            gen.genAsignacion(t3, 'p');\r\n            gen.genSetStack(t3, '-1');\r\n            gen.genExpresion(t3, t3, '1', '+');\r\n            gen.genLabel(nextPos);\r\n            gen.genIf(t1, '0', '==', nextPrt);\r\n            gen.genCode(`${t2} = fmod(${t1}, 10);`);\r\n            gen.genSetStack(t3, t2);\r\n            gen.genExpresion(t3, t3, '1', '+');\r\n            gen.genExpresion(t1, t1, '10', '/');\r\n            gen.genGoto(nextPos);\r\n            gen.genLabel(nextPrt);\r\n            gen.genExpresion(t3, t3, '1', '-');\r\n            gen.genGetStack(t1, t3);\r\n            gen.genIf(t1, '-1', '==', fin);\r\n            gen.genPrint('i', t1);\r\n            gen.genGoto(nextPrt);\r\n            gen.genLabel(fin);\r\n            gen.genCode('return;');\r\n            gen.genEndFuncion();\r\n            gen.isFunc = '';\r\n            gen.freeTemp(t1);\r\n            gen.freeTemp(t2);\r\n            gen.freeTemp(t3);\r\n        }*/\r\n\r\n    nativa_compararIgual_str_str() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t0 = gen.newTemporal();\r\n        let p1 = gen.newTemporal();\r\n        let p2 = gen.newTemporal();\r\n        let c1 = gen.newTemporal();\r\n        let c2 = gen.newTemporal();\r\n        let lblfalse = gen.newLabel();\r\n        let lbltrue = gen.newLabel();\r\n        let l2 = gen.newLabel();\r\n        let inicio = gen.newLabel();\r\n        let nextPos = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_compararIgual_str_str');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t0, 'p', '1', '+');\r\n        gen.genGetStack(p1, t0);\r\n        gen.genExpresion(t0, 'p', '2', '+');\r\n        gen.genGetStack(p2, t0);\r\n\r\n        gen.genIf(p1, '-1', '==', l2);\r\n        gen.genIf(p2, '-1', '==', lblfalse);\r\n        gen.genGoto(inicio);\r\n        gen.genLabel(l2);\r\n        gen.genIf(p2, '-1', '==', lbltrue);\r\n        gen.genGoto(lblfalse);\r\n\r\n        gen.genLabel(inicio);\r\n        gen.genGetHeap(c1, p1);\r\n        gen.genGetHeap(c2, p2);\r\n\r\n        gen.genLabel(nextPos);\r\n        gen.genIf(c1, c2, '!=', lblfalse);\r\n        gen.genIf(c1, '-1', '==', lbltrue);\r\n        gen.genExpresion(p1, p1, '1', '+');\r\n        gen.genExpresion(p2, p2, '1', '+');\r\n        gen.genGetHeap(c1, p1);\r\n        gen.genGetHeap(c2, p2);\r\n        gen.genGoto(nextPos);\r\n\r\n        gen.genLabel(lbltrue);\r\n        gen.genSetStack('p', '1');\r\n        gen.genGoto(fin);\r\n        gen.genLabel(lblfalse);\r\n        gen.genSetStack('p', '0');\r\n\r\n        gen.genLabel(fin);\r\n        gen.genCode('return;');\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(p1);\r\n        gen.freeTemp(p2);\r\n        gen.freeTemp(c1);\r\n        gen.freeTemp(c2);\r\n    }\r\n\r\n    nativa_compararNoIgual_str_str() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t1 = gen.newTemporal();\r\n        let p1 = gen.newTemporal();\r\n        let p2 = gen.newTemporal();\r\n        let c1 = gen.newTemporal();\r\n        let c2 = gen.newTemporal();\r\n        let lblfalse = gen.newLabel();\r\n        let lbltrue = gen.newLabel();\r\n        let l2 = gen.newLabel();\r\n        let inicio = gen.newLabel();\r\n        let nextPos = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_compararNoIgual_str_str');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t1, 'p', '1', '+');\r\n        gen.genGetStack(p1, t1);\r\n        gen.genExpresion(t1, 'p', '2', '+');\r\n        gen.genGetStack(p2, t1);\r\n\r\n        gen.genIf(p1, '-1', '==', l2);\r\n        gen.genIf(p2, '-1', '==', lbltrue);\r\n        gen.genGoto(inicio);\r\n        gen.genLabel(l2);\r\n        gen.genIf(p2, '-1', '==', lblfalse);\r\n        gen.genGoto(lbltrue);\r\n\r\n        gen.genLabel(inicio);\r\n        gen.genGetHeap(c1, p1);\r\n        gen.genGetHeap(c2, p2);\r\n\r\n        gen.genLabel(nextPos);\r\n        gen.genIf(c1, c2, '!=', lbltrue);\r\n        gen.genIf(c1, '-1', '==', lblfalse);\r\n        gen.genExpresion(p1, p1, '1', '+');\r\n        gen.genExpresion(p2, p2, '1', '+');\r\n        gen.genGetHeap(c1, p1);\r\n        gen.genGetHeap(c2, p2);\r\n        gen.genGoto(nextPos);\r\n\r\n        gen.genLabel(lbltrue);\r\n        gen.genSetStack('p', '1');\r\n        gen.genGoto(fin);\r\n        gen.genLabel(lblfalse);\r\n        gen.genSetStack('p', '0');\r\n\r\n        gen.genLabel(fin);\r\n        gen.genCode('return;');\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(p1);\r\n        gen.freeTemp(p2);\r\n        gen.freeTemp(c1);\r\n        gen.freeTemp(c2);\r\n    }\r\n\r\n    nativa_ToUpperCase() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t1 = gen.newTemporal();\r\n        let t2 = gen.newTemporal();\r\n        let t3 = gen.newTemporal();\r\n        let t4 = gen.newTemporal();\r\n        let nextPos = gen.newLabel();\r\n        let setChar = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_ToUpperCase');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t1, 'p', '1', '+');\r\n        gen.genGetStack(t2, t1); // carga la referencia del string\r\n        gen.genAsignacion(t3, 'h');  // inicio de posicion vacia del heap\r\n\r\n        gen.genLabel(nextPos);\r\n        gen.genGetHeap(t4, t2);\r\n        gen.genIf(t4, '-1', '==', fin);\r\n        gen.genIf(t4, '97', '<', setChar);\r\n        gen.genIf(t4, '122', '>', setChar);\r\n        gen.genExpresion(t4, t4, '32', '-');\r\n\r\n        gen.genLabel(setChar);\r\n        gen.genSetHeap('h', t4);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(t2, t2, '1', '+');\r\n        gen.genGoto(nextPos);\r\n\r\n        gen.genLabel(fin);\r\n        gen.genSetHeap('h', '-1');\r\n        gen.avanzarHeap();\r\n        gen.genSetStack('p', t3);\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(t2);\r\n        gen.freeTemp(t3);\r\n        gen.freeTemp(t4);\r\n    }\r\n\r\n    nativa_ToLowerCase() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t1 = gen.newTemporal();\r\n        let t2 = gen.newTemporal();\r\n        let t3 = gen.newTemporal();\r\n        let t4 = gen.newTemporal();\r\n        let nextPos = gen.newLabel();\r\n        let setChar = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_ToLowerCase');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t1, 'p', '1', '+');\r\n        gen.genGetStack(t2, t1); // carga la referencia del string\r\n        gen.genAsignacion(t3, 'h');  // inicio de posicion vacia del heap\r\n\r\n        gen.genLabel(nextPos);\r\n        gen.genGetHeap(t4, t2);\r\n        gen.genIf(t4, '-1', '==', fin);\r\n        gen.genIf(t4, '65', '<', setChar);\r\n        gen.genIf(t4, '90', '>', setChar);\r\n        gen.genExpresion(t4, t4, '32', '+');\r\n\r\n        gen.genLabel(setChar);\r\n        gen.genSetHeap('h', t4);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(t2, t2, '1', '+');\r\n        gen.genGoto(nextPos);\r\n\r\n        gen.genLabel(fin);\r\n        gen.genSetHeap('h', '-1');\r\n        gen.avanzarHeap();\r\n        gen.genSetStack('p', t3);\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(t2);\r\n        gen.freeTemp(t3);\r\n        gen.freeTemp(t4);\r\n    }\r\n\r\n    nativa_concat_str_str() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t1 = gen.newTemporal();\r\n        let t2 = gen.newTemporal();\r\n        let p1 = gen.newTemporal();\r\n        let p2 = gen.newTemporal();\r\n        let str1 = gen.newLabel();\r\n        let str2 = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_concat_str_str');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t1, 'p', '1', '+');\r\n        gen.genGetStack(p1, t1);\r\n        gen.genExpresion(t1, 'p', '2', '+');\r\n        gen.genGetStack(p2, t1);\r\n\r\n        gen.genAsignacion(t1, 'h');\r\n        gen.genLabel(str1);\r\n        gen.genGetHeap(t2, p1);\r\n        gen.genIf(t2, '-1', '==', str2);\r\n        gen.genSetHeap('h', t2);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p1, p1, '1', '+');\r\n        gen.genGoto(str1);\r\n\r\n        gen.genLabel(str2);\r\n        gen.genGetHeap(t2, p2);\r\n        gen.genIf(t2, '-1', '==', fin);\r\n        gen.genSetHeap('h', t2);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p2, p2, '1', '+');\r\n        gen.genGoto(str2);\r\n\r\n        gen.genLabel(fin);\r\n        gen.genSetHeap('h', '-1');\r\n        gen.avanzarHeap();\r\n        gen.genSetStack('p', t1);\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(t2);\r\n        gen.freeTemp(p1);\r\n        gen.freeTemp(p2);\r\n    }\r\n\r\n    nativa_concat_int_str() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t0 = gen.newTemporal();\r\n        let t1 = gen.newTemporal();\r\n        let t2 = gen.newTemporal();\r\n        let p1 = gen.newTemporal();\r\n        let p2 = gen.newTemporal();\r\n        let inicio = gen.newLabel();\r\n        let nextPos = gen.newLabel();\r\n        let validar = gen.newLabel();\r\n        let str1 = gen.newLabel();\r\n        let str2 = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_concat_int_str');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t1, 'p', '1', '+');\r\n        gen.genGetStack(p1, t1);\r\n        gen.genExpresion(t1, 'p', '2', '+');\r\n        gen.genGetStack(p2, t1);\r\n\r\n        gen.genAsignacion(t0, 'h');\r\n\r\n        gen.genIf(p1, '0', '>=', inicio);\r\n        gen.genSetHeap('h', '45');\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p1, p1, '-1', '*');\r\n\r\n        gen.genLabel(inicio);\r\n        gen.genAsignacion(t1, '0');\r\n\r\n        gen.genLabel(nextPos);\r\n        gen.genIf(p1, '0', '==', validar);\r\n        gen.genExpresion(t1, t1, '10', '*');\r\n        gen.genCode(`${t2} = fmod(${p1}, 10);`);\r\n        //gen.genExpresion(t2, '(int)' + p1, '10', '%');\r\n        gen.genExpresion(t1, t1, t2, '+');\r\n        gen.genExpresion(p1, p1, '10', '/');\r\n        gen.genCode(p1 + ' = (int)' + p1 + ';');\r\n        gen.genGoto(nextPos);\r\n\r\n        gen.genLabel(validar);\r\n        gen.genIf(t1, '0', '!=', str1);\r\n        gen.genSetHeap('h', '48');\r\n        gen.avanzarHeap();\r\n\r\n        gen.genLabel(str1);\r\n        gen.genIf(t1, '0', '==', str2);\r\n        gen.genCode(`${t2} = fmod(${t1}, 10);`);\r\n        //gen.genExpresion(t2, '(int)' + t1, '10', '%');\r\n        gen.genExpresion(t2, t2, '48', '+');\r\n        gen.genSetHeap('h', t2);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(t1, t1, '10', '/');\r\n        gen.genCode(t1 + ' = (int)' + t1 + ';');\r\n        gen.genGoto(str1);\r\n\r\n        gen.genLabel(str2);\r\n        gen.genGetHeap(t2, p2);\r\n        gen.genIf(t2, '-1', '==', fin);\r\n        gen.genSetHeap('h', t2);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p2, p2, '1', '+');\r\n        gen.genGoto(str2);\r\n\r\n        gen.genLabel(fin);\r\n        gen.genSetHeap('h', '-1');\r\n        gen.avanzarHeap();\r\n        gen.genSetStack('p', t0);\r\n\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(t2);\r\n        gen.freeTemp(p1);\r\n        gen.freeTemp(p2);\r\n    }\r\n\r\n    nativa_concat_str_int() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t0 = gen.newTemporal();\r\n        let t1 = gen.newTemporal();\r\n        let t2 = gen.newTemporal();\r\n        let p1 = gen.newTemporal();\r\n        let p2 = gen.newTemporal();\r\n        let pre = gen.newLabel();\r\n        let inicio = gen.newLabel();\r\n        let nextPos = gen.newLabel();\r\n        let validar = gen.newLabel();\r\n        let str1 = gen.newLabel();\r\n        let str2 = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_concat_str_int');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t1, 'p', '1', '+');\r\n        gen.genGetStack(p1, t1);\r\n        gen.genExpresion(t1, 'p', '2', '+');\r\n        gen.genGetStack(p2, t1);\r\n\r\n        gen.genAsignacion(t0, 'h');\r\n\r\n        gen.genLabel(str2);\r\n        gen.genGetHeap(t2, p1);\r\n        gen.genIf(t2, '-1', '==', pre);\r\n        gen.genSetHeap('h', t2);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p1, p1, '1', '+');\r\n        gen.genGoto(str2);\r\n\r\n        gen.genLabel(pre);\r\n        gen.genIf(p2, '0', '>=', inicio);\r\n        gen.genSetHeap('h', '45');\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p2, p2, '-1', '*');\r\n\r\n        gen.genLabel(inicio);\r\n        gen.genAsignacion(t1, '0');\r\n\r\n\r\n        gen.genLabel(nextPos);\r\n        gen.genIf(p2, '0', '==', validar);\r\n        gen.genExpresion(t1, t1, '10', '*');\r\n        gen.genCode(`${t2} = fmod(${p2}, 10);`);\r\n        //gen.genExpresion(t2, '(int)' + p2, '10', '%');\r\n        gen.genExpresion(t1, t1, t2, '+');\r\n        gen.genExpresion(p2, p2, '10', '/');\r\n        gen.genCode(p2 + ' = (int)' + p2 + ';');\r\n        gen.genGoto(nextPos);\r\n\r\n        gen.genLabel(validar);\r\n        gen.genIf(t1, '0', '!=', str1);\r\n        gen.genSetHeap('h', '48');\r\n        gen.avanzarHeap();\r\n\r\n        gen.genLabel(str1);\r\n        gen.genIf(t1, '0', '==', fin);\r\n        gen.genCode(`${t2} = fmod(${t1}, 10);`);\r\n        //gen.genExpresion(t2, '(int)' + t1, '10', '%');\r\n        gen.genExpresion(t2, t2, '48', '+');\r\n        gen.genSetHeap('h', t2);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(t1, t1, '10', '/');\r\n        gen.genCode(t1 + ' = (int)' + t1 + ';');\r\n        gen.genGoto(str1);\r\n\r\n\r\n        gen.genLabel(fin);\r\n        gen.genSetHeap('h', '-1');\r\n        gen.avanzarHeap();\r\n        gen.genSetStack('p', t0);\r\n\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(t2);\r\n        gen.freeTemp(p1);\r\n        gen.freeTemp(p2);\r\n    }\r\n\r\n    nativa_concat_dbl_str() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t0 = gen.newTemporal();\r\n        let t1 = gen.newTemporal();\r\n        let t2 = gen.newTemporal();\r\n        let t3 = gen.newTemporal();\r\n        let t4 = gen.newTemporal();\r\n        let p1 = gen.newTemporal();\r\n        let p2 = gen.newTemporal();\r\n        let pre = gen.newLabel();\r\n        let inicio = gen.newLabel();\r\n        let nextPos = gen.newLabel();\r\n        let validar = gen.newLabel();\r\n        let str1 = gen.newLabel();\r\n        let strd = gen.newLabel();\r\n        let str2 = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_concat_dbl_str');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t1, 'p', '1', '+');\r\n        gen.genGetStack(p1, t1);\r\n        gen.genExpresion(t1, 'p', '2', '+');\r\n        gen.genGetStack(p2, t1);\r\n\r\n        gen.genAsignacion(t0, 'h');\r\n\r\n        gen.genIf(p1, '0', '>=', pre);\r\n        gen.genSetHeap('h', '45');\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p1, p1, '-1', '*');\r\n\r\n        gen.genLabel(pre);\r\n        gen.genCode(`${t1} = (int)${p1};`);\r\n        //gen.genCode(`${t2} = fmod(${p1}, 1);`);\r\n        gen.genAsignacion(t3, '0');\r\n\r\n        gen.genLabel(inicio);\r\n        gen.genIf(t1, '0', '==', validar);\r\n        gen.genExpresion(t3, t3, '10', '*');\r\n        gen.genCode(`${t2} = fmod(${t1}, 10);`);\r\n        gen.genExpresion(t3, t3, t2, '+');\r\n        gen.genExpresion(t1, t1, '10', '/');\r\n        gen.genCode(`${t1} = (int)${t1};`);\r\n        gen.genGoto(inicio);\r\n\r\n        gen.genLabel(validar);\r\n        gen.genIf(t3, '0', '!=', nextPos);\r\n        gen.genSetHeap('h', '48');\r\n        gen.avanzarHeap();\r\n\r\n        gen.genLabel(nextPos);\r\n        gen.genIf(t3, '0', '==', str1);\r\n        gen.genCode(`${t1} = fmod(${t3}, 10);`);\r\n        gen.genExpresion(t3, t3, '10', '/');\r\n        gen.genCode(`${t3} = (int)${t3};`);\r\n        gen.genExpresion(t2, t1, '48', '+');\r\n        gen.genSetHeap('h', t2);\r\n        gen.avanzarHeap();\r\n        gen.genGoto(nextPos);\r\n\r\n        gen.genLabel(str1);\r\n        gen.genSetHeap('h', '46');\r\n        gen.avanzarHeap();\r\n        gen.genAsignacion(t3, '0');\r\n        gen.genCode(`${t1} = fmod(${p1}, 1);`);\r\n\r\n        gen.genLabel(strd);\r\n        gen.genIf(t3, '3', '==', str2);\r\n        gen.genExpresion(t1, t1, '10', '*');\r\n        gen.genCode(`${t2} = fmod(${t1}, 10);`);\r\n        gen.genCode(`${t2} = (int)${t2};`);\r\n        gen.genExpresion(t4, t2, '48', '+');\r\n        gen.genSetHeap('h', t4);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(t3, t3, '1', '+');\r\n        gen.genGoto(strd);\r\n\r\n        gen.genLabel(str2);\r\n        gen.genGetHeap(t2, p2);\r\n        gen.genIf(t2, '-1', '==', fin);\r\n        gen.genSetHeap('h', t2);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p2, p2, '1', '+');\r\n        gen.genGoto(str2);\r\n\r\n        gen.genLabel(fin);\r\n        gen.genSetHeap('h', '-1');\r\n        gen.avanzarHeap();\r\n        gen.genSetStack('p', t0);\r\n\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(t2);\r\n        gen.freeTemp(t3);\r\n        gen.freeTemp(t4);\r\n        gen.freeTemp(p1);\r\n        gen.freeTemp(p2);\r\n    }\r\n\r\n    nativa_concat_str_dbl() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t0 = gen.newTemporal();\r\n        let t1 = gen.newTemporal();\r\n        let t2 = gen.newTemporal();\r\n        let t3 = gen.newTemporal();\r\n        let t4 = gen.newTemporal();\r\n        let p1 = gen.newTemporal();\r\n        let p2 = gen.newTemporal();\r\n        let pre = gen.newLabel();\r\n        let sig = gen.newLabel();\r\n        let inicio = gen.newLabel();\r\n        let nextPos = gen.newLabel();\r\n        let validar = gen.newLabel();\r\n        let str1 = gen.newLabel();\r\n        let strd = gen.newLabel();\r\n        let str2 = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_concat_str_dbl');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t1, 'p', '1', '+');\r\n        gen.genGetStack(p1, t1);\r\n        gen.genExpresion(t1, 'p', '2', '+');\r\n        gen.genGetStack(p2, t1);\r\n\r\n        gen.genAsignacion(t0, 'h');\r\n\r\n        gen.genLabel(str2);\r\n        gen.genGetHeap(t2, p1);\r\n        gen.genIf(t2, '-1', '==', sig);\r\n        gen.genSetHeap('h', t2);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p1, p1, '1', '+');\r\n        gen.genGoto(str2);\r\n\r\n        gen.genLabel(sig);\r\n        gen.genIf(p2, '0', '>=', pre);\r\n        gen.genSetHeap('h', '45');\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p2, p2, '-1', '*');\r\n\r\n        gen.genLabel(pre);\r\n        gen.genCode(`${t1} = (int)${p2};`);\r\n        //gen.genCode(`${t2} = fmod(${p2}, 1);`);\r\n        gen.genAsignacion(t3, '0');\r\n\r\n        gen.genLabel(inicio);\r\n        gen.genIf(t1, '0', '==', validar);\r\n        gen.genExpresion(t3, t3, '10', '*');\r\n        gen.genCode(`${t2} = fmod(${t1}, 10);`);\r\n        gen.genExpresion(t3, t3, t2, '+');\r\n        gen.genExpresion(t1, t1, '10', '/');\r\n        gen.genCode(`${t1} = (int)${t1};`);\r\n        gen.genGoto(inicio);\r\n\r\n        gen.genLabel(validar);\r\n        gen.genIf(t3, '0', '!=', nextPos);\r\n        gen.genSetHeap('h', '48');\r\n        gen.avanzarHeap();\r\n\r\n        gen.genLabel(nextPos);\r\n        gen.genIf(t3, '0', '==', str1);\r\n        gen.genCode(`${t1} = fmod(${t3}, 10);`);\r\n        gen.genExpresion(t3, t3, '10', '/');\r\n        gen.genCode(`${t3} = (int)${t3};`);\r\n        gen.genExpresion(t2, t1, '48', '+');\r\n        gen.genSetHeap('h', t2);\r\n        gen.avanzarHeap();\r\n        gen.genGoto(nextPos);\r\n\r\n        gen.genLabel(str1);\r\n        gen.genSetHeap('h', '46');\r\n        gen.avanzarHeap();\r\n        gen.genAsignacion(t3, '0');\r\n        gen.genCode(`${t1} = fmod(${p2}, 1);`);\r\n\r\n        gen.genLabel(strd);\r\n        gen.genIf(t3, '3', '==', fin);\r\n        gen.genExpresion(t1, t1, '10', '*');\r\n        gen.genCode(`${t2} = fmod(${t1}, 10);`);\r\n        gen.genCode(`${t2} = (int)${t2};`);\r\n        gen.genExpresion(t4, t2, '48', '+');\r\n        gen.genSetHeap('h', t4);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(t3, t3, '1', '+');\r\n        gen.genGoto(strd);\r\n\r\n        gen.genLabel(fin);\r\n        gen.genSetHeap('h', '-1');\r\n        gen.avanzarHeap();\r\n        gen.genSetStack('p', t0);\r\n\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(t2);\r\n        gen.freeTemp(t3);\r\n        gen.freeTemp(t4);\r\n        gen.freeTemp(p1);\r\n        gen.freeTemp(p2);\r\n    }\r\n\r\n    nativa_concat_str_bol() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t0 = gen.newTemporal();\r\n        let t1 = gen.newTemporal();\r\n        let p1 = gen.newTemporal();\r\n        let p2 = gen.newTemporal();\r\n        let str1 = gen.newLabel();\r\n        let bol = gen.newLabel();\r\n        let lblf = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_concat_str_bol');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t1, 'p', '1', '+');\r\n        gen.genGetStack(p1, t1);\r\n        gen.genExpresion(t1, 'p', '2', '+');\r\n        gen.genGetStack(p2, t1);\r\n\r\n        gen.genAsignacion(t0, 'h');\r\n\r\n        gen.genLabel(str1);\r\n        gen.genGetHeap(t1, p1);\r\n        gen.genIf(t1, '-1', '==', bol);\r\n        gen.genSetHeap('h', t1);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p1, p1, '1', '+');\r\n        gen.genGoto(str1);\r\n\r\n        gen.genLabel(bol);\r\n        gen.genIf(p2, '1', '!=', lblf);\r\n        gen.genSetHeap('h', '116');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '114');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '117');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '101');\r\n        gen.avanzarHeap();\r\n        gen.genGoto(fin);\r\n        gen.genLabel(lblf);\r\n        gen.genSetHeap('h', '102');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '97');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '108');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '115');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '101');\r\n        gen.avanzarHeap();\r\n\r\n        gen.genLabel(fin);\r\n        gen.genSetHeap('h', '-1');\r\n        gen.avanzarHeap();\r\n        gen.genSetStack('p', t0);\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(p1);\r\n        gen.freeTemp(p2);\r\n    }\r\n\r\n    nativa_concat_bol_str() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t0 = gen.newTemporal();\r\n        let t1 = gen.newTemporal();\r\n        let p1 = gen.newTemporal();\r\n        let p2 = gen.newTemporal();\r\n        let str2 = gen.newLabel();\r\n        let lblf = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_concat_bol_str');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t1, 'p', '1', '+');\r\n        gen.genGetStack(p1, t1);\r\n        gen.genExpresion(t1, 'p', '2', '+');\r\n        gen.genGetStack(p2, t1);\r\n\r\n        gen.genAsignacion(t0, 'h');\r\n\r\n        gen.genIf(p1, '1', '!=', lblf);\r\n        gen.genSetHeap('h', '116');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '114');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '117');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '101');\r\n        gen.avanzarHeap();\r\n        gen.genGoto(str2);\r\n        gen.genLabel(lblf);\r\n        gen.genSetHeap('h', '102');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '97');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '108');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '115');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '101');\r\n        gen.avanzarHeap();\r\n\r\n        gen.genLabel(str2);\r\n        gen.genGetHeap(t1, p2);\r\n        gen.genIf(t1, '-1', '==', fin);\r\n        gen.genSetHeap('h', t1);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p2, p2, '1', '+');\r\n        gen.genGoto(str2);\r\n\r\n        gen.genLabel(fin);\r\n        gen.genSetHeap('h', '-1');\r\n        gen.avanzarHeap();\r\n        gen.genSetStack('p', t0);\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(p1);\r\n        gen.freeTemp(p2);\r\n    }\r\n\r\n\r\n\r\n}","import Nodo from \"src/clases/AST/Nodo\";\r\nimport Controlador from \"src/clases/Controlador\";\r\nimport { Expreciones } from \"src/clases/Interfaces.ts/Expreciones\";\r\nimport { TablaSimbolos } from \"src/clases/TablaSimbolos/TablaSimbolos\";\r\nimport Tipo, { tipo } from \"src/clases/TablaSimbolos/Tipo\";\r\nimport { retorno } from \"../retorno\";\r\nimport Operaciones, { Operador } from \"./Operaciones\";\r\n\r\n\r\nexport default class Logicas extends Operaciones implements Expreciones{\r\n\r\n    lblTrue: string;\r\n    lblFalse: string;\r\n    public constructor(exp1, op: string, exp2, linea: number, columna:number, expU :boolean) {\r\n        super(exp1,op,exp2,linea,columna,expU);        \r\n    }\r\n    limpiar() {\r\n        this.lblFalse='';\r\n        this.lblTrue='';\r\n        if(this.expU==false){\r\n         this.exp1.limpiar();\r\n         this.exp2.limpiar();\r\n        }else{\r\n         this.exp1.limpiar();\r\n        }\r\n        \r\n     }\r\n   \r\n\r\n    getTipo(controlador: Controlador, ts: TablaSimbolos) : tipo{\r\n        let valor = this.getValor(controlador, ts);\r\n\r\n        if(typeof valor === 'number'){   \r\n            return tipo.DOBLE;\r\n        }else if(typeof valor === 'string'){\r\n            return tipo.CADENA;\r\n        }else if(typeof valor === 'boolean'){\r\n            return tipo.BOOLEANO;\r\n        }\r\n    }\r\n    \r\n    getValor(controlador: Controlador, TablaSimbolos: TablaSimbolos) {\r\n        let valor_exp1;\r\n        let valor_exp2;\r\n        let valor_expU;\r\n        \r\n        \r\n        if(this.expU == false){\r\n            valor_exp1 = this.exp1.getValor(controlador, TablaSimbolos);\r\n            valor_exp2 = this.exp2.getValor(controlador, TablaSimbolos);\r\n        }else{\r\n            valor_expU = this.exp1.getValor(controlador, TablaSimbolos);\r\n        }\r\n\r\n        switch (this.operador){\r\n\r\n            case Operador.AND:\r\n                return this.and(valor_exp1,valor_exp2);\r\n            case Operador.NOT:\r\n                return this.not(valor_expU);\r\n            case Operador.OR:\r\n                return this.or(valor_exp1,valor_exp2);\r\n            default:\r\n                break;\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    and(valor_exp1,valor_exp2){\r\n        if(typeof valor_exp1 =='boolean'){\r\n            if(typeof valor_exp2 == 'boolean'){\r\n                return valor_exp1 && valor_exp2;\r\n            }else{\r\n                //Error semantico\r\n            }\r\n        }\r\n    }\r\n\r\n    or(valor_exp1,valor_exp2){\r\n        if(typeof valor_exp1 =='boolean'){\r\n            if(typeof valor_exp2=='boolean'){\r\n                return valor_exp1 || valor_exp2;\r\n            }else{\r\n                //Erro semantico\r\n            }\r\n        }\r\n    }\r\n\r\n    not(valor_expU){\r\n        if(typeof valor_expU =='boolean'){\r\n            return !valor_expU;\r\n        }else{\r\n            //Erro semantico\r\n        }\r\n    }\r\n    getvalor3d(controlador: Controlador, ts: TablaSimbolos) {\r\n        switch (this.operador){\r\n            case Operador.AND:\r\n                return this.and3D(controlador,ts);\r\n            case Operador.NOT:\r\n\r\n            break;\r\n            case Operador.OR:\r\n                return this.or3D(controlador,ts);\r\n            default:\r\n                break;\r\n            \r\n        }\r\n    }\r\n\r\n    and3D(controlador:Controlador, ts:TablaSimbolos){\r\n        const generador =controlador.generador;\r\n        this.lblTrue = this.lblTrue == '' ? generador.newLabel() : this.lblTrue;\r\n        this.lblFalse = this.lblFalse == '' ? generador.newLabel() : this.lblFalse;\r\n\r\n        this.exp1.lblTrue = generador.newLabel();\r\n        this.exp2.lblTrue = this.lblTrue;\r\n        this.exp1.lblFalse = this.exp2.lblFalse = this.lblFalse;\r\n\r\n        const expIzq = this.exp1.getvalor3d(controlador,ts);\r\n        generador.genLabel(this.exp1.lblTrue);\r\n        const expDer = this.exp2.getvalor3d(controlador,ts);\r\n\r\n        if(expIzq.tipo.type==tipo.BOOLEANO && expDer.tipo.type==tipo.BOOLEANO){\r\n            const Retorno = new retorno('', false, new Tipo(\"BOOLEAN\"));\r\n            Retorno.lblTrue = this.lblTrue;\r\n            Retorno.lblFalse = this.exp2.lblFalse;\r\n            return Retorno;\r\n        }\r\n        \r\n    }\r\n\r\n    or3D(controlador:Controlador, ts:TablaSimbolos){\r\n        const generador = controlador.generador;\r\n        this.lblTrue = this.lblTrue == '' ? generador.newLabel() : this.lblTrue;\r\n        this.lblFalse = this.lblFalse == '' ? generador.newLabel() : this.lblFalse;\r\n\r\n        this.exp1.lblTrue = this.exp2.lblTrue = this.lblTrue;\r\n        this.exp1.lblFalse = generador.newLabel();\r\n        this.exp2.lblFalse = this.lblFalse;\r\n\r\n        const expIzq = this.exp1.getvalor3d(controlador,ts);\r\n        generador.genLabel(this.exp1.lblFalse);\r\n        const expDer = this.exp2.getvalor3d(controlador,ts);\r\n\r\n        if(expIzq.tipo.type==tipo.BOOLEANO && expDer.tipo.type==tipo.BOOLEANO){\r\n        \r\n        const Retorno = new retorno('', false, new Tipo(\"BOOLEAN\"));\r\n        Retorno.lblTrue = this.lblTrue;\r\n        Retorno.lblFalse = this.exp2.lblFalse;\r\n        return Retorno;\r\n        }\r\n    }\r\n    \r\n\r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"Exp\",\"\");\r\n\r\n        if(this.expU){\r\n            padre.AddHijo(new Nodo(this.op,\"\"));\r\n            padre.AddHijo(this.exp1.recorrer());\r\n        }else{\r\n            padre.AddHijo(this.exp1.recorrer());\r\n            padre.AddHijo(new Nodo(this.op,\"\"));\r\n            padre.AddHijo(this.exp2.recorrer());\r\n        }\r\n        return padre;\r\n    }\r\n\r\n}","import Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport { Instruccion } from \"../Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\n\r\nexport default class instrucciondoble implements Instruccion {\r\n  public i1;\r\n  public i2;\r\n  public temp;\r\n  constructor(i1, i2) {\r\n    this.i1 = i1;\r\n    this.i2 = i2;\r\n  }\r\n  ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n    this.i1.ejecutar(controlador, ts);\r\n    this.temp = controlador.consola;\r\n    controlador.consola = \"\";\r\n    this.i2.ejecutar(controlador, ts);\r\n    if (this.temp != controlador.consola) {\r\n      controlador.consola = this.temp + controlador.consola;\r\n    }\r\n  }\r\n  recorrer(): Nodo {\r\n    let padre = new Nodo(\"|\", \"\");\r\n    padre.AddHijo(this.i1.recorrer());\r\n    padre.AddHijo(this.i2.recorrer());\r\n    return padre;\r\n  }\r\n}\r\n","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar XML = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[2,12],$V1=[1,8],$V2=[5,6,8,13],$V3=[1,18],$V4=[1,17],$V5=[2,4,10],$V6=[2,4],$V7=[1,21],$V8=[4,20];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"inicio\":3,\"<\":4,\"?\":5,\"ID\":6,\"latributos\":7,\">\":8,\"raices\":9,\"EOF\":10,\"raiz\":11,\"objeto\":12,\"/\":13,\"texto_libre\":14,\"objetos\":15,\"atributos\":16,\"atributo\":17,\"=\":18,\"CADENA\":19,\"TEXTO\":20,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"<\",5:\"?\",6:\"ID\",8:\">\",10:\"EOF\",13:\"/\",18:\"=\",19:\"CADENA\",20:\"TEXTO\"},\nproductions_: [0,[3,8],[9,2],[9,1],[11,1],[12,5],[12,9],[12,9],[12,1],[15,2],[15,1],[7,1],[7,0],[16,2],[16,1],[17,3],[14,2],[14,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n this.$= new ast.default($$[$0-1]);  return this.$; \nbreak;\ncase 2: case 9: case 13:\n $$[$0-1].push($$[$0]); this.$ = $$[$0-1];\nbreak;\ncase 3: case 10: case 14:\n this.$ = [$$[$0]]; \nbreak;\ncase 4:\n this.$ = $$[$0] \nbreak;\ncase 5:\n this.$ = new Objeto.default($$[$0-3],'',_$[$0-4].first_line, _$[$0-4].first_column,$$[$0-2],[],1); \nbreak;\ncase 6:\n this.$ = new Objeto.default($$[$0-7],$$[$0-4],_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],[],2,$$[$0-1]); \nbreak;\ncase 7:\n this.$ = new Objeto.default($$[$0-7],'',_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],$$[$0-4],2,$$[$0-1]); \nbreak;\ncase 8:\n  new LErrores(\"Sintactico\", \"No se esperaba: \"+yytext,\"XML\", this._$.first_line , this._$.first_column);\nbreak;\ncase 11: case 17:\n this.$ = $$[$0]; \nbreak;\ncase 12:\n this.$ = []; \nbreak;\ncase 15:\n$$[$0] = $$[$0].slice(1, $$[$0].length-1); this.$ = new Atributo.default($$[$0-2], $$[$0], _$[$0-2].first_line, _$[$0-2].first_column);\nbreak;\ncase 16:\n this.$ = $$[$0-1] + $$[$0]; \nbreak;\n}\n},\ntable: [{3:1,4:[1,2]},{1:[3]},{5:[1,3]},{6:[1,4]},{5:$V0,6:$V1,7:5,16:6,17:7},{5:[1,9]},o([5,8,13],[2,11],{17:10,6:$V1}),o($V2,[2,14]),{18:[1,11]},{8:[1,12]},o($V2,[2,13]),{19:[1,13]},{2:$V3,4:$V4,9:14,11:15,12:16},o($V2,[2,15]),{2:$V3,4:$V4,10:[1,19],11:20,12:16},o($V5,[2,3]),o($V5,$V6),{6:$V7},o($V5,[2,8]),{1:[2,1]},o($V5,[2,2]),o([8,13],$V0,{16:6,17:7,7:22,6:$V1}),{8:[1,24],13:[1,23]},{8:[1,25]},{2:$V3,4:$V4,12:29,14:26,15:27,20:[1,28]},o($V5,[2,5]),{4:[1,30],20:[1,31]},{2:$V3,4:[1,32],12:33},o($V8,[2,17]),o($V6,[2,10]),{13:[1,34]},o($V8,[2,16]),{6:$V7,13:[1,35]},o($V6,[2,9]),{6:[1,36]},{6:[1,37]},{8:[1,38]},{8:[1,39]},o($V5,[2,6]),o($V5,[2,7])],\ndefaultActions: {19:[2,1]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse (input) {\n    var self = this,\n        stack = [0],\n        tstack = [], // token stack\n        vstack = [null], // semantic value stack\n        lstack = [], // location stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    var args = lstack.slice.call(arguments, 1);\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    // copy state\n    for (var k in this.yy) {\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n        sharedState.yy[k] = this.yy[k];\n      }\n    }\n\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n\n    var ranges = lexer.options && lexer.options.ranges;\n\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n\n    function popStack (n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n_token_stack:\n    var lex = function () {\n        var token;\n        token = lexer.lex() || EOF;\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length - 1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n_handle_error:\n        // handle parse error\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var error_rule_depth;\n            var errStr = '';\n\n            // Return the rule stack depth where the nearest error rule can be found.\n            // Return FALSE when no error recovery rule was found.\n            function locateNearestErrorRecoveryRule(state) {\n                var stack_probe = stack.length - 1;\n                var depth = 0;\n\n                // try to recover from error\n                for(;;) {\n                    // check for error recovery rule in this state\n                    if ((TERROR.toString()) in table[state]) {\n                        return depth;\n                    }\n                    if (state === 0 || stack_probe < 2) {\n                        return false; // No suitable error recovery rule available.\n                    }\n                    stack_probe -= 2; // popStack(1): [symbol, action]\n                    state = stack[stack_probe];\n                    ++depth;\n                }\n            }\n\n            if (!recovering) {\n                // first see if there's any chance at hitting an error recovery rule:\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n\n                // Report error\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == EOF ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected,\n                    recoverable: (error_rule_depth !== false)\n                });\n            } else if (preErrorSymbol !== EOF) {\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol === EOF || preErrorSymbol === EOF) {\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            if (error_rule_depth === false) {\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\n            }\n            popStack(error_rule_depth);\n\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(lexer.yytext);\n                lstack.push(lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = lexer.yyleng;\n                    yytext = lexer.yytext;\n                    yylineno = lexer.yylineno;\n                    yyloc = lexer.yylloc;\n                    if (recovering > 0) {\n                        recovering--;\n                    }\n                } else {\n                    // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2:\n                // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: lstack[lstack.length-(len||1)].first_line,\n                    last_line: lstack[lstack.length-1].last_line,\n                    first_column: lstack[lstack.length-(len||1)].first_column,\n                    last_column: lstack[lstack.length-1].last_column\n                };\n                if (ranges) {\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\n                }\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                    lstack = lstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3:\n                // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n\r\n    let $ESPACIOS = \"\";\r\n\r\n      const  Atributo = require ('../Clases/xml/atributo');\r\n      const  Objeto  = require ('../Clases/xml/objeto');\r\n      const ast =require('../Clases/AST/Ast');\r\n      const  {LErrores} =require ('../Clases/AST/ListaError');\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* Ignoro los comentarios simples */\nbreak;\ncase 1:/* skip whitespace */\nbreak;\ncase 2: console.log(\"Reconocio : \"+ yy_.yytext); return 19\nbreak;\ncase 3: console.log(\"Reconocio : \"+ yy_.yytext); return 6\nbreak;\ncase 4: console.log(\"Reconocio : \"+ yy_.yytext); return 4\nbreak;\ncase 5: console.log(\"Reconocio : \"+ yy_.yytext); return 18\nbreak;\ncase 6: console.log(\"Reconocio : \"+ yy_.yytext); return 13\nbreak;\ncase 7: console.log(\"Reconocio : \"+ yy_.yytext); return 5\nbreak;\ncase 8: this.begin(\"S1\"); $ESPACIOS=\"\"; console.log(\"Reconocio : \"+ yy_.yytext); return \">\";\nbreak;\ncase 9: yy_.yytext = $ESPACIOS + \"<\"; $ESPACIOS=\"\";  console.log(\"Reconocio : \"+ yy_.yytext); return 20; \nbreak;\ncase 10: yy_.yytext = $ESPACIOS + \">\"; $ESPACIOS=\"\";  console.log(\"Reconocio : \"+ yy_.yytext); return 20; \nbreak;\ncase 11: yy_.yytext = $ESPACIOS + \"\\&\"; $ESPACIOS=\"\";  console.log(\"Reconocio : \"+ yy_.yytext); return 20; \nbreak;\ncase 12: yy_.yytext = $ESPACIOS + \"\\'\"; $ESPACIOS=\"\";  console.log(\"Reconocio : \"+ yy_.yytext); return 20; \nbreak;\ncase 13: yy_.yytext = $ESPACIOS + \"\\\"\"; $ESPACIOS=\"\";  console.log(\"Reconocio : \"+ yy_.yytext); return 20; \nbreak;\ncase 14:  /* Ignoro los comentarios simples */\nbreak;\ncase 15: $ESPACIOS += yy.lexer.match;\nbreak;\ncase 16: this.begin(\"INITIAL\"); console.log(\"Reconocio : \"+ yy_.yytext); return \"<\";\nbreak;\ncase 17: yy_.yytext = $ESPACIOS + yy_.yytext; $ESPACIOS=\"\";  console.log(\"Reconocio : \"+ yy_.yytext); return 20; \nbreak;\ncase 18:return 10\nbreak;\ncase 19: console.log(\"Error Lexico \"+yy_.yytext\r\n                        +\" linea \"+yy_.yylineno\r\n                        +\" columna \"+(yy_.yylloc.last_column+1));        \r\n                        \nbreak;\n}\n},\nrules: [/^(?:<!--(.|\\n)*-->)/i,/^(?:\\s+)/i,/^(?:((\"((\\\\([\\'\\\"\\\\ntr]))|([^\\\"\\\\]+))*\")))/i,/^(?:([a-zñA-ZÑ_][a-zñA-ZÑ0-9_]*))/i,/^(?:<)/i,/^(?:=)/i,/^(?:\\/)/i,/^(?:\\?)/i,/^(?:>)/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:<!--(.|\\n)*-->)/i,/^(?:\\s)/i,/^(?:<)/i,/^(?:.)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"S1\":{\"rules\":[0,9,10,11,12,13,14,15,16,17,18,19],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,14,18,19],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = XML;\nexports.Parser = XML.Parser;\nexports.parse = function () { return XML.parse.apply(XML, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","import Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport Relaciones from \"../Expreciones/Operaciones/Relaciones\";\r\nimport Primitivo from \"../Expreciones/Primitivo\";\r\nimport { Instruccion } from \"../Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\nimport informacion from \"./informacion\";\r\n\r\nexport default class barrabarra implements Instruccion {\r\n  public exprecion: informacion;\r\n  public sig;\r\n\r\n  constructor(exprecion: informacion, sig) {\r\n    this.exprecion = exprecion;\r\n    this.sig = sig;\r\n  }\r\n\r\n  ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n    if (this.exprecion.exprecion != null) {\r\n      this.isxprecion(controlador, ts);\r\n    } else {\r\n      if (this.sig != null) {\r\n        this.siguiente(controlador, ts);\r\n      } else {\r\n        this.obtenerall(controlador, ts);\r\n      }\r\n    }\r\n  }\r\n\r\n  obtenerall(controlador: Controlador, ts: TablaSimbolos) {\r\n    if (ts != null) {\r\n      for (let informacion of ts.tabla) {\r\n        if (this.exprecion.tipo == 1) {\r\n          if (this.exprecion.id == \"*\" && informacion.sim.simbolo == 1) {\r\n            this.generador3D(informacion, controlador);\r\n          } else {\r\n            if (\r\n              informacion.identificador == this.exprecion.id &&\r\n              informacion.sim.simbolo == 1\r\n            ) {\r\n              this.generador3D(informacion, controlador);\r\n            }\r\n          }\r\n        } else {\r\n          if (\r\n            informacion.identificador == this.exprecion.id &&\r\n            informacion.sim.simbolo == 2\r\n          ) {\r\n            this.generador3DV(informacion, controlador);\r\n          } else {\r\n            if (this.exprecion.id == \"*\" && informacion.sim.simbolo == 2) {\r\n              this.generador3DV(informacion, controlador);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      for (let tssig of ts.sig) {\r\n        this.obtenerall(controlador, tssig.sig);\r\n      }\r\n    }\r\n  }\r\n\r\n  siguiente(controlador: Controlador, ts: TablaSimbolos) {\r\n    if (ts != null) {\r\n      for (let tssig of ts.sig) {\r\n        if (\r\n          this.exprecion.id == tssig.identificador ||\r\n          this.exprecion.id == \"*\"\r\n        ) {\r\n          this.sig.ejecutar(controlador, tssig.sig);\r\n        } else {\r\n          this.siguiente(controlador, tssig.sig);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  isxprecion(controlador: Controlador, ts: TablaSimbolos) {\r\n    controlador.idlast = this.exprecion.id;\r\n    let valor = this.exprecion.exprecion.getValor(controlador, ts);\r\n    if (typeof valor == \"number\") {\r\n      this.isNumero(controlador, ts, valor);\r\n    } else {\r\n      this.esbool(controlador, ts);\r\n    }\r\n  }\r\n\r\n  isNumero(controlador: Controlador, ts: TablaSimbolos, valor) {\r\n    if (this.sig != null) {\r\n      this.siguienteNumero(controlador, ts, valor);\r\n    } else {\r\n      this.obtenerallNumero(controlador, ts, valor);\r\n    }\r\n  }\r\n\r\n  esbool(controlador: Controlador, ts: TablaSimbolos) {\r\n    if (this.sig != null) {\r\n      this.siguienteBool(controlador, ts);\r\n    } else {\r\n      this.obtenerBool(controlador, ts);\r\n    }\r\n  }\r\n\r\n  siguienteNumero(controlador: Controlador, ts: TablaSimbolos, valor) {\r\n    let cont = 1;\r\n    if (ts != null) {\r\n      for (let tssig of ts.sig) {\r\n        if (this.exprecion.id == tssig.identificador) {\r\n          valor = this.exprecion.exprecion.getValor(controlador, ts);\r\n          if (cont == valor) {\r\n            let val1 = new Primitivo(cont, 1, 1, -1);\r\n            let val2 = this.exprecion.exprecion;\r\n            let igual = new Relaciones(val1, \"==\", val2, 1, 1, false);\r\n            controlador.exprecion = igual;\r\n            controlador.ts = ts;\r\n            this.sig.ejecutar(controlador, tssig.sig);\r\n          }\r\n          cont++;\r\n        } else {\r\n          this.siguienteNumero(controlador, tssig.sig, valor);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  obtenerallNumero(controlador: Controlador, ts: TablaSimbolos, valor) {\r\n    let cont = 1;\r\n    if (ts != null) {\r\n      for (let informacion of ts.tabla) {\r\n        if (informacion.identificador == this.exprecion.id) {\r\n          valor = this.exprecion.exprecion.getValor(controlador, ts);\r\n          if (cont == valor) {\r\n            let val1 = new Primitivo(cont, 1, 1, -1);\r\n            let val2 = this.exprecion.exprecion;\r\n            let igual = new Relaciones(val1, \"==\", val2, 1, 1, false);\r\n            let salida = igual.getvalor3d(controlador, ts);\r\n            controlador.generador.genLabel(salida.lblTrue);\r\n            controlador.append(informacion.sim.objeto.gethtml(\"\", controlador));\r\n            controlador.generador.genPrint(\"c\", \"10\");\r\n            controlador.generador.genLabel(salida.lblFalse);\r\n            igual.limpiar();\r\n          }\r\n          cont++;\r\n        }\r\n      }\r\n      for (let tssig of ts.sig) {\r\n        this.obtenerallNumero(controlador, tssig.sig, valor);\r\n      }\r\n    }\r\n  }\r\n\r\n  siguienteBool(controlador: Controlador, ts: TablaSimbolos) {\r\n    let cont = 1;\r\n    let posicion = 1;\r\n    if (ts != null) {\r\n      for (let tssig of ts.sig) {\r\n        if (this.exprecion.id == tssig.identificador) {\r\n          controlador.position = cont;\r\n          controlador.posicionid = posicion;\r\n          if (this.exprecion.exprecion.getValor(controlador, ts)) {\r\n            controlador.exprecion = this.exprecion.exprecion;\r\n            controlador.ts = ts;\r\n            this.sig.ejecutar(controlador, tssig.sig);\r\n          }\r\n          cont++;\r\n        } else {\r\n          this.siguienteBool(controlador, tssig.sig);\r\n        }\r\n        posicion++;\r\n      }\r\n    }\r\n  }\r\n\r\n  obtenerBool(controlador: Controlador, ts: TablaSimbolos) {\r\n    let cont = 1;\r\n    let posicion = 1;\r\n    if (ts != null) {\r\n      for (let informacion of ts.tabla) {\r\n        if (informacion.identificador == this.exprecion.id) {\r\n          controlador.position = cont;\r\n          controlador.posicionid = posicion;\r\n          if (this.exprecion.exprecion.getValor(controlador, ts)) {\r\n            let salida = this.exprecion.exprecion.getvalor3d(controlador, ts);\r\n            controlador.generador.genLabel(salida.lblTrue);\r\n            controlador.append(informacion.sim.objeto.gethtml(\"\", controlador));\r\n            controlador.generador.genPrint(\"c\", \"10\");\r\n            controlador.generador.genLabel(salida.lblFalse);\r\n            this.exprecion.exprecion.limpiar();\r\n          }\r\n          cont++;\r\n        }\r\n        posicion++;\r\n      }\r\n      for (let tssig of ts.sig) {\r\n        this.obtenerBool(controlador, tssig.sig);\r\n      }\r\n    }\r\n  }\r\n\r\n  generador3D(informacion, controlador: Controlador) {\r\n    if (controlador.exprecion != null) {\r\n      let salida = controlador.exprecion.getvalor3d(\r\n        controlador,\r\n        controlador.ts\r\n      );\r\n      controlador.generador.genLabel(salida.lblTrue);\r\n      controlador.append(informacion.sim.objeto.gethtml(\"\", controlador));\r\n      controlador.generador.genPrint(\"c\", \"10\");\r\n      controlador.generador.genLabel(salida.lblFalse);\r\n      controlador.exprecion.limpiar();\r\n    } else {\r\n      controlador.append(informacion.sim.objeto.gethtml(\"\", controlador));\r\n      controlador.generador.genPrint(\"c\", \"10\");\r\n    }\r\n  }\r\n\r\n  generador3DV(informacion, controlador: Controlador) {\r\n    if (controlador.exprecion != null) {\r\n      let salida = controlador.exprecion.getvalor3d(\r\n        controlador,\r\n        controlador.ts\r\n      );\r\n      controlador.generador.genLabel(salida.lblTrue);\r\n      controlador.generador.genSetStack(\"p\", informacion.sim.objeto.posicion3d);\r\n      controlador.generador.genCall(\"nativa_print_str\");\r\n      controlador.generador.genPrint(\"c\", \"10\");\r\n      controlador.generador.genLabel(salida.lblFalse);\r\n      controlador.exprecion.limpiar();\r\n      controlador.append(informacion.sim.valor + \"\\n\");\r\n    } else {\r\n      controlador.generador.genSetStack(\"p\", informacion.sim.objeto.posicion3d);\r\n      controlador.generador.genCall(\"nativa_print_str\");\r\n      controlador.generador.genPrint(\"c\", \"10\");\r\n      controlador.append(informacion.sim.valor);\r\n    }\r\n  }\r\n\r\n  recorrer(): Nodo {\r\n    let padre = new Nodo(\"//\", \"\");\r\n    padre.AddHijo(new Nodo(this.exprecion.id, \"\"));\r\n    if (this.exprecion.exprecion != null) {\r\n      padre.AddHijo(new Nodo(\"[\", \"\"));\r\n      padre.AddHijo(this.exprecion.exprecion.recorrer());\r\n      padre.AddHijo(new Nodo(\"]\", \"\"));\r\n    }\r\n    if (this.sig != null) {\r\n      padre.AddHijo(this.sig.recorrer());\r\n    }\r\n    return padre;\r\n  }\r\n}\r\n","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar XQuery = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,4],$V1=[1,5],$V2=[1,6],$V3=[1,7],$V4=[1,8],$V5=[1,9],$V6=[1,10],$V7=[1,11],$V8=[5,7,13,14,17,20,22,24,26,28],$V9=[1,46],$Va=[1,44],$Vb=[1,40],$Vc=[1,41],$Vd=[1,37],$Ve=[1,38],$Vf=[1,42],$Vg=[1,43],$Vh=[1,45],$Vi=[1,47],$Vj=[1,48],$Vk=[1,49],$Vl=[1,50],$Vm=[1,51],$Vn=[1,52],$Vo=[1,53],$Vp=[1,54],$Vq=[1,61],$Vr=[1,55],$Vs=[1,56],$Vt=[1,57],$Vu=[1,58],$Vv=[1,59],$Vw=[1,60],$Vx=[5,7,8,9,13,14,17,18,19,20,21,22,24,26,28,30,31,33,36,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71],$Vy=[1,82],$Vz=[1,70],$VA=[1,71],$VB=[1,72],$VC=[1,73],$VD=[1,74],$VE=[1,75],$VF=[1,76],$VG=[1,77],$VH=[1,78],$VI=[1,79],$VJ=[1,80],$VK=[1,81],$VL=[1,86],$VM=[1,87],$VN=[1,88],$VO=[1,96],$VP=[1,99],$VQ=[1,95],$VR=[1,94],$VS=[1,93],$VT=[1,98],$VU=[1,97],$VV=[1,102],$VW=[1,101],$VX=[1,103],$VY=[1,100],$VZ=[5,7,8,9,13,14,16,17,18,19,20,21,22,24,26,28,30,31,33,36,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71],$V_=[1,107],$V$=[1,119],$V01=[1,120],$V11=[1,155],$V21=[1,152],$V31=[1,150],$V41=[1,153],$V51=[1,151],$V61=[1,143],$V71=[1,144],$V81=[1,145],$V91=[1,146],$Va1=[1,147],$Vb1=[1,148],$Vc1=[1,149],$Vd1=[1,154],$Ve1=[5,7,13,14,16,17,19,20,22,24,26,28,30,33,39,40,41,42,43,44,45,46,47,48,49,50,51,52,75],$Vf1=[5,7,13,14,17,20,22,24,26,28,30,33],$Vg1=[5,7,8,9,13,14,16,17,18,19,20,21,22,24,26,28,30,31,33,36,41,42,43,44,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71],$Vh1=[5,7,8,9,13,14,16,17,18,19,20,21,22,24,26,28,30,31,33,36,41,42,43,44,45,46,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71],$Vi1=[5,7,13,14,16,17,19,20,22,24,26,28,30,33,39,40,41,42,43,44,45,46,50,51,52,75],$Vj1=[5,7,13,14,16,17,19,20,22,24,26,28,30,33,39,40,41,42,43,44,50,51,52,75];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"INICIO\":3,\"INSTRUCCIONES\":4,\"EOF\":5,\"SENTENCIAS\":6,\"FOR\":7,\"DOLAR\":8,\"ID\":9,\"IN\":10,\"PARAMETROS\":11,\"INSTRUCCIONESF\":12,\"ORDER\":13,\"LET\":14,\"DOSPUNTOS\":15,\"IGUAL\":16,\"IF\":17,\"PARA\":18,\"PARC\":19,\"THEN\":20,\"DATA\":21,\"ELSE\":22,\"SENT_ELSE\":23,\"DECLARE\":24,\"FUNCTION\":25,\"AS\":26,\"LLAVEA\":27,\"LLAVEC\":28,\"SENTENCIASF\":29,\"WHERE\":30,\"BARRA\":31,\"OPERADORES\":32,\"RETURN\":33,\"LISTA_PARAMETROS\":34,\"e\":35,\"BARRABARRA\":36,\"RESERV\":37,\"PUNTOPUNTO\":38,\"TO\":39,\"COMA\":40,\"MENORQUE\":41,\"MAYORQUE\":42,\"MENORIGUAL\":43,\"MAYORIGUAL\":44,\"MAS\":45,\"MENOS\":46,\"POR\":47,\"DIV\":48,\"MODULO\":49,\"AND\":50,\"OR\":51,\"DIFERENTE\":52,\"ENTERO\":53,\"DECIMAL\":54,\"CADENA\":55,\"last\":56,\"POSITION\":57,\"ANCESTOR\":58,\"RESERVLARGE\":59,\"ATTRIBUTE\":60,\"ANCESORSELF\":61,\"CHILD\":62,\"DESCENDANT\":63,\"FOLLOWING\":64,\"SIBLING\":65,\"NAMESPACE\":66,\"PARENT\":67,\"PRECENDING\":68,\"SELF\":69,\"TEXT\":70,\"NODE\":71,\"ARROBA\":72,\"ASTERISCO\":73,\"CORA\":74,\"CORC\":75,\"LAST\":76,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",7:\"FOR\",8:\"DOLAR\",9:\"ID\",10:\"IN\",13:\"ORDER\",14:\"LET\",15:\"DOSPUNTOS\",16:\"IGUAL\",17:\"IF\",18:\"PARA\",19:\"PARC\",20:\"THEN\",21:\"DATA\",22:\"ELSE\",24:\"DECLARE\",25:\"FUNCTION\",26:\"AS\",27:\"LLAVEA\",28:\"LLAVEC\",30:\"WHERE\",31:\"BARRA\",33:\"RETURN\",36:\"BARRABARRA\",38:\"PUNTOPUNTO\",39:\"TO\",40:\"COMA\",41:\"MENORQUE\",42:\"MAYORQUE\",43:\"MENORIGUAL\",44:\"MAYORIGUAL\",45:\"MAS\",46:\"MENOS\",47:\"POR\",48:\"DIV\",49:\"MODULO\",50:\"AND\",51:\"OR\",52:\"DIFERENTE\",53:\"ENTERO\",54:\"DECIMAL\",55:\"CADENA\",56:\"last\",57:\"POSITION\",58:\"ANCESTOR\",60:\"ATTRIBUTE\",61:\"ANCESORSELF\",62:\"CHILD\",63:\"DESCENDANT\",64:\"FOLLOWING\",65:\"SIBLING\",66:\"NAMESPACE\",67:\"PARENT\",68:\"PRECENDING\",69:\"SELF\",70:\"TEXT\",71:\"NODE\",72:\"ARROBA\",73:\"ASTERISCO\",74:\"CORA\",75:\"CORC\",76:\"LAST\"},\nproductions_: [0,[3,2],[4,2],[4,1],[6,6],[6,4],[6,6],[6,6],[6,7],[6,2],[6,8],[6,7],[12,2],[12,1],[29,5],[29,5],[29,3],[23,6],[23,2],[23,1],[11,2],[11,1],[34,2],[34,2],[34,3],[34,4],[34,2],[34,4],[34,5],[34,5],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[34,4],[34,3],[34,1],[34,1],[34,1],[34,1],[34,7],[34,6],[34,5],[37,1],[37,1],[37,2],[37,1],[37,1],[37,1],[37,2],[37,1],[37,3],[37,1],[37,1],[37,1],[37,1],[37,3],[37,1],[37,1],[37,1],[37,1],[59,4],[59,2],[35,1],[35,2],[35,2],[35,1],[35,4],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,2],[32,4],[32,3],[32,2],[32,1],[32,1],[32,1],[32,1],[32,1],[32,1],[32,2]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n  this.$= new ast.default($$[$0-1]); return this.$ \nbreak;\ncase 2:\n this.$ = $$[$0-1]; this.$.push($$[$0]); \nbreak;\ncase 3: case 13:\n this.$= new Array(); this.$.push($$[$0]); \nbreak;\ncase 4:\n this.$=new ForXquery.default($$[$0-3],$$[$0-1],_$[$0-5].first_line,_$[$0-5].first_column,$$[$0]); \nbreak;\ncase 12:\nthis.$ = $$[$0-1]; this.$.push($$[$0]); \nbreak;\ncase 14:\nthis.$=new whereXquery.default($$[$0-2],$$[$0])\nbreak;\ncase 15:\nthis.$= new returnXquery.default($$[$0-2],$$[$0])\nbreak;\ncase 16:\nthis.$= new returnXquery.default($$[$0])\nbreak;\ncase 20:\n$$[$0-1].sig=$$[$0]; this.$ = $$[$0-1]; \nbreak;\ncase 21:\nthis.$= $$[$0]; \nbreak;\ncase 22:\n  this.$ = new acceso.default($$[$0],null);\nbreak;\ncase 23:\n  this.$ = new barrabarra.default($$[$0],null);\nbreak;\ncase 24: case 25:\n  this.$ =  new axes.default($$[$0-2],$$[$0],null);\nbreak;\ncase 26:\n  this.$ =  new puntopunto.default($$[$0-1],null);\nbreak;\ncase 27:\n  this.$ =  new axesbarrabarra.default($$[$0-2],$$[$0],null)\nbreak;\ncase 47:\n  this.$ =  new acceso.default(new informacion.default($$[$0],null,1),null);\nbreak;\ncase 52: case 53: case 55: case 56: case 57: case 59: case 61: case 62: case 63: case 64: case 66: case 67: case 68: case 69:\nthis.$ = $$[$0]\nbreak;\ncase 54: case 58:\nthis.$ = $$[$0-1] + $$[$0]\nbreak;\ncase 60: case 65:\nthis.$ = $$[$0-2]+$$[$0-1]+$$[$0]\nbreak;\ncase 70:\nthis.$ = $$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]\nbreak;\ncase 71:\nthis.$ = $$[$0-1]+$$[$0]\nbreak;\ncase 72: case 75:\nthis.$=new informacion.default($$[$0],null,1);\nbreak;\ncase 73: case 74:\nthis.$=new informacion.default($$[$0],null,2);\nbreak;\ncase 76:\nthis.$=new informacion.default($$[$0-3],$$[$0-1],1);\nbreak;\ncase 77:\nthis.$ = new aritmetica.default($$[$0-2], '+', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 78:\nthis.$ = new aritmetica.default($$[$0-2], '-', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 79:\nthis.$ = new aritmetica.default($$[$0-2], '*', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 80:\nthis.$ = new aritmetica.default($$[$0-2], '/', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 81:\nthis.$ = new aritmetica.default($$[$0-2], '%', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 82:\nthis.$ = new logica.default($$[$0-2], '&&', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 83:\nthis.$ = new logica.default($$[$0-2], '||', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 84:\nthis.$ = new relacional.default($$[$0-2],'>', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 85:\nthis.$ = new relacional.default($$[$0-2],'>=', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 86:\nthis.$ = new relacional.default($$[$0-2],'<', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 87:\nthis.$ = new relacional.default($$[$0-2],'<=', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 88:\nthis.$ = new relacional.default($$[$0-2],'!=', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 89:\nthis.$ = new relacional.default($$[$0-2],'==', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 90:\nthis.$ = new aritmetica.default($$[$0], 'UNARIO', null, $$[$0-1].first_line, $$[$0-1].last_column, true);\nbreak;\ncase 91:\nthis.$ = $$[$0-2];\nbreak;\ncase 92:\nthis.$ = $$[$0-1];\nbreak;\ncase 94: case 95:\nthis.$ = new primitivo.default(Number(yytext), $$[$0].first_line, $$[$0].last_column,-1);\nbreak;\ncase 96:\nthis.$ = new identificador.default($$[$0] , _$[$0].first_line, _$[$0].last_column,1); \nbreak;\ncase 97:\nthis.$ = new last.default();\nbreak;\ncase 98:\nthis.$ = new position.default();\nbreak;\ncase 99:\n$$[$0] = $$[$0].slice(1, $$[$0].length-1); this.$ = new primitivo.default($$[$0], $$[$0].first_line, $$[$0].last_column);\nbreak;\ncase 100:\nthis.$ = new identificador.default($$[$0] , _$[$0-1].first_line, _$[$0-1].last_column,2); \nbreak;\n}\n},\ntable: [{3:1,4:2,6:3,7:$V0,13:$V1,14:$V2,17:$V3,20:$V4,22:$V5,24:$V6,26:$V7},{1:[3]},{5:[1,12],6:13,7:$V0,13:$V1,14:$V2,17:$V3,20:$V4,22:$V5,24:$V6,26:$V7},o($V8,[2,3]),{8:[1,14]},{8:[1,15]},{8:[1,16]},{18:[1,17]},{21:[1,18]},{6:22,7:$V0,13:$V1,14:$V2,17:$V3,18:[1,21],20:$V4,21:[1,20],22:$V5,23:19,24:$V6,26:$V7},{25:[1,23]},{9:[1,24]},{1:[2,1]},o($V8,[2,2]),{9:[1,25]},{9:[1,26]},{9:[1,27]},{8:[1,28]},{18:[1,29]},o($V8,[2,9]),{18:[1,30]},{19:[1,31]},o($V8,[2,19]),{9:[1,32]},{15:[1,33]},{10:[1,34]},{8:$V9,9:$Va,11:35,18:$Vb,21:$Vc,31:$Vd,34:36,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{15:[1,62]},{9:[1,63]},{8:[1,64]},{8:[1,65]},o($V8,[2,18]),{15:[1,66]},{9:[1,67]},{8:$V9,9:$Va,11:68,18:$Vb,21:$Vc,31:$Vd,34:36,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},o($V8,[2,5],{37:39,34:69,8:$V9,9:$Va,18:$Vb,21:$Vc,31:$Vd,36:$Ve,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw}),o($Vx,[2,21],{16:$Vy,41:$Vz,42:$VA,43:$VB,44:$VC,45:$VD,46:$VE,47:$VF,48:$VG,49:$VH,50:$VI,51:$VJ,52:$VK}),{9:$VL,35:83,37:84,38:[1,85],56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw,72:$VM,73:$VN},{9:$VL,35:89,37:90,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw,72:$VM,73:$VN},{15:[1,91]},{8:$VO,9:$VP,18:$VQ,21:$VR,32:92,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},{18:[1,104]},o($VZ,[2,45]),o($VZ,[2,46]),o($VZ,[2,47]),o($VZ,[2,48]),{9:[1,105]},{15:[2,52]},{15:[2,53]},{46:$V_,59:106},{15:[2,55]},{15:[2,56]},{15:[2,57]},{15:[2,59],46:$V_,59:108},{15:[2,61],46:[1,109]},{15:[2,62]},{15:[2,63]},{15:[2,64],46:[1,110]},{15:[2,66]},{15:[2,67]},{15:[2,68]},{15:[2,69]},{16:[1,111]},{8:$V9,9:$Va,11:112,18:$Vb,21:$Vc,31:$Vd,34:36,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{9:[1,113]},{9:[1,114]},{9:[1,115]},{27:[1,116]},{8:$V9,9:$Va,12:117,18:$Vb,21:$Vc,29:118,30:$V$,31:$Vd,33:$V01,34:69,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},o($Vx,[2,20],{16:$Vy,41:$Vz,42:$VA,43:$VB,44:$VC,45:$VD,46:$VE,47:$VF,48:$VG,49:$VH,50:$VI,51:$VJ,52:$VK}),{8:$V9,9:$Va,18:$Vb,21:$Vc,31:$Vd,34:121,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{8:$V9,9:$Va,18:$Vb,21:$Vc,31:$Vd,34:122,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{8:$V9,9:$Va,18:$Vb,21:$Vc,31:$Vd,34:123,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{8:$V9,9:$Va,18:$Vb,21:$Vc,31:$Vd,34:124,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{8:$V9,9:$Va,18:$Vb,21:$Vc,31:$Vd,34:125,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{8:$V9,9:$Va,18:$Vb,21:$Vc,31:$Vd,34:126,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{8:$V9,9:$Va,18:$Vb,21:$Vc,31:$Vd,34:127,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{8:$V9,9:$Va,18:$Vb,21:$Vc,31:$Vd,34:128,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{8:$V9,9:$Va,18:$Vb,21:$Vc,31:$Vd,34:129,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{8:$V9,9:$Va,18:$Vb,21:$Vc,31:$Vd,34:130,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{8:$V9,9:$Va,18:$Vb,21:$Vc,31:$Vd,34:131,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{8:$V9,9:$Va,18:$Vb,21:$Vc,31:$Vd,34:132,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{8:$V9,9:$Va,18:$Vb,21:$Vc,31:$Vd,34:133,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},o($VZ,[2,22]),{15:[1,134]},o($VZ,[2,26]),o($VZ,[2,72],{74:[1,135]}),{9:[1,136],73:[1,137]},o($VZ,[2,75]),o($VZ,[2,23]),{15:[1,138]},{9:$VL,35:139,72:$VM,73:$VN},{16:$V11,19:[1,142],39:[1,140],40:[1,141],41:$V21,42:$V31,43:$V41,44:$V51,45:$V61,46:$V71,47:$V81,48:$V91,49:$Va1,50:$Vb1,51:$Vc1,52:$Vd1},{8:$VO,9:$VP,18:$VQ,21:$VR,32:156,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},{18:[1,157]},{8:$VO,9:$VP,18:$VQ,21:$VR,32:158,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},{9:[1,159]},o($Ve1,[2,94]),o($Ve1,[2,95]),o($Ve1,[2,96]),o($Ve1,[2,97]),o($Ve1,[2,98]),o($Ve1,[2,99]),{9:[1,160]},{8:$VO,9:$VP,18:$VQ,21:$VR,32:161,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},{26:[1,162],40:[1,163]},{15:[2,54]},{51:[1,164],65:[1,165]},{15:[2,58]},{65:[1,166]},{65:[1,167]},{8:$V9,9:$Va,11:168,18:$Vb,21:$Vc,31:$Vd,34:36,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{8:$V9,9:$Va,18:$Vb,19:[1,169],21:$Vc,31:$Vd,34:69,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{8:$V9,9:$Va,11:170,18:$Vb,21:$Vc,31:$Vd,34:36,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{8:$V9,9:$Va,11:171,18:$Vb,21:$Vc,31:$Vd,34:36,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{18:[1,172]},{4:173,6:3,7:$V0,13:$V1,14:$V2,17:$V3,20:$V4,22:$V5,24:$V6,26:$V7},o($V8,[2,4],{29:174,30:$V$,33:$V01}),o($Vf1,[2,13]),{8:[1,175]},{8:[1,176]},o($Vg1,[2,30],{45:$VD,46:$VE,47:$VF,48:$VG,49:$VH}),o($Vg1,[2,31],{45:$VD,46:$VE,47:$VF,48:$VG,49:$VH}),o($Vg1,[2,32],{45:$VD,46:$VE,47:$VF,48:$VG,49:$VH}),o($Vg1,[2,33],{45:$VD,46:$VE,47:$VF,48:$VG,49:$VH}),o($Vh1,[2,34],{47:$VF,48:$VG,49:$VH}),o($Vh1,[2,35],{47:$VF,48:$VG,49:$VH}),o($VZ,[2,36]),o($VZ,[2,37]),o($VZ,[2,38]),o([5,7,8,9,13,14,17,18,19,20,21,22,24,26,28,30,31,33,36,50,51,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71],[2,39],{16:$Vy,41:$Vz,42:$VA,43:$VB,44:$VC,45:$VD,46:$VE,47:$VF,48:$VG,49:$VH,52:$VK}),o([5,7,8,9,13,14,17,18,19,20,21,22,24,26,28,30,31,33,36,51,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71],[2,40],{16:$Vy,41:$Vz,42:$VA,43:$VB,44:$VC,45:$VD,46:$VE,47:$VF,48:$VG,49:$VH,50:$VI,52:$VK}),o($Vg1,[2,41],{45:$VD,46:$VE,47:$VF,48:$VG,49:$VH}),o($Vg1,[2,42],{45:$VD,46:$VE,47:$VF,48:$VG,49:$VH}),{9:$VL,35:177,72:$VM,73:$VN},{8:$VO,9:$VP,18:$VQ,21:$VR,32:178,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},o($VZ,[2,73]),o($VZ,[2,74]),{9:$VL,35:179,72:$VM,73:$VN},o($VZ,[2,24]),{8:$VO,9:$VP,18:$VQ,21:$VR,32:180,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},{8:$VO,9:$VP,18:$VQ,21:$VR,32:181,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},o($VZ,[2,44]),{8:$VO,9:$VP,18:$VQ,21:$VR,32:182,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},{8:$VO,9:$VP,18:$VQ,21:$VR,32:183,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},{8:$VO,9:$VP,18:$VQ,21:$VR,32:184,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},{8:$VO,9:$VP,18:$VQ,21:$VR,32:185,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},{8:$VO,9:$VP,18:$VQ,21:$VR,32:186,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},{8:$VO,9:$VP,18:$VQ,21:$VR,32:187,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},{8:$VO,9:$VP,18:$VQ,21:$VR,32:188,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},{8:$VO,9:$VP,18:$VQ,21:$VR,32:189,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},{8:$VO,9:$VP,18:$VQ,21:$VR,32:190,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},{8:$VO,9:$VP,18:$VQ,21:$VR,32:191,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},{8:$VO,9:$VP,18:$VQ,21:$VR,32:192,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},{8:$VO,9:$VP,18:$VQ,21:$VR,32:193,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},{8:$VO,9:$VP,18:$VQ,21:$VR,32:194,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},o($Ve1,[2,90]),{8:$VO,9:$VP,18:$VQ,21:$VR,32:195,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},{16:$V11,19:[1,196],41:$V21,42:$V31,43:$V41,44:$V51,45:$V61,46:$V71,47:$V81,48:$V91,49:$Va1,50:$Vb1,51:$Vc1,52:$Vd1},o($Ve1,[2,93]),o($Ve1,[2,100]),{16:$V11,19:[1,197],41:$V21,42:$V31,43:$V41,44:$V51,45:$V61,46:$V71,47:$V81,48:$V91,49:$Va1,50:$Vb1,51:$Vc1,52:$Vd1},{9:[1,198]},{8:[1,199]},{46:[1,200]},{15:[2,71]},{15:[2,60]},{15:[2,65]},o($V8,[2,6],{37:39,34:69,8:$V9,9:$Va,18:$Vb,21:$Vc,31:$Vd,36:$Ve,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw}),o($V8,[2,7]),{8:$V9,9:$Va,18:$Vb,19:[1,201],21:$Vc,31:$Vd,34:69,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{8:$V9,9:$Va,18:$Vb,19:[1,202],21:$Vc,31:$Vd,34:69,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{8:$V9,9:$Va,11:203,18:$Vb,21:$Vc,31:$Vd,34:36,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},{6:13,7:$V0,13:$V1,14:$V2,17:$V3,20:$V4,22:$V5,24:$V6,26:$V7,28:[1,204]},o($Vf1,[2,12]),{9:[1,205]},{9:[1,206]},o($VZ,[2,25]),{16:$V11,41:$V21,42:$V31,43:$V41,44:$V51,45:$V61,46:$V71,47:$V81,48:$V91,49:$Va1,50:$Vb1,51:$Vc1,52:$Vd1,75:[1,207]},o($VZ,[2,27]),{16:$V11,19:[1,208],41:$V21,42:$V31,43:$V41,44:$V51,45:$V61,46:$V71,47:$V81,48:$V91,49:$Va1,50:$Vb1,51:$Vc1,52:$Vd1},{16:$V11,19:[1,209],41:$V21,42:$V31,43:$V41,44:$V51,45:$V61,46:$V71,47:$V81,48:$V91,49:$Va1,50:$Vb1,51:$Vc1,52:$Vd1},o($Vi1,[2,77],{47:$V81,48:$V91,49:$Va1}),o($Vi1,[2,78],{47:$V81,48:$V91,49:$Va1}),o($Ve1,[2,79]),o($Ve1,[2,80]),o($Ve1,[2,81]),o([5,7,13,14,17,19,20,22,24,26,28,30,33,39,40,50,51,75],[2,82],{16:$V11,41:$V21,42:$V31,43:$V41,44:$V51,45:$V61,46:$V71,47:$V81,48:$V91,49:$Va1,52:$Vd1}),o([5,7,13,14,17,19,20,22,24,26,28,30,33,39,40,51,75],[2,83],{16:$V11,41:$V21,42:$V31,43:$V41,44:$V51,45:$V61,46:$V71,47:$V81,48:$V91,49:$Va1,50:$Vb1,52:$Vd1}),o($Vj1,[2,84],{45:$V61,46:$V71,47:$V81,48:$V91,49:$Va1}),o($Vj1,[2,85],{45:$V61,46:$V71,47:$V81,48:$V91,49:$Va1}),o($Vj1,[2,86],{45:$V61,46:$V71,47:$V81,48:$V91,49:$Va1}),o($Vj1,[2,87],{45:$V61,46:$V71,47:$V81,48:$V91,49:$Va1}),o($Vj1,[2,88],{45:$V61,46:$V71,47:$V81,48:$V91,49:$Va1}),o($Vj1,[2,89],{45:$V61,46:$V71,47:$V81,48:$V91,49:$Va1}),{16:$V11,19:[1,210],41:$V21,42:$V31,43:$V41,44:$V51,45:$V61,46:$V71,47:$V81,48:$V91,49:$Va1,50:$Vb1,51:$Vc1,52:$Vd1},o($Ve1,[2,92]),o($VZ,[2,43]),{15:[1,211]},{9:[1,212]},{69:[1,213]},o($V8,[2,8]),o($V8,[2,17]),{8:$V9,9:$Va,18:$Vb,19:[1,214],21:$Vc,31:$Vd,34:69,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},o($V8,[2,11]),{31:[1,215]},o($Vf1,[2,16],{31:[1,216]}),o($VZ,[2,76]),o($VZ,[2,28]),o($VZ,[2,29]),o($Ve1,[2,91]),{9:[1,217]},o($VZ,[2,51]),{15:[2,70]},o($V8,[2,10]),{8:$VO,9:$VP,18:$VQ,21:$VR,32:218,46:$VS,53:$VT,54:$VU,55:$VV,57:$VW,72:$VX,76:$VY},{8:$V9,9:$Va,11:219,18:$Vb,21:$Vc,31:$Vd,34:36,36:$Ve,37:39,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw},o($VZ,[2,50],{40:[1,220]}),o($Vf1,[2,14],{16:$V11,41:$V21,42:$V31,43:$V41,44:$V51,45:$V61,46:$V71,47:$V81,48:$V91,49:$Va1,50:$Vb1,51:$Vc1,52:$Vd1}),o($Vf1,[2,15],{37:39,34:69,8:$V9,9:$Va,18:$Vb,21:$Vc,31:$Vd,36:$Ve,53:$Vf,54:$Vg,55:$Vh,56:$Vi,57:$Vj,58:$Vk,60:$Vl,61:$Vm,62:$Vn,63:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,70:$Vv,71:$Vw}),o($VZ,[2,49])],\ndefaultActions: {12:[2,1],47:[2,52],48:[2,53],50:[2,55],51:[2,56],52:[2,57],55:[2,62],56:[2,63],58:[2,66],59:[2,67],60:[2,68],61:[2,69],106:[2,54],108:[2,58],165:[2,71],166:[2,60],167:[2,65],213:[2,70]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\r\n    const evaluar = require('../Clases/Evaluar');\r\n    const aritmetica= require('../Clases/Expreciones/Operaciones/Aritmetica');\r\n    const relacional = require('../Clases/Expreciones/Operaciones/Relaciones');\r\n    const logica = require('../Clases/Expreciones/Operaciones/Logicas');\r\n    const primitivo = require('../Clases/Expreciones/Primitivo');\r\n    \r\n    const identificador= require('../Clases/Expreciones/Identificador');\r\n    const last= require('../Clases/Expreciones/last');\r\n    const position = require ('../Clases/Expreciones/position');\r\n    const ternario= require('../Clases/Expreciones/Ternario');\r\n    const ast =require('../Clases/AST/Ast');\r\n    const declaracion = require ('../Clases/Instrucciones/Declaracion');\r\n    const asignacion = require ('../Clases/Instrucciones/Asignacion');\r\n    const funcion = require ('../Clases/Instrucciones/Funcion');\r\n    const llamada = require ('../Clases/Instrucciones/Llamada');\r\n    const ejecutar = require ('../Clases/Instrucciones/Ejecutar');\r\n    const Print = require ('../Clases/Instrucciones/Print');\r\n    const Ifs = require ('../Clases/Instrucciones/SentenciaControl/Ifs');\r\n    const While = require ('../Clases/Instrucciones/SentenciaCiclos/While');\r\n    const dowhile =require ('../Clases/Instrucciones/SentenciaCiclos/DoWhile');\r\n    const For =require ('../Clases/Instrucciones/SentenciaCiclos/For');\r\n    const simbolo= require ('../Clases/TablaSimbolos/Simbolos');\r\n    const tipo= require ('../Clases/TablaSimbolos/Tipo');\r\n    const detener = require ('../Clases/Instrucciones/SentenciaTransferencia/Break');\r\n    const continuar = require ('../Clases/Instrucciones/SentenciaTransferencia/continuar');\r\n    const retornar = require ('../Clases/Instrucciones/SentenciaTransferencia/retornar');\r\n    const sw = require ('../Clases/Instrucciones/SentenciaControl/SW');\r\n    const cs = require ('../Clases/Instrucciones/SentenciaControl/CS');\r\n    const acceso= require ('../Clases/xpath/acceso');\r\n    const barrabarra= require ('../Clases/xpath/barrabarra');\r\n    const informacion = require ('../Clases/xpath/informacion');\r\n    const axes = require ('../Clases/xpath/axes');\r\n    const axesbarrabarra = require ('../Clases/xpath/axesbarrabarra');\r\n    const instrucciondoble =require ('../Clases/xpath/intrucciondoble');\r\n    const puntopunto =require ('../Clases/xpath/puntopunto');\r\n    \r\n    const ForXquery= require('../Clases/xquery/ForXquery');\r\n    const whereXquery=require('../Clases/xquery/whereXquery');\r\n    const returnXquery=require('../Clases/xquery/returnXquery');\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0: console.log(\"Reconocio : \"+ yy_.yytext); return 18\nbreak;\ncase 1: console.log(\"Reconocio : \"+ yy_.yytext); return 36\nbreak;\ncase 2: console.log(\"Reconocio : \"+ yy_.yytext); return 31\nbreak;\ncase 3: console.log(\"Reconocio : \"+ yy_.yytext); return 19\nbreak;\ncase 4: console.log(\"Reconocio : \"+ yy_.yytext); return 8\nbreak;\ncase 5: console.log(\"Reconocio : \"+ yy_.yytext); return 27\nbreak;\ncase 6: console.log(\"Reconocio : \"+ yy_.yytext); return 28\nbreak;\ncase 7: console.log(\"Reconocio : \"+ yy_.yytext); return 74\nbreak;\ncase 8: console.log(\"Reconocio : \"+ yy_.yytext); return 75\nbreak;\ncase 9: console.log(\"Reconocio : \"+ yy_.yytext); return 38\nbreak;\ncase 10: console.log(\"Reconocio : \"+ yy_.yytext); return 'PUNTO'\nbreak;\ncase 11: console.log(\"Reconocio : \"+ yy_.yytext); return 'SIGNOO'\nbreak;\ncase 12: console.log(\"Reconocio : \"+ yy_.yytext); return 15\nbreak;\ncase 13: console.log(\"Reconocio : \"+ yy_.yytext); return 43\nbreak;\ncase 14: console.log(\"Reconocio : \"+ yy_.yytext); return 44\nbreak;\ncase 15: console.log(\"Reconocio : \"+ yy_.yytext); return 16\nbreak;\ncase 16: console.log(\"Reconocio : \"+ yy_.yytext); return 41\nbreak;\ncase 17: console.log(\"Reconocio : \"+ yy_.yytext); return 42\nbreak;\ncase 18: console.log(\"Reconocio : \"+ yy_.yytext); return 52\nbreak;\ncase 19: console.log(\"Reconocio : \"+ yy_.yytext); return 15\nbreak;\ncase 20: console.log(\"Reconocio : \"+ yy_.yytext); return 40\nbreak;\ncase 21: console.log(\"Reconocio : \"+ yy_.yytext); return 72\nbreak;\ncase 22: console.log(\"Reconocio : \"+ yy_.yytext); return 45\nbreak;\ncase 23: console.log(\"Reconocio : \"+ yy_.yytext); return 46\nbreak;\ncase 24: console.log(\"Reconocio : \"+ yy_.yytext); return 47\nbreak;\ncase 25: console.log(\"Reconocio : \"+ yy_.yytext); return 48\nbreak;\ncase 26: console.log(\"Reconocio : \"+ yy_.yytext); return 49\nbreak;\ncase 27: console.log(\"Reconocio : \"+ yy_.yytext); return 50\nbreak;\ncase 28: console.log(\"Reconocio : \"+ yy_.yytext); return 51\nbreak;\ncase 29: console.log(\"Reconocio : \"+ yy_.yytext); return 7\nbreak;\ncase 30: console.log(\"Reconocio : \"+ yy_.yytext); return 10\nbreak;\ncase 31: console.log(\"Reconocio : \"+ yy_.yytext); return 14\nbreak;\ncase 32: console.log(\"Reconocio : \"+ yy_.yytext); return 30\nbreak;\ncase 33: console.log(\"Reconocio : \"+ yy_.yytext); return 13\nbreak;\ncase 34: console.log(\"Reconocio : \"+ yy_.yytext); return 33\nbreak;\ncase 35: console.log(\"Reconocio : \"+ yy_.yytext); return 39\nbreak;\ncase 36: console.log(\"Reconocio : \"+ yy_.yytext); return 17\nbreak;\ncase 37: console.log(\"Reconocio : \"+ yy_.yytext); return 20\nbreak;\ncase 38: console.log(\"Reconocio : \"+ yy_.yytext); return 22\nbreak;\ncase 39: console.log(\"Reconocio : \"+ yy_.yytext); return 24\nbreak;\ncase 40: console.log(\"Reconocio : \"+ yy_.yytext); return 25\nbreak;\ncase 41: console.log(\"Reconocio : \"+ yy_.yytext); return 26\nbreak;\ncase 42: console.log(\"Reconocio : \"+ yy_.yytext); return 14\nbreak;\ncase 43: console.log(\"Reconocio : \"+ yy_.yytext); return 21\nbreak;\ncase 44: console.log(\"Reconocio : \"+ yy_.yytext); return 76\nbreak;\ncase 45: console.log(\"Reconocio : \"+ yy_.yytext); return 57\nbreak;\ncase 46: console.log(\"Reconocio : \"+ yy_.yytext); return 58\nbreak;\ncase 47: console.log(\"Reconocio : \"+ yy_.yytext); return 60\nbreak;\ncase 48: console.log(\"Reconocio : \"+ yy_.yytext); return 69\nbreak;\ncase 49: console.log(\"Reconocio : \"+ yy_.yytext); return 62\nbreak;\ncase 50: console.log(\"Reconocio : \"+ yy_.yytext); return 63\nbreak;\ncase 51: console.log(\"Reconocio : \"+ yy_.yytext); return 64\nbreak;\ncase 52: console.log(\"Reconocio : \"+ yy_.yytext); return 65\nbreak;\ncase 53: console.log(\"Reconocio : \"+ yy_.yytext); return 66\nbreak;\ncase 54: console.log(\"Reconocio : \"+ yy_.yytext); return 67\nbreak;\ncase 55: console.log(\"Reconocio : \"+ yy_.yytext); return 68\nbreak;\ncase 56: console.log(\"Reconocio : \"+ yy_.yytext); return 70\nbreak;\ncase 57: console.log(\"Reconocio : \"+ yy_.yytext); return 71\nbreak;\ncase 58: console.log(\"Reconocio : \"+ yy_.yytext); return 76\nbreak;\ncase 59: console.log(\"Reconocio : \"+ yy_.yytext); return 57\nbreak;\ncase 60: console.log(\"Reconocio : \"+ yy_.yytext); return 54\nbreak;\ncase 61: console.log(\"Reconocio : \"+ yy_.yytext); return 53\nbreak;\ncase 62: console.log(\"Reconocio id : \"+ yy_.yytext); return 9\nbreak;\ncase 63: console.log(\"Reconocio : \"+ yy_.yytext); return 55\nbreak;\ncase 64: /* skip whitespace */ \nbreak;\ncase 65:return 5\nbreak;\ncase 66: console.log(\"Error Lexico \"+yy_.yytext\r\n                        +\" linea \"+yy_.yylineno\r\n                        +\" columna \"+(yy_.yylloc.last_column+1));        \r\n                        \nbreak;\n}\n},\nrules: [/^(?:\\()/i,/^(?:\\/\\/)/i,/^(?:\\/)/i,/^(?:\\))/i,/^(?:\\$)/i,/^(?:\\{)/i,/^(?:\\})/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\.\\.)/i,/^(?:\\.)/i,/^(?:\\|)/i,/^(?:::)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:!=)/i,/^(?::)/i,/^(?:,)/i,/^(?:@)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:div\\b)/i,/^(?:mod\\b)/i,/^(?:and\\b)/i,/^(?:or\\b)/i,/^(?:for\\b)/i,/^(?:in\\b)/i,/^(?:let\\b)/i,/^(?:where\\b)/i,/^(?:order by\\b)/i,/^(?:return\\b)/i,/^(?:to\\b)/i,/^(?:if\\b)/i,/^(?:then\\b)/i,/^(?:else\\b)/i,/^(?:declare\\b)/i,/^(?:function\\b)/i,/^(?:as\\b)/i,/^(?:let\\b)/i,/^(?:data\\b)/i,/^(?:last\\(\\))/i,/^(?:position\\(\\))/i,/^(?:ancestor\\b)/i,/^(?:attribute\\b)/i,/^(?:self\\b)/i,/^(?:child\\b)/i,/^(?:descendant\\b)/i,/^(?:following\\b)/i,/^(?:sibling\\b)/i,/^(?:namespace\\b)/i,/^(?:parent\\b)/i,/^(?:preceding\\b)/i,/^(?:text\\(\\))/i,/^(?:node\\(\\))/i,/^(?:last\\(\\))/i,/^(?:position\\(\\))/i,/^(?:[0-9]+(\\.[0-9]+)?\\b)/i,/^(?:([0-9]+))/i,/^(?:([a-zñA-ZÑ_][a-zñA-ZÑ0-9_]*))/i,/^(?:((\"((\\\\([\\'\\\"\\\\ntr]))|([^\\\"\\\\]+))*\")))/i,/^(?:[\\s\\r\\n\\t])/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = XQuery;\nexports.Parser = XQuery.Parser;\nexports.parse = function () { return XQuery.parse.apply(XQuery, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","export default class informacion {\r\n  public id: string;\r\n  public exprecion;\r\n  public tipo;\r\n\r\n  constructor(id: string, exprecion, tipo) {\r\n    this.id = id;\r\n    this.exprecion = exprecion;\r\n    this.tipo = tipo;\r\n  }\r\n}\r\n","import Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport { Expreciones } from \"../Interfaces.ts/Expreciones\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\n\r\nexport default class Atributo implements Expreciones{\r\n\r\n    public identificador:string;\r\n    public valor:string;\r\n    public linea: number;\r\n    public columna: number;\r\n    public posicion3d:string;\r\n    public posicionId3d:string;\r\n    lblTrue: string;\r\n    lblFalse: string;\r\n\r\n    constructor(id:string, valor:string, linea:number, columna:number){\r\n        this.identificador = id;\r\n        this.valor = valor;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n    getvalor3d(controlador: Controlador, ts: TablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    getTipo(controlador: Controlador, ts: TablaSimbolos) {\r\n        return \"atributo\";\r\n    }\r\n    getValor(controlador: Controlador, ts: TablaSimbolos) {\r\n        \r\n\r\n    }\r\n    limpiar() {\r\n     }\r\n    recorrer(): Nodo {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    \r\n} ","\r\nimport ambito from \"./ambito\";\r\nimport contenido from \"./contenido\";\r\nimport Simbolos from \"./Simbolos\";\r\n\r\n\r\nexport class TablaSimbolos{\r\n\r\n    public ant : TablaSimbolos;\r\n    public sig : Array<ambito>=[];\r\n    public tabla : Array<contenido>=[];\r\n    public ambito:string;\r\n    constructor ( ant: TablaSimbolos,ambito?){\r\n        this.ant=ant;\r\n        this.ambito=ambito;\r\n\r\n    }\r\n\r\n    agregar(id: string, simbolo : Simbolos){\r\n        let cont= new contenido(id,simbolo);\r\n        this.tabla.push(cont);\r\n        //this.tabla.set(id.toLowerCase(), simbolo); \r\n    }\r\n\r\n    agregarSiguiente(id:string,sig:TablaSimbolos){\r\n        let amb=new ambito(id,sig);\r\n        this.sig.push(amb);\r\n    }\r\n\r\n    existe(id: string): boolean{\r\n      /*  let ts : TablaSimbolos = this;\r\n\r\n        while(ts != null){\r\n            let existe = ts.tabla.get(id);\r\n\r\n            if(existe != null){\r\n                return true;\r\n            }\r\n            ts = ts.ant;\r\n        }*/\r\n        return false;\r\n    }\r\n\r\n    existeEnActual(id: string): boolean{\r\n      /*  let ts : TablaSimbolos = this;\r\n\r\n        let existe = ts.tabla.get(id);\r\n\r\n        if(existe != null){\r\n            return true;\r\n        }*/\r\n        return false;\r\n    }\r\n\r\n    getSimbolo(id: string,tipoval?){\r\n        let ts : TablaSimbolos = this; \r\n        console.log(\"-----------------\");\r\n        for( let informacion of ts.tabla){\r\n            console.log(informacion.identificador+\"==\"+id  +\" && \"+ tipoval+\"==\"+informacion.sim.simbolo)\r\n            if(informacion.identificador==id && tipoval==informacion.sim.simbolo){\r\n                return informacion.sim;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport { Expreciones } from \"../Interfaces.ts/Expreciones\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\nimport Errores from \"../AST/Errores\";\r\nimport { retorno } from \"./retorno\";\r\nimport Tipo from \"../TablaSimbolos/Tipo\";\r\n\r\nexport default class Identificador implements Expreciones{\r\n\r\n    public identificador : string;\r\n    public linea : number;\r\n    public columna : number;\r\n    public valor:number;\r\n    lblTrue: string;\r\n    lblFalse: string;\r\n\r\n    constructor(identifador, linea, columna,t) {\r\n        this.identificador = identifador;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.valor=t;\r\n    }\r\n    getvalor3d(controlador: Controlador, ts: TablaSimbolos) {\r\n        console.log(\"getValor3D\");\r\n        let existe_id;\r\n        let contador=1;\r\n        for(let tssig of ts.sig){\r\n            if(contador==controlador.posicionid){\r\n                existe_id=tssig.sig.getSimbolo(this.identificador,this.valor);\r\n            }\r\n            contador++;\r\n        }\r\n        console.log(existe_id);\r\n\r\n        if(existe_id!=null){\r\n            const generator = controlador.generador;\r\n            if(typeof existe_id.valor== 'number'){\r\n                return new retorno(existe_id.valor+\"\",false,new Tipo(\"DOBLE\"));\r\n            }else if (typeof existe_id.valor=='string'){\r\n                console.log(\"entre****\");\r\n                console.log(existe_id);\r\n                const temp = generator.newTemporal();\r\n                generator.genAsignacion(temp, 'h');\r\n                for (let i = 0; i < existe_id.valor.length; i++) {\r\n                    generator.genSetHeap('h', existe_id.valor.charCodeAt(i));\r\n                    generator.avanzarHeap();\r\n                }\r\n                generator.genSetHeap('h', '-1');\r\n                generator.avanzarHeap();\r\n                return new retorno(temp, true, new Tipo(\"STRING\"));\r\n            }else{\r\n                console.log(\"no entre\");\r\n            }\r\n        }\r\n    }\r\n    limpiar() {\r\n        \r\n     }\r\n\r\n\r\n    getTipo(controlador: Controlador, ts: TablaSimbolos) {\r\n       /* let existe_id = ts.getSimbolo(this.identificador);\r\n        if(existe_id != null ){\r\n            return existe_id.tipo.type;\r\n        }*/\r\n    }\r\n    getValor(controlador: Controlador, ts: TablaSimbolos) {\r\n\r\n        console.log(\"getValor\");\r\n        let existe_id;\r\n        let contador=1;\r\n        for(let tssig of ts.sig){\r\n            if(contador==controlador.posicionid){\r\n                existe_id=tssig.sig.getSimbolo(this.identificador,this.valor);\r\n            }\r\n            contador++;\r\n        }\r\n        \r\n        if(existe_id != null){\r\n            return existe_id.valor; \r\n        }else{\r\n           /* let error = new Errores('Semantico', `No existe la variable ${this.identificador} en la tabla de simbolos.`, this.linea, this.columna);\r\n            controlador.errores.push(error);\r\n            controlador.append(`Error Semantico : No existe la variable ${this.identificador} en la tabla de simbolos. En la linea ${this.linea} y columan ${this.columna}`);*/\r\n            return null;\r\n        }\r\n    }\r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"Identificador\",\"\");\r\n        padre.AddHijo(new Nodo(this.identificador,\"\"));\r\n       return padre;\r\n    }\r\n\r\n}","import Nodo from \"src/clases/AST/Nodo\";\r\nimport Controlador from \"src/clases/Controlador\";\r\nimport { Expreciones } from \"src/clases/Interfaces.ts/Expreciones\";\r\nimport { Instruccion } from \"src/clases/Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"src/clases/TablaSimbolos/TablaSimbolos\";\r\nimport Detener from \"../SentenciaTransferencia/Break\";\r\nimport Continuar from \"../SentenciaTransferencia/continuar\";\r\nimport retornar from \"../SentenciaTransferencia/retornar\";\r\n\r\n\r\nexport default class DoWhile implements Instruccion{\r\n\r\n    public condicion: Expreciones;\r\n    public lista_instrucciones : Array<Instruccion>;\r\n    public linea : number;\r\n    public columna : number;\r\n\r\n    constructor(condicion, lista_instrucciones, linea, columna) {\r\n        this.condicion = condicion;\r\n        this.lista_instrucciones = lista_instrucciones;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n\r\n    ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n        let valor_condicion = this.condicion.getValor(controlador, ts);\r\n\r\n        if(typeof valor_condicion == 'boolean'){\r\n           do{\r\n                let ts_local = new TablaSimbolos(ts);\r\n                for(let ins of this.lista_instrucciones){\r\n                    let res = ins.ejecutar(controlador,ts_local);\r\n                    if( ins instanceof Detener || res instanceof Detener){\r\n                        controlador.graficarEntornos(controlador,ts_local,\" (While)\");\r\n                        return null;\r\n                    }else{\r\n                        if(ins instanceof Continuar || res instanceof Continuar){\r\n                            break;\r\n                        }else{\r\n                            if( ins instanceof retornar || res instanceof retornar){\r\n                                controlador.graficarEntornos(controlador,ts_local,\" (While)\");\r\n                                return res;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                controlador.graficarEntornos(controlador,ts_local,\" (doWhile)\");\r\n            } while(this.condicion.getValor(controlador,ts));\r\n        }\r\n    }\r\n    \r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"CICLO\",\"\");\r\n        padre.AddHijo(new Nodo(\"do\",\"\"));\r\n        padre.AddHijo(new Nodo(\"{\",\"\"));\r\n        for(let ins of this.lista_instrucciones){\r\n            padre.AddHijo(ins.recorrer());\r\n        }\r\n        padre.AddHijo(new Nodo(\"}\",\"\"));\r\n        padre.AddHijo(new Nodo(\"while\",\"\"));\r\n        padre.AddHijo(new Nodo(\"(\",\"\"));\r\n        padre.AddHijo(this.condicion.recorrer());\r\n        padre.AddHijo(new Nodo(\")\",\"\"));\r\n        return padre;\r\n    }\r\n\r\n} ","import Nodo from \"src/clases/AST/Nodo\";\r\nimport Controlador from \"src/clases/Controlador\";\r\nimport { Expreciones } from \"src/clases/Interfaces.ts/Expreciones\";\r\nimport { Instruccion } from \"src/clases/Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"src/clases/TablaSimbolos/TablaSimbolos\";\r\nimport Detener from \"../SentenciaTransferencia/Break\";\r\nimport Continuar from \"../SentenciaTransferencia/continuar\";\r\nimport retornar from \"../SentenciaTransferencia/retornar\";\r\n\r\nexport default class CS implements Instruccion{\r\n    public lista_instrucciones : Array<Instruccion>;\r\n    public valor_case: Expreciones;\r\n    public valor_sw;\r\n\r\n    constructor(valor_case,lista_intrucciones){\r\n        this.lista_instrucciones=lista_intrucciones;\r\n        this.valor_case=valor_case;\r\n    }\r\n\r\n    ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n        let ts_local= new TablaSimbolos(ts);\r\n        if(this.valor_sw==this.valor_case.getValor(controlador,ts)){\r\n            for(let res of this.lista_instrucciones){\r\n                let ins =res.ejecutar(controlador,ts_local);\r\n                if( ins instanceof Detener || res instanceof Detener){\r\n                    controlador.graficarEntornos(controlador,ts_local,\" (case)\");\r\n                    return ins;\r\n                }else{\r\n                    if(ins instanceof Continuar || res instanceof Continuar){\r\n                        controlador.graficarEntornos(controlador,ts_local,\" (case)\");\r\n                        return ins;\r\n                    }else{\r\n                        if( ins instanceof retornar || res instanceof retornar){\r\n                            controlador.graficarEntornos(controlador,ts_local,\" (case)\");\r\n                            return ins;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        controlador.graficarEntornos(controlador,ts_local,\" (case)\");\r\n    }\r\n\r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"CASE\",\"\");\r\n        padre.AddHijo(new Nodo(\"case\",\"\"));\r\n        padre.AddHijo(this.valor_case.recorrer());\r\n        padre.AddHijo(new Nodo(\":\",\"\"));\r\n        for(let ins of this.lista_instrucciones){\r\n            padre.AddHijo(ins.recorrer());\r\n        }\r\n        return padre;\r\n    }\r\n\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XMLDescendente = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[5,9],$V2=[1,8],$V3=[12,13],$V4=[1,12],$V5=[1,20];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"inicio\":3,\"raices\":4,\"EOF\":5,\"raiz\":6,\"objeto\":7,\"objetos\":8,\"<\":9,\"ID\":10,\"latributos\":11,\"/\":12,\">\":13,\"texto_libre\":14,\"atributos\":15,\"atributo\":16,\"=\":17,\"CADENA\":18,\"TEXTO\":19,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",9:\"<\",10:\"ID\",12:\"/\",13:\">\",17:\"=\",18:\"CADENA\",19:\"TEXTO\"},\r\nproductions_: [0,[3,2],[4,2],[4,1],[6,1],[8,2],[8,1],[7,5],[7,9],[7,9],[11,1],[11,0],[15,2],[15,1],[16,3],[14,2],[14,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n console.log($$[$0-1]); this.$= new ast.default($$[$0-1]);  return this.$; \r\nbreak;\r\ncase 2: case 12:\r\n $$[$0].push($$[$0-1]); this.$ = $$[$0];\r\nbreak;\r\ncase 3: case 13:\r\n this.$ = [$$[$0]]; \r\nbreak;\r\ncase 4:\r\n this.$ = $$[$0] \r\nbreak;\r\ncase 5:\r\n $$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 6:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 7:\r\n this.$ = new Objeto.default($$[$0-3],'',_$[$0-4].first_line, _$[$0-4].first_column,$$[$0-2],[],1); \r\nbreak;\r\ncase 8:\r\n this.$ = new Objeto.default($$[$0-7],$$[$0-4],_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],[],2); \r\nbreak;\r\ncase 9:\r\n this.$ = new Objeto.default($$[$0-7],'',_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],$$[$0-4],2); \r\nbreak;\r\ncase 10: case 16:\r\n this.$ = $$[$0]; \r\nbreak;\r\ncase 11:\r\n this.$ = []; \r\nbreak;\r\ncase 14:\r\n $$[$0] = $$[$0].slice(1, $$[$0].length-1); this.$ = new Atributo.default($$[$0-2], $$[$0], _$[$0-2].first_line, _$[$0-2].first_column);\r\nbreak;\r\ncase 15:\r\n this.$ = $$[$0-1] + $$[$0]; \r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,6:3,7:4,9:$V0},{1:[3]},{5:[1,6]},{4:7,5:[2,3],6:3,7:4,9:$V0},o($V1,[2,4]),{10:$V2},{1:[2,1]},{5:[2,2]},o($V3,[2,11],{11:9,15:10,16:11,10:$V4}),{12:[1,13],13:[1,14]},o($V3,[2,10]),o($V3,[2,13],{16:11,15:15,10:$V4}),{17:[1,16]},{13:[1,17]},{7:21,8:19,9:$V0,14:18,19:$V5},o($V3,[2,12]),{18:[1,22]},o($V1,[2,7]),{9:[1,23]},{7:25,9:[1,24]},{9:[2,16],14:26,19:$V5},{9:[2,6]},o([10,12,13],[2,14]),{12:[1,27]},{10:$V2,12:[1,28]},{9:[2,5]},{9:[2,15]},{10:[1,29]},{10:[1,30]},{13:[1,31]},{13:[1,32]},o($V1,[2,8]),o($V1,[2,9])],\r\ndefaultActions: {6:[2,1],7:[2,2],21:[2,6],25:[2,5],26:[2,15]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n    let $ESPACIOS = \"\";\r\n\r\n      const  Atributo = require ('../Clases/xml/atributo');\r\n      const  Objeto  = require ('../Clases/xml/objeto');\r\n      const ast =require('../Clases/AST/Ast');\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* Ignoro los comentarios simples */\r\nbreak;\r\ncase 1:/* skip whitespace */\r\nbreak;\r\ncase 2: console.log(\"Reconocio : \"+ yy_.yytext); return 18\r\nbreak;\r\ncase 3: console.log(\"Reconocio : \"+ yy_.yytext); return 10\r\nbreak;\r\ncase 4: console.log(\"Reconocio : \"+ yy_.yytext); return 9\r\nbreak;\r\ncase 5: console.log(\"Reconocio : \"+ yy_.yytext); return 17\r\nbreak;\r\ncase 6: console.log(\"Reconocio : \"+ yy_.yytext); return 12\r\nbreak;\r\ncase 7: this.begin(\"S1\"); $ESPACIOS=\"\"; console.log(\"Reconocio : \"+ yy_.yytext); return \">\";\r\nbreak;\r\ncase 8: yy_.yytext = $ESPACIOS + \"<\"; $ESPACIOS=\"\";  console.log(\"Reconocio : \"+ yy_.yytext); return 19; \r\nbreak;\r\ncase 9: yy_.yytext = $ESPACIOS + \">\"; $ESPACIOS=\"\";  console.log(\"Reconocio : \"+ yy_.yytext); return 19; \r\nbreak;\r\ncase 10: yy_.yytext = $ESPACIOS + \"&\"; $ESPACIOS=\"\";  console.log(\"Reconocio : \"+ yy_.yytext); return 19; \r\nbreak;\r\ncase 11: yy_.yytext = $ESPACIOS + \"\\'\"; $ESPACIOS=\"\";  console.log(\"Reconocio : \"+ yy_.yytext); return 19; \r\nbreak;\r\ncase 12: yy_.yytext = $ESPACIOS + \"\\\"\"; $ESPACIOS=\"\";  console.log(\"Reconocio : \"+ yy_.yytext); return 19; \r\nbreak;\r\ncase 13:  /* Ignoro los comentarios simples */\r\nbreak;\r\ncase 14: $ESPACIOS += yy.lexer.match;\r\nbreak;\r\ncase 15: this.begin(\"INITIAL\"); console.log(\"Reconocio : \"+ yy_.yytext); return \"<\";\r\nbreak;\r\ncase 16: yy_.yytext = $ESPACIOS + yy_.yytext; $ESPACIOS=\"\";  console.log(\"Reconocio : \"+ yy_.yytext); return 19; \r\nbreak;\r\ncase 17:return 5\r\nbreak;\r\ncase 18: console.log(\"Error Lexico \"+yy_.yytext\r\n                        +\" linea \"+yy_.yylineno\r\n                        +\" columna \"+(yy_.yylloc.last_column+1));        \r\n                        \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:<!--(.|\\n)*-->)/i,/^(?:\\s+)/i,/^(?:((\"((\\\\([\\'\\\"\\\\ntr]))|([^\\\"\\\\]+))*\")))/i,/^(?:([a-zñA-ZÑ_][a-zñA-ZÑ0-9_]*))/i,/^(?:<)/i,/^(?:=)/i,/^(?:\\/)/i,/^(?:>)/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:<!--(.|\\n)*-->)/i,/^(?:\\s)/i,/^(?:<)/i,/^(?:.)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"S1\":{\"rules\":[0,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,13,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = XMLDescendente;\r\nexports.Parser = XMLDescendente.Parser;\r\nexports.parse = function () { return XMLDescendente.parse.apply(XMLDescendente, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import Errores from \"../AST/Errores\";\r\nimport Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport { Expreciones } from \"../Interfaces.ts/Expreciones\";\r\nimport { Instruccion } from \"../Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\nimport Tipo, { tipo } from \"../TablaSimbolos/Tipo\";\r\n\r\n\r\nexport default class Asignacion implements Instruccion {\r\n\r\n    public identificador: string;\r\n    public valor : Expreciones;\r\n    public linea : number;\r\n    public columna: number;\r\n\r\n    constructor (identificador,valor,linea,columna){\r\n        this.identificador=identificador;\r\n        this.valor=valor;\r\n        this.linea=linea;\r\n        this.columna=columna;\r\n    }\r\n\r\n\r\n\r\n\r\n    ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n        if(ts.existe(this.identificador)){\r\n            let valor=this.valor.getValor(controlador,ts);\r\n            let tipo_valor = this.valor.getTipo(controlador,ts);\r\n            if(ts.getSimbolo(this.identificador).tipo.type==tipo_valor ||  (tipo_valor==tipo.DOBLE && ts.getSimbolo(this.identificador).tipo.type==tipo.ENTERO)){\r\n                ts.getSimbolo(this.identificador).setValor(valor);\r\n            }else if( (tipo_valor==tipo.CADENA && ts.getSimbolo(this.identificador).tipo.type==tipo.CARACTER)){\r\n                if(valor.length==1){\r\n                    ts.getSimbolo(this.identificador).setValor(valor);\r\n                }else{\r\n                    let error = new Errores('Semantico', `La variable ${this.identificador} no se le puede asignar el valor \\\"${valor}\\\" por que son de distinto tipo.`, this.linea, this.columna);\r\n                    controlador.errores.push(error);\r\n                    controlador.append(`Error Semantico : La variable ${this.identificador} no se le puede asignar el valor \\\"${valor}\\\" por que son de distinto tipo. En la linea ${this.linea} y columan ${this.columna}`);    \r\n                }\r\n            }else{\r\n                let error = new Errores('Semantico', `La variable ${this.identificador} no se le puede asignar el valor \\\"${valor}\\\" por que son de distinto tipo.`, this.linea, this.columna);\r\n                controlador.errores.push(error);\r\n                controlador.append(`Error Semantico : La variable ${this.identificador} no se le puede asignar el valor \\\"${valor}\\\" por que son de distinto tipo. En la linea ${this.linea} y columan ${this.columna}`);    \r\n            }\r\n        }else{\r\n                \r\n                let error = new Errores('Semantico', `La variable ${this.identificador} no a sido declarada.`, this.linea, this.columna);\r\n                controlador.errores.push(error);\r\n                controlador.append(`Error Semantico : La variable ${this.identificador} no a sido declarada. En la linea ${this.linea} y columan ${this.columna}`);\r\n                \r\n        }\r\n    }\r\n\r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"Asignacion\",\"\");\r\n           padre.AddHijo(new Nodo(this.identificador,\"\"));\r\n           padre.AddHijo(new Nodo(\"=\",\"\"));\r\n           padre.AddHijo(this.valor.recorrer());\r\n        \r\n        return padre;\r\n    }\r\n\r\n}","import Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport Relaciones from \"../Expreciones/Operaciones/Relaciones\";\r\nimport Primitivo from \"../Expreciones/Primitivo\";\r\nimport { Instruccion } from \"../Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\nimport informacion from \"./informacion\";\r\n\r\nexport default class axesbarrabarra implements Instruccion {\r\n  public tipo: string;\r\n  public exprecion: informacion;\r\n  public sig;\r\n\r\n  constructor(tipo: string, exprecion: informacion, sig) {\r\n    this.tipo = tipo;\r\n    this.exprecion = exprecion;\r\n    this.sig = sig;\r\n  }\r\n\r\n  ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n    if (this.tipo == \"child\") {\r\n      this.child(controlador, ts);\r\n    } else {\r\n      if (this.tipo == \"\") {\r\n      }\r\n    }\r\n  }\r\n\r\n  child(controlador: Controlador, ts: TablaSimbolos){\r\n    if (this.exprecion.exprecion != null) {\r\n      this.isxprecion(controlador, ts);\r\n    } else {\r\n      if (this.sig != null) {\r\n        this.siguiente(controlador, ts);\r\n      } else {\r\n        this.obtenerall(controlador, ts);\r\n      }\r\n    }\r\n  }\r\n\r\n  obtenerall(controlador: Controlador, ts: TablaSimbolos) {\r\n    if (ts != null) {\r\n      for (let informacion of ts.tabla) {\r\n        if (this.exprecion.tipo == 1) {\r\n          if (this.exprecion.id == \"*\" && informacion.sim.simbolo == 1) {\r\n            this.generador3D(informacion, controlador);\r\n          } else {\r\n            if (\r\n              informacion.identificador == this.exprecion.id &&\r\n              informacion.sim.simbolo == 1\r\n            ) {\r\n              this.generador3D(informacion, controlador);\r\n            }\r\n          }\r\n        } else {\r\n          if (\r\n            informacion.identificador == this.exprecion.id &&\r\n            informacion.sim.simbolo == 2\r\n          ) {\r\n            this.generador3DV(informacion, controlador);\r\n          } else {\r\n            if (this.exprecion.id == \"*\" && informacion.sim.simbolo == 2) {\r\n              this.generador3DV(informacion, controlador);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      for (let tssig of ts.sig) {\r\n        this.obtenerall(controlador, tssig.sig);\r\n      }\r\n    }\r\n  }\r\n\r\n  siguiente(controlador: Controlador, ts: TablaSimbolos) {\r\n    if (ts != null) {\r\n      for (let tssig of ts.sig) {\r\n        if (\r\n          this.exprecion.id == tssig.identificador ||\r\n          this.exprecion.id == \"*\"\r\n        ) {\r\n          this.sig.ejecutar(controlador, tssig.sig);\r\n        } else {\r\n          this.siguiente(controlador, tssig.sig);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  isxprecion(controlador: Controlador, ts: TablaSimbolos) {\r\n    controlador.idlast = this.exprecion.id;\r\n    let valor = this.exprecion.exprecion.getValor(controlador, ts);\r\n    if (typeof valor == \"number\") {\r\n      this.isNumero(controlador, ts, valor);\r\n    } else {\r\n      this.esbool(controlador, ts);\r\n    }\r\n  }\r\n\r\n  isNumero(controlador: Controlador, ts: TablaSimbolos, valor) {\r\n    if (this.sig != null) {\r\n      this.siguienteNumero(controlador, ts, valor);\r\n    } else {\r\n      this.obtenerallNumero(controlador, ts, valor);\r\n    }\r\n  }\r\n\r\n  esbool(controlador: Controlador, ts: TablaSimbolos) {\r\n    if (this.sig != null) {\r\n      this.siguienteBool(controlador, ts);\r\n    } else {\r\n      this.obtenerBool(controlador, ts);\r\n    }\r\n  }\r\n\r\n  siguienteNumero(controlador: Controlador, ts: TablaSimbolos, valor) {\r\n    let cont = 1;\r\n    if (ts != null) {\r\n      for (let tssig of ts.sig) {\r\n        if (this.exprecion.id == tssig.identificador) {\r\n          valor = this.exprecion.exprecion.getValor(controlador, ts);\r\n          if (cont == valor) {\r\n            let val1 = new Primitivo(cont, 1, 1, -1);\r\n            let val2 = this.exprecion.exprecion;\r\n            let igual = new Relaciones(val1, \"==\", val2, 1, 1, false);\r\n            controlador.exprecion = igual;\r\n            controlador.ts = ts;\r\n            this.sig.ejecutar(controlador, tssig.sig);\r\n          }\r\n          cont++;\r\n        } else {\r\n          this.siguienteNumero(controlador, tssig.sig, valor);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  obtenerallNumero(controlador: Controlador, ts: TablaSimbolos, valor) {\r\n    let cont = 1;\r\n    if (ts != null) {\r\n      for (let informacion of ts.tabla) {\r\n        if (informacion.identificador == this.exprecion.id) {\r\n          valor = this.exprecion.exprecion.getValor(controlador, ts);\r\n          if (cont == valor) {\r\n            let val1 = new Primitivo(cont, 1, 1, -1);\r\n            let val2 = this.exprecion.exprecion;\r\n            let igual = new Relaciones(val1, \"==\", val2, 1, 1, false);\r\n            let salida = igual.getvalor3d(controlador, ts);\r\n            controlador.generador.genLabel(salida.lblTrue);\r\n            controlador.append(informacion.sim.objeto.gethtml(\"\", controlador));\r\n            controlador.generador.genPrint(\"c\", \"10\");\r\n            controlador.generador.genLabel(salida.lblFalse);\r\n            igual.limpiar();\r\n          }\r\n          cont++;\r\n        }\r\n      }\r\n      for (let tssig of ts.sig) {\r\n        this.obtenerallNumero(controlador, tssig.sig, valor);\r\n      }\r\n    }\r\n  }\r\n\r\n  siguienteBool(controlador: Controlador, ts: TablaSimbolos) {\r\n    let cont = 1;\r\n    let posicion = 1;\r\n    if (ts != null) {\r\n      for (let tssig of ts.sig) {\r\n        if (this.exprecion.id == tssig.identificador) {\r\n          controlador.position = cont;\r\n          controlador.posicionid = posicion;\r\n          if (this.exprecion.exprecion.getValor(controlador, ts)) {\r\n            controlador.exprecion = this.exprecion.exprecion;\r\n            controlador.ts = ts;\r\n            this.sig.ejecutar(controlador, tssig.sig);\r\n          }\r\n          cont++;\r\n        } else {\r\n          this.siguienteBool(controlador, tssig.sig);\r\n        }\r\n        posicion++;\r\n      }\r\n    }\r\n  }\r\n\r\n  obtenerBool(controlador: Controlador, ts: TablaSimbolos) {\r\n    let cont = 1;\r\n    let posicion = 1;\r\n    if (ts != null) {\r\n      for (let informacion of ts.tabla) {\r\n        if (informacion.identificador == this.exprecion.id) {\r\n          controlador.position = cont;\r\n          controlador.posicionid = posicion;\r\n          if (this.exprecion.exprecion.getValor(controlador, ts)) {\r\n            let salida = this.exprecion.exprecion.getvalor3d(controlador, ts);\r\n            controlador.generador.genLabel(salida.lblTrue);\r\n            controlador.append(informacion.sim.objeto.gethtml(\"\", controlador));\r\n            controlador.generador.genPrint(\"c\", \"10\");\r\n            controlador.generador.genLabel(salida.lblFalse);\r\n            this.exprecion.exprecion.limpiar();\r\n          }\r\n          cont++;\r\n        }\r\n        posicion++;\r\n      }\r\n      for (let tssig of ts.sig) {\r\n        this.obtenerBool(controlador, tssig.sig);\r\n      }\r\n    }\r\n  }\r\n\r\n  generador3D(informacion, controlador: Controlador) {\r\n    if (controlador.exprecion != null) {\r\n      let salida = controlador.exprecion.getvalor3d(\r\n        controlador,\r\n        controlador.ts\r\n      );\r\n      controlador.generador.genLabel(salida.lblTrue);\r\n      controlador.append(informacion.sim.objeto.gethtml(\"\", controlador));\r\n      controlador.generador.genPrint(\"c\", \"10\");\r\n      controlador.generador.genLabel(salida.lblFalse);\r\n      controlador.exprecion.limpiar();\r\n    } else {\r\n      controlador.append(informacion.sim.objeto.gethtml(\"\", controlador));\r\n      controlador.generador.genPrint(\"c\", \"10\");\r\n    }\r\n  }\r\n\r\n  generador3DV(informacion, controlador: Controlador) {\r\n    if (controlador.exprecion != null) {\r\n      let salida = controlador.exprecion.getvalor3d(\r\n        controlador,\r\n        controlador.ts\r\n      );\r\n      controlador.generador.genLabel(salida.lblTrue);\r\n      controlador.generador.genSetStack(\"p\", informacion.sim.objeto.posicion3d);\r\n      controlador.generador.genCall(\"nativa_print_str\");\r\n      controlador.generador.genPrint(\"c\", \"10\");\r\n      controlador.generador.genLabel(salida.lblFalse);\r\n      controlador.exprecion.limpiar();\r\n      controlador.append(informacion.sim.valor + \"\\n\");\r\n    } else {\r\n      controlador.generador.genSetStack(\"p\", informacion.sim.objeto.posicion3d);\r\n      controlador.generador.genCall(\"nativa_print_str\");\r\n      controlador.generador.genPrint(\"c\", \"10\");\r\n      controlador.append(informacion.sim.valor);\r\n    }\r\n  }\r\n\r\n\r\n  recorrer(): Nodo {\r\n    let padre = new Nodo(\"//\", \"\");\r\n    padre.AddHijo(new Nodo(\"Child::\" + this.exprecion.id, \"\"));\r\n    if (this.exprecion.exprecion != null) {\r\n      padre.AddHijo(new Nodo(\"[\", \"\"));\r\n      padre.AddHijo(this.exprecion.exprecion.recorrer());\r\n      padre.AddHijo(new Nodo(\"]\", \"\"));\r\n    }\r\n    if (this.sig != null) {\r\n      padre.AddHijo(this.sig.recorrer());\r\n    }\r\n    return padre;\r\n  }\r\n}\r\n","import Nodo from \"src/clases/AST/Nodo\";\r\nimport Controlador from \"src/clases/Controlador\";\r\nimport { Instruccion } from \"src/clases/Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"src/clases/TablaSimbolos/TablaSimbolos\";\r\n\r\n\r\nexport default class Detener implements Instruccion{\r\n\r\n    constructor(){\r\n\r\n    }\r\n    ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n        return this;\r\n    }\r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"BREAK\",\"\");\r\n        return padre;\r\n    }\r\n\r\n}\r\n","import Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport Relaciones from \"../Expreciones/Operaciones/Relaciones\";\r\nimport Primitivo from \"../Expreciones/Primitivo\";\r\nimport { Instruccion } from \"../Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\nimport informacion from \"./informacion\";\r\n\r\nexport default class acceso implements Instruccion {\r\n  public exprecion: informacion;\r\n  public sig;\r\n\r\n  constructor(exprecion: informacion, sig) {\r\n    this.exprecion = exprecion;\r\n    this.sig = sig;\r\n  }\r\n\r\n  ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n    if (this.exprecion.exprecion != null) {\r\n      this.isxprecion(controlador, ts);\r\n    } else {\r\n      if (this.sig != null) {\r\n        for (let tssig of ts.sig) {\r\n          if (this.exprecion.id == \"*\") {\r\n            this.sig.ejecutar(controlador, tssig.sig);\r\n          } else {\r\n            if (this.exprecion.id == tssig.identificador) {\r\n              this.sig.ejecutar(controlador, tssig.sig);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        for (let informacion of ts.tabla) {\r\n          if (this.exprecion.tipo == 1) {\r\n            if (this.exprecion.id == \"*\") {\r\n              this.generador3D(informacion, controlador);\r\n            } else {\r\n              if (\r\n                informacion.identificador == this.exprecion.id &&\r\n                informacion.sim.simbolo == 1\r\n              ) {\r\n                this.generador3D(informacion, controlador);\r\n              }\r\n            }\r\n          } else {\r\n            if (\r\n              informacion.identificador == this.exprecion.id &&\r\n              informacion.sim.simbolo == 2\r\n            ) {\r\n              this.generador3DV(informacion, controlador);\r\n            } else {\r\n              if (this.exprecion.id == \"*\" && informacion.sim.simbolo == 2) {\r\n                this.generador3DV(informacion, controlador);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  isxprecion(controlador: Controlador, ts: TablaSimbolos) {\r\n    controlador.idlast = this.exprecion.id;\r\n    let valor = this.exprecion.exprecion.getValor(controlador, ts);\r\n    // this.exprecion.exprecion.getvalor3d(controlador,ts);\r\n    if (typeof valor == \"number\") {\r\n      this.isNumero(controlador, ts, valor);\r\n    } else {\r\n      this.isboolean(controlador, ts);\r\n    }\r\n  }\r\n\r\n  isNumero(controlador: Controlador, ts: TablaSimbolos, posicion: number) {\r\n    let cont = 1;\r\n    if (this.sig != null) {\r\n      for (let tssig of ts.sig) {\r\n        if (this.exprecion.id == tssig.identificador) {\r\n          if (cont == posicion) {\r\n            let val1 = new Primitivo(cont, 1, 1, -1);\r\n            let val2 = this.exprecion.exprecion;\r\n            let igual = new Relaciones(val1, \"==\", val2, 1, 1, false);\r\n            controlador.exprecion = igual;\r\n            controlador.ts = ts;\r\n            this.sig.ejecutar(controlador, tssig.sig);\r\n          }\r\n          cont++;\r\n        }\r\n      }\r\n    } else {\r\n      for (let informacion of ts.tabla) {\r\n        if (informacion.identificador == this.exprecion.id) {\r\n          if (cont == posicion) {\r\n            let val1 = new Primitivo(cont, 1, 1, -1);\r\n            let val2 = this.exprecion.exprecion;\r\n            let igual = new Relaciones(val1, \"==\", val2, 1, 1, false);\r\n            let salida = igual.getvalor3d(controlador, ts);\r\n            controlador.generador.genLabel(salida.lblTrue);\r\n            controlador.append(informacion.sim.objeto.gethtml(\"\", controlador));\r\n            controlador.generador.genPrint(\"c\", \"10\");\r\n            controlador.generador.genLabel(salida.lblFalse);\r\n            igual.limpiar();\r\n          }\r\n          cont++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  isboolean(controlador: Controlador, ts: TablaSimbolos) {\r\n    let posicion = 1;\r\n    console.log(\"entre\");\r\n    let cont = 1;\r\n    if (this.sig != null) {\r\n      for (let tssig of ts.sig) {\r\n        if (this.exprecion.id == tssig.identificador) {\r\n          controlador.position = cont;\r\n          controlador.posicionid = posicion;\r\n          if (this.exprecion.exprecion.getValor(controlador, ts)) {\r\n            controlador.exprecion = this.exprecion.exprecion;\r\n            controlador.ts = ts;\r\n            this.sig.ejecutar(controlador, tssig.sig);\r\n          }\r\n          cont++;\r\n        }\r\n        posicion++;\r\n      }\r\n    } else {\r\n      for (let informacion of ts.tabla) {\r\n        if (informacion.identificador == this.exprecion.id) {\r\n          controlador.position = cont;\r\n          controlador.posicionid = posicion;\r\n          if (this.exprecion.exprecion.getValor(controlador, ts)) {\r\n            let salida = this.exprecion.exprecion.getvalor3d(controlador, ts);\r\n            controlador.generador.genLabel(salida.lblTrue);\r\n            controlador.append(informacion.sim.objeto.gethtml(\"\", controlador));\r\n            controlador.generador.genPrint(\"c\", \"10\");\r\n            controlador.generador.genLabel(salida.lblFalse);\r\n\r\n            this.exprecion.exprecion.limpiar();\r\n          }\r\n          cont++;\r\n        }\r\n        posicion++;\r\n      }\r\n    }\r\n  }\r\n\r\n  generador3D(informacion, controlador: Controlador) {\r\n    if (controlador.exprecion != null) {\r\n      let salida = controlador.exprecion.getvalor3d(\r\n        controlador,\r\n        controlador.ts\r\n      );\r\n      controlador.generador.genLabel(salida.lblTrue);\r\n      controlador.append(informacion.sim.objeto.gethtml(\"\", controlador));\r\n      controlador.generador.genPrint(\"c\", \"10\");\r\n      controlador.generador.genLabel(salida.lblFalse);\r\n      controlador.exprecion.limpiar();\r\n    } else {\r\n      controlador.append(informacion.sim.objeto.gethtml(\"\", controlador));\r\n      controlador.generador.genPrint(\"c\", \"10\");\r\n    }\r\n  }\r\n\r\n  generador3DV(informacion, controlador: Controlador) {\r\n    if (controlador.exprecion != null) {\r\n      let salida = controlador.exprecion.getvalor3d(\r\n        controlador,\r\n        controlador.ts\r\n      );\r\n      controlador.generador.genLabel(salida.lblTrue);\r\n      controlador.generador.genSetStack(\"p\", informacion.sim.objeto.posicion3d);\r\n      controlador.generador.genCall(\"nativa_print_str\");\r\n      controlador.generador.genPrint(\"c\", \"10\");\r\n      controlador.generador.genLabel(salida.lblFalse);\r\n      controlador.exprecion.limpiar();\r\n      controlador.append(informacion.sim.valor + \"\\n\");\r\n    } else {\r\n      controlador.generador.genSetStack(\"p\", informacion.sim.objeto.posicion3d);\r\n      controlador.generador.genCall(\"nativa_print_str\");\r\n      controlador.generador.genPrint(\"c\", \"10\");\r\n      controlador.append(informacion.sim.valor);\r\n    }\r\n  }\r\n\r\n  recorrer(): Nodo {\r\n    let padre = new Nodo(\"/\", \"\");\r\n    padre.AddHijo(new Nodo(this.exprecion.id, \"\"));\r\n    if (this.exprecion.exprecion != null) {\r\n      padre.AddHijo(new Nodo(\"[\", \"\"));\r\n      padre.AddHijo(this.exprecion.exprecion.recorrer());\r\n      padre.AddHijo(new Nodo(\"]\", \"\"));\r\n    }\r\n\r\n    if (this.sig != null) {\r\n      padre.AddHijo(this.sig.recorrer());\r\n    }\r\n    return padre;\r\n  }\r\n}\r\n","import Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport { Instruccion } from \"../Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\n\r\nexport default class returnXquery implements Instruccion {\r\n    public id:string;\r\n    public expreciones;\r\n\r\n    constructor(id,expreciones?){\r\n        this.id=id;\r\n        this.expreciones=expreciones;\r\n    }\r\n    ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n        \r\n    }\r\n    recorrer(): Nodo {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}","import Simbolos from \"./Simbolos\";\r\n\r\nexport default class contenido {\r\n    public identificador:string;\r\n    public sim:Simbolos;\r\n    constructor(identificador:string,sim:Simbolos){\r\n        this.identificador=identificador;\r\n        this.sim=sim;\r\n    }\r\n    \r\n}","import { Component } from '@angular/core';\r\nimport Controlador from 'src/clases/Controlador';\r\nimport Evaluar from 'src/clases/Evaluar';\r\nimport { TablaSimbolos } from 'src/clases/TablaSimbolos/TablaSimbolos';\r\nimport * as Analizador from '../clases/Analizar'\r\nimport * as xpath from \"../Analizadores/gramatica\"\r\nimport * as xml from \"../Analizadores/XML\";\r\nimport Nodo from 'src/clases/AST/Nodo';\r\nimport * as ReXML from '../Analizadores/XmlReporteGramatica';\r\nimport * as RexPath from '../Analizadores/xPathReporteGramatica';\r\nimport * as vis from \"vis\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  \r\n  entradaxpath : string  = \"\";\r\n  consola : string = \"\";\r\n  entradaxml:string=\"\";\r\n  htmlts: string =\"\";\r\n  htmlerrores: string =\"\";\r\n  reporteGramatical: string = \"\";\r\n  xpathRG: string = \"\";\r\n  \r\n\r\n\r\n  recorrer(): void{\r\n  \r\n   let ana = new Analizador.Analizador();\r\n    if(this.entradaxml != \"\"){\r\n      console.log(\"Vamos a graficar\");\r\n      let nodo_ast: Nodo= ana.recorrer(this.entradaxml);\r\n      let grafo = nodo_ast.GraficarSintactico();  //Aqui tenemos la cadena de graphviz para graficar\r\n      console.log(grafo);\r\n      \r\n      const container = document.getElementById(\"app\");\r\n      var parsedData = vis.network.convertDot(grafo);\r\n\r\n      var data = {\r\n        nodes: parsedData.nodes,\r\n        edges: parsedData.edges\r\n      };\r\n\r\n      var options = parsedData.options;\r\n\r\n      options.layout = {\r\n        \"hierarchical\": true\r\n      }\r\n\r\n      options.nodes = {\r\n        shape : \"box\",\r\n        color : \"#97C2FC\",\r\n        arrows: \"to\"\r\n      };\r\n\r\n      var network = new vis.Network(container, data, options);\r\n    }\r\n  }\r\n\r\n  recorrerDes(): void{\r\n  \r\n    let ana = new Analizador.Analizador();\r\n     if(this.entradaxml != \"\"){\r\n       console.log(\"Vamos a graficar\");\r\n       let nodo_ast: Nodo= ana.recorrerDes(this.entradaxml);\r\n       let grafo = nodo_ast.GraficarSintactico();  //Aqui tenemos la cadena de graphviz para graficar\r\n       console.log(grafo);\r\n       \r\n       const container = document.getElementById(\"app\");\r\n       var parsedData = vis.network.convertDot(grafo);\r\n \r\n       var data = {\r\n         nodes: parsedData.nodes,\r\n         edges: parsedData.edges\r\n       };\r\n \r\n       var options = parsedData.options;\r\n \r\n       options.layout = {\r\n         \"hierarchical\": true\r\n       }\r\n \r\n       options.nodes = {\r\n         color: \"cyan\"\r\n       };\r\n \r\n       var network = new vis.Network(container, data, options);\r\n     }\r\n   }\r\n\r\n   xprecorrerDes(): void{\r\n  \r\n    let ana = new Analizador.Analizador();\r\n     if(this.entradaxpath != \"\"){\r\n       console.log(\"Vamos a graficar\");\r\n       let nodo_ast: Nodo= ana.recorrerDesxpath(this.entradaxpath);\r\n       let grafo = nodo_ast.GraficarSintactico();  //Aqui tenemos la cadena de graphviz para graficar\r\n       console.log(grafo);\r\n       \r\n       const container = document.getElementById(\"app\");\r\n       var parsedData = vis.network.convertDot(grafo);\r\n \r\n       var data = {\r\n         nodes: parsedData.nodes,\r\n         edges: parsedData.edges\r\n       };\r\n \r\n       var options = parsedData.options;\r\n \r\n       options.layout = {\r\n         \"hierarchical\": true\r\n       }\r\n \r\n       options.nodes = {\r\n         color: \"cyan\"\r\n       };\r\n \r\n       var network = new vis.Network(container, data, options);\r\n     }\r\n   }\r\n\r\n  ejecutar():void {\r\n    let ana =new Analizador.Analizador();\r\n    this.consola=\"\";\r\n\r\n    if(this.entradaxml !=\"\"){\r\n      let ejecutar =ana.ejecutar(this.entradaxml,this.entradaxpath);\r\n      this.consola=ejecutar.consola;\r\n      this.htmlts=ejecutar.ts;\r\n     /* this.htmlerrores = ejecutar.errores;*/\r\n    }\r\n  }\r\n\r\n  traducir3D():void {\r\n    let ana= new Analizador.Analizador();\r\n    if(this.entradaxml !=null){\r\n      let ejecutar=ana.traducirxml(this.entradaxml,this.entradaxpath);\r\n      this.consola=ejecutar.consola;\r\n    }\r\n  }\r\n    \r\n  traducir3DXquery():void {\r\n    let ana= new Analizador.Analizador();\r\n    if(this.entradaxml !=null){\r\n      let ejecutar=ana.traducirXquery(this.entradaxml,this.entradaxpath);\r\n      this.consola=ejecutar.consola;\r\n    }\r\n  }\r\n  imprimirTabla() {\r\n    \r\n    let ana =new Analizador.Analizador();\r\n    if(this.entradaxml != \"\"){\r\n      let ast = ReXML.parse(this.entradaxml);\r\n      let ast1 = RexPath.parse(this.entradaxpath);\r\n      this.xpathRG = ast1;\r\n      this.reporteGramatical = ast;\r\n    }\r\n    \r\n      \r\n  }\r\n\r\n  ejecutarDescendente():void{\r\n    let ana =new Analizador.Analizador();\r\n    this.consola=\"\";\r\n    if(this.entradaxml !=\"\"){\r\n      let ejecutar =ana.ejecutarDes(this.entradaxml,this.entradaxpath);\r\n      this.consola=ejecutar.consola;\r\n      this.htmlts=ejecutar.ts;\r\n     /* this.htmlerrores = ejecutar.errores;*/\r\n    }\r\n  }\r\n\r\n\r\n\r\n  openPage(pageName,valor) {\r\n\r\n    if(valor==1){\r\n      document.getElementById(\"tablasimbols\").innerHTML = this.htmlts;\r\n    }else if (valor == 2){\r\n      document.getElementById(\"tablasimbols\").innerHTML = this.htmlerrores;\r\n    }else if(valor==3){\r\n      this.recorrer();\r\n    }\r\n    \r\n    // Hide all elements with class=\"tabcontent\" by default */\r\n    var i, tabcontent, tablinks;\r\n    tabcontent = document.getElementsByClassName(\"tabcontent\");\r\n    \r\n    for (i = 0; i < tabcontent.length; i++) {\r\n      tabcontent[i].style.display = \"none\";\r\n    }\r\n  \r\n    // Remove the background color of all tablinks/buttons\r\n    tablinks = document.getElementsByClassName(\"tablink\");\r\n    for (i = 0; i < tablinks.length; i++) {\r\n      tablinks[i].style.backgroundColor = \"\";\r\n    }\r\n  \r\n    document.getElementById(pageName).style.display = \"block\";\r\n  \r\n  }\r\n\r\n  ejecutarXquery(){\r\n    let ana =new Analizador.Analizador();\r\n    this.consola=\"\";\r\n      let ejecutar=ana.ejecutarXquery(this.entradaxml,this.entradaxpath);\r\n      this.consola=ejecutar.consola;\r\n      this.htmlts=ejecutar.ts;\r\n  }\r\n}\r\n","\r\n\r\n<ul class=\"nav grey lighten-4 py-4\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link disabled\" href=\"#!\">Organización de Lenguajes y \r\n      Compiladores 2</a>\r\n</li>\r\n\r\n<li class=\"nav-item dropdown\" dropdown  >\r\n  <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>\r\n    Ejecutar <span class=\"caret\"></span></a>\r\n  <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\r\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect (click)=\"ejecutar()\">Ejecutar Ascendente</a>\r\n    <div class=\"divider dropdown-divider\"></div>\r\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect (click)=\"ejecutarDescendente()\">Ejecutar Descendente</a>\r\n    <div class=\"divider dropdown-divider\"></div>\r\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect (click)=\"traducir3D()\">Traducir 3D XPAHT</a>\r\n    <div class=\"divider dropdown-divider\"></div>\r\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect (click)=\"ejecutarXquery()\">Ejecutar XQuery</a>\r\n    <div class=\"divider dropdown-divider\"></div>\r\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect (click)=\"traducir3DXquery()\">Traducir 3D XQuery</a>\r\n  </div>\r\n</li>\r\n<li class=\"nav-item dropdown\" dropdown  >\r\n  <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>\r\n    Arbol <span class=\"caret\"></span></a>\r\n  <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\r\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect (click)=\"recorrer()\">Arbol AST Ascendente XML</a>\r\n    <div class=\"divider dropdown-divider\"></div>\r\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect (click)=\"ejecutarDescendente()\">Arbol AST Descendente XML</a>\r\n    <div class=\"divider dropdown-divider\"></div>\r\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect (click)=\"xprecorrerDes()\">Arbol AST Descendente XPAHT</a>\r\n  </div>\r\n</li>\r\n\r\n<li class=\"nav-item dropdown\" dropdown  >\r\n  <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>\r\n    Reportes<span class=\"caret\"></span></a>\r\n  <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\r\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect (click)=\"imprimirTabla()\">Gramatical</a>\r\n    <div class=\"divider dropdown-divider\"></div>\r\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Errores léxico</a>\r\n    <div class=\"divider dropdown-divider\"></div>\r\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Errores sintáctico</a>\r\n    <div class=\"divider dropdown-divider\"></div>\r\n    <a class=\"dropdown-item waves-light\" (click)=\"openPage('TablaSim',2)\"   mdbWavesEffect href=\"#\">Errores el semántico</a>\r\n    <div class=\"divider dropdown-divider\"></div>\r\n    </div>\r\n</li>\r\n\r\n<li class=\"nav-item\">\r\n<button mdbBtn   (click)=\"openPage('TablaSim',1)\"  type=\"button\" color=\"default\" rounded=\"true\" outline=\"true\" mdbWavesEffect>Tabla de Símbolos</button>\r\n</li>\r\n</ul>\r\n<br> \r\n<div class=\"container-fluid\">\r\n<mdb-card>\r\n  \r\n  <mdb-card-body>\r\n    <mdb-card-title>\r\n      <h5>XPAHT</h5>\r\n    </mdb-card-title>\r\n    <div class=\"col\">\r\n      <ngx-codemirror\r\n      [(ngModel)]=\"entradaxpath\"\r\n      [options]=\"{\r\n      lineNumbers: true,\r\n      theme: 'material',\r\n      mode: 'markdown'\r\n      }\"\r\n    ></ngx-codemirror>\r\n    </div>\r\n  </mdb-card-body>\r\n</mdb-card>\r\n<br>\r\n</div>\r\n<div class=\"container-fluid\">\r\n<div class=\"row\">\r\n  <div class=\"col-sm-6 mb-3 mb-md-0\">\r\n    <mdb-card>\r\n      <mdb-card-body>\r\n        <mdb-card-title>\r\n          <h5>XML</h5>\r\n        </mdb-card-title>\r\n        <div class=\"col\">\r\n          <ngx-codemirror\r\n          [(ngModel)]=\"entradaxml\"\r\n          [options]=\"{\r\n          lineNumbers: true,\r\n          theme: 'material',\r\n          mode: 'markdown'\r\n          }\"\r\n        ></ngx-codemirror>\r\n        </div>\r\n      </mdb-card-body>\r\n    </mdb-card>\r\n  </div>\r\n  <div class=\"col-sm-6\">\r\n    <mdb-card>\r\n      <mdb-card-body>\r\n        <mdb-card-title>\r\n          <h5>Consola</h5>\r\n        </mdb-card-title>\r\n        <div class=\"col\">\r\n          <ngx-codemirror\r\n          [(ngModel)]=\"consola\"\r\n          [options]=\"{\r\n          lineNumbers: true,\r\n          theme: 'material',\r\n          mode: 'markdown'\r\n          }\"\r\n        ></ngx-codemirror>\r\n        </div>\r\n      </mdb-card-body>\r\n    </mdb-card>\r\n  </div>\r\n</div>\r\n\r\n<br>\r\n  <div id=\"TablaSim\" class=\"tabcontent\" style=\"background-color: #1b1d1c;\">\r\n    <table mdbTable id= \"tablasimbols\" style=\"width:100%\" bordered=\"true\">\r\n    \r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n<br>\r\n  <div id=\"ast\" class=\"tabcontent\" style=\"background-color: #1b1d1c;\">\r\n    <div class=\"overflow-auto\" id=\"graph\" style=\"text-align: center;\"></div>\r\n  </div>\r\n\r\n \r\n\r\n          \r\n    <mdb-card>\r\n      <mdb-card-body>\r\n        <mdb-card-title>\r\n          <h5>REPORTE GRAMATICAL</h5>\r\n        </mdb-card-title>\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-6 mb-3 mb-md-0\">\r\n            <mdb-card-title>\r\n              <h5>XML</h5>\r\n            </mdb-card-title>\r\n            <ngx-codemirror\r\n            [(ngModel)]=\"reporteGramatical\"\r\n            [options]=\"{\r\n            lineNumbers: true,\r\n            theme: 'material',\r\n            mode: 'markdown'\r\n            }\"\r\n          ></ngx-codemirror>\r\n          </div>\r\n          <div class=\"col-sm-6\">\r\n            <mdb-card-title>\r\n              <h5>XPATH</h5>\r\n            </mdb-card-title>\r\n            <ngx-codemirror\r\n            [(ngModel)]=\"xpathRG\"\r\n            [options]=\"{\r\n            lineNumbers: true,\r\n            theme: 'material',\r\n            mode: 'markdown'\r\n            }\"\r\n          ></ngx-codemirror>\r\n          </div>\r\n        </div>\r\n      </mdb-card-body>\r\n    </mdb-card>\r\n    <br>\r\n    \r\n      <mdb-card>\r\n        \r\n        <mdb-card-body>\r\n          <mdb-card-title>\r\n            <h5>Arbol</h5>\r\n          </mdb-card-title>\r\n          <div id=\"app\"></div>\r\n        </mdb-card-body>\r\n      </mdb-card>\r\n      <br>\r\n    \r\n\r\n    \r\n<script type=\"text/javascript\"></script>","import Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport { Expreciones } from \"../Interfaces.ts/Expreciones\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\nimport Tipo from \"../TablaSimbolos/Tipo\";\r\nimport { retorno } from \"./retorno\";\r\n\r\nexport default class position implements Expreciones{\r\n    lblTrue: string;\r\n    lblFalse: string;\r\n    getvalor3d(controlador: Controlador, ts: TablaSimbolos) {\r\n        return new retorno(controlador.position+\"\",false,new Tipo(\"DOBLE\"));\r\n    }\r\n\r\n    getTipo(controlador: Controlador, ts: TablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getValor(controlador: Controlador, ts: TablaSimbolos) {\r\n        return controlador.position;\r\n    }\r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"position();\",\"\");\r\n        return padre;\r\n    }\r\n    limpiar() {\r\n        \r\n     }\r\n\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xPathReporteGramatica = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,6],$V2=[1,8],$V3=[1,9],$V4=[1,10],$V5=[1,11],$V6=[1,12],$V7=[1,13],$V8=[1,14],$V9=[1,15],$Va=[1,16],$Vb=[1,17],$Vc=[1,18],$Vd=[1,19],$Ve=[1,20],$Vf=[1,21],$Vg=[1,22],$Vh=[1,23],$Vi=[5,7],$Vj=[1,30],$Vk=[1,31],$Vl=[1,32],$Vm=[5,7,9,11,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31],$Vn=[1,37],$Vo=[1,55],$Vp=[1,56],$Vq=[1,57],$Vr=[1,52],$Vs=[1,59],$Vt=[1,53],$Vu=[1,54],$Vv=[1,58],$Vw=[1,64],$Vx=[1,65],$Vy=[1,63],$Vz=[1,66],$VA=[1,67],$VB=[1,68],$VC=[1,70],$VD=[1,71],$VE=[1,72],$VF=[1,73],$VG=[1,74],$VH=[1,75],$VI=[32,33,35,38,39,40,41,42,43,44,45,46,47,48],$VJ=[32,33,38,39,42,43,44,45,46,47,48],$VK=[33,38,42,43,44,45,46,47,48];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"inicio\":3,\"varias\":4,\"EOF\":5,\"instrucciones\":6,\"SIGNOO\":7,\"instruccion\":8,\"BARRA\":9,\"e\":10,\"BARRABARRA\":11,\"RESERV\":12,\"DOSPUNTOS\":13,\"PUNTOPUNTO\":14,\"ID\":15,\"LAST\":16,\"POSITION\":17,\"ANCESTOR\":18,\"RESERVLARGE\":19,\"ATTRIBUTE\":20,\"ANCESORSELF\":21,\"CHILD\":22,\"DESCENDANT\":23,\"FOLLOWING\":24,\"NAMESPACE\":25,\"PARENT\":26,\"PRECENDING\":27,\"SELF\":28,\"TEXT\":29,\"NODE\":30,\"SIBLING\":31,\"MENOS\":32,\"OR\":33,\"ARROBA\":34,\"ASTERISCO\":35,\"CORA\":36,\"OPERADORES\":37,\"CORC\":38,\"MAS\":39,\"DIV\":40,\"MODULO\":41,\"AND\":42,\"MAYORQUE\":43,\"MAYORIGUAL\":44,\"MENORQUE\":45,\"MENORIGUAL\":46,\"DIFERENTE\":47,\"IGUAL\":48,\"DECIMAL\":49,\"ENTERO\":50,\"CADENA\":51,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",7:\"SIGNOO\",9:\"BARRA\",11:\"BARRABARRA\",13:\"DOSPUNTOS\",14:\"PUNTOPUNTO\",15:\"ID\",16:\"LAST\",17:\"POSITION\",18:\"ANCESTOR\",20:\"ATTRIBUTE\",21:\"ANCESORSELF\",22:\"CHILD\",23:\"DESCENDANT\",24:\"FOLLOWING\",25:\"NAMESPACE\",26:\"PARENT\",27:\"PRECENDING\",28:\"SELF\",29:\"TEXT\",30:\"NODE\",31:\"SIBLING\",32:\"MENOS\",33:\"OR\",34:\"ARROBA\",35:\"ASTERISCO\",36:\"CORA\",38:\"CORC\",39:\"MAS\",40:\"DIV\",41:\"MODULO\",42:\"AND\",43:\"MAYORQUE\",44:\"MAYORIGUAL\",45:\"MENORQUE\",46:\"MENORIGUAL\",47:\"DIFERENTE\",48:\"IGUAL\",49:\"DECIMAL\",50:\"ENTERO\",51:\"CADENA\"},\r\nproductions_: [0,[3,2],[4,3],[4,1],[6,2],[6,1],[8,2],[8,2],[8,3],[8,4],[8,2],[8,4],[8,1],[12,1],[12,1],[12,2],[12,1],[12,1],[12,1],[12,2],[12,1],[12,2],[12,1],[12,1],[12,1],[12,1],[12,2],[12,1],[12,1],[12,1],[12,1],[19,4],[19,2],[10,1],[10,2],[10,2],[10,1],[10,4],[37,3],[37,3],[37,3],[37,3],[37,3],[37,3],[37,3],[37,3],[37,3],[37,3],[37,3],[37,3],[37,3],[37,2],[37,1],[37,1],[37,1],[37,1],[37,1],[37,1],[37,2]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n  this.$ = \"inicio -> varias \\n\"+$$[$0-1];  return this.$; \r\nbreak;\r\ncase 2:\r\nthis.$='varias -> instrucciones SIGNOO instrucciones \\n'+$$[$0-2]+$$[$0];\r\nbreak;\r\ncase 3:\r\nthis.$='varias -> instrucciones \\n'+$$[$0];\r\nbreak;\r\ncase 4:\r\n this.$ = 'instrucciones -> instruccion instrucciones \\n'+$$[$0-1]+$$[$0]; \r\nbreak;\r\ncase 5:\r\n this.$= 'instrucciones -> instruccion \\n'+$$[$0]; \r\nbreak;\r\ncase 6:\r\n  this.$ = 'instruccion -> BARRA e; \\n'+$$[$0];\r\nbreak;\r\ncase 7:\r\n  this.$ = 'instruccion -> BARRABARRA e; \\n'+$$[$0];\r\nbreak;\r\ncase 8:\r\n  this.$ =  'instruccion -> RESERV DOSPUNTOS e; \\n'+$$[$0-2]+$$[$0];\r\nbreak;\r\ncase 9:\r\n  this.$ =  'instruccion -> BARRA RESERV DOSPUNTOS e; \\n'+$$[$0-2]+$$[$0];\r\nbreak;\r\ncase 10:\r\n  this.$ =  'instruccion -> BARRA PUNTOPUNTO; \\n';\r\nbreak;\r\ncase 11:\r\n  this.$ =  'instruccion -> BARRABARRA RESERV DOSPUNTOS e; \\n'+$$[$0-2]+$$[$0];\r\nbreak;\r\ncase 12:\r\n  this.$ =  'instruccion -> ID; \\n';\r\nbreak;\r\ncase 13:\r\nthis.$ = 'RESERV -> LAST; \\n';\r\nbreak;\r\ncase 14:\r\nthis.$ = 'RESERV -> POSITION; \\n';\r\nbreak;\r\ncase 15:\r\nthis.$ = 'RESERV -> ANCESTOR RESERVLARGE; \\n'+$$[$0];\r\nbreak;\r\ncase 16:\r\nthis.$ = 'RESERV -> ATTRIBUTE; \\n';\r\nbreak;\r\ncase 17:\r\nthis.$ = 'RESERV -> ANCESORSELF; \\n';\r\nbreak;\r\ncase 18:\r\nthis.$ = 'RESERV -> CHILD; \\n';\r\nbreak;\r\ncase 19:\r\nthis.$ = 'RESERV -> DESCENDANT RESERVLARGE; \\n'+$$[$0];\r\nbreak;\r\ncase 20:\r\nthis.$ = 'RESERV -> DESCENDANT; \\n';\r\nbreak;\r\ncase 21:\r\nthis.$ = 'RESERV -> FOLLOWING RESERVLARGE; \\n'+$$[$0];\r\nbreak;\r\ncase 22:\r\nthis.$ = 'RESERV -> FOLLOWING; \\n';\r\nbreak;\r\ncase 23:\r\nthis.$ = 'RESERV -> NAMESPACE; \\n';\r\nbreak;\r\ncase 24:\r\nthis.$ = 'RESERV -> PARENT; \\n';\r\nbreak;\r\ncase 25:\r\nthis.$ = 'RESERV -> PRECENDING; \\n';\r\nbreak;\r\ncase 26:\r\nthis.$ = 'RESERV -> PRECENDING RESERVLARGE; \\n'+$$[$0];\r\nbreak;\r\ncase 27:\r\nthis.$ = 'RESERV -> SELF; \\n';\r\nbreak;\r\ncase 28:\r\nthis.$ = 'RESERV -> TEXT; \\n';\r\nbreak;\r\ncase 29:\r\nthis.$ = 'RESERV -> NODE; \\n';\r\nbreak;\r\ncase 30:\r\nthis.$ = 'RESERV -> SIBLING; \\n';\r\nbreak;\r\ncase 31:\r\nthis.$= 'RESERVLARGE -> MENOS OR MENOS SELF; \\n'; \r\nbreak;\r\ncase 32:\r\nthis.$= 'RESERVLARGE -> MENOS SIBLING; \\n';\r\nbreak;\r\ncase 33:\r\nthis.$= 'e -> ID; \\n';\r\nbreak;\r\ncase 34:\r\nthis.$= 'e -> ARROBA ID; \\n';\r\nbreak;\r\ncase 35:\r\nthis.$= 'e -> ARROBA ASTERISCO; \\n';\r\nbreak;\r\ncase 36:\r\nthis.$='e -> ASTERISCO; \\n';\r\nbreak;\r\ncase 37:\r\nthis.$='e -> ID CORA OPERADORES CORC; \\n'+$$[$0-1];\r\nbreak;\r\ncase 38:\r\nthis.$ = 'OPERADORES -> OPERADORES MAS OPERADORES; \\n'+$$[$0-2]+$$[$0];\r\nbreak;\r\ncase 39:\r\nthis.$ = 'OPERADORES -> OPERADORES MENOS OPERADORES; \\n'+$$[$0-2]+$$[$0];\r\nbreak;\r\ncase 40:\r\nthis.$ = 'OPERADORES -> OPERADORES ASTERISCO OPERADORES; \\n'+$$[$0-2]+$$[$0];\r\nbreak;\r\ncase 41:\r\nthis.$ = 'OPERADORES -> OPERADORES DIV OPERADORES; \\n'+$$[$0-2]+$$[$0];\r\nbreak;\r\ncase 42:\r\nthis.$ = 'OPERADORES -> OPERADORES MODULO OPERADORES; \\n'+$$[$0-2]+$$[$0];\r\nbreak;\r\ncase 43:\r\nthis.$ = 'OPERADORES -> OPERADORES AND OPERADORES; \\n'+$$[$0-2]+$$[$0];\r\nbreak;\r\ncase 44:\r\nthis.$ = 'OPERADORES -> OPERADORES OR OPERADORES; \\n'+$$[$0-2]+$$[$0];\r\nbreak;\r\ncase 45:\r\nthis.$ = 'OPERADORES -> OPERADORES MAYORQUE OPERADORES; \\n'+$$[$0-2]+$$[$0];\r\nbreak;\r\ncase 46:\r\nthis.$ = 'OPERADORES -> OPERADORES MAYORIGUAL OPERADORES; \\n'+$$[$0-2]+$$[$0];\r\nbreak;\r\ncase 47:\r\nthis.$ = 'OPERADORES -> OPERADORES MENORQUE OPERADORES; \\n'+$$[$0-2]+$$[$0];\r\nbreak;\r\ncase 48:\r\nthis.$ = 'OPERADORES -> OPERADORES MENORIGUAL OPERADORES; \\n'+$$[$0-2]+$$[$0];\r\nbreak;\r\ncase 49:\r\nthis.$ = 'OPERADORES -> OPERADORES DIFERENTE OPERADORES; \\n'+$$[$0-2]+$$[$0];\r\nbreak;\r\ncase 50:\r\nthis.$ = 'OPERADORES -> OPERADORES IGUAL OPERADORES; \\n '+$$[$0-2]+$$[$0];\r\nbreak;\r\ncase 51:\r\nthis.$ = 'OPERADORES -> MENOS OPERADORES %prec UNARIO; \\n '+$$[$0];\r\nbreak;\r\ncase 52:\r\nthis.$ = 'OPERADORES -> DECIMAL; \\n';\r\nbreak;\r\ncase 53:\r\nthis.$ = 'OPERADORES -> ENTERO; \\n';\r\nbreak;\r\ncase 54:\r\nthis.$ = 'OPERADORES -> ID; \\n'; \r\nbreak;\r\ncase 55:\r\nthis.$ = 'OPERADORES -> LAST; \\n ';\r\nbreak;\r\ncase 56:\r\nthis.$ = 'OPERADORES -> POSITION; \\n';\r\nbreak;\r\ncase 57:\r\nthis.$ = 'OPERADORES -> CADENA; \\n';\r\nbreak;\r\ncase 58:\r\nthis.$ = 'OPERADORES ->ARROBA ID; \\n'; \r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,6:3,8:4,9:$V0,11:$V1,12:7,15:$V2,16:$V3,17:$V4,18:$V5,20:$V6,21:$V7,22:$V8,23:$V9,24:$Va,25:$Vb,26:$Vc,27:$Vd,28:$Ve,29:$Vf,30:$Vg,31:$Vh},{1:[3]},{5:[1,24]},{5:[2,3],7:[1,25]},o($Vi,[2,5],{8:4,12:7,6:26,9:$V0,11:$V1,15:$V2,16:$V3,17:$V4,18:$V5,20:$V6,21:$V7,22:$V8,23:$V9,24:$Va,25:$Vb,26:$Vc,27:$Vd,28:$Ve,29:$Vf,30:$Vg,31:$Vh}),{10:27,12:28,14:[1,29],15:$Vj,16:$V3,17:$V4,18:$V5,20:$V6,21:$V7,22:$V8,23:$V9,24:$Va,25:$Vb,26:$Vc,27:$Vd,28:$Ve,29:$Vf,30:$Vg,31:$Vh,34:$Vk,35:$Vl},{10:33,12:34,15:$Vj,16:$V3,17:$V4,18:$V5,20:$V6,21:$V7,22:$V8,23:$V9,24:$Va,25:$Vb,26:$Vc,27:$Vd,28:$Ve,29:$Vf,30:$Vg,31:$Vh,34:$Vk,35:$Vl},{13:[1,35]},o($Vm,[2,12]),{13:[2,13]},{13:[2,14]},{19:36,32:$Vn},{13:[2,16]},{13:[2,17]},{13:[2,18]},{13:[2,20],19:38,32:$Vn},{13:[2,22],19:39,32:$Vn},{13:[2,23]},{13:[2,24]},{13:[2,25],19:40,32:$Vn},{13:[2,27]},{13:[2,28]},{13:[2,29]},{13:[2,30]},{1:[2,1]},{6:41,8:4,9:$V0,11:$V1,12:7,15:$V2,16:$V3,17:$V4,18:$V5,20:$V6,21:$V7,22:$V8,23:$V9,24:$Va,25:$Vb,26:$Vc,27:$Vd,28:$Ve,29:$Vf,30:$Vg,31:$Vh},o($Vi,[2,4]),o($Vm,[2,6]),{13:[1,42]},o($Vm,[2,10]),o($Vm,[2,33],{36:[1,43]}),{15:[1,44],35:[1,45]},o($Vm,[2,36]),o($Vm,[2,7]),{13:[1,46]},{10:47,15:$Vj,34:$Vk,35:$Vl},{13:[2,15]},{31:[1,49],33:[1,48]},{13:[2,19]},{13:[2,21]},{13:[2,26]},{5:[2,2]},{10:50,15:$Vj,34:$Vk,35:$Vl},{15:$Vo,16:$Vp,17:$Vq,32:$Vr,34:$Vs,37:51,49:$Vt,50:$Vu,51:$Vv},o($Vm,[2,34]),o($Vm,[2,35]),{10:60,15:$Vj,34:$Vk,35:$Vl},o($Vm,[2,8]),{32:[1,61]},{13:[2,32]},o($Vm,[2,9]),{32:$Vw,33:[1,69],35:$Vx,38:[1,62],39:$Vy,40:$Vz,41:$VA,42:$VB,43:$VC,44:$VD,45:$VE,46:$VF,47:$VG,48:$VH},{15:$Vo,16:$Vp,17:$Vq,32:$Vr,34:$Vs,37:76,49:$Vt,50:$Vu,51:$Vv},o($VI,[2,52]),o($VI,[2,53]),o($VI,[2,54]),o($VI,[2,55]),o($VI,[2,56]),o($VI,[2,57]),{15:[1,77]},o($Vm,[2,11]),{28:[1,78]},o($Vm,[2,37]),{15:$Vo,16:$Vp,17:$Vq,32:$Vr,34:$Vs,37:79,49:$Vt,50:$Vu,51:$Vv},{15:$Vo,16:$Vp,17:$Vq,32:$Vr,34:$Vs,37:80,49:$Vt,50:$Vu,51:$Vv},{15:$Vo,16:$Vp,17:$Vq,32:$Vr,34:$Vs,37:81,49:$Vt,50:$Vu,51:$Vv},{15:$Vo,16:$Vp,17:$Vq,32:$Vr,34:$Vs,37:82,49:$Vt,50:$Vu,51:$Vv},{15:$Vo,16:$Vp,17:$Vq,32:$Vr,34:$Vs,37:83,49:$Vt,50:$Vu,51:$Vv},{15:$Vo,16:$Vp,17:$Vq,32:$Vr,34:$Vs,37:84,49:$Vt,50:$Vu,51:$Vv},{15:$Vo,16:$Vp,17:$Vq,32:$Vr,34:$Vs,37:85,49:$Vt,50:$Vu,51:$Vv},{15:$Vo,16:$Vp,17:$Vq,32:$Vr,34:$Vs,37:86,49:$Vt,50:$Vu,51:$Vv},{15:$Vo,16:$Vp,17:$Vq,32:$Vr,34:$Vs,37:87,49:$Vt,50:$Vu,51:$Vv},{15:$Vo,16:$Vp,17:$Vq,32:$Vr,34:$Vs,37:88,49:$Vt,50:$Vu,51:$Vv},{15:$Vo,16:$Vp,17:$Vq,32:$Vr,34:$Vs,37:89,49:$Vt,50:$Vu,51:$Vv},{15:$Vo,16:$Vp,17:$Vq,32:$Vr,34:$Vs,37:90,49:$Vt,50:$Vu,51:$Vv},{15:$Vo,16:$Vp,17:$Vq,32:$Vr,34:$Vs,37:91,49:$Vt,50:$Vu,51:$Vv},o($VI,[2,51]),o($VI,[2,58]),{13:[2,31]},o($VJ,[2,38],{35:$Vx,40:$Vz,41:$VA}),o($VJ,[2,39],{35:$Vx,40:$Vz,41:$VA}),o($VI,[2,40]),o($VI,[2,41]),o($VI,[2,42]),o([33,38,42],[2,43],{32:$Vw,35:$Vx,39:$Vy,40:$Vz,41:$VA,43:$VC,44:$VD,45:$VE,46:$VF,47:$VG,48:$VH}),o([33,38],[2,44],{32:$Vw,35:$Vx,39:$Vy,40:$Vz,41:$VA,42:$VB,43:$VC,44:$VD,45:$VE,46:$VF,47:$VG,48:$VH}),o($VK,[2,45],{32:$Vw,35:$Vx,39:$Vy,40:$Vz,41:$VA}),o($VK,[2,46],{32:$Vw,35:$Vx,39:$Vy,40:$Vz,41:$VA}),o($VK,[2,47],{32:$Vw,35:$Vx,39:$Vy,40:$Vz,41:$VA}),o($VK,[2,48],{32:$Vw,35:$Vx,39:$Vy,40:$Vz,41:$VA}),o($VK,[2,49],{32:$Vw,35:$Vx,39:$Vy,40:$Vz,41:$VA}),o($VK,[2,50],{32:$Vw,35:$Vx,39:$Vy,40:$Vz,41:$VA})],\r\ndefaultActions: {9:[2,13],10:[2,14],12:[2,16],13:[2,17],14:[2,18],17:[2,23],18:[2,24],20:[2,27],21:[2,28],22:[2,29],23:[2,30],24:[2,1],36:[2,15],38:[2,19],39:[2,21],40:[2,26],41:[2,2],49:[2,32],78:[2,31]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n   \r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0: console.log(\"Reconocio : \"+ yy_.yytext); return 46\r\nbreak;\r\ncase 1: console.log(\"Reconocio : \"+ yy_.yytext); return 44\r\nbreak;\r\ncase 2: console.log(\"Reconocio : \"+ yy_.yytext); return 48\r\nbreak;\r\ncase 3: console.log(\"Reconocio : \"+ yy_.yytext); return 45\r\nbreak;\r\ncase 4: console.log(\"Reconocio : \"+ yy_.yytext); return 43\r\nbreak;\r\ncase 5: console.log(\"Reconocio : \"+ yy_.yytext); return 47\r\nbreak;\r\ncase 6: console.log(\"Reconocio : \"+ yy_.yytext); return 'PARA'\r\nbreak;\r\ncase 7: console.log(\"Reconocio : \"+ yy_.yytext); return 11\r\nbreak;\r\ncase 8: console.log(\"Reconocio : \"+ yy_.yytext); return 9\r\nbreak;\r\ncase 9: console.log(\"Reconocio : \"+ yy_.yytext); return 'PARC'\r\nbreak;\r\ncase 10: console.log(\"Reconocio : \"+ yy_.yytext); return 36\r\nbreak;\r\ncase 11: console.log(\"Reconocio : \"+ yy_.yytext); return 38\r\nbreak;\r\ncase 12: console.log(\"Reconocio : \"+ yy_.yytext); return 34\r\nbreak;\r\ncase 13: console.log(\"Reconocio : \"+ yy_.yytext); return 14\r\nbreak;\r\ncase 14: console.log(\"Reconocio : \"+ yy_.yytext); return 'PUNTO'\r\nbreak;\r\ncase 15: console.log(\"Reconocio : \"+ yy_.yytext); return 7\r\nbreak;\r\ncase 16: console.log(\"Reconocio : \"+ yy_.yytext); return 13\r\nbreak;\r\ncase 17: console.log(\"Reconocio : \"+ yy_.yytext); return 39\r\nbreak;\r\ncase 18: console.log(\"Reconocio : \"+ yy_.yytext); return 32\r\nbreak;\r\ncase 19: console.log(\"Reconocio : \"+ yy_.yytext); return 35\r\nbreak;\r\ncase 20: console.log(\"Reconocio : \"+ yy_.yytext); return 40\r\nbreak;\r\ncase 21: console.log(\"Reconocio : \"+ yy_.yytext); return 41\r\nbreak;\r\ncase 22: console.log(\"Reconocio : \"+ yy_.yytext); return 42\r\nbreak;\r\ncase 23: console.log(\"Reconocio : \"+ yy_.yytext); return 33\r\nbreak;\r\ncase 24: console.log(\"Reconocio : \"+ yy_.yytext); return 16\r\nbreak;\r\ncase 25: console.log(\"Reconocio : \"+ yy_.yytext); return 17\r\nbreak;\r\ncase 26: console.log(\"Reconocio : \"+ yy_.yytext); return 18\r\nbreak;\r\ncase 27: console.log(\"Reconocio : \"+ yy_.yytext); return 20\r\nbreak;\r\ncase 28: console.log(\"Reconocio : \"+ yy_.yytext); return 28\r\nbreak;\r\ncase 29: console.log(\"Reconocio : \"+ yy_.yytext); return 22\r\nbreak;\r\ncase 30: console.log(\"Reconocio : \"+ yy_.yytext); return 23\r\nbreak;\r\ncase 31: console.log(\"Reconocio : \"+ yy_.yytext); return 24\r\nbreak;\r\ncase 32: console.log(\"Reconocio : \"+ yy_.yytext); return 31\r\nbreak;\r\ncase 33: console.log(\"Reconocio : \"+ yy_.yytext); return 25\r\nbreak;\r\ncase 34: console.log(\"Reconocio : \"+ yy_.yytext); return 26\r\nbreak;\r\ncase 35: console.log(\"Reconocio : \"+ yy_.yytext); return 27\r\nbreak;\r\ncase 36: console.log(\"Reconocio : \"+ yy_.yytext); return 29\r\nbreak;\r\ncase 37: console.log(\"Reconocio : \"+ yy_.yytext); return 30\r\nbreak;\r\ncase 38: console.log(\"Reconocio : \"+ yy_.yytext); return 16\r\nbreak;\r\ncase 39: console.log(\"Reconocio : \"+ yy_.yytext); return 17\r\nbreak;\r\ncase 40: console.log(\"Reconocio : \"+ yy_.yytext); return 49\r\nbreak;\r\ncase 41: console.log(\"Reconocio : \"+ yy_.yytext); return 50\r\nbreak;\r\ncase 42: console.log(\"Reconocio id : \"+ yy_.yytext); return 15\r\nbreak;\r\ncase 43: console.log(\"Reconocio : \"+ yy_.yytext); return 51\r\nbreak;\r\ncase 44: /* skip whitespace */ \r\nbreak;\r\ncase 45:return 5\r\nbreak;\r\ncase 46: console.log(\"Error Lexico \"+yy_.yytext\r\n                        +\" linea \"+yy_.yylineno\r\n                        +\" columna \"+(yy_.yylloc.last_column+1));\r\n                                      \r\n                        \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:<=)/i,/^(?:>=)/i,/^(?:=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:!=)/i,/^(?:\\()/i,/^(?:\\/\\/)/i,/^(?:\\/)/i,/^(?:\\))/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:@)/i,/^(?:\\.\\.)/i,/^(?:\\.)/i,/^(?:\\|)/i,/^(?:::)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:div\\b)/i,/^(?:mod\\b)/i,/^(?:and\\b)/i,/^(?:or\\b)/i,/^(?:last\\(\\))/i,/^(?:position\\(\\))/i,/^(?:ancestor\\b)/i,/^(?:attribute\\b)/i,/^(?:self\\b)/i,/^(?:child\\b)/i,/^(?:descendant\\b)/i,/^(?:following\\b)/i,/^(?:sibling\\b)/i,/^(?:namespace\\b)/i,/^(?:parent\\b)/i,/^(?:preceding\\b)/i,/^(?:text\\(\\))/i,/^(?:node\\(\\))/i,/^(?:last\\(\\))/i,/^(?:position\\(\\))/i,/^(?:[0-9]+\\.([0-9]+)?\\b)/i,/^(?:([0-9]+))/i,/^(?:([a-zñA-ZÑ_][a-zñA-ZÑ0-9_]*))/i,/^(?:((\"((\\\\([\\'\\\"\\\\ntr]))|([^\\\"\\\\]+))*\")))/i,/^(?:[\\s\\r\\n\\t])/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xPathReporteGramatica;\r\nexports.Parser = xPathReporteGramatica.Parser;\r\nexports.parse = function () { return xPathReporteGramatica.parse.apply(xPathReporteGramatica, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import Nodo from \"src/clases/AST/Nodo\";\r\nimport Controlador from \"src/clases/Controlador\";\r\nimport { Expreciones } from \"src/clases/Interfaces.ts/Expreciones\";\r\nimport { TablaSimbolos } from \"src/clases/TablaSimbolos/TablaSimbolos\";\r\nimport Tipo, { tipo } from \"src/clases/TablaSimbolos/Tipo\";\r\nimport { retorno } from \"../retorno\";\r\nimport Operaciones, { Operador } from \"./Operaciones\";\r\n\r\n\r\nexport default class Relaciones extends Operaciones implements Expreciones {\r\n    \r\n    lblTrue: string;\r\n    lblFalse: string;\r\n    public constructor(exp1, op: string, exp2, linea: number, columna:number, expU :boolean) {\r\n        super(exp1,op,exp2,linea,columna,expU);        \r\n    }\r\n\r\n    getTipo(controlador: Controlador, ts: TablaSimbolos) : tipo{\r\n        let valor = this.getValor(controlador, ts);\r\n\r\n        if(typeof valor === 'number'){   \r\n            return tipo.DOBLE;\r\n        }else if(typeof valor === 'string'){\r\n            return tipo.CADENA;\r\n        }else if(typeof valor === 'boolean'){\r\n            return tipo.BOOLEANO;\r\n        }\r\n    }\r\n    limpiar() {\r\n        this.lblFalse='';\r\n        this.lblTrue='';\r\n        if(this.expU==false){\r\n         this.exp1.limpiar();\r\n         this.exp2.limpiar();\r\n        }else{\r\n         this.exp1.limpiar();\r\n        }\r\n        \r\n     }\r\n\r\n    getValor(controlador: Controlador, TablaSimbolos: TablaSimbolos) {\r\n        let valor_exp1;\r\n        let valor_exp2;\r\n        let valor_expU;\r\n\r\n        if(this.expU==false){\r\n            valor_exp1=this.exp1.getValor(controlador,TablaSimbolos);\r\n            valor_exp2=this.exp2.getValor(controlador,TablaSimbolos);\r\n        }else{\r\n            valor_expU=this.exp1.getValor(controlador,TablaSimbolos);\r\n        }\r\n\r\n        switch(this.operador){\r\n            case Operador.IGUALIGUAL:\r\n                return this.igualigual(valor_exp1,valor_exp2);\r\n            case Operador.DIFERENTE:\r\n                return this.diferente(valor_exp1,valor_exp2);\r\n            case Operador.MENORQUE:\r\n                return this.menorque(valor_exp1,valor_exp2);\r\n            case Operador.MENORIGUAL:\r\n                return this.menorigual(valor_exp1,valor_exp2);\r\n            case Operador.MAYORQUE:\r\n                return this.mayorque(valor_exp1,valor_exp2);\r\n            case Operador.MAYORIGUAL:\r\n                return this.mayoigual(valor_exp1,valor_exp2);\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    igualigual(valor_exp1,valor_exp2){\r\n        if(typeof valor_exp1 == 'number'){\r\n            if(typeof valor_exp2 == 'number'){\r\n                return valor_exp1==valor_exp2;\r\n            }else if (typeof valor_exp2 =='boolean'){\r\n                //Error Semantico\r\n            }else if(typeof valor_exp2 == 'string'){\r\n                //char\r\n                if(valor_exp2.length==1){\r\n                    let num=valor_exp2.charCodeAt(0);\r\n                    return valor_exp1==num;\r\n                }else{\r\n                    //String \r\n                    //Error semantico\r\n                }\r\n            }\r\n        }else if(typeof valor_exp1 == 'boolean'){\r\n            if(typeof valor_exp2== 'number'){\r\n                //Error semantico\r\n            }else if (typeof valor_exp2=='boolean'){\r\n                return valor_exp1 ==valor_exp2;\r\n            }else if (typeof valor_exp2 == 'string'){\r\n                //Error semantico\r\n            }\r\n        }else if (typeof valor_exp1 == 'string'){\r\n            if(valor_exp1.length==1){\r\n                //char\r\n                if(typeof valor_exp2=='number'){\r\n                    let num=valor_exp1.charCodeAt(0);\r\n                    return num==valor_exp2;\r\n                }else if( typeof valor_exp2 == 'boolean'){\r\n                    //Error semantico\r\n                }else if( typeof valor_exp2 == 'string'){\r\n                    return valor_exp1 ==valor_exp2 ;\r\n                }\r\n            }else{\r\n                //cadena\r\n                if(typeof valor_exp2=='number'){\r\n                    //error semantico\r\n                }else if( typeof valor_exp2 == 'boolean'){\r\n                    //Error semantico\r\n                }else if( typeof valor_exp2 == 'string'){\r\n                    return valor_exp1 ==valor_exp2 ;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    diferente(valor_exp1,valor_exp2){\r\n        if(typeof valor_exp1 == 'number'){\r\n            if(typeof valor_exp2 == 'number'){\r\n                return valor_exp1!=valor_exp2;\r\n            }else if (typeof valor_exp2 =='boolean'){\r\n                //Error Semantico\r\n            }else if(typeof valor_exp2 == 'string'){\r\n                //char\r\n                if(valor_exp2.length==1){\r\n                    let num=valor_exp2.charCodeAt(0);\r\n                    return valor_exp1!=num;\r\n                }else{\r\n                    //String \r\n                    //Error semantico\r\n                }\r\n            }\r\n        }else if(typeof valor_exp1 == 'boolean'){\r\n            if(typeof valor_exp2== 'number'){\r\n                //Error semantico\r\n            }else if (typeof valor_exp2=='boolean'){\r\n                return valor_exp1 != valor_exp2;\r\n            }else if (typeof valor_exp2 == 'string'){\r\n                //Error semantico\r\n            }\r\n        }else if (typeof valor_exp1 == 'string'){\r\n            if(valor_exp1.length==1){\r\n                //char\r\n                if(typeof valor_exp2=='number'){\r\n                    let num=valor_exp1.charCodeAt(0);\r\n                    return num!=valor_exp2;\r\n                }else if( typeof valor_exp2 == 'boolean'){\r\n                    //Error semantico\r\n                }else if( typeof valor_exp2 == 'string'){\r\n                    return valor_exp1 !=valor_exp2 ;\r\n                }\r\n            }else{\r\n                //cadena\r\n                if(typeof valor_exp2=='number'){\r\n                    //error semantico\r\n                }else if( typeof valor_exp2 == 'boolean'){\r\n                    //Error semantico\r\n                }else if( typeof valor_exp2 == 'string'){\r\n                    return valor_exp1 !=valor_exp2 ;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    menorque(valor_exp1,valor_exp2){\r\n        if(typeof valor_exp1 == 'number'){\r\n            if( typeof valor_exp2 == 'number'){\r\n                return valor_exp1 < valor_exp2;\r\n            }else if ( typeof valor_exp2 == 'boolean'){\r\n                //Error semantico\r\n            }else if (typeof valor_exp2 == 'string'){\r\n                if(valor_exp2.length == 1){\r\n                    let num=valor_exp2.charCodeAt(0);\r\n                    return valor_exp1 <  num;\r\n                }else{\r\n                    // Error semantico \r\n                }\r\n            }\r\n        }else if (typeof valor_exp1 == 'boolean'){\r\n            //Error semantico\r\n        }else if (typeof valor_exp1 =='string'){\r\n            if(valor_exp1.length==1){\r\n                if(typeof valor_exp2 =='number'){\r\n                    let num=valor_exp1.charCodeAt(0);\r\n                    return num < valor_exp2;\r\n                }else if (typeof valor_exp2 == 'boolean'){\r\n                    //Error semantico\r\n                }else if ( typeof  valor_exp2 == 'string'){\r\n                    if(valor_exp2.length==1){\r\n                        let num1=valor_exp1.charCodeAt(0);\r\n                        let num2=valor_exp2.charCodeAt(0);\r\n                        return num1< num2;\r\n                    }else{\r\n                        //Error semantico\r\n                    }\r\n                }\r\n            }else{\r\n                //cadena\r\n                //error semantico\r\n            }\r\n        }\r\n    }\r\n\r\n    menorigual(valor_exp1,valor_exp2){\r\n        if(typeof valor_exp1 == 'number'){\r\n            if( typeof valor_exp2 == 'number'){\r\n                return valor_exp1 <= valor_exp2;\r\n            }else if ( typeof valor_exp2 == 'boolean'){\r\n                //Error semantico\r\n            }else if (typeof valor_exp2 == 'string'){\r\n                if(valor_exp2.length == 1){\r\n                    let num=valor_exp2.charCodeAt(0);\r\n                    return valor_exp1 <=  num;\r\n                }else{\r\n                    // Error semantico \r\n                }\r\n            }\r\n        }else if (typeof valor_exp1 == 'boolean'){\r\n            //Error semantico\r\n        }else if (typeof valor_exp1 =='string'){\r\n            if(valor_exp1.length==1){\r\n                if(typeof valor_exp2 =='number'){\r\n                    let num=valor_exp1.charCodeAt(0);\r\n                    return num <= valor_exp2;\r\n                }else if (typeof valor_exp2 == 'boolean'){\r\n                    //Error semantico\r\n                }else if ( typeof  valor_exp2 == 'string'){\r\n                    if(valor_exp2.length==1){\r\n                        let num1=valor_exp1.charCodeAt(0);\r\n                        let num2=valor_exp2.charCodeAt(0);\r\n                        return num1<= num2;\r\n                    }else{\r\n                        //Error semantico\r\n                    }\r\n                }\r\n            }else{\r\n                //cadena\r\n                //error semantico\r\n            }\r\n        }\r\n    }\r\n\r\n    mayorque(valor_exp1,valor_exp2){\r\n        if(typeof valor_exp1 == 'number'){\r\n            if( typeof valor_exp2 == 'number'){\r\n                return valor_exp1 > valor_exp2;\r\n            }else if ( typeof valor_exp2 == 'boolean'){\r\n                //Error semantico\r\n            }else if (typeof valor_exp2 == 'string'){\r\n                if(valor_exp2.length == 1){\r\n                    let num=valor_exp2.charCodeAt(0);\r\n                    return valor_exp1 >  num;\r\n                }else{\r\n                    // Error semantico \r\n                }\r\n            }\r\n        }else if (typeof valor_exp1 == 'boolean'){\r\n            //Error semantico\r\n        }else if (typeof valor_exp1 =='string'){\r\n            if(valor_exp1.length==1){\r\n                if(typeof valor_exp2 =='number'){\r\n                    let num=valor_exp1.charCodeAt(0);\r\n                    return num > valor_exp2;\r\n                }else if (typeof valor_exp2 == 'boolean'){\r\n                    //Error semantico\r\n                }else if ( typeof  valor_exp2 == 'string'){\r\n                    if(valor_exp2.length==1){\r\n                        let num1=valor_exp1.charCodeAt(0);\r\n                        let num2=valor_exp2.charCodeAt(0);\r\n                        return num1 > num2;\r\n                    }else{\r\n                        //Error semantico\r\n                    }\r\n                }\r\n            }else{\r\n                //cadena\r\n                //error semantico\r\n            }\r\n        }\r\n    }\r\n\r\n    mayoigual(valor_exp1,valor_exp2){\r\n        if(typeof valor_exp1 == 'number'){\r\n            if( typeof valor_exp2 == 'number'){\r\n                return valor_exp1 >= valor_exp2;\r\n            }else if ( typeof valor_exp2 == 'boolean'){\r\n                //Error semantico\r\n            }else if (typeof valor_exp2 == 'string'){\r\n                if(valor_exp2.length == 1){\r\n                    let num=valor_exp2.charCodeAt(0);\r\n                    return valor_exp1 >=  num;\r\n                }else{\r\n                    // Error semantico \r\n                }\r\n            }\r\n        }else if (typeof valor_exp1 == 'boolean'){\r\n            //Error semantico\r\n        }else if (typeof valor_exp1 =='string'){\r\n            if(valor_exp1.length==1){\r\n                if(typeof valor_exp2 =='number'){\r\n                    let num=valor_exp1.charCodeAt(0);\r\n                    return num >= valor_exp2;\r\n                }else if (typeof valor_exp2 == 'boolean'){\r\n                    //Error semantico\r\n                }else if ( typeof  valor_exp2 == 'string'){\r\n                    if(valor_exp2.length==1){\r\n                        let num1=valor_exp1.charCodeAt(0);\r\n                        let num2=valor_exp2.charCodeAt(0);\r\n                        return num1 >= num2;\r\n                    }else{\r\n                        //Error semantico\r\n                    }\r\n                }\r\n            }else{\r\n                //cadena\r\n                //error semantico\r\n            }\r\n        }\r\n    }\r\n\r\n    getvalor3d(controlador: Controlador, ts : TablaSimbolos){\r\n        let valor_exp1;\r\n        let valor_exp2;\r\n        let valor_expU;\r\n\r\n        if(this.expU==false){\r\n            valor_exp1=this.exp1.getvalor3d(controlador,ts);\r\n            valor_exp2=this.exp2.getvalor3d(controlador,ts);\r\n        }else{\r\n            valor_expU=this.exp1.getvalor3d(controlador,ts);\r\n        }\r\n\r\n        switch(this.operador){\r\n            case Operador.IGUALIGUAL:\r\n                return this.igualigual3D(valor_exp1,valor_exp2,controlador);\r\n            case Operador.DIFERENTE:\r\n                return this.diferente3D(valor_exp1,valor_exp2,controlador);\r\n            case Operador.MENORQUE:\r\n                return this.menorque3D(valor_exp1,valor_exp2,controlador);\r\n            case Operador.MENORIGUAL:\r\n                return this.menorigual3D(valor_exp1,valor_exp2,controlador);\r\n            case Operador.MAYORQUE:\r\n                return this.mayorque3D(valor_exp1,valor_exp2,controlador);\r\n            case Operador.MAYORIGUAL:\r\n                return this.mayoigual3D(valor_exp1,valor_exp2,controlador);\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    igualigual3D(valor_exp1:retorno,valor_exp2:retorno,controlador:Controlador){\r\n        const generador  = controlador.generador;\r\n        const temp = generador.newTemporal();\r\n        if(valor_exp1.tipo.type==tipo.DOBLE){\r\n            if(valor_exp2.tipo.type==tipo.DOBLE){\r\n                return this.compararExp(valor_exp1,valor_exp2,controlador,'==');\r\n            }\r\n        }else{\r\n            if(valor_exp1.tipo.type==tipo.CADENA){\r\n                if(valor_exp2.tipo.type==tipo.CADENA){\r\n                    const tempAux = generador.newTemporal();\r\n                    generador.genExpresion(tempAux, 'p', 1 + 1, '+');\r\n                    generador.genSetStack(tempAux, valor_exp1.getvalor3d());\r\n                    generador.genExpresion(tempAux, tempAux, '1', '+');\r\n                    generador.genSetStack(tempAux, valor_exp2.getvalor3d());\r\n                    generador.genNextEnv(1);\r\n                    generador.genCall('nativa_compararIgual_str_str');\r\n                    generador.genGetStack(temp, 'p');\r\n                    generador.genAntEnv(1);\r\n\r\n                    this.lblTrue = this.lblTrue == '' ? generador.newLabel() : this.lblTrue;\r\n                    this.lblFalse = this.lblFalse == '' ? generador.newLabel() : this.lblFalse;\r\n                    generador.genIf(temp, '1', '==', this.lblTrue);\r\n                    generador.genGoto(this.lblFalse);\r\n                    const Retorno = new retorno(temp, true, new Tipo(\"BOOLEAN\"));\r\n                    Retorno.lblTrue = this.lblTrue;\r\n                    Retorno.lblFalse = this.lblFalse;\r\n                    return Retorno;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    menorque3D(valor_exp1:retorno,valor_exp2:retorno,controlador:Controlador){\r\n        if(valor_exp1.tipo.type==tipo.DOBLE){\r\n            if(valor_exp2.tipo.type==tipo.DOBLE){\r\n                return this.compararExp(valor_exp1,valor_exp2,controlador,'<');\r\n            }\r\n        }\r\n    }\r\n\r\n    menorigual3D(valor_exp1:retorno,valor_exp2:retorno,controlador:Controlador){\r\n        if(valor_exp1.tipo.type==tipo.DOBLE){\r\n            if(valor_exp2.tipo.type==tipo.DOBLE){\r\n                return this.compararExp(valor_exp1,valor_exp2,controlador,'<=');\r\n            }\r\n        }\r\n    }\r\n    mayorque3D(valor_exp1:retorno,valor_exp2:retorno,controlador:Controlador){\r\n        if(valor_exp1.tipo.type==tipo.DOBLE){\r\n            if(valor_exp2.tipo.type==tipo.DOBLE){\r\n                return this.compararExp(valor_exp1,valor_exp2,controlador,'>');\r\n            }\r\n        }\r\n    }\r\n\r\n    mayoigual3D(valor_exp1:retorno,valor_exp2:retorno,controlador:Controlador){\r\n        if(valor_exp1.tipo.type==tipo.DOBLE){\r\n            if(valor_exp2.tipo.type==tipo.DOBLE){\r\n                return this.compararExp(valor_exp1,valor_exp2,controlador,'>=');\r\n            }\r\n        }\r\n    }\r\n\r\n    diferente3D(valor_exp1:retorno,valor_exp2:retorno,controlador:Controlador){\r\n        const generador  = controlador.generador;\r\n        const temp = generador.newTemporal();\r\n        if(valor_exp1.tipo.type==tipo.DOBLE){\r\n            if(valor_exp2.tipo.type==tipo.DOBLE){\r\n                return this.compararExp(valor_exp1,valor_exp2,controlador,'!=');\r\n            }\r\n        }else{\r\n            if(valor_exp1.tipo.type==tipo.CADENA){\r\n                if(valor_exp2.tipo.type==tipo.CADENA){\r\n                    const tempAux = generador.newTemporal();\r\n                    generador.genExpresion(tempAux, 'p', 1 + 1, '+');\r\n                    generador.genSetStack(tempAux, valor_exp1.getvalor3d());\r\n                    generador.genExpresion(tempAux, tempAux, '1', '+');\r\n                    generador.genSetStack(tempAux, valor_exp2.getvalor3d());\r\n                    generador.genNextEnv(1);\r\n                    generador.genCall('nativa_compararIgual_str_str');\r\n                    generador.genGetStack(temp, 'p');\r\n                    generador.genAntEnv(1);\r\n\r\n                    this.lblTrue = this.lblTrue == '' ? generador.newLabel() : this.lblTrue;\r\n                    this.lblFalse = this.lblFalse == '' ? generador.newLabel() : this.lblFalse;\r\n                    generador.genIf(temp, '1', '!=', this.lblTrue);\r\n                    generador.genGoto(this.lblFalse);\r\n                    const Retorno = new retorno(temp, true, new Tipo(\"BOOLEAN\"));\r\n                    Retorno.lblTrue = this.lblTrue;\r\n                    Retorno.lblFalse = this.lblFalse;\r\n                    return Retorno;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    compararExp(valor_exp1: retorno, valor_exp2: retorno,controlador:Controlador,signo:string): retorno {\r\n        const generador = controlador.generador;\r\n        this.lblTrue = this.lblTrue == '' ? generador.newLabel() : this.lblTrue;\r\n        this.lblFalse = this.lblFalse == '' ? generador.newLabel() : this.lblFalse;\r\n        generador.genIf(valor_exp1.getvalor3d(), valor_exp2.getvalor3d(),signo, this.lblTrue);\r\n        generador.genGoto(this.lblFalse);\r\n        const Retorno = new retorno('', false, new Tipo(\"BOOLEAN\"));\r\n        Retorno.lblTrue = this.lblTrue;\r\n        Retorno.lblFalse = this.lblFalse;\r\n        return Retorno;\r\n    }\r\n    \r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"Exp\",\"\");\r\n\r\n        if(this.expU){\r\n            padre.AddHijo(new Nodo(this.op,\"\"));\r\n            padre.AddHijo(this.exp1.recorrer());\r\n        }else{\r\n            padre.AddHijo(this.exp1.recorrer());\r\n            padre.AddHijo(new Nodo(this.op,\"\"));\r\n            padre.AddHijo(this.exp2.recorrer());\r\n        }\r\n        \r\n       return padre;\r\n    }\r\n\r\n}","import Nodo from \"src/clases/AST/Nodo\";\r\nimport Controlador from \"src/clases/Controlador\";\r\nimport { Expreciones } from \"src/clases/Interfaces.ts/Expreciones\";\r\nimport { Instruccion } from \"src/clases/Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"src/clases/TablaSimbolos/TablaSimbolos\";\r\nimport { tipo } from \"src/clases/TablaSimbolos/Tipo\";\r\nimport Detener from \"../SentenciaTransferencia/Break\";\r\nimport Continuar from \"../SentenciaTransferencia/continuar\";\r\nimport retornar from \"../SentenciaTransferencia/retornar\";\r\n\r\n\r\nexport default class Ifs implements Instruccion{\r\n\r\n    public condicion : Expreciones;\r\n     public lista_ifs : Array<Instruccion>;\r\n     public lista_elses : Array<Instruccion>;\r\n     public linea : number;\r\n     public columna : number;\r\n\r\n     constructor(condicion, lista_ifs, lista_elses, linea, columna) {\r\n         this.condicion = condicion;\r\n         this.lista_ifs = lista_ifs;\r\n         this.lista_elses = lista_elses;\r\n         this.columna = columna; \r\n         this.linea = linea;\r\n     }\r\n\r\n     ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n        let ts_local = new TablaSimbolos(ts);\r\n\r\n        let valor_condicion = this.condicion.getValor(controlador, ts);\r\n\r\n        if(this.condicion.getTipo(controlador, ts) == tipo.BOOLEANO){\r\n            if(valor_condicion){\r\n                for(let ins of this.lista_ifs){\r\n                    let res = ins.ejecutar(controlador, ts_local);\r\n\r\n                    if( ins instanceof Detener || res instanceof Detener){\r\n                        controlador.graficarEntornos(controlador,ts_local,\" (While)\");\r\n                        return res;\r\n                    }else{\r\n                        if(ins instanceof Continuar || res instanceof Continuar){\r\n                            controlador.graficarEntornos(controlador,ts_local,\" (While)\");\r\n                            return res;\r\n                        }else{\r\n                            if( ins instanceof retornar || res instanceof retornar){\r\n                                controlador.graficarEntornos(controlador,ts_local,\" (While)\");\r\n                                return res;\r\n                            }\r\n                        }\r\n                    }\r\n                    //TODO verificar si res es de tipo CONTINUE, BREAK, RETORNO \r\n                }\r\n                controlador.graficarEntornos(controlador,ts_local,\" (IF)\");\r\n            }else{\r\n                for(let ins of this.lista_elses){\r\n                    let res = ins.ejecutar(controlador,ts_local);\r\n                   \r\n                        if( ins instanceof Detener || res instanceof Detener){\r\n                            controlador.graficarEntornos(controlador,ts_local,\" (While)\");\r\n                            return res;\r\n                        }else{\r\n                            if(ins instanceof Continuar || res instanceof Continuar){\r\n                                controlador.graficarEntornos(controlador,ts_local,\" (While)\");\r\n                                return res;\r\n                            }else{\r\n                                if( ins instanceof retornar || res instanceof retornar){\r\n                                    controlador.graficarEntornos(controlador,ts_local,\" (While)\");\r\n                                    return res;\r\n                                }\r\n                            }\r\n                        }\r\n                    \r\n                    //TODO verificar si res es de tipo CONTINUE, BREAK, RETORNO \r\n                }\r\n                controlador.graficarEntornos(controlador,ts_local,\" (IF)\");\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"SENTENCIA\",\"\");\r\n        padre.AddHijo(new Nodo(\"if\",\"\"));\r\n        padre.AddHijo(new Nodo(\"(\",\"\"));\r\n        padre.AddHijo(this.condicion.recorrer());\r\n        padre.AddHijo(new Nodo(\")\",\"\"));\r\n        padre.AddHijo(new Nodo(\"{\",\"\"));\r\n        for(let ins of this.lista_ifs){\r\n            padre.AddHijo(ins.recorrer());\r\n        }\r\n        padre.AddHijo(new Nodo(\"}\",\"\"));\r\n        if(this.lista_elses.length>0){\r\n            padre.AddHijo(new Nodo(\"}\",\"\"));\r\n            padre.AddHijo(new Nodo(\"else\",\"\"));\r\n            padre.AddHijo(new Nodo(\"{\",\"\"));\r\n            for(let ins of this.lista_elses){\r\n                padre.AddHijo(ins.recorrer());\r\n            }\r\n            padre.AddHijo(new Nodo(\"}\",\"\"));\r\n        }\r\n        return padre;\r\n    }\r\n\r\n}","\r\n/**\r\n * @class Clase para el manejo de nodos de la grafica del ast\r\n */\r\n export default class Nodo{\r\n    public token : string;\r\n    public lexema : string;\r\n    public hijos : Array<Nodo>;\r\n\r\n    /**\r\n     * @constructor Crea un nuevo nodo a graficar del ast\r\n     * @param token guarda el token del nodo\r\n     * @param lexema guarda el lexema del nodo\r\n     */\r\n    constructor(token : string, lexema : string) {\r\n        this.token = token;\r\n        this.lexema = lexema;\r\n        this.hijos = new Array<Nodo>();\r\n    }\r\n\r\n    /**\r\n     * @method AddHijo agrega un nuevo hijo a la lista\r\n     * @param nuevo hace referencia al nuevo nodo\r\n     */\r\n    public AddHijo(nuevo :Nodo):void{\r\n        this.hijos.push(nuevo);\r\n    }\r\n\r\n    /**\r\n     * @function getToken retorna el nombre del token \r\n     * @returns retorna el token\r\n     */\r\n    public getToken():string{\r\n        return this.token;\r\n    }\r\n\r\n    /**\r\n     * @function GraficarSintactico Hace la estructura de la grafica \r\n     * @returns retorna la cadena total de la grafica \r\n     */\r\n    public GraficarSintactico():string{\r\n        let grafica: string = `dinetwork {\\n\\n${this.GraficarNodos(this, \"0\")} \\n\\n}`\r\n        return grafica;\r\n    }\r\n\r\n    /**\r\n     * @function GraficarNodos\r\n     * @param nodo indica el nodo donde nos posicionamos\r\n     * @param i hara referencia al numero o identificador del nodo a graficar\r\n     * @returns retorna la cadena de los nodos \r\n     */\r\n    public GraficarNodos(nodo: Nodo, i: string):string{\r\n        let k = 0;\r\n        let r = \"\";\r\n        let nodoTerm : string = nodo.token;\r\n        nodoTerm = nodoTerm.replace(\"\\\"\",\"\");\r\n        r = `node${i}[label = \\\"${nodoTerm}\\\"];\\n`;\r\n\r\n        for(let j = 0; j<= nodo.hijos.length - 1; j++){\r\n            r = `${r}node${i} -> node${i}${k}\\n`;\r\n            r = r + this.GraficarNodos(nodo.hijos[j], \"\"+i+k);\r\n            k = k + 1;\r\n        }\r\n\r\n        if(!(nodo.lexema.match(''))||!(nodo.lexema.match(\"\"))){\r\n            let nodoToken = nodo.lexema;\r\n            nodoToken = nodoToken.replace(\"\\\"\",\"\");\r\n            r = r + `node${i}c[label = \\\"${nodoToken}\\\"];\\n`;\r\n            r = r + `node${i} -> node${i}c\\n`;\r\n        }\r\n        return r;\r\n    }\r\n}","import Simbolos from \"./Simbolos\";\r\n\r\nexport default class contenido {\r\n    public identificador:string;\r\n    public sim:Simbolos;\r\n    constructor(identificador:string,sim:Simbolos){\r\n        this.identificador=identificador;\r\n        this.sim=sim;\r\n    }\r\n    \r\n}","import Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport { Instruccion } from \"../Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\nimport informacion from \"./informacion\";\r\n\r\nexport default class puntopunto implements Instruccion {\r\n  public exprecion: informacion;\r\n  public sig;\r\n  public contador;\r\n\r\n  constructor(exprecion: informacion, sig) {\r\n    this.exprecion = exprecion;\r\n    this.sig = sig;\r\n    this.contador = 0;\r\n  }\r\n\r\n  ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n    if (this.sig != null) {\r\n      if (this.contador == 0) {\r\n        this.sig.ejecutar(controlador, ts.ant);\r\n      }\r\n      this.contador = 1;\r\n    } else {\r\n      if (this.contador == 0) {\r\n        ts = ts.ant;\r\n        for (let informacion of ts.tabla) {\r\n          if (informacion.sim.simbolo == 1) {\r\n            controlador.append(informacion.sim.objeto.gethtml(\"\", controlador));\r\n          }\r\n        }\r\n      }\r\n      this.contador = 1;\r\n    }\r\n  }\r\n  recorrer(): Nodo {\r\n    let padre = new Nodo(\"/..\", \"\");\r\n    if (this.sig != null) {\r\n      padre.AddHijo(this.sig.recorrer());\r\n    }\r\n    return padre;\r\n  }\r\n}\r\n","export enum tipo{\r\n    ENTERO,\r\n    DOBLE,\r\n    BOOLEANO,\r\n    CARACTER,\r\n    CADENA, \r\n    VOID,\r\n    OBJETO,\r\n    IDENTIFICADOR\r\n}\r\nexport default class Tipo{\r\n    \r\n    public type : tipo; \r\n    public stype : string;\r\n\r\n    constructor(stype : string) {\r\n        this.stype = stype;\r\n        this.type = this.getTipo(stype);\r\n    }\r\n\r\n    getTipo(stype: string): tipo{\r\n        if(stype == 'DOBLE'){\r\n            return tipo.DOBLE;\r\n        }else if(stype == 'ENTERO'){\r\n            return tipo.ENTERO;\r\n        }else if(stype == 'STRING'){\r\n            return tipo.CADENA;\r\n        }else if(stype == 'BOOLEAN'){\r\n            return tipo.BOOLEANO;\r\n        }else if(stype == 'VOID'){\r\n            return tipo.VOID;\r\n        }else if (stype == 'CHAR'){\r\n            return tipo.CARACTER;\r\n        }else if (stype=='OBJETO'){\r\n            return tipo.OBJETO;\r\n        }else if (stype=='IDENTIFICADOR'){\r\n            return tipo.IDENTIFICADOR;\r\n        }\r\n    }\r\n\r\n    getStype():string {\r\n        return this.stype;\r\n    }\r\n}","import Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport { Instruccion } from \"../Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\n\r\nexport default class text implements Instruccion {\r\n  constructor() {}\r\n\r\n  ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n    for (let informacion of ts.tabla) {\r\n      if (controlador.extxt.tipo == 1) {\r\n        if (controlador.extxt.id == \"*\") {\r\n          this.generador3D(informacion, controlador);\r\n        } else {\r\n          if (\r\n            informacion.identificador == controlador.extxt.id &&\r\n            informacion.sim.simbolo == 1\r\n          ) {\r\n            this.generador3D(informacion, controlador);\r\n          }\r\n        }\r\n      } else {\r\n        if (\r\n          informacion.identificador == controlador.extxt.id &&\r\n          informacion.sim.simbolo == 2\r\n        ) {\r\n          controlador.append(informacion.sim.valor + \"\\n\");\r\n        } else {\r\n          if (controlador.extxt.id == \"*\" && informacion.sim.simbolo == 2) {\r\n            controlador.append(informacion.sim.valor);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  generador3D(informacion, controlador: Controlador) {\r\n    if (controlador.exprecion != null) {\r\n      let salida = controlador.exprecion.getvalor3d(\r\n        controlador,\r\n        controlador.ts\r\n      );\r\n      controlador.generador.genLabel(salida.lblTrue);\r\n      controlador.append(informacion.sim.objeto.gettxt(\"\", controlador));\r\n      controlador.generador.genPrint(\"c\", \"10\");\r\n      controlador.generador.genLabel(salida.lblFalse);\r\n      controlador.exprecion.limpiar();\r\n    } else {\r\n      controlador.append(informacion.sim.objeto.gettxt(\"\", controlador));\r\n      controlador.generador.genPrint(\"c\", \"10\");\r\n    }\r\n  }\r\n\r\n  recorrer(): Nodo {\r\n    let padre = new Nodo(\"text()\", \"\");\r\n    return padre;\r\n  }\r\n}\r\n","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MDBBootstrapModule.forRoot(),\r\n    FormsModule,\r\n    CodemirrorModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","\r\nimport Controlador from \"../Controlador\";\r\nimport Declaracion from \"../Instrucciones/Declaracion\";\r\nimport Ejecutar from \"../Instrucciones/Ejecutar\";\r\nimport Funcion from \"../Instrucciones/Funcion\";\r\nimport { Instruccion } from \"../Interfaces.ts/Instruccion\";\r\nimport Simbolos from \"../TablaSimbolos/Simbolos\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\nimport Tipo from \"../TablaSimbolos/Tipo\";\r\nimport Objeto from \"../xml/objeto\";\r\nimport obj from \"../xml/objeto\";\r\nimport acceso from \"../xpath/acceso\";\r\nimport Nodo from \"./Nodo\";\r\nimport { GeneradorC3D } from '../GeneradorC3D/GeneradorC3D'\r\nimport * as xpath from \"../../Analizadores/gramatica\";\r\n\r\nexport default class Ast implements Instruccion{\r\n\r\n    public lista_instrucciones: Array <Instruccion>;\r\n\r\n    constructor (lista_instrucciones){\r\n        this.lista_instrucciones=lista_instrucciones;\r\n    }\r\n\r\n\r\n    ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n    console.log(\"vamos a compilar la entrada\");\r\n    for(let instruccion of this.lista_instrucciones){\r\n        if(instruccion instanceof Objeto){\r\n            let tipo=new Tipo(\"OBJETO\");\r\n            let sim=new Simbolos(1,tipo,instruccion.identificador,instruccion.texto,instruccion);\r\n            ts.agregar(instruccion.identificador,sim);\r\n            ts.agregarSiguiente(instruccion.identificador,instruccion.ejecutar(controlador,ts));\r\n        }\r\n    }\r\n        this.graficar(controlador,ts); \r\n    }\r\n\r\n    \r\n    ejecutarXQuery(controlador: Controlador, ts: TablaSimbolos) {\r\n\r\n        for(let instruccion of this.lista_instrucciones){\r\n            instruccion.ejecutar(controlador,ts);\r\n        }\r\n    }\r\n    \r\n    ejecutarDescendente(controlador: Controlador, ts: TablaSimbolos) {\r\n        console.log(\"vamos a compilar la entrada\");\r\n       \r\n        for(let instruccion of this.lista_instrucciones){\r\n            if(instruccion instanceof Objeto){\r\n                let tipo=new Tipo(\"OBJETO\");\r\n                let sim=new Simbolos(1,tipo,instruccion.identificador,instruccion.texto,instruccion);\r\n                ts.agregar(instruccion.identificador,sim);\r\n                ts.agregarSiguiente(instruccion.identificador,instruccion.ejecutar(controlador,ts));\r\n            }\r\n        }\r\n        this.graficar(controlador,ts); \r\n        console.log(ts);\r\n    }\r\n\r\n    \r\n    ejecutarXPath(controlador: Controlador, ts: TablaSimbolos,instruccion:Instruccion){\r\n        instruccion.ejecutar(controlador,ts);\r\n    }\r\n\r\n\r\n\r\n    graficar(controlador: Controlador, ts: TablaSimbolos) {\r\n        console.log(\"vamos a compilar xpaht\");\r\n        if(ts!=null){\r\n            controlador.graficarEntornos(controlador,ts,ts.ambito);\r\n            for (let tssig of ts.sig ){\r\n                this.graficar(controlador,tssig.sig);\r\n            } \r\n        }\r\n    }\r\n\r\n    recorrer(): Nodo {\r\n        let raiz = new Nodo(\"INICIO\",\"\");\r\n\r\n        for(let inst of this.lista_instrucciones){\r\n            raiz.AddHijo(inst.recorrer());\r\n        }\r\n        return raiz;\r\n    }\r\n\r\n}","\r\n/**\r\n * @class Clase para el manejo de nodos de la grafica del ast\r\n */\r\n export default class Nodo{\r\n    public token : string;\r\n    public lexema : string;\r\n    public hijos : Array<Nodo>;\r\n\r\n    /**\r\n     * @constructor Crea un nuevo nodo a graficar del ast\r\n     * @param token guarda el token del nodo\r\n     * @param lexema guarda el lexema del nodo\r\n     */\r\n    constructor(token : string, lexema : string) {\r\n        this.token = token;\r\n        this.lexema = lexema;\r\n        this.hijos = new Array<Nodo>();\r\n    }\r\n\r\n    /**\r\n     * @method AddHijo agrega un nuevo hijo a la lista\r\n     * @param nuevo hace referencia al nuevo nodo\r\n     */\r\n    public AddHijo(nuevo :Nodo):void{\r\n        this.hijos.push(nuevo);\r\n    }\r\n\r\n    /**\r\n     * @function getToken retorna el nombre del token \r\n     * @returns retorna el token\r\n     */\r\n    public getToken():string{\r\n        return this.token;\r\n    }\r\n\r\n    /**\r\n     * @function GraficarSintactico Hace la estructura de la grafica \r\n     * @returns retorna la cadena total de la grafica \r\n     */\r\n    public GraficarSintactico():string{\r\n        let grafica: string = `dinetwork {\\n\\n${this.GraficarNodos(this, \"0\")} \\n\\n}`\r\n        return grafica;\r\n    }\r\n\r\n    /**\r\n     * @function GraficarNodos\r\n     * @param nodo indica el nodo donde nos posicionamos\r\n     * @param i hara referencia al numero o identificador del nodo a graficar\r\n     * @returns retorna la cadena de los nodos \r\n     */\r\n    public GraficarNodos(nodo: Nodo, i: string):string{\r\n        let k = 0;\r\n        let r = \"\";\r\n        let nodoTerm : string = nodo.token;\r\n        nodoTerm = nodoTerm.replace(\"\\\"\",\"\");\r\n        r = `node${i}[label = \\\"${nodoTerm}\\\"];\\n`;\r\n\r\n        for(let j = 0; j<= nodo.hijos.length - 1; j++){\r\n            r = `${r}node${i} -> node${i}${k}\\n`;\r\n            r = r + this.GraficarNodos(nodo.hijos[j], \"\"+i+k);\r\n            k = k + 1;\r\n        }\r\n\r\n        if(!(nodo.lexema.match(''))||!(nodo.lexema.match(\"\"))){\r\n            let nodoToken = nodo.lexema;\r\n            nodoToken = nodoToken.replace(\"\\\"\",\"\");\r\n            r = r + `node${i}c[label = \\\"${nodoToken}\\\"];\\n`;\r\n            r = r + `node${i} -> node${i}c\\n`;\r\n        }\r\n        return r;\r\n    }\r\n}","import { TablaSimbolos } from \"./TablaSimbolos\";\r\n\r\nexport default class ambito {\r\n    public sig : TablaSimbolos;\r\n    public identificador:string;\r\n\r\n    constructor(identificador:string,sig : TablaSimbolos){\r\n        this.identificador=identificador;\r\n        this.sig=sig;\r\n    }\r\n}","\r\nimport ambito from \"./ambito\";\r\nimport contenido from \"./contenido\";\r\nimport Simbolos from \"./Simbolos\";\r\n\r\n\r\nexport class TablaSimbolos{\r\n\r\n    public ant : TablaSimbolos;\r\n    public sig : Array<ambito>=[];\r\n    public tabla : Array<contenido>=[];\r\n    public ambito:string;\r\n    constructor ( ant: TablaSimbolos,ambito?){\r\n        this.ant=ant;\r\n        this.ambito=ambito;\r\n\r\n    }\r\n\r\n    agregar(id: string, simbolo : Simbolos){\r\n        let cont= new contenido(id,simbolo);\r\n        this.tabla.push(cont);\r\n        //this.tabla.set(id.toLowerCase(), simbolo); \r\n    }\r\n\r\n    agregarSiguiente(id:string,sig:TablaSimbolos){\r\n        let amb=new ambito(id,sig);\r\n        this.sig.push(amb);\r\n    }\r\n\r\n    existe(id: string): boolean{\r\n      /*  let ts : TablaSimbolos = this;\r\n\r\n        while(ts != null){\r\n            let existe = ts.tabla.get(id);\r\n\r\n            if(existe != null){\r\n                return true;\r\n            }\r\n            ts = ts.ant;\r\n        }*/\r\n        return false;\r\n    }\r\n\r\n    existeEnActual(id: string): boolean{\r\n      /*  let ts : TablaSimbolos = this;\r\n\r\n        let existe = ts.tabla.get(id);\r\n\r\n        if(existe != null){\r\n            return true;\r\n        }*/\r\n        return false;\r\n    }\r\n\r\n    getSimbolo(id: string,tipoval?){\r\n        let ts : TablaSimbolos = this; \r\n        console.log(\"-----------------\");\r\n        for( let informacion of ts.tabla){\r\n            console.log(informacion.identificador+\"==\"+id  +\" && \"+ tipoval+\"==\"+informacion.sim.simbolo)\r\n            if(informacion.identificador==id && tipoval==informacion.sim.simbolo){\r\n                return informacion.sim;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}","export default class Evaluar{\r\n    public resultado:  any;\r\n\r\n    constructor(resultado: any){\r\n        this.resultado=resultado;\r\n    }\r\n    get_Resultado():number{\r\n        return this.resultado;\r\n    }\r\n}","import Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport { Instruccion } from \"../Interfaces.ts/Instruccion\";\r\nimport Simbolos from \"../TablaSimbolos/Simbolos\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\nimport Tipo, { tipo } from \"../TablaSimbolos/Tipo\";\r\nimport Atributo from \"./atributo\";\r\n\r\nexport default class Objeto implements Instruccion {\r\n  public identificador: string;\r\n  public texto: string;\r\n  public listaAtributos: Array<Atributo>;\r\n  public listaObjetos: Array<Objeto>;\r\n  public linea: number;\r\n  public columna: number;\r\n  public tipoetiqueta: number;\r\n  public posicionid3d: string;\r\n  public posiciontext3d: string;\r\n  public etiquetaF: string;\r\n\r\n  constructor(\r\n    id: string,\r\n    texto: string,\r\n    linea: number,\r\n    columna: number,\r\n    listaAtributos: Array<Atributo>,\r\n    listaO: Array<Objeto>,\r\n    tipoetiqueta: number,\r\n    etiquetaF?\r\n  ) {\r\n    this.identificador = id;\r\n    this.texto = texto;\r\n    this.linea = linea;\r\n    this.columna = columna;\r\n    this.listaAtributos = listaAtributos;\r\n    this.listaObjetos = listaO;\r\n    this.tipoetiqueta = tipoetiqueta;\r\n    this.etiquetaF = etiquetaF;\r\n  }\r\n\r\n  ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n    if (this.tipoetiqueta == 2) {\r\n      if (this.identificador != this.etiquetaF) {\r\n        controlador.append(\r\n          \"Error: La etiqueta de inicio y fin no coinciden:: inicio: \" +\r\n            this.identificador +\r\n            \" final: \" +\r\n            this.etiquetaF\r\n        );\r\n      }\r\n    }\r\n\r\n    this.posicionid3d = this.generar3d(this.identificador, controlador);\r\n    let ts_local = new TablaSimbolos(ts, this.identificador);\r\n    if (this.texto.length > 0) {\r\n      this.posiciontext3d = this.generar3d(this.texto, controlador);\r\n    }\r\n    for (let at of this.listaAtributos) {\r\n      let tipo = new Tipo(\"IDENTIFICADOR\");\r\n      let sim = new Simbolos(2, tipo, at.identificador, at.valor,at);\r\n      at.posicion3d = this.generar3d(at.valor, controlador);\r\n      at.posicionId3d = this.generar3d(at.identificador, controlador);\r\n      ts_local.agregar(at.identificador, sim);\r\n    }\r\n    for (let at of this.listaObjetos) {\r\n      let tipo = new Tipo(\"OBJETO\");\r\n      const regex = /^[0-9]+(\".\"[0-9]+)?$/;\r\n      let sim: Simbolos;\r\n      if (isNaN(Number(at.texto))) {\r\n        console.log(\"no numero:\" + at.texto);\r\n        sim = new Simbolos(1, tipo, at.identificador, at.texto, at);\r\n      } else {\r\n        console.log(\"numero: \" + at.texto);\r\n        sim = new Simbolos(1, tipo, at.identificador, Number(at.texto), at);\r\n      }\r\n      ts_local.agregar(at.identificador, sim);\r\n      ts_local.agregarSiguiente(\r\n        at.identificador,\r\n        at.ejecutar(controlador, ts_local)\r\n      );\r\n    }\r\n    return ts_local;\r\n  }\r\n\r\n  gethtml(tab: string, controlador: Controlador) {\r\n    const generator = controlador.generador;\r\n    generator.genPrint(\"c\", \"60\");\r\n\r\n    generator.genSetStack(\"p\", this.posicionid3d);\r\n    generator.genCall(\"nativa_print_str\");\r\n\r\n    let xml = tab + \"<\" + this.identificador;\r\n    for (let at of this.listaAtributos) {\r\n      generator.genPrint(\"c\", \"32\");\r\n\r\n      generator.genSetStack(\"p\", at.posicionId3d);\r\n      generator.genCall(\"nativa_print_str\");\r\n\r\n      generator.genPrint(\"c\", \"61\");\r\n      generator.genPrint(\"c\", \"34\");\r\n\r\n      generator.genSetStack(\"p\", at.posicion3d);\r\n      generator.genCall(\"nativa_print_str\");\r\n\r\n      generator.genPrint(\"c\", \"34\");\r\n\r\n      xml += \" \" + at.identificador + '=\"' + at.valor + '\" ';\r\n    }\r\n    if (this.tipoetiqueta == 1) {\r\n      generator.genPrint(\"c\", \"47\");\r\n      generator.genPrint(\"c\", \"62\");\r\n      xml += \"/>\";\r\n    } else {\r\n      if (this.texto.length > 0) {\r\n        generator.genPrint(\"c\", \"62\");\r\n\r\n        generator.genSetStack(\"p\", this.posiciontext3d);\r\n        generator.genCall(\"nativa_print_str\");\r\n\r\n        generator.genPrint(\"c\", \"60\");\r\n\r\n        generator.genSetStack(\"p\", this.posicionid3d);\r\n        generator.genCall(\"nativa_print_str\");\r\n\r\n        generator.genPrint(\"c\", \"47\");\r\n        generator.genPrint(\"c\", \"62\");\r\n\r\n        xml += \">\" + this.texto + \"<\" + this.identificador + \"/>\";\r\n      } else {\r\n        tab = tab + \"   \";\r\n        generator.genPrint(\"c\", \"62\");\r\n        xml += \">\";\r\n        for (let at of this.listaObjetos) {\r\n          xml += \"\\n\";\r\n          generator.genPrint(\"c\", \"10\");\r\n          xml += at.gethtml(tab, controlador);\r\n        }\r\n        generator.genPrint(\"c\", \"10\");\r\n        generator.genPrint(\"c\", \"60\");\r\n\r\n        generator.genSetStack(\"p\", this.posicionid3d);\r\n        generator.genCall(\"nativa_print_str\");\r\n\r\n        generator.genPrint(\"c\", \"47\");\r\n        generator.genPrint(\"c\", \"62\");\r\n\r\n        xml += tab + \"\\n<\" + this.identificador + \"/>\";\r\n      }\r\n    }\r\n\r\n    return xml;\r\n  }\r\n\r\n  gettxt(tab: string, controlador: Controlador) {\r\n    const generator = controlador.generador;\r\n    let xml = \"\";\r\n    if (this.texto.length > 0) {\r\n      generator.genSetStack(\"p\", this.posiciontext3d);\r\n      generator.genCall(\"nativa_print_str\");\r\n      xml += this.texto;\r\n    } else {\r\n      for (let at of this.listaObjetos) {\r\n        xml += \"\\n\";\r\n        generator.genPrint(\"c\", \"10\");\r\n        xml += at.gethtml(tab, controlador);\r\n      }\r\n    }\r\n\r\n    return xml;\r\n  }\r\n\r\n  recorrer(): Nodo {\r\n    let padre = new Nodo(\"objeto\", \"\");\r\n\r\n    let hijo = new Nodo(this.identificador, \"\");\r\n    if (this.texto.length > 0) {\r\n      hijo.AddHijo(new Nodo(this.texto, \"\"));\r\n    }\r\n    for (let at of this.listaAtributos) {\r\n      hijo.AddHijo(new Nodo(at.identificador, \"\"));\r\n    }\r\n    for (let at of this.listaObjetos) {\r\n      hijo.AddHijo(at.recorrer());\r\n    }\r\n    padre.AddHijo(hijo);\r\n    return padre;\r\n  }\r\n\r\n  generar3d(entrada: string, controlador: Controlador): string {\r\n    const generator = controlador.generador;\r\n    const temp = generator.newTemporal();\r\n    generator.genAsignacion(temp, \"h\");\r\n    for (let i = 0; i < entrada.length; i++) {\r\n      generator.genSetHeap(\"h\", entrada.charCodeAt(i));\r\n      generator.avanzarHeap();\r\n    }\r\n    generator.genSetHeap(\"h\", \"-1\");\r\n    generator.avanzarHeap();\r\n    return temp;\r\n  }\r\n}\r\n","import { Nativas } from \"./Nativas\";\r\n\r\nexport class GeneradorC3D {\r\n    private static generador: GeneradorC3D;\r\n    private temporal: number;\r\n    private label: number;\r\n    private code: string[];\r\n    codeFuncion: string[];\r\n    private tempStorage: Set<string>;\r\n    isFunc = '';\r\n\r\n    /**\r\n     * constructor de la clase singleton\r\n     */\r\n    constructor() {\r\n        this.temporal = this.label = 0;\r\n        this.code = [];\r\n        this.codeFuncion = [];\r\n        this.tempStorage = new Set();\r\n    }\r\n\r\n    public agregarFuncion(funcion: string[]) {\r\n        funcion.forEach((fun) => {\r\n            this.codeFuncion.push(fun);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Obtiene la instancia de la clase singleton\r\n     */\r\n    public static getInstancia() {\r\n        return this.generador || (this.generador = new this());\r\n    }\r\n\r\n    /**\r\n     * Retorna el set de los temporales que estan en uso\r\n     */\r\n    public getTempStorage() {\r\n        return this.tempStorage;\r\n    }\r\n\r\n    /**\r\n     * Vacia el set de los temporales\r\n     */\r\n    public clearTempStorage() {\r\n        this.tempStorage.clear();\r\n    }\r\n\r\n    /**\r\n     * asigna el set al set local de temporales\r\n     * @param tempStorage lista tipo Set que se asignara al set local\r\n     */\r\n    public setTempStorage(tempStorage: Set<string>) {\r\n        this.tempStorage = tempStorage;\r\n    }\r\n\r\n    /**\r\n     * borra el C3D que tenga guardado la clase y reinicia los temporales y labels\r\n     */\r\n    public clearCode() {\r\n        this.temporal = this.label = 0;\r\n        this.code = [];\r\n        this.codeFuncion = [];\r\n        this.tempStorage = new Set();\r\n\r\n    }\r\n\r\n    public clearSoloCode() {\r\n        this.code = [];\r\n    }\r\n\r\n    /**\r\n     * Ingresa en el C3D el valor que se asigna como parametro\r\n     * @param code valor que se asignara al C3D de la clase\r\n     */\r\n    public genCode(code: string) {\r\n        this.code.push(this.isFunc + code);\r\n    }\r\n\r\n    /**\r\n     * Retorna el C3D que se haya generado en la clase singleton\r\n     */\r\n    public getCode() {\r\n        let nativas = new Nativas();\r\n        let encabezado = '#include <stdio.h>\\n#include <math.h>\\ndouble Stack[60000]; double Heap[60000];\\nint p; int h;\\n';\r\n        let main = `\\nint main() {\\n${this.code.join('\\n')}\\n\\nreturn 0;\\n}\\n`;\r\n        const funciones = this.codeFuncion.join('\\n');\r\n        this.code = [];\r\n        let strNativas = nativas.generarNativas();\r\n        //strNativas = ''; // comentar despues de terminar\r\n        let c3d = `${encabezado}${this.getTemporales()};\\n${strNativas}\\n${funciones}\\n${main}`;\r\n\r\n        return c3d;\r\n    }\r\n\r\n    getSoloCode() {\r\n        return this.code;\r\n    }\r\n\r\n    setSoloCode(codeA: string[]) {\r\n        this.code = codeA;\r\n    }\r\n\r\n    getNativas() {\r\n        return this.code.join('\\n');\r\n    }\r\n\r\n\r\n    getTemporales() {\r\n        let lista = 'double ';\r\n        for (let i = 0; i < this.temporal; i++) {\r\n            lista += 'T' + i;\r\n            lista += i < this.temporal - 1 ? ',' : '';\r\n        }\r\n        return lista;\r\n    }\r\n\r\n    /**\r\n     * Crea un nuevo temporal y lo retorna\r\n     */\r\n    public newTemporal(): string {\r\n        const temp = 'T' + this.temporal++;\r\n        this.tempStorage.add(temp);\r\n        return temp;\r\n    }\r\n\r\n    /**\r\n     * Crea una nueva etiqueta y la retorna\r\n     */\r\n    public newLabel(): string {\r\n        return 'L' + this.label++;\r\n    }\r\n\r\n    /**\r\n     * funcion que agrega una nueva etiqueta el C3D\r\n     * @param label valor que se agregara al C3D como tipo etiqueta\r\n     */\r\n    public genLabel(label: string) {\r\n        this.code.push(`${this.isFunc}${label}:`);\r\n    }\r\n\r\n    /**\r\n     * Genera una nueva expresion y la agrega al C3D \r\n     * @param tem Temporal al que se le asignara la expresion\r\n     * @param izq Expresion izquierda que se asignara al temporal\r\n     * @param der Expresion derecha que se asignara al temporal\r\n     * @param operator Operador de la expresion \r\n     */\r\n    public genExpresion(tem: string, iqz: any, der: any = '', operator: string = '') {\r\n        this.code.push(`${this.isFunc}${tem} = ${iqz} ${operator} ${der};`);\r\n    }\r\n\r\n    /**\r\n     * asigna un valor a un temporal o puntero\r\n     * @param tem variable que recibira el valor\r\n     * @param val valor que sera asignado\r\n     */\r\n    public genAsignacion(tem: string, val: string) {\r\n        this.code.push(`${this.isFunc}${tem} = ${val};`);\r\n    }\r\n\r\n    /**\r\n     * genera un goto con el valor de label y lo agrega el C3D\r\n     * @param label valor de etiqueta al cual se hara el goto\r\n     */\r\n    public genGoto(label: string) {// prnGoto\r\n        this.code.push(`${this.isFunc}goto ${label};`);\r\n    }\r\n\r\n    /**\r\n     * genera un if y lo agrega al C3D\r\n     * @param iqz Expresion izquierda de la condicion if\r\n     * @param der Expresion derecha de la condicion if\r\n     * @param operator Operador boleano de la condicion\r\n     * @param label Etiqueta de salto si la condicion es verdadera\r\n     */\r\n    public genIf(iqz: any, der: any, operator: string, label: string) {\r\n        this.code.push(`${this.isFunc}if (${iqz} ${operator} ${der}) goto ${label};`);\r\n    }\r\n\r\n    /**\r\n     * Intruccion que hace avanzar el puntero heap a su siguite posicion\r\n     */\r\n    public avanzarHeap() { //nextHeap\r\n        this.code.push(this.isFunc + 'h = h + 1;');\r\n    }\r\n    \r\n    /**\r\n     * genera un acceso al heap en la posicion index y lo asiga al tem\r\n     * @param tem temporal que recibira el valor del heap\r\n     * @param index posicion del heap al cual se accedera\r\n     */\r\n    public genGetHeap(tem: any, index: any) {\r\n        index = index[0] === 'T' ? '(int)' + index : index;\r\n        this.code.push(`${this.isFunc}${tem} = Heap[${index}];`);\r\n    }\r\n\r\n    /**\r\n     * genera una asignacion de valor al heap en la posicion index\r\n     * @param index posicion del heap al cual se desea acceder\r\n     * @param valor valor que se asignara a la posicion del heap\r\n     */\r\n    public genSetHeap(index: any, valor: any) { // prnsetheap\r\n        index = index[0] === 'T' ? '(int)' + index : index;\r\n        this.code.push(`${this.isFunc}Heap[${index}] = ${valor};`);\r\n    }\r\n\r\n    /**\r\n     * genera una asignacion a tem del valor del stack en la posicion index\r\n     * @param tem temporal al cual se asignara el valor del stack\r\n     * @param index posicion del stack al cual se desea acceder\r\n     */\r\n    public genGetStack(tem: any, index: any) {\r\n        index = index[0] === 'T' ? '(int)' + index : index;\r\n        this.code.push(`${this.isFunc}${tem} = Stack[${index}];`);\r\n    }\r\n\r\n    /**\r\n     * genera una asignacion al stack en la posicion index\r\n     * @param index posicion del stack al cual se desea acceder\r\n     * @param value valor que sera asignado al stack\r\n     */\r\n    public genSetStack(index: any, value: any) {\r\n        index = index[0] === 'T' ? '(int)' + index : index;\r\n        this.code.push(`${this.isFunc}Stack[${index}] = ${value};`);\r\n    }\r\n\r\n    /**\r\n     * genera un desplazamiento del stack para generar un nuevo ambito\r\n     * @param size posiciones que se desplazara el stack\r\n     */\r\n    public genNextEnv(size: number) {\r\n        this.code.push(`${this.isFunc}p = p + ${size};`);\r\n    }\r\n\r\n    /**\r\n     * genera un desplazamiento del stack para volver a un ambito anterios\r\n     * @param size posiciones que se desplazara el stack\r\n     */\r\n    public genAntEnv(size: number) {\r\n        this.code.push(`${this.isFunc}p = p - ${size};`);\r\n    }\r\n\r\n    /**\r\n     * genera una llamada a una funcion\r\n     * @param id nombre de la funcion\r\n     */\r\n    public genCall(id: string) {\r\n        this.code.push(`${this.isFunc}${id}();`);\r\n    }\r\n\r\n    /**\r\n     * Genera el encabezado de una funcion \r\n     * @param id nombre de la funcion\r\n     */\r\n    public genFuncion(id: string) {\r\n        this.code.push(`\\nvoid ${id}() {`);\r\n    }\r\n\r\n    /**\r\n     * Genera el cierre de la definicion de una funcion\r\n     */\r\n    public genEndFuncion() {\r\n        this.code.push('}')\r\n    }\r\n\r\n    /**\r\n     * genera un printf con el tipo de dato y el valor\r\n     * @param formato tipo de dato que se va a imprimir\r\n     * @param valor valor que se va a imprimir\r\n     */\r\n    public genPrint(formato: string, valor: any) {\r\n        valor = valor[0] === 'T' && formato !== 'f' ? '(int)' + valor : valor;\r\n        this.code.push(`${this.isFunc}printf(\"%${formato}\",${valor});`);\r\n    }\r\n\r\n    /**\r\n     * genera un print del valor true\r\n     */\r\n    public genPrintTrue() {\r\n        this.genPrint('c', 't'.charCodeAt(0));\r\n        this.genPrint('c', 'r'.charCodeAt(0));\r\n        this.genPrint('c', 'u'.charCodeAt(0));\r\n        this.genPrint('c', 'e'.charCodeAt(0));\r\n    }\r\n\r\n    /**\r\n     * genera un print del valor false\r\n     */\r\n    public genPrintFalse() {\r\n        this.genPrint('c', 'f'.charCodeAt(0));\r\n        this.genPrint('c', 'a'.charCodeAt(0));\r\n        this.genPrint('c', 'l'.charCodeAt(0));\r\n        this.genPrint('c', 's'.charCodeAt(0));\r\n        this.genPrint('c', 'e'.charCodeAt(0));\r\n    }\r\n\r\n    /**\r\n     * genera un print del valor null\r\n     */\r\n    public genPrintNull() {\r\n        this.genPrint('c', 'n'.charCodeAt(0));\r\n        this.genPrint('c', 'u'.charCodeAt(0));\r\n        this.genPrint('c', 'l'.charCodeAt(0));\r\n        this.genPrint('c', 'l'.charCodeAt(0));\r\n    }\r\n\r\n    /**\r\n     * genera un nuevo comentario\r\n     * @param comment valor del comentario\r\n     */\r\n    public genComentario(comment: string) {\r\n        this.code.push(`${this.isFunc}// ----- ${comment} -----`);\r\n    }\r\n\r\n    /**\r\n     * borra un temporal del storage\r\n     * @param temp temporal que ya no se utilizara \r\n     */\r\n    public freeTemp(temp: string) {\r\n        if (this.tempStorage.has(temp)) {\r\n            this.tempStorage.delete(temp);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * agrega un temporal al storage\r\n     * @param temp temporal que se agregara al storage\r\n     */\r\n    public genTemp(temp: string) {\r\n        if (!this.tempStorage.has(temp))\r\n            this.tempStorage.add(temp);\r\n    }\r\n}","import Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport { Instruccion } from \"../Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\n\r\nexport default class whereXquery implements Instruccion {\r\n    public id:string;\r\n    public expreciones;\r\n\r\n    constructor(id,expreciones){\r\n        this.id=id;\r\n        this.expreciones=expreciones;\r\n    }\r\n    ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n        \r\n    }\r\n    recorrer(): Nodo {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}","import Nodo from \"src/clases/AST/Nodo\";\r\nimport Controlador from \"src/clases/Controlador\";\r\nimport { Expreciones } from \"src/clases/Interfaces.ts/Expreciones\";\r\nimport { Instruccion } from \"src/clases/Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"src/clases/TablaSimbolos/TablaSimbolos\";\r\nimport Detener from \"../SentenciaTransferencia/Break\";\r\nimport Continuar from \"../SentenciaTransferencia/continuar\";\r\nimport retornar from \"../SentenciaTransferencia/retornar\";\r\nimport CS from \"./CS\";\r\n\r\nexport default class SW implements Instruccion{\r\n\r\n    public Lista_case: Array<CS>;\r\n    public valor_sw: Expreciones;\r\n    public Lista_defaul: Array<Instruccion>;\r\n\r\n    constructor(valo_sw,lista_case,lista_defaul){\r\n        this.valor_sw=valo_sw;\r\n        this.Lista_case=lista_case;\r\n        this.Lista_defaul=lista_defaul;\r\n    }\r\n    ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n        let ts_local = new TablaSimbolos (ts);\r\n        for(let sw of this.Lista_case){\r\n            sw.valor_sw=this.valor_sw.getValor(controlador,ts_local);\r\n        }\r\n        let x=0;\r\n        for(let ins of this.Lista_case){\r\n            let res=ins.ejecutar(controlador,ts_local);\r\n            if( ins instanceof Detener || res instanceof Detener){\r\n                controlador.graficarEntornos(controlador,ts_local,\" (switch)\");\r\n                x=1;\r\n                break;\r\n            }else{\r\n                    if( ins instanceof retornar || res instanceof retornar){\r\n                        controlador.graficarEntornos(controlador,ts_local,\" (switch)\");\r\n                        return res; \r\n                    }\r\n                }\r\n            }\r\n\r\n            if(x==0){\r\n                for(let ins of this.Lista_defaul){\r\n                    let res=ins.ejecutar(controlador,ts_local);\r\n                    if( ins instanceof Detener || res instanceof Detener){\r\n                        controlador.graficarEntornos(controlador,ts_local,\" (switch)\");\r\n                        break;\r\n                    }else{\r\n                            if( ins instanceof retornar || res instanceof retornar){\r\n                                controlador.graficarEntornos(controlador,ts_local,\" (switch)\");\r\n                                return res; \r\n                            }\r\n                        }\r\n                    }\r\n            }\r\n            controlador.graficarEntornos(controlador,ts_local,\" (switch)\");\r\n    }\r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"SWITCH\",\"\");\r\n        padre.AddHijo(new Nodo(\"switch\",\"\"));\r\n        padre.AddHijo(new Nodo(\"(\",\"\"));\r\n        padre.AddHijo(this.valor_sw.recorrer());\r\n        padre.AddHijo(new Nodo(\")\",\"\"));\r\n        padre.AddHijo(new Nodo(\"{\",\"\"));\r\n        for(let ins of this.Lista_case){\r\n            padre.AddHijo(ins.recorrer());\r\n        }\r\n\r\n        if(this.Lista_defaul.length>0){\r\n            padre.AddHijo(new Nodo(\"default:\",\"\"));\r\n            for(let ins of this.Lista_defaul){\r\n                padre.AddHijo(ins.recorrer());\r\n            }\r\n        }\r\n        padre.AddHijo(new Nodo(\"}\",\"\"));\r\n        return padre;\r\n    }\r\n\r\n}","import Nodo from \"src/clases/AST/Nodo\";\r\nimport Controlador from \"src/clases/Controlador\";\r\nimport { Expreciones } from \"src/clases/Interfaces.ts/Expreciones\";\r\nimport { Instruccion } from \"src/clases/Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"src/clases/TablaSimbolos/TablaSimbolos\";\r\nimport Detener from \"../SentenciaTransferencia/Break\";\r\nimport Continuar from \"../SentenciaTransferencia/continuar\";\r\nimport retornar from \"../SentenciaTransferencia/retornar\";\r\n\r\n\r\nexport default class While implements Instruccion{\r\n\r\n    public condicion: Expreciones;\r\n    public lista_instrucciones : Array<Instruccion>;\r\n    public linea : number;\r\n    public columna : number;\r\n\r\n    constructor(condicion, lista_instrucciones, linea, columna) {\r\n        this.condicion = condicion;\r\n        this.lista_instrucciones = lista_instrucciones;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n\r\n    ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n        let valor_condicion = this.condicion.getValor(controlador, ts);\r\n\r\n        if(typeof valor_condicion == 'boolean'){\r\n\r\n            while(this.condicion.getValor(controlador,ts)){\r\n\r\n                let ts_local = new TablaSimbolos(ts);\r\n\r\n                for(let ins of this.lista_instrucciones){\r\n                    let res = ins.ejecutar(controlador,ts_local);\r\n                    if( ins instanceof Detener || res instanceof Detener){\r\n                        controlador.graficarEntornos(controlador,ts_local,\" (While)\");\r\n                       return null;\r\n                    }else{\r\n                        if(ins instanceof Continuar || res instanceof Continuar){\r\n                            break;\r\n                        }else{\r\n                            if( ins instanceof retornar || res instanceof retornar){\r\n                                controlador.graficarEntornos(controlador,ts_local,\" (While)\");\r\n                                return res;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n                controlador.graficarEntornos(controlador,ts_local,\" (While)\");\r\n            }\r\n        }\r\n    }\r\n    \r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"CICLO\",\"\");\r\n        padre.AddHijo(new Nodo(\"while\",\"\"));\r\n        padre.AddHijo(new Nodo(\"(\",\"\"));\r\n        padre.AddHijo(this.condicion.recorrer());\r\n        padre.AddHijo(new Nodo(\")\",\"\"));\r\n        padre.AddHijo(new Nodo(\"{\",\"\"));\r\n        for(let ins of this.lista_instrucciones){\r\n            padre.AddHijo(ins.recorrer());\r\n        }\r\n        padre.AddHijo(new Nodo(\"}\",\"\"));\r\n        return padre;\r\n    }\r\n\r\n} ","import { templateJitUrl } from \"@angular/compiler\";\r\nimport Nodo from \"src/clases/AST/Nodo\";\r\nimport Controlador from \"src/clases/Controlador\";\r\nimport { Instruccion } from \"src/clases/Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"src/clases/TablaSimbolos/TablaSimbolos\";\r\nimport returnXquery from \"./returnXquery\";\r\nimport whereXquery from \"./whereXquery\";\r\n\r\nexport default class ForXquery implements Instruccion {\r\n  public id: string;\r\n  public parametro;\r\n  public lista_instrucciones: Array<Instruccion>;\r\n  public linea: number;\r\n  public columna: number;\r\n\r\n  constructor(id, parametro, linea, columan, lista_instrucciones?) {\r\n    this.id = id;\r\n    this.parametro = parametro;\r\n    this.linea = linea;\r\n    this.columna = columan;\r\n    this.lista_instrucciones = lista_instrucciones;\r\n  }\r\n\r\n  ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n    let where;\r\n    let ret;\r\n    for (let instruccion of this.lista_instrucciones) {\r\n      if (instruccion instanceof whereXquery) {\r\n        where = instruccion;\r\n      } else {\r\n        if (instruccion instanceof returnXquery) {\r\n          ret = instruccion;\r\n        }\r\n      }\r\n    }\r\n    this.acceso(this.parametro, where, ret);\r\n    this.parametro.ejecutar(controlador, ts);\r\n  }\r\n\r\n  acceso(exprecion, where, ret) {\r\n    let temp=exprecion;\r\n    let acces;\r\n    console.log(temp);\r\n    while(temp!=null){\r\n        acces=temp;\r\n        temp=temp.sig;\r\n    }   \r\n    console.log(\"salida 1\");\r\n    console.log(acces);\r\n    console.log(ret);\r\n    if(where !=null){\r\n        acces.exprecion.exprecion=where.expreciones;\r\n    }\r\n    if(ret!=null){\r\n        acces.sig=ret.expreciones;\r\n    }\r\n    exprecion.sig=acces;\r\n    console.log(\"final\");\r\n    console.log(exprecion);\r\n  }\r\n\r\n  recorrer(): Nodo {\r\n    return null;\r\n  }\r\n}\r\n","import Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport Relaciones from \"../Expreciones/Operaciones/Relaciones\";\r\nimport Primitivo from \"../Expreciones/Primitivo\";\r\nimport { Instruccion } from \"../Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\nimport informacion from \"./informacion\";\r\n\r\nexport default class axes implements Instruccion {\r\n  public tipo: string;\r\n  public exprecion: informacion;\r\n  public sig;\r\n\r\n  constructor(tipo: string, exprecion: informacion, sig) {\r\n    this.tipo = tipo;\r\n    this.exprecion = exprecion;\r\n    this.sig = sig;\r\n  }\r\n\r\n  ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n    if (this.tipo == \"child\") {\r\n      this.child(controlador, ts);\r\n    } else {\r\n      if (this.tipo == \"\") {\r\n      }\r\n    }\r\n  }\r\n\r\n  child(controlador: Controlador, ts: TablaSimbolos) {\r\n    if (this.exprecion.exprecion != null) {\r\n      this.isxprecion(controlador, ts);\r\n    } else {\r\n      if (this.sig != null) {\r\n        for (let tssig of ts.sig) {\r\n          if (this.exprecion.id == \"*\") {\r\n            this.sig.ejecutar(controlador, tssig.sig);\r\n          } else {\r\n            if (this.exprecion.id == tssig.identificador) {\r\n              this.sig.ejecutar(controlador, tssig.sig);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        for (let informacion of ts.tabla) {\r\n          if (this.exprecion.tipo == 1) {\r\n            if (this.exprecion.id == \"*\") {\r\n              this.generador3D(informacion, controlador);\r\n            } else {\r\n              if (\r\n                informacion.identificador == this.exprecion.id &&\r\n                informacion.sim.simbolo == 1\r\n              ) {\r\n                this.generador3D(informacion, controlador);\r\n              }\r\n            }\r\n          } else {\r\n            if (\r\n              informacion.identificador == this.exprecion.id &&\r\n              informacion.sim.simbolo == 2\r\n            ) {\r\n              this.generador3DV(informacion, controlador);\r\n            } else {\r\n              if (this.exprecion.id == \"*\" && informacion.sim.simbolo == 2) {\r\n                this.generador3DV(informacion, controlador);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  isxprecion(controlador: Controlador, ts: TablaSimbolos) {\r\n    controlador.idlast = this.exprecion.id;\r\n    let valor = this.exprecion.exprecion.getValor(controlador, ts);\r\n    // this.exprecion.exprecion.getvalor3d(controlador,ts);\r\n    if (typeof valor == \"number\") {\r\n      this.isNumero(controlador, ts, valor);\r\n    } else {\r\n      this.isboolean(controlador, ts);\r\n    }\r\n  }\r\n\r\n  isNumero(controlador: Controlador, ts: TablaSimbolos, posicion: number) {\r\n    let cont = 1;\r\n    if (this.sig != null) {\r\n      for (let tssig of ts.sig) {\r\n        if (this.exprecion.id == tssig.identificador) {\r\n          if (cont == posicion) {\r\n            let val1 = new Primitivo(cont, 1, 1, -1);\r\n            let val2 = this.exprecion.exprecion;\r\n            let igual = new Relaciones(val1, \"==\", val2, 1, 1, false);\r\n            controlador.exprecion = igual;\r\n            controlador.ts = ts;\r\n            this.sig.ejecutar(controlador, tssig.sig);\r\n          }\r\n          cont++;\r\n        }\r\n      }\r\n    } else {\r\n      for (let informacion of ts.tabla) {\r\n        if (informacion.identificador == this.exprecion.id) {\r\n          if (cont == posicion) {\r\n            let val1 = new Primitivo(cont, 1, 1, -1);\r\n            let val2 = this.exprecion.exprecion;\r\n            let igual = new Relaciones(val1, \"==\", val2, 1, 1, false);\r\n            let salida = igual.getvalor3d(controlador, ts);\r\n            controlador.generador.genLabel(salida.lblTrue);\r\n            controlador.append(informacion.sim.objeto.gethtml(\"\", controlador));\r\n            controlador.generador.genPrint(\"c\", \"10\");\r\n            controlador.generador.genLabel(salida.lblFalse);\r\n\r\n            igual.limpiar();\r\n          }\r\n          cont++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  isboolean(controlador: Controlador, ts: TablaSimbolos) {\r\n    let posicion = 1;\r\n    console.log(\"entre\");\r\n    let cont = 1;\r\n    if (this.sig != null) {\r\n      for (let tssig of ts.sig) {\r\n        if (this.exprecion.id == tssig.identificador) {\r\n          controlador.position = cont;\r\n          controlador.posicionid = posicion;\r\n          if (this.exprecion.exprecion.getValor(controlador, ts)) {\r\n            controlador.exprecion = this.exprecion.exprecion;\r\n            controlador.ts = ts;\r\n            this.sig.ejecutar(controlador, tssig.sig);\r\n          }\r\n          cont++;\r\n        }\r\n        posicion++;\r\n      }\r\n    } else {\r\n      for (let informacion of ts.tabla) {\r\n        if (informacion.identificador == this.exprecion.id) {\r\n          controlador.position = cont;\r\n          controlador.posicionid = posicion;\r\n          if (this.exprecion.exprecion.getValor(controlador, ts)) {\r\n            let salida = this.exprecion.exprecion.getvalor3d(controlador, ts);\r\n            controlador.generador.genLabel(salida.lblTrue);\r\n            controlador.append(informacion.sim.objeto.gethtml(\"\", controlador));\r\n            controlador.generador.genPrint(\"c\", \"10\");\r\n            controlador.generador.genLabel(salida.lblFalse);\r\n\r\n            this.exprecion.exprecion.limpiar();\r\n          }\r\n          cont++;\r\n        }\r\n        posicion++;\r\n      }\r\n    }\r\n  }\r\n\r\n  generador3D(informacion, controlador: Controlador) {\r\n    if (controlador.exprecion != null) {\r\n      let salida = controlador.exprecion.getvalor3d(\r\n        controlador,\r\n        controlador.ts\r\n      );\r\n      controlador.generador.genLabel(salida.lblTrue);\r\n      controlador.append(informacion.sim.objeto.gethtml(\"\", controlador));\r\n      controlador.generador.genPrint(\"c\", \"10\");\r\n      controlador.generador.genLabel(salida.lblFalse);\r\n      controlador.exprecion.limpiar();\r\n    } else {\r\n      controlador.append(informacion.sim.objeto.gethtml(\"\", controlador));\r\n      controlador.generador.genPrint(\"c\", \"10\");\r\n    }\r\n  }\r\n\r\n  generador3DV(informacion, controlador: Controlador) {\r\n    if (controlador.exprecion != null) {\r\n      let salida = controlador.exprecion.getvalor3d(\r\n        controlador,\r\n        controlador.ts\r\n      );\r\n      controlador.generador.genLabel(salida.lblTrue);\r\n      controlador.generador.genSetStack(\"p\", informacion.sim.objeto.posicion3d);\r\n      controlador.generador.genCall(\"nativa_print_str\");\r\n      controlador.generador.genPrint(\"c\", \"10\");\r\n      controlador.generador.genLabel(salida.lblFalse);\r\n      controlador.exprecion.limpiar();\r\n      controlador.append(informacion.sim.valor + \"\\n\");\r\n    } else {\r\n      controlador.generador.genSetStack(\"p\", informacion.sim.objeto.posicion3d);\r\n      controlador.generador.genCall(\"nativa_print_str\");\r\n      controlador.generador.genPrint(\"c\", \"10\");\r\n      controlador.append(informacion.sim.valor);\r\n    }\r\n  }\r\n\r\n  recorrer(): Nodo {\r\n    let padre = new Nodo(\"/\", \"\");\r\n    padre.AddHijo(new Nodo(\"Child::\" + this.exprecion.id, \"\"));\r\n    if (this.exprecion.exprecion != null) {\r\n      padre.AddHijo(new Nodo(\"[\", \"\"));\r\n      padre.AddHijo(this.exprecion.exprecion.recorrer());\r\n      padre.AddHijo(new Nodo(\"]\", \"\"));\r\n    }\r\n    if (this.sig != null) {\r\n      padre.AddHijo(this.sig.recorrer());\r\n    }\r\n    return padre;\r\n  }\r\n}\r\n","import Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport { Instruccion } from \"../Interfaces.ts/Instruccion\";\r\nimport Simbolos from \"../TablaSimbolos/Simbolos\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\nimport Tipo from \"../TablaSimbolos/Tipo\";\r\n\r\nexport default class Funcion extends Simbolos implements Instruccion{\r\n\r\n    public lista_instrucciones : Array<Instruccion>;\r\n    public linea : number;\r\n    public columna : number;\r\n\r\n    constructor(simbolo : number, tipo : Tipo, identificador : string, lista_params, metodo, lista_instrucciones, linea, columna) {\r\n        super(simbolo,tipo,identificador,null,lista_params, metodo);\r\n        this.lista_instrucciones = lista_instrucciones;\r\n        this.linea = linea;\r\n        this.columna =columna;\r\n    }\r\n\r\n    agregarSimboloFuncion(controlador: Controlador, ts: TablaSimbolos){\r\n       /* if(!(ts.existe(this.identificador))){\r\n            ts.agregar(this.identificador,this);\r\n        }else{\r\n            //Error semantico\r\n        }*/\r\n    }\r\n\r\n    ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n        let ts_local = new TablaSimbolos(ts);\r\n        for(let ins of this.lista_instrucciones){\r\n            let r = ins.ejecutar(controlador,ts_local);\r\n\r\n            if(r != null){\r\n                controlador.ambito=\"Funcion: \\n\"+this.identificador;\r\n                controlador.graficarEntornos(controlador,ts_local,\"\");\r\n                return r;\r\n            }\r\n\r\n        }\r\n        controlador.ambito=\"Funcion: \\n\"+this.identificador;\r\n        controlador.graficarEntornos(controlador,ts_local,\"\");\r\n        return null;\r\n    }\r\n\r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"Funcion\",\"\"); \r\n        padre.AddHijo(new Nodo(this.tipo.stype,\"\"));\r\n        padre.AddHijo(new Nodo(this.identificador,\"\"));\r\n\r\n        padre.AddHijo(new Nodo(\"(\",\"\"));\r\n\r\n        for(let x=0;x<this.lista_params.length;x++){\r\n            let hijo = new Nodo(\"Identificador\",\"\");\r\n            hijo.AddHijo(new Nodo(this.lista_params[x].identificador,\"\"));\r\n            padre.AddHijo(hijo);\r\n        }\r\n\r\n        padre.AddHijo(new Nodo(\")\",\"\"));\r\n\r\n        padre.AddHijo(new Nodo(\"{\",\"\"));\r\n\r\n        let hijo_instrucciones = new Nodo(\"Instrucciones\",\"\");\r\n        for(let inst of this.lista_instrucciones){\r\n            hijo_instrucciones.AddHijo(inst.recorrer());\r\n        }\r\n        \r\n        padre.AddHijo(hijo_instrucciones);\r\n        padre.AddHijo(new Nodo(\"}\",\"\"));\r\n        \r\n       return padre;\r\n    }\r\n\r\n}","import Objeto from \"../xml/objeto\";\r\nimport Tipo from \"./Tipo\";\r\n\r\n\r\nexport default class Simbolos {\r\n    \r\n    public simbolo: number; \r\n\r\n    // Para la variables\r\n    public tipo : Tipo;\r\n    public identificador : string ;\r\n    public valor: any;\r\n    public objeto:Objeto;\r\n  \r\n    // funcion/metodo\r\n\r\n    public lista_params : Array<Simbolos>;\r\n    public metodo: boolean;\r\n\r\n    constructor(simbolo : number, tipo : Tipo, identificador : string, valor : any,objeto?, lista_params?, metodo?) {\r\n        this.simbolo = simbolo;\r\n        this.tipo = tipo;\r\n        this.identificador = identificador;\r\n        this.valor = valor; \r\n        this.lista_params = lista_params;\r\n        this.metodo = metodo;\r\n        this.objeto=objeto;\r\n    }\r\n\r\n    setValor(valor): void{\r\n        this.valor = valor;\r\n    }\r\n\r\n}","import Errores from \"./AST/Errores\";\r\nimport { GeneradorC3D } from \"./GeneradorC3D/GeneradorC3D\";\r\nimport Simbolos from \"./TablaSimbolos/Simbolos\";\r\nimport { TablaSimbolos } from \"./TablaSimbolos/TablaSimbolos\";\r\n\r\nexport default class Controlador{\r\n    public errores: Array<Errores>;\r\n    public consola: string;\r\n    public ambito: string;\r\n    public cuerpo: string;\r\n    public idlast: string;\r\n    public position:number;\r\n    public posicionid:number;\r\n    public acceso:number;\r\n    public entrada:string;\r\n    public generador: GeneradorC3D;\r\n    public exprecion;\r\n    public ts;\r\n    public extxt;\r\n\r\n    constructor (){\r\n        this.errores = new  Array<Errores>();\r\n        this.consola =\"\";\r\n        this.cuerpo;\r\n        this.idlast=\"\";\r\n        this.position=0;\r\n        this.acceso=1;\r\n        this.generador=GeneradorC3D.getInstancia();\r\n    }\r\n\r\n    public append (consola: string){\r\n        this.consola+=consola+\"\\n\";\r\n    }\r\n\r\n    graficar_ts(controlador:Controlador, ts:TablaSimbolos):string{\r\n        var cuerpohtml = \"<thead class=\\\"black white-text\\\"><tr><td colspan=\\\"6\\\">Tabla de Simbolos </td></tr><tr><th>Tipo</th><th>Nombre</th><th>Ambito</th><th>Valor</th></tr></thead>\";\r\n\r\n        cuerpohtml+=this.cuerpo;\r\n        \r\n        return cuerpohtml;\r\n    }\r\n\r\n    graficarEntornos(controlador:Controlador, ts:TablaSimbolos,ubicacion:string){\r\n        var cuerpohtml=\"\";\r\n        for(let sim of ts.tabla){\r\n            cuerpohtml += \"<tr mdbTableCol class=\\\"grey lighten-1 black-text\\\"><th scope=\\\"row\\\">\" +  this.getRol(sim.sim) + \"</th><td>\" + sim.identificador + \r\n            \"</td>\"+\r\n            \"</td><td>\" + ubicacion + \r\n            \"</td><td>\" + this.getValor(sim.sim) +  \"</tr>\";\r\n        }\r\n        this.cuerpo=this.cuerpo+cuerpohtml;\r\n    }\r\n\r\n    graficar_Semantico(controlador:Controlador, ts:TablaSimbolos):string{\r\n        var cuerpohtml = \"<thead class=\\\"black white-text\\\"><tr><td colspan=\\\"4\\\">Errores Semanticos </td></tr><tr><th>Tipo</th><th>Descripcion</th><th>Fila</th><th>Columna</th></tr></thead>\";\r\n\r\n\r\n        for(let sim of controlador.errores){\r\n            console.log(`Errores`);\r\n                \r\n            cuerpohtml += \"<tr mdbTableCol class=\\\"grey lighten-1 black-text\\\"><th scope=\\\"row\\\">\" + sim.tipo + \"</th><td>\" + sim.descripcion + \r\n                \"</td><td>\" + sim.linea +\"</td>\"  + \r\n                \"</td><td>\" + sim.columna +  \"</tr>\";\r\n        }\r\n            \r\n        \r\n        \r\n        return cuerpohtml;\r\n    }\r\n    getValor(sim:Simbolos):string{\r\n        if(sim.valor != null){\r\n            return sim.valor.toString(); \r\n        }else{\r\n            return '...';\r\n        }\r\n    }\r\n    getTipo(sim):string{\r\n\r\n        return sim.tipo.stype.toLowerCase();\r\n    }\r\n    getRol(sim:Simbolos):string{\r\n        let rol : string = '';\r\n        switch(sim.simbolo){\r\n            case 1:\r\n                rol = \"objeto\"\r\n                break\r\n            case 2:\r\n                rol = \"identificador\";\r\n                break;\r\n            case 3:\r\n                rol = \"metodo\";\r\n                break;\r\n             case 4:\r\n                rol = \"vector\";\r\n                break\r\n             case 5:\r\n                rol = \"lista\";\r\n                break;\r\n            case 6:\r\n                rol = \"parametro\"\r\n                break;\r\n        }\r\n        return rol;\r\n    }\r\n\r\n    getAmbito():string{\r\n        return 'global'\r\n    }\r\n    parametros(sim){\r\n        if(sim.lista_params != undefined){\r\n            return sim.lista_params.length\r\n        }else{\r\n            return \"...\";\r\n        }\r\n    }\r\n\r\n}","\r\nimport Nodo from \"src/clases/AST/Nodo\";\r\nimport Controlador from \"src/clases/Controlador\";\r\nimport { GeneradorC3D } from \"src/clases/GeneradorC3D/GeneradorC3D\";\r\nimport { Expreciones } from \"src/clases/Interfaces.ts/Expreciones\";\r\nimport { TablaSimbolos } from \"src/clases/TablaSimbolos/TablaSimbolos\";\r\nimport Tipo,{ tipo } from \"src/clases/TablaSimbolos/Tipo\";\r\nimport { retorno } from \"../retorno\";\r\nimport Operaciones, { Operador } from \"./Operaciones\";\r\n\r\n\r\nexport default class Aritmetica extends Operaciones implements Expreciones {\r\n    \r\n    lblTrue: string;\r\n    lblFalse: string;\r\n    \r\n    constructor (exp1 : Expreciones,operador : string ,exp2 : Expreciones,linea: number,columna: number,expU : boolean){\r\n        super (exp1,operador,exp2,linea,columna,expU);\r\n    }\r\n\r\n    limpiar() {\r\n       this.lblFalse='';\r\n       this.lblTrue='';\r\n       if(this.expU==false){\r\n        this.exp1.limpiar();\r\n        this.exp2.limpiar();\r\n       }else{\r\n        this.exp1.limpiar();\r\n       }\r\n       \r\n    }\r\n    \r\n    \r\n    getTipo(controlador: Controlador, ts: TablaSimbolos) : tipo{\r\n        let valor = this.getValor(controlador,ts);\r\n        \r\n        if(typeof valor == 'number'){\r\n            return tipo.DOBLE;\r\n        }else if(typeof valor == 'string'){\r\n            return tipo.CADENA;\r\n        }else if(typeof valor == 'boolean'){\r\n            return tipo.BOOLEANO;\r\n        }\r\n    }\r\n\r\n    getValor(controlador: Controlador, ts: TablaSimbolos) {\r\n        let valor_exp1;\r\n        let valor_exp2;\r\n        let valor_expU;\r\n\r\n        if(this.expU==false){\r\n            valor_exp1=this.exp1.getValor(controlador,ts);\r\n            valor_exp2=this.exp2.getValor(controlador,ts);\r\n        }else{\r\n            valor_expU=this.exp1.getValor(controlador,ts);\r\n        }\r\n\r\n        switch (this.operador){\r\n            case Operador.SUMA:\r\n                return this.suma(valor_exp1,valor_exp2);\r\n            case Operador.RESTA:\r\n                return this.resta(valor_exp1,valor_exp2);\r\n            case Operador.MULTI:\r\n                return this.multiplicacion(valor_exp1,valor_exp2);\r\n            case Operador.DIV:\r\n                return this.divicion(valor_exp1,valor_exp2);\r\n            case Operador.POT:\r\n                return this.potencia(valor_exp1,valor_exp2);\r\n            case Operador.MODULO:\r\n                return this.modulo(valor_exp1,valor_exp2);\r\n            case Operador.UNARIO:\r\n                return this.unario(valor_expU);\r\n            default:\r\n                //Se produjo un error inesperado\r\n                break;\r\n        }\r\n    }\r\n    \r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"Exp\",\"\");\r\n\r\n        if(this.expU){\r\n            padre.AddHijo(new Nodo(this.op,\"\"));\r\n            padre.AddHijo(this.exp1.recorrer());\r\n        }else{\r\n            padre.AddHijo(this.exp1.recorrer());\r\n            padre.AddHijo(new Nodo(this.op,\"\"));\r\n            padre.AddHijo(this.exp2.recorrer());\r\n        }\r\n        \r\n       return padre;\r\n    }\r\n\r\n    unario(valor_expU){\r\n        if(typeof valor_expU == 'number'){\r\n            return -valor_expU;\r\n        }else{\r\n            //Error semantico\r\n        }\r\n    }\r\n\r\n    suma(valor_exp1,valor_exp2){\r\n        if(typeof valor_exp1=='number'){\r\n            if( typeof valor_exp2=='number'){\r\n                return valor_exp1+valor_exp2;\r\n            } else if ( typeof valor_exp2=='boolean'){\r\n              let num =1 ;\r\n                if( valor_exp2==false){\r\n                    num=0;\r\n                }\r\n                return valor_exp1+num;\r\n            }else if(typeof valor_exp2=='string'){\r\n                if(valor_exp2.length==1){\r\n                    let numascci=valor_exp2.charCodeAt(0);\r\n                    return valor_exp1+numascci;\r\n                }else{\r\n                    return valor_exp1+ valor_exp2;\r\n                }\r\n            }\r\n        }else if(typeof valor_exp1=='boolean'){\r\n            if(typeof valor_exp2=='number'){\r\n                let num =1;\r\n                if(valor_exp1 == false){\r\n                    num=0;\r\n                }\r\n                return num+valor_exp2;\r\n            }else if(typeof valor_exp2=='boolean'){\r\n                //Error semantico\r\n            }else if (typeof valor_exp2==='string'){\r\n                if(valor_exp2.length==1){\r\n                    //Error semantico\r\n                }else{\r\n                    return valor_exp1+valor_exp2;\r\n                }\r\n            }\r\n\r\n        }else if (typeof valor_exp1=='string'){\r\n            // Caracter\r\n            if(valor_exp1.length==1){\r\n                if(typeof valor_exp2 == 'number'){\r\n                    let numascci=valor_exp1.charCodeAt(0);\r\n                    return numascci+valor_exp2;\r\n                }else{\r\n                    if(typeof valor_exp2=='string'){\r\n                        return valor_exp1+valor_exp2;\r\n                    }else{\r\n                        if(typeof valor_exp2=='boolean'){\r\n                            //Error Semantico\r\n                        }\r\n                    }\r\n                }\r\n            }else{\r\n                //Cadena\r\n                if(typeof valor_exp2=='number'){\r\n                    return valor_exp1+valor_exp2;\r\n                }else if(typeof valor_exp2=='boolean'){\r\n                    return valor_exp1+valor_exp2;\r\n                }else{\r\n                    if(typeof valor_exp2=='string'){\r\n                        return valor_exp1+valor_exp2;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resta(valor_exp1,valor_exp2){\r\n        if(typeof valor_exp1=='number'){\r\n            if(typeof valor_exp2=='number'){\r\n                return valor_exp1-valor_exp2;\r\n            }else if(typeof valor_exp2=='boolean'){\r\n                    let num=1;\r\n                    if(valor_exp2==false){\r\n                        num=0;\r\n                    }\r\n                    return valor_exp1-num;\r\n            } else if (typeof valor_exp2=='string'){\r\n                //Caracter\r\n                if(valor_exp2.length==1){\r\n                    let numascci=valor_exp2.charCodeAt(0);\r\n                    return valor_exp1-numascci;\r\n                }else{\r\n                    //Error Semantico\r\n                }\r\n            }\r\n        }else if(typeof valor_exp1=='boolean'){\r\n            if(typeof valor_exp2=='number'){\r\n                let num=1;\r\n                if(valor_exp1==false){\r\n                    num=0;\r\n                }\r\n                return num-valor_exp2;\r\n            }else if(typeof valor_exp2=='boolean'){\r\n                //Error semantico\r\n            }else if(typeof valor_exp2=='string'){\r\n                //Errro semantico\r\n            }\r\n        }else if(typeof valor_exp1=='string'){\r\n            //caracter\r\n            if(valor_exp1.length==1){\r\n                if(typeof valor_exp2=='number'){\r\n                    let numascci=valor_exp1.charCodeAt(0);\r\n                    return numascci-valor_exp2;\r\n                }else if(typeof valor_exp2=='boolean'){\r\n                    // Error semantico\r\n                }else if(typeof valor_exp2=='string'){\r\n                    // Error semantico\r\n                }\r\n            }else{\r\n                //cadena\r\n                //Error semantico\r\n            }\r\n        }\r\n    }\r\n\r\n    multiplicacion(valor_exp1,valor_exp2){\r\n        if(typeof valor_exp1=='number'){\r\n            if(typeof valor_exp2=='number'){\r\n                return valor_exp1*valor_exp2;\r\n            }else{\r\n                if(typeof valor_exp2=='boolean'){\r\n                    //Error Semantico\r\n                }else if(typeof valor_exp2=='string'){\r\n                    //caracter\r\n                    if(valor_exp2.length==1){\r\n                        let numascci=valor_exp2.charCodeAt(0);\r\n                        return valor_exp1*numascci;\r\n                    }else{\r\n                        //Error semantico\r\n                        //cadena\r\n                    }\r\n                }\r\n            }\r\n        }else if(typeof valor_exp1=='boolean'){\r\n            //Error semantico\r\n        }else if (typeof valor_exp1=='string'){\r\n            // caracter\r\n            if(valor_exp1.length==1){\r\n                if(typeof valor_exp2=='number'){\r\n                    let numascci=valor_exp1.charCodeAt(0);\r\n                    return numascci*valor_exp2;\r\n                }else if(typeof valor_exp2=='boolean'){\r\n                        //Error semantico\r\n                }else if(typeof valor_exp2=='string'){\r\n                        //Error semantico\r\n                }\r\n            }else{\r\n                //cadena\r\n                //Error Semantico\r\n            }\r\n        }\r\n    }\r\n\r\n    divicion(valor_exp1,valor_exp2){\r\n        if(typeof valor_exp1=='number'){\r\n            if(typeof valor_exp2=='number'){\r\n                return valor_exp1/valor_exp2;\r\n            }else{\r\n                if(typeof valor_exp2=='boolean'){\r\n                    //Error Semantico\r\n                }else if(typeof valor_exp2=='string'){\r\n                    //caracter\r\n                    if(valor_exp2.length==1){\r\n                        let numascci=valor_exp2.charCodeAt(0);\r\n                        return valor_exp1/numascci;\r\n                    }else{\r\n                        //Error semantico\r\n                        //cadena\r\n                    }\r\n                }\r\n            }\r\n        }else if(typeof valor_exp1=='boolean'){\r\n            //Error semantico\r\n        }else if (typeof valor_exp1=='string'){\r\n            // caracter\r\n            if(valor_exp1.length==1){\r\n                if(typeof valor_exp2=='number'){\r\n                    let numascci=valor_exp1.charCodeAt(0);\r\n                    return numascci/valor_exp2;\r\n                }else if(typeof valor_exp2=='boolean'){\r\n                        //Error semantico\r\n                }else if(typeof valor_exp2=='string'){\r\n                        //Error semantico\r\n                }\r\n            }else{\r\n                //cadena\r\n                //Error Semantico\r\n            }\r\n        }\r\n    }\r\n\r\n    potencia(valor_exp1,valor_exp2){\r\n        if(typeof valor_exp1 == 'number'){\r\n            if(typeof valor_exp2 == 'number'){\r\n                return Math.pow(valor_exp1,valor_exp2);\r\n            }else if (typeof valor_exp2=='boolean'){\r\n                //Error semantico\r\n            }else if( typeof valor_exp2=='string'){\r\n                //Erroro semantico\r\n            }\r\n        }else if (typeof valor_exp1 == 'boolean'){\r\n            //Erro semantico\r\n        }else if( typeof valor_exp1 == 'string'){\r\n            // Error semantico\r\n        }\r\n    }\r\n\r\n    modulo(valor_exp1,valor_exp2){\r\n\r\n        if(typeof valor_exp1 == 'number'){\r\n            if(typeof valor_exp2 == 'number'){\r\n                return valor_exp1%valor_exp2;\r\n            }else if (typeof valor_exp2=='boolean'){\r\n                //Error semantico\r\n            }else if( typeof valor_exp2=='string'){\r\n                //Erroro semantico\r\n            }\r\n        }else if (typeof valor_exp1 == 'boolean'){\r\n            //Erro semantico\r\n        }else if( typeof valor_exp1 == 'string'){\r\n            // Error semantico\r\n        }\r\n    }\r\n    \r\n\r\n    // Generar codigo 3d\r\n    getvalor3d(controlador: Controlador, ts: TablaSimbolos) {\r\n        let valor_exp1;\r\n        let valor_exp2;\r\n        let valor_expU;\r\n\r\n        if(this.expU==false){\r\n            valor_exp1=this.exp1.getvalor3d(controlador,ts);\r\n            valor_exp2=this.exp2.getvalor3d(controlador,ts);\r\n        }else{\r\n            valor_expU=this.exp1.getvalor3d(controlador,ts);\r\n        }\r\n\r\n        switch (this.operador){\r\n            case Operador.SUMA:\r\n                 console.log(\"entre a suma\");\r\n                return this.suma3D(valor_exp1,valor_exp2,controlador);\r\n            case Operador.RESTA:\r\n                return this.resta3D(valor_exp1,valor_exp2,controlador);\r\n            case Operador.MULTI:\r\n                return this.multiplicacion3D(valor_exp1,valor_exp2,controlador);\r\n            case Operador.DIV:\r\n                return this.divicion3D(valor_exp1,valor_exp2,controlador);\r\n            case Operador.POT:\r\n                return this.potencia(valor_exp1,valor_exp2);\r\n            case Operador.MODULO:\r\n                return this.modulo3D(valor_exp1,valor_exp2,controlador);\r\n            case Operador.UNARIO:\r\n                return this.unario3D(valor_expU,controlador);\r\n            default:\r\n                //Se produjo un error inesperado\r\n                break;\r\n        }\r\n    }\r\n\r\n    suma3D(valor_exp1:retorno,valor_exp2:retorno,controlador:Controlador){\r\n        const generador = controlador.generador;\r\n        const temp = generador.newTemporal();\r\n        let tempAux;\r\n        switch(valor_exp1.tipo.type){\r\n            case tipo.DOBLE:\r\n                switch(valor_exp2.tipo.type){\r\n                    case tipo.DOBLE:\r\n                        generador.genExpresion(temp, valor_exp1.getvalor3d(), valor_exp2.getvalor3d(), '+');\r\n                        return new retorno(temp, true,valor_exp2.tipo);\r\n                    case tipo.CADENA:\r\n                        let tempAux = generador.newTemporal(); generador.freeTemp(tempAux);\r\n                        generador.genExpresion(tempAux, 'p', 1 + 1, '+');\r\n                        generador.genSetStack(tempAux, valor_exp1.getvalor3d());\r\n                        generador.genExpresion(tempAux, tempAux, '1', '+');\r\n                        generador.genSetStack(tempAux, valor_exp2.getvalor3d());\r\n                        generador.genNextEnv(1);\r\n                        generador.genCall('nativa_concat_int_str');\r\n                        generador.genGetStack(temp, 'p');\r\n                        generador.genAntEnv(1);\r\n                        return new retorno(temp, true, new Tipo(\"STRING\")); \r\n                    case tipo.BOOLEANO:\r\n\r\n                    default:\r\n                        break;\r\n                }\r\n            break;\r\n            case tipo.CADENA:\r\n                switch(valor_exp2.tipo.type){\r\n                    case tipo.DOBLE:\r\n                        tempAux = generador.newTemporal(); generador.freeTemp(tempAux);\r\n                        generador.genExpresion(tempAux, 'p', 1 + 1, '+');\r\n                        generador.genSetStack(tempAux, valor_exp1.getvalor3d());\r\n                        generador.genExpresion(tempAux, tempAux, '1', '+');\r\n                        generador.genSetStack(tempAux, valor_exp2.getvalor3d());\r\n                        generador.genNextEnv(1);\r\n                        generador.genCall('nativa_concat_str_int');\r\n                        generador.genGetStack(temp, 'p');\r\n                        generador.genAntEnv(1);\r\n                        return new retorno(temp, true, new Tipo(\"STRING\")); \r\n                    \r\n                    case tipo.CADENA:\r\n                        tempAux = generador.newTemporal(); generador.freeTemp(tempAux);\r\n                        generador.genExpresion(tempAux, 'p', 1 + 1, '+');\r\n                        generador.genSetStack(tempAux, valor_exp1.getvalor3d());\r\n                        generador.genExpresion(tempAux, tempAux, '1', '+');\r\n                        generador.genSetStack(tempAux, valor_exp2.getvalor3d());\r\n                        generador.genNextEnv(1);\r\n                        generador.genCall('nativa_concat_str_str');\r\n                        generador.genGetStack(temp, 'p');\r\n                        generador.genAntEnv(1);\r\n                        return new retorno(temp, true, new Tipo(\"STRING\")); \r\n\r\n                    case tipo.BOOLEANO:\r\n\r\n                    default:\r\n                    break;\r\n                }\r\n\r\n\r\n            default:\r\n                break;\r\n        }\r\n        \r\n    }\r\n    resta3D(valor_exp1:retorno,valor_exp2:retorno,controlador:Controlador){\r\n        const generador = controlador.generador;\r\n        const temp = generador.newTemporal();\r\n        if(valor_exp1.tipo.type==tipo.DOBLE){\r\n            if(valor_exp2.tipo.type==tipo.DOBLE){\r\n                generador.genExpresion(temp, valor_exp1.getvalor3d(), valor_exp2.getvalor3d(), '-');\r\n                return new retorno(temp, true, valor_exp2.tipo);\r\n            }\r\n        }\r\n    }\r\n\r\n    multiplicacion3D(valor_exp1:retorno,valor_exp2:retorno,controlador:Controlador){\r\n        const generador = controlador.generador;\r\n        const temp = generador.newTemporal();\r\n        if(valor_exp1.tipo.type==tipo.DOBLE){\r\n            if(valor_exp2.tipo.type==tipo.DOBLE){\r\n                generador.genExpresion(temp, valor_exp1.getvalor3d(), valor_exp2.getvalor3d(), '*');\r\n                return new retorno(temp, true, valor_exp2.tipo);\r\n            }\r\n        }\r\n    }\r\n\r\n    divicion3D(valor_exp1:retorno,valor_exp2:retorno,controlador:Controlador){\r\n        const generador = controlador.generador;\r\n        const temp = generador.newTemporal();\r\n        if(valor_exp1.tipo.type==tipo.DOBLE){\r\n            if(valor_exp2.tipo.type==tipo.DOBLE){\r\n                generador.genExpresion(temp, valor_exp1.getvalor3d(), valor_exp2.getvalor3d(), '/');\r\n                return new retorno(temp, true, valor_exp2.tipo);\r\n            }\r\n        }\r\n    }\r\n\r\n    modulo3D(valor_exp1:retorno,valor_exp2:retorno,controlador:Controlador){\r\n        const generador = controlador.generador;\r\n        const temp = generador.newTemporal();\r\n        if(valor_exp1.tipo.type==tipo.DOBLE){\r\n            if(valor_exp2.tipo.type==tipo.DOBLE){\r\n                generador.genCode(temp + ' = fmod(' + valor_exp1.getvalor3d() + ',' + valor_exp2.getvalor3d() + ');');\r\n                return new retorno(temp, true, valor_exp2.tipo);\r\n            }\r\n        }\r\n    }\r\n\r\n    unario3D(valor_exp1:retorno,controlador:Controlador){\r\n        const generador = controlador.generador;\r\n        const temp = generador.newTemporal();\r\n        if(valor_exp1.tipo.type==tipo.DOBLE){\r\n            generador.genExpresion(temp, valor_exp1.getvalor3d(), '-1', '*');\r\n            return new retorno(temp, true, valor_exp1.tipo);\r\n        }\r\n    }\r\n\r\n}","import Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport { Expreciones } from \"../Interfaces.ts/Expreciones\";\r\nimport { Instruccion } from \"../Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\n\r\nexport default class Print implements Instruccion{\r\n\r\n    public expresion : Expreciones;\r\n    public linea : number;\r\n    public columna : number;\r\n\r\n    constructor(expresion, linea, columna) {\r\n        this.expresion =expresion;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n\r\n    ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n        let valor = this.expresion.getValor(controlador,ts);\r\n        controlador.append(valor);\r\n        return null;\r\n    }\r\n\r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"Print\",\"\"); \r\n        padre.AddHijo(new Nodo(\"print\",\"\"));\r\n        padre.AddHijo(new Nodo(\"(\",\"\"));\r\n\r\n        let hijo = new Nodo(\"exp\",\"\");\r\n        hijo.AddHijo(this.expresion.recorrer());\r\n        \r\n        padre.AddHijo(hijo);\r\n        padre.AddHijo(new Nodo(\")\",\"\"));\r\n        \r\n       return padre;\r\n    }\r\n\r\n}","export enum tipo{\r\n    ENTERO,\r\n    DOBLE,\r\n    BOOLEANO,\r\n    CARACTER,\r\n    CADENA, \r\n    VOID,\r\n    OBJETO,\r\n    IDENTIFICADOR\r\n}\r\nexport default class Tipo{\r\n    \r\n    public type : tipo; \r\n    public stype : string;\r\n\r\n    constructor(stype : string) {\r\n        this.stype = stype;\r\n        this.type = this.getTipo(stype);\r\n    }\r\n\r\n    getTipo(stype: string): tipo{\r\n        if(stype == 'DOBLE'){\r\n            return tipo.DOBLE;\r\n        }else if(stype == 'ENTERO'){\r\n            return tipo.ENTERO;\r\n        }else if(stype == 'STRING'){\r\n            return tipo.CADENA;\r\n        }else if(stype == 'BOOLEAN'){\r\n            return tipo.BOOLEANO;\r\n        }else if(stype == 'VOID'){\r\n            return tipo.VOID;\r\n        }else if (stype == 'CHAR'){\r\n            return tipo.CARACTER;\r\n        }else if (stype=='OBJETO'){\r\n            return tipo.OBJETO;\r\n        }else if (stype=='IDENTIFICADOR'){\r\n            return tipo.IDENTIFICADOR;\r\n        }\r\n    }\r\n\r\n    getStype():string {\r\n        return this.stype;\r\n    }\r\n}","import { Nativas } from \"./Nativas\";\r\n\r\nexport class GeneradorC3D {\r\n    private static generador: GeneradorC3D;\r\n    private temporal: number;\r\n    private label: number;\r\n    private code: string[];\r\n    codeFuncion: string[];\r\n    private tempStorage: Set<string>;\r\n    isFunc = '';\r\n\r\n    /**\r\n     * constructor de la clase singleton\r\n     */\r\n    constructor() {\r\n        this.temporal = this.label = 0;\r\n        this.code = [];\r\n        this.codeFuncion = [];\r\n        this.tempStorage = new Set();\r\n    }\r\n\r\n    public agregarFuncion(funcion: string[]) {\r\n        funcion.forEach((fun) => {\r\n            this.codeFuncion.push(fun);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Obtiene la instancia de la clase singleton\r\n     */\r\n    public static getInstancia() {\r\n        return this.generador || (this.generador = new this());\r\n    }\r\n\r\n    /**\r\n     * Retorna el set de los temporales que estan en uso\r\n     */\r\n    public getTempStorage() {\r\n        return this.tempStorage;\r\n    }\r\n\r\n    /**\r\n     * Vacia el set de los temporales\r\n     */\r\n    public clearTempStorage() {\r\n        this.tempStorage.clear();\r\n    }\r\n\r\n    /**\r\n     * asigna el set al set local de temporales\r\n     * @param tempStorage lista tipo Set que se asignara al set local\r\n     */\r\n    public setTempStorage(tempStorage: Set<string>) {\r\n        this.tempStorage = tempStorage;\r\n    }\r\n\r\n    /**\r\n     * borra el C3D que tenga guardado la clase y reinicia los temporales y labels\r\n     */\r\n    public clearCode() {\r\n        this.temporal = this.label = 0;\r\n        this.code = [];\r\n        this.codeFuncion = [];\r\n        this.tempStorage = new Set();\r\n\r\n    }\r\n\r\n    public clearSoloCode() {\r\n        this.code = [];\r\n    }\r\n\r\n    /**\r\n     * Ingresa en el C3D el valor que se asigna como parametro\r\n     * @param code valor que se asignara al C3D de la clase\r\n     */\r\n    public genCode(code: string) {\r\n        this.code.push(this.isFunc + code);\r\n    }\r\n\r\n    /**\r\n     * Retorna el C3D que se haya generado en la clase singleton\r\n     */\r\n    public getCode() {\r\n        let nativas = new Nativas();\r\n        let encabezado = '#include <stdio.h>\\n#include <math.h>\\ndouble Stack[60000]; double Heap[60000];\\nint p; int h;\\n';\r\n        let main = `\\nint main() {\\n${this.code.join('\\n')}\\n\\nreturn 0;\\n}\\n`;\r\n        const funciones = this.codeFuncion.join('\\n');\r\n        this.code = [];\r\n        let strNativas = nativas.generarNativas();\r\n        //strNativas = ''; // comentar despues de terminar\r\n        let c3d = `${encabezado}${this.getTemporales()};\\n${strNativas}\\n${funciones}\\n${main}`;\r\n\r\n        return c3d;\r\n    }\r\n\r\n    getSoloCode() {\r\n        return this.code;\r\n    }\r\n\r\n    setSoloCode(codeA: string[]) {\r\n        this.code = codeA;\r\n    }\r\n\r\n    getNativas() {\r\n        return this.code.join('\\n');\r\n    }\r\n\r\n\r\n    getTemporales() {\r\n        let lista = 'double ';\r\n        for (let i = 0; i < this.temporal; i++) {\r\n            lista += 'T' + i;\r\n            lista += i < this.temporal - 1 ? ',' : '';\r\n        }\r\n        return lista;\r\n    }\r\n\r\n    /**\r\n     * Crea un nuevo temporal y lo retorna\r\n     */\r\n    public newTemporal(): string {\r\n        const temp = 'T' + this.temporal++;\r\n        this.tempStorage.add(temp);\r\n        return temp;\r\n    }\r\n\r\n    /**\r\n     * Crea una nueva etiqueta y la retorna\r\n     */\r\n    public newLabel(): string {\r\n        return 'L' + this.label++;\r\n    }\r\n\r\n    /**\r\n     * funcion que agrega una nueva etiqueta el C3D\r\n     * @param label valor que se agregara al C3D como tipo etiqueta\r\n     */\r\n    public genLabel(label: string) {\r\n        this.code.push(`${this.isFunc}${label}:`);\r\n    }\r\n\r\n    /**\r\n     * Genera una nueva expresion y la agrega al C3D \r\n     * @param tem Temporal al que se le asignara la expresion\r\n     * @param izq Expresion izquierda que se asignara al temporal\r\n     * @param der Expresion derecha que se asignara al temporal\r\n     * @param operator Operador de la expresion \r\n     */\r\n    public genExpresion(tem: string, iqz: any, der: any = '', operator: string = '') {\r\n        this.code.push(`${this.isFunc}${tem} = ${iqz} ${operator} ${der};`);\r\n    }\r\n\r\n    /**\r\n     * asigna un valor a un temporal o puntero\r\n     * @param tem variable que recibira el valor\r\n     * @param val valor que sera asignado\r\n     */\r\n    public genAsignacion(tem: string, val: string) {\r\n        this.code.push(`${this.isFunc}${tem} = ${val};`);\r\n    }\r\n\r\n    /**\r\n     * genera un goto con el valor de label y lo agrega el C3D\r\n     * @param label valor de etiqueta al cual se hara el goto\r\n     */\r\n    public genGoto(label: string) {// prnGoto\r\n        this.code.push(`${this.isFunc}goto ${label};`);\r\n    }\r\n\r\n    /**\r\n     * genera un if y lo agrega al C3D\r\n     * @param iqz Expresion izquierda de la condicion if\r\n     * @param der Expresion derecha de la condicion if\r\n     * @param operator Operador boleano de la condicion\r\n     * @param label Etiqueta de salto si la condicion es verdadera\r\n     */\r\n    public genIf(iqz: any, der: any, operator: string, label: string) {\r\n        this.code.push(`${this.isFunc}if (${iqz} ${operator} ${der}) goto ${label};`);\r\n    }\r\n\r\n    /**\r\n     * Intruccion que hace avanzar el puntero heap a su siguite posicion\r\n     */\r\n    public avanzarHeap() { //nextHeap\r\n        this.code.push(this.isFunc + 'h = h + 1;');\r\n    }\r\n    \r\n    /**\r\n     * genera un acceso al heap en la posicion index y lo asiga al tem\r\n     * @param tem temporal que recibira el valor del heap\r\n     * @param index posicion del heap al cual se accedera\r\n     */\r\n    public genGetHeap(tem: any, index: any) {\r\n        index = index[0] === 'T' ? '(int)' + index : index;\r\n        this.code.push(`${this.isFunc}${tem} = Heap[${index}];`);\r\n    }\r\n\r\n    /**\r\n     * genera una asignacion de valor al heap en la posicion index\r\n     * @param index posicion del heap al cual se desea acceder\r\n     * @param valor valor que se asignara a la posicion del heap\r\n     */\r\n    public genSetHeap(index: any, valor: any) { // prnsetheap\r\n        index = index[0] === 'T' ? '(int)' + index : index;\r\n        this.code.push(`${this.isFunc}Heap[${index}] = ${valor};`);\r\n    }\r\n\r\n    /**\r\n     * genera una asignacion a tem del valor del stack en la posicion index\r\n     * @param tem temporal al cual se asignara el valor del stack\r\n     * @param index posicion del stack al cual se desea acceder\r\n     */\r\n    public genGetStack(tem: any, index: any) {\r\n        index = index[0] === 'T' ? '(int)' + index : index;\r\n        this.code.push(`${this.isFunc}${tem} = Stack[${index}];`);\r\n    }\r\n\r\n    /**\r\n     * genera una asignacion al stack en la posicion index\r\n     * @param index posicion del stack al cual se desea acceder\r\n     * @param value valor que sera asignado al stack\r\n     */\r\n    public genSetStack(index: any, value: any) {\r\n        index = index[0] === 'T' ? '(int)' + index : index;\r\n        this.code.push(`${this.isFunc}Stack[${index}] = ${value};`);\r\n    }\r\n\r\n    /**\r\n     * genera un desplazamiento del stack para generar un nuevo ambito\r\n     * @param size posiciones que se desplazara el stack\r\n     */\r\n    public genNextEnv(size: number) {\r\n        this.code.push(`${this.isFunc}p = p + ${size};`);\r\n    }\r\n\r\n    /**\r\n     * genera un desplazamiento del stack para volver a un ambito anterios\r\n     * @param size posiciones que se desplazara el stack\r\n     */\r\n    public genAntEnv(size: number) {\r\n        this.code.push(`${this.isFunc}p = p - ${size};`);\r\n    }\r\n\r\n    /**\r\n     * genera una llamada a una funcion\r\n     * @param id nombre de la funcion\r\n     */\r\n    public genCall(id: string) {\r\n        this.code.push(`${this.isFunc}${id}();`);\r\n    }\r\n\r\n    /**\r\n     * Genera el encabezado de una funcion \r\n     * @param id nombre de la funcion\r\n     */\r\n    public genFuncion(id: string) {\r\n        this.code.push(`\\nvoid ${id}() {`);\r\n    }\r\n\r\n    /**\r\n     * Genera el cierre de la definicion de una funcion\r\n     */\r\n    public genEndFuncion() {\r\n        this.code.push('}')\r\n    }\r\n\r\n    /**\r\n     * genera un printf con el tipo de dato y el valor\r\n     * @param formato tipo de dato que se va a imprimir\r\n     * @param valor valor que se va a imprimir\r\n     */\r\n    public genPrint(formato: string, valor: any) {\r\n        valor = valor[0] === 'T' && formato !== 'f' ? '(int)' + valor : valor;\r\n        this.code.push(`${this.isFunc}printf(\"%${formato}\",${valor});`);\r\n    }\r\n\r\n    /**\r\n     * genera un print del valor true\r\n     */\r\n    public genPrintTrue() {\r\n        this.genPrint('c', 't'.charCodeAt(0));\r\n        this.genPrint('c', 'r'.charCodeAt(0));\r\n        this.genPrint('c', 'u'.charCodeAt(0));\r\n        this.genPrint('c', 'e'.charCodeAt(0));\r\n    }\r\n\r\n    /**\r\n     * genera un print del valor false\r\n     */\r\n    public genPrintFalse() {\r\n        this.genPrint('c', 'f'.charCodeAt(0));\r\n        this.genPrint('c', 'a'.charCodeAt(0));\r\n        this.genPrint('c', 'l'.charCodeAt(0));\r\n        this.genPrint('c', 's'.charCodeAt(0));\r\n        this.genPrint('c', 'e'.charCodeAt(0));\r\n    }\r\n\r\n    /**\r\n     * genera un print del valor null\r\n     */\r\n    public genPrintNull() {\r\n        this.genPrint('c', 'n'.charCodeAt(0));\r\n        this.genPrint('c', 'u'.charCodeAt(0));\r\n        this.genPrint('c', 'l'.charCodeAt(0));\r\n        this.genPrint('c', 'l'.charCodeAt(0));\r\n    }\r\n\r\n    /**\r\n     * genera un nuevo comentario\r\n     * @param comment valor del comentario\r\n     */\r\n    public genComentario(comment: string) {\r\n        this.code.push(`${this.isFunc}// ----- ${comment} -----`);\r\n    }\r\n\r\n    /**\r\n     * borra un temporal del storage\r\n     * @param temp temporal que ya no se utilizara \r\n     */\r\n    public freeTemp(temp: string) {\r\n        if (this.tempStorage.has(temp)) {\r\n            this.tempStorage.delete(temp);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * agrega un temporal al storage\r\n     * @param temp temporal que se agregara al storage\r\n     */\r\n    public genTemp(temp: string) {\r\n        if (!this.tempStorage.has(temp))\r\n            this.tempStorage.add(temp);\r\n    }\r\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar gramatica = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,6],$V2=[1,8],$V3=[1,21],$V4=[1,9],$V5=[1,10],$V6=[1,11],$V7=[1,12],$V8=[1,13],$V9=[1,14],$Va=[1,15],$Vb=[1,16],$Vc=[1,23],$Vd=[1,17],$Ve=[1,18],$Vf=[1,19],$Vg=[1,20],$Vh=[1,22],$Vi=[5,7],$Vj=[1,31],$Vk=[1,32],$Vl=[1,33],$Vm=[5,7,9,11,15,16,17,18,19,21,22,23,24,25,27,28,29,30,31,32],$Vn=[1,38],$Vo=[2,29],$Vp=[1,59],$Vq=[1,60],$Vr=[1,61],$Vs=[1,55],$Vt=[1,63],$Vu=[1,56],$Vv=[1,57],$Vw=[1,58],$Vx=[1,62],$Vy=[1,68],$Vz=[1,73],$VA=[1,69],$VB=[1,67],$VC=[1,70],$VD=[1,71],$VE=[1,72],$VF=[1,74],$VG=[1,75],$VH=[1,76],$VI=[1,77],$VJ=[1,78],$VK=[1,79],$VL=[26,33,35,38,39,40,41,42,43,44,45,46,47,48,50],$VM=[26,33,38,39,42,43,44,45,46,47,48,50],$VN=[33,38,42,43,44,45,46,47,48,50];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"inicio\":3,\"varias\":4,\"EOF\":5,\"instrucciones\":6,\"SIGNOO\":7,\"instruccion\":8,\"BARRA\":9,\"e\":10,\"BARRABARRA\":11,\"RESERV\":12,\"DOSPUNTOS\":13,\"PUNTOPUNTO\":14,\"ID\":15,\"TEXT\":16,\"LAST\":17,\"POSITION\":18,\"ANCESTOR\":19,\"RESERVLARGE\":20,\"ATTRIBUTE\":21,\"ANCESORSELF\":22,\"CHILD\":23,\"DESCENDANT\":24,\"FOLLOWING\":25,\"MENOS\":26,\"SIBLING\":27,\"NAMESPACE\":28,\"PARENT\":29,\"PRECENDING\":30,\"SELF\":31,\"NODE\":32,\"OR\":33,\"ARROBA\":34,\"ASTERISCO\":35,\"CORA\":36,\"OPERADORES\":37,\"CORC\":38,\"MAS\":39,\"DIV\":40,\"MODULO\":41,\"AND\":42,\"MAYORQUE\":43,\"MAYORIGUAL\":44,\"MENORQUE\":45,\"MENORIGUAL\":46,\"DIFERENTE\":47,\"IGUAL\":48,\"PARA\":49,\"PARC\":50,\"DECIMAL\":51,\"ENTERO\":52,\"CADENA\":53,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",7:\"SIGNOO\",9:\"BARRA\",11:\"BARRABARRA\",13:\"DOSPUNTOS\",14:\"PUNTOPUNTO\",15:\"ID\",16:\"TEXT\",17:\"LAST\",18:\"POSITION\",19:\"ANCESTOR\",21:\"ATTRIBUTE\",22:\"ANCESORSELF\",23:\"CHILD\",24:\"DESCENDANT\",25:\"FOLLOWING\",26:\"MENOS\",27:\"SIBLING\",28:\"NAMESPACE\",29:\"PARENT\",30:\"PRECENDING\",31:\"SELF\",32:\"NODE\",33:\"OR\",34:\"ARROBA\",35:\"ASTERISCO\",36:\"CORA\",38:\"CORC\",39:\"MAS\",40:\"DIV\",41:\"MODULO\",42:\"AND\",43:\"MAYORQUE\",44:\"MAYORIGUAL\",45:\"MENORQUE\",46:\"MENORIGUAL\",47:\"DIFERENTE\",48:\"IGUAL\",49:\"PARA\",50:\"PARC\",51:\"DECIMAL\",52:\"ENTERO\",53:\"CADENA\"},\nproductions_: [0,[3,2],[4,3],[4,1],[6,2],[6,1],[8,2],[8,2],[8,3],[8,4],[8,2],[8,4],[8,1],[8,2],[12,1],[12,1],[12,2],[12,1],[12,1],[12,1],[12,2],[12,1],[12,3],[12,1],[12,1],[12,1],[12,1],[12,3],[12,1],[12,1],[12,1],[12,1],[20,4],[20,2],[10,1],[10,2],[10,2],[10,1],[10,4],[37,3],[37,3],[37,3],[37,3],[37,3],[37,3],[37,3],[37,3],[37,3],[37,3],[37,3],[37,3],[37,3],[37,2],[37,3],[37,1],[37,1],[37,1],[37,1],[37,1],[37,1],[37,2]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n  this.$=$$[$0-1]; return this.$ \nbreak;\ncase 2:\nthis.$=new instrucciondoble.default($$[$0-2],$$[$0]);\nbreak;\ncase 3:\nthis.$=$$[$0]\nbreak;\ncase 4:\n $$[$0-1].sig=$$[$0]; this.$ = $$[$0-1]; \nbreak;\ncase 5:\n this.$= $$[$0]; \nbreak;\ncase 6:\n  this.$ = new acceso.default($$[$0],null);\nbreak;\ncase 7:\n  this.$ = new barrabarra.default($$[$0],null);\nbreak;\ncase 8: case 9:\n  this.$ =  new axes.default($$[$0-2],$$[$0],null);\nbreak;\ncase 10:\n  this.$ =  new puntopunto.default($$[$0-1],null);\nbreak;\ncase 11:\n  this.$ =  new axesbarrabarra.default($$[$0-2],$$[$0],null)\nbreak;\ncase 12:\n  this.$ =  new acceso.default(new informacion.default($$[$0],null,1),null);\nbreak;\ncase 13:\n  this.$ = new text.default();\nbreak;\ncase 14: case 15: case 17: case 18: case 19: case 21: case 23: case 24: case 25: case 26: case 28: case 29: case 30: case 31:\nthis.$ = $$[$0]\nbreak;\ncase 16: case 20:\nthis.$ = $$[$0-1] + $$[$0]\nbreak;\ncase 22: case 27:\nthis.$ = $$[$0-2]+$$[$0-1]+$$[$0]\nbreak;\ncase 32:\nthis.$ = $$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]\nbreak;\ncase 33:\nthis.$ = $$[$0-1]+$$[$0]\nbreak;\ncase 34: case 37:\nthis.$=new informacion.default($$[$0],null,1);\nbreak;\ncase 35: case 36:\nthis.$=new informacion.default($$[$0],null,2);\nbreak;\ncase 38:\nthis.$=new informacion.default($$[$0-3],$$[$0-1],1);\nbreak;\ncase 39:\nthis.$ = new aritmetica.default($$[$0-2], '+', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 40:\nthis.$ = new aritmetica.default($$[$0-2], '-', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 41:\nthis.$ = new aritmetica.default($$[$0-2], '*', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 42:\nthis.$ = new aritmetica.default($$[$0-2], '/', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 43:\nthis.$ = new aritmetica.default($$[$0-2], '%', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 44:\nthis.$ = new logica.default($$[$0-2], '&&', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 45:\nthis.$ = new logica.default($$[$0-2], '||', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 46:\nthis.$ = new relacional.default($$[$0-2],'>', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 47:\nthis.$ = new relacional.default($$[$0-2],'>=', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 48:\nthis.$ = new relacional.default($$[$0-2],'<', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 49:\nthis.$ = new relacional.default($$[$0-2],'<=', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 50:\nthis.$ = new relacional.default($$[$0-2],'!=', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 51:\nthis.$ = new relacional.default($$[$0-2],'==', $$[$0], $$[$0-2].first_line, $$[$0-2].last_column, false);\nbreak;\ncase 52:\nthis.$ = new aritmetica.default($$[$0], 'UNARIO', null, $$[$0-1].first_line, $$[$0-1].last_column, true);\nbreak;\ncase 53:\nthis.$ = $$[$0-1];\nbreak;\ncase 54: case 55:\nthis.$ = new primitivo.default(Number(yytext), $$[$0].first_line, $$[$0].last_column,-1);\nbreak;\ncase 56:\nthis.$ = new identificador.default($$[$0] , _$[$0].first_line, _$[$0].last_column,1); \nbreak;\ncase 57:\nthis.$ = new last.default();\nbreak;\ncase 58:\nthis.$ = new position.default();\nbreak;\ncase 59:\n$$[$0] = $$[$0].slice(1, $$[$0].length-1); this.$ = new primitivo.default($$[$0], $$[$0].first_line, $$[$0].last_column);\nbreak;\ncase 60:\nthis.$ = new identificador.default($$[$0] , _$[$0-1].first_line, _$[$0-1].last_column,2); \nbreak;\n}\n},\ntable: [{3:1,4:2,6:3,8:4,9:$V0,11:$V1,12:7,15:$V2,16:$V3,17:$V4,18:$V5,19:$V6,21:$V7,22:$V8,23:$V9,24:$Va,25:$Vb,27:$Vc,28:$Vd,29:$Ve,30:$Vf,31:$Vg,32:$Vh},{1:[3]},{5:[1,24]},{5:[2,3],7:[1,25]},o($Vi,[2,5],{8:4,12:7,6:26,9:$V0,11:$V1,15:$V2,16:$V3,17:$V4,18:$V5,19:$V6,21:$V7,22:$V8,23:$V9,24:$Va,25:$Vb,27:$Vc,28:$Vd,29:$Ve,30:$Vf,31:$Vg,32:$Vh}),{10:27,12:28,14:[1,29],15:$Vj,16:[1,30],17:$V4,18:$V5,19:$V6,21:$V7,22:$V8,23:$V9,24:$Va,25:$Vb,27:$Vc,28:$Vd,29:$Ve,30:$Vf,31:$Vg,32:$Vh,34:$Vk,35:$Vl},{10:34,12:35,15:$Vj,16:$V3,17:$V4,18:$V5,19:$V6,21:$V7,22:$V8,23:$V9,24:$Va,25:$Vb,27:$Vc,28:$Vd,29:$Ve,30:$Vf,31:$Vg,32:$Vh,34:$Vk,35:$Vl},{13:[1,36]},o($Vm,[2,12]),{13:[2,14]},{13:[2,15]},{20:37,26:$Vn},{13:[2,17]},{13:[2,18]},{13:[2,19]},{13:[2,21],20:39,26:$Vn},{13:[2,23],26:[1,40]},{13:[2,24]},{13:[2,25]},{13:[2,26],26:[1,41]},{13:[2,28]},{13:$Vo},{13:[2,30]},{13:[2,31]},{1:[2,1]},{6:42,8:4,9:$V0,11:$V1,12:7,15:$V2,16:$V3,17:$V4,18:$V5,19:$V6,21:$V7,22:$V8,23:$V9,24:$Va,25:$Vb,27:$Vc,28:$Vd,29:$Ve,30:$Vf,31:$Vg,32:$Vh},o($Vi,[2,4]),o($Vm,[2,6]),{13:[1,43]},o($Vm,[2,10]),o($Vm,[2,13],{13:$Vo}),o($Vm,[2,34],{36:[1,44]}),{15:[1,45],35:[1,46]},o($Vm,[2,37]),o($Vm,[2,7]),{13:[1,47]},{10:48,15:$Vj,34:$Vk,35:$Vl},{13:[2,16]},{27:[1,50],33:[1,49]},{13:[2,20]},{27:[1,51]},{27:[1,52]},{5:[2,2]},{10:53,15:$Vj,34:$Vk,35:$Vl},{15:$Vp,17:$Vq,18:$Vr,26:$Vs,34:$Vt,37:54,49:$Vu,51:$Vv,52:$Vw,53:$Vx},o($Vm,[2,35]),o($Vm,[2,36]),{10:64,15:$Vj,34:$Vk,35:$Vl},o($Vm,[2,8]),{26:[1,65]},{13:[2,33]},{13:[2,22]},{13:[2,27]},o($Vm,[2,9]),{26:$Vy,33:$Vz,35:$VA,38:[1,66],39:$VB,40:$VC,41:$VD,42:$VE,43:$VF,44:$VG,45:$VH,46:$VI,47:$VJ,48:$VK},{15:$Vp,17:$Vq,18:$Vr,26:$Vs,34:$Vt,37:80,49:$Vu,51:$Vv,52:$Vw,53:$Vx},{15:$Vp,17:$Vq,18:$Vr,26:$Vs,34:$Vt,37:81,49:$Vu,51:$Vv,52:$Vw,53:$Vx},o($VL,[2,54]),o($VL,[2,55]),o($VL,[2,56]),o($VL,[2,57]),o($VL,[2,58]),o($VL,[2,59]),{15:[1,82]},o($Vm,[2,11]),{31:[1,83]},o($Vm,[2,38]),{15:$Vp,17:$Vq,18:$Vr,26:$Vs,34:$Vt,37:84,49:$Vu,51:$Vv,52:$Vw,53:$Vx},{15:$Vp,17:$Vq,18:$Vr,26:$Vs,34:$Vt,37:85,49:$Vu,51:$Vv,52:$Vw,53:$Vx},{15:$Vp,17:$Vq,18:$Vr,26:$Vs,34:$Vt,37:86,49:$Vu,51:$Vv,52:$Vw,53:$Vx},{15:$Vp,17:$Vq,18:$Vr,26:$Vs,34:$Vt,37:87,49:$Vu,51:$Vv,52:$Vw,53:$Vx},{15:$Vp,17:$Vq,18:$Vr,26:$Vs,34:$Vt,37:88,49:$Vu,51:$Vv,52:$Vw,53:$Vx},{15:$Vp,17:$Vq,18:$Vr,26:$Vs,34:$Vt,37:89,49:$Vu,51:$Vv,52:$Vw,53:$Vx},{15:$Vp,17:$Vq,18:$Vr,26:$Vs,34:$Vt,37:90,49:$Vu,51:$Vv,52:$Vw,53:$Vx},{15:$Vp,17:$Vq,18:$Vr,26:$Vs,34:$Vt,37:91,49:$Vu,51:$Vv,52:$Vw,53:$Vx},{15:$Vp,17:$Vq,18:$Vr,26:$Vs,34:$Vt,37:92,49:$Vu,51:$Vv,52:$Vw,53:$Vx},{15:$Vp,17:$Vq,18:$Vr,26:$Vs,34:$Vt,37:93,49:$Vu,51:$Vv,52:$Vw,53:$Vx},{15:$Vp,17:$Vq,18:$Vr,26:$Vs,34:$Vt,37:94,49:$Vu,51:$Vv,52:$Vw,53:$Vx},{15:$Vp,17:$Vq,18:$Vr,26:$Vs,34:$Vt,37:95,49:$Vu,51:$Vv,52:$Vw,53:$Vx},{15:$Vp,17:$Vq,18:$Vr,26:$Vs,34:$Vt,37:96,49:$Vu,51:$Vv,52:$Vw,53:$Vx},o($VL,[2,52]),{26:$Vy,33:$Vz,35:$VA,39:$VB,40:$VC,41:$VD,42:$VE,43:$VF,44:$VG,45:$VH,46:$VI,47:$VJ,48:$VK,50:[1,97]},o($VL,[2,60]),{13:[2,32]},o($VM,[2,39],{35:$VA,40:$VC,41:$VD}),o($VM,[2,40],{35:$VA,40:$VC,41:$VD}),o($VL,[2,41]),o($VL,[2,42]),o($VL,[2,43]),o([33,38,42,50],[2,44],{26:$Vy,35:$VA,39:$VB,40:$VC,41:$VD,43:$VF,44:$VG,45:$VH,46:$VI,47:$VJ,48:$VK}),o([33,38,50],[2,45],{26:$Vy,35:$VA,39:$VB,40:$VC,41:$VD,42:$VE,43:$VF,44:$VG,45:$VH,46:$VI,47:$VJ,48:$VK}),o($VN,[2,46],{26:$Vy,35:$VA,39:$VB,40:$VC,41:$VD}),o($VN,[2,47],{26:$Vy,35:$VA,39:$VB,40:$VC,41:$VD}),o($VN,[2,48],{26:$Vy,35:$VA,39:$VB,40:$VC,41:$VD}),o($VN,[2,49],{26:$Vy,35:$VA,39:$VB,40:$VC,41:$VD}),o($VN,[2,50],{26:$Vy,35:$VA,39:$VB,40:$VC,41:$VD}),o($VN,[2,51],{26:$Vy,35:$VA,39:$VB,40:$VC,41:$VD}),o($VL,[2,53])],\ndefaultActions: {9:[2,14],10:[2,15],12:[2,17],13:[2,18],14:[2,19],17:[2,24],18:[2,25],20:[2,28],21:[2,29],22:[2,30],23:[2,31],24:[2,1],37:[2,16],39:[2,20],42:[2,2],50:[2,33],51:[2,22],52:[2,27],83:[2,32]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\r\n    const evaluar = require('../Clases/Evaluar');\r\n    const aritmetica= require('../Clases/Expreciones/Operaciones/Aritmetica');\r\n    const relacional = require('../Clases/Expreciones/Operaciones/Relaciones');\r\n    const logica = require('../Clases/Expreciones/Operaciones/Logicas');\r\n    const primitivo = require('../Clases/Expreciones/Primitivo');\r\n    \r\n    const identificador= require('../Clases/Expreciones/Identificador');\r\n    const last= require('../Clases/Expreciones/last');\r\n    const position = require ('../Clases/Expreciones/position');\r\n    const ternario= require('../Clases/Expreciones/Ternario');\r\n    const ast =require('../Clases/AST/Ast');\r\n    const declaracion = require ('../Clases/Instrucciones/Declaracion');\r\n    const asignacion = require ('../Clases/Instrucciones/Asignacion');\r\n    const funcion = require ('../Clases/Instrucciones/Funcion');\r\n    const llamada = require ('../Clases/Instrucciones/Llamada');\r\n    const ejecutar = require ('../Clases/Instrucciones/Ejecutar');\r\n    const Print = require ('../Clases/Instrucciones/Print');\r\n    const Ifs = require ('../Clases/Instrucciones/SentenciaControl/Ifs');\r\n    const While = require ('../Clases/Instrucciones/SentenciaCiclos/While');\r\n    const dowhile =require ('../Clases/Instrucciones/SentenciaCiclos/DoWhile');\r\n    const For =require ('../Clases/Instrucciones/SentenciaCiclos/For');\r\n    const simbolo= require ('../Clases/TablaSimbolos/Simbolos');\r\n    const tipo= require ('../Clases/TablaSimbolos/Tipo');\r\n    const detener = require ('../Clases/Instrucciones/SentenciaTransferencia/Break');\r\n    const continuar = require ('../Clases/Instrucciones/SentenciaTransferencia/continuar');\r\n    const retornar = require ('../Clases/Instrucciones/SentenciaTransferencia/retornar');\r\n    const sw = require ('../Clases/Instrucciones/SentenciaControl/SW');\r\n    const cs = require ('../Clases/Instrucciones/SentenciaControl/CS');\r\n    const acceso= require ('../Clases/xpath/acceso');\r\n    const barrabarra= require ('../Clases/xpath/barrabarra');\r\n    const informacion = require ('../Clases/xpath/informacion');\r\n    const axes = require ('../Clases/xpath/axes');\r\n    const axesbarrabarra = require ('../Clases/xpath/axesbarrabarra');\r\n    const instrucciondoble =require ('../Clases/xpath/intrucciondoble');\r\n    const puntopunto =require ('../Clases/xpath/puntopunto');\r\n    const text =require ('../Clases/xpath/text');\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0: console.log(\"Reconocio : \"+ yy_.yytext); return 46\nbreak;\ncase 1: console.log(\"Reconocio : \"+ yy_.yytext); return 44\nbreak;\ncase 2: console.log(\"Reconocio : \"+ yy_.yytext); return 48\nbreak;\ncase 3: console.log(\"Reconocio : \"+ yy_.yytext); return 45\nbreak;\ncase 4: console.log(\"Reconocio : \"+ yy_.yytext); return 43\nbreak;\ncase 5: console.log(\"Reconocio : \"+ yy_.yytext); return 47\nbreak;\ncase 6: console.log(\"Reconocio : \"+ yy_.yytext); return 49\nbreak;\ncase 7: console.log(\"Reconocio : \"+ yy_.yytext); return 11\nbreak;\ncase 8: console.log(\"Reconocio : \"+ yy_.yytext); return 9\nbreak;\ncase 9: console.log(\"Reconocio : \"+ yy_.yytext); return 50\nbreak;\ncase 10: console.log(\"Reconocio : \"+ yy_.yytext); return 36\nbreak;\ncase 11: console.log(\"Reconocio : \"+ yy_.yytext); return 38\nbreak;\ncase 12: console.log(\"Reconocio : \"+ yy_.yytext); return 34\nbreak;\ncase 13: console.log(\"Reconocio : \"+ yy_.yytext); return 14\nbreak;\ncase 14: console.log(\"Reconocio : \"+ yy_.yytext); return 'PUNTO'\nbreak;\ncase 15: console.log(\"Reconocio : \"+ yy_.yytext); return 7\nbreak;\ncase 16: console.log(\"Reconocio : \"+ yy_.yytext); return 13\nbreak;\ncase 17: console.log(\"Reconocio : \"+ yy_.yytext); return 39\nbreak;\ncase 18: console.log(\"Reconocio : \"+ yy_.yytext); return 26\nbreak;\ncase 19: console.log(\"Reconocio : \"+ yy_.yytext); return 35\nbreak;\ncase 20: console.log(\"Reconocio : \"+ yy_.yytext); return 40\nbreak;\ncase 21: console.log(\"Reconocio : \"+ yy_.yytext); return 41\nbreak;\ncase 22: console.log(\"Reconocio : \"+ yy_.yytext); return 42\nbreak;\ncase 23: console.log(\"Reconocio : \"+ yy_.yytext); return 33\nbreak;\ncase 24: console.log(\"Reconocio : \"+ yy_.yytext); return 17\nbreak;\ncase 25: console.log(\"Reconocio : \"+ yy_.yytext); return 18\nbreak;\ncase 26: console.log(\"Reconocio : \"+ yy_.yytext); return 19\nbreak;\ncase 27: console.log(\"Reconocio : \"+ yy_.yytext); return 21\nbreak;\ncase 28: console.log(\"Reconocio : \"+ yy_.yytext); return 31\nbreak;\ncase 29: console.log(\"Reconocio : \"+ yy_.yytext); return 23\nbreak;\ncase 30: console.log(\"Reconocio : \"+ yy_.yytext); return 24\nbreak;\ncase 31: console.log(\"Reconocio : \"+ yy_.yytext); return 25\nbreak;\ncase 32: console.log(\"Reconocio : \"+ yy_.yytext); return 27\nbreak;\ncase 33: console.log(\"Reconocio : \"+ yy_.yytext); return 28\nbreak;\ncase 34: console.log(\"Reconocio : \"+ yy_.yytext); return 29\nbreak;\ncase 35: console.log(\"Reconocio : \"+ yy_.yytext); return 30\nbreak;\ncase 36: console.log(\"Reconocio : \"+ yy_.yytext); return 16\nbreak;\ncase 37: console.log(\"Reconocio : \"+ yy_.yytext); return 32\nbreak;\ncase 38: console.log(\"Reconocio : \"+ yy_.yytext); return 17\nbreak;\ncase 39: console.log(\"Reconocio : \"+ yy_.yytext); return 18\nbreak;\ncase 40: console.log(\"Reconocio : \"+ yy_.yytext); return 16\nbreak;\ncase 41: console.log(\"Reconocio : \"+ yy_.yytext); return 51\nbreak;\ncase 42: console.log(\"Reconocio : \"+ yy_.yytext); return 52\nbreak;\ncase 43: console.log(\"Reconocio id : \"+ yy_.yytext); return 15\nbreak;\ncase 44: console.log(\"Reconocio : \"+ yy_.yytext); return 53\nbreak;\ncase 45: /* skip whitespace */ \nbreak;\ncase 46:return 5\nbreak;\ncase 47: console.log(\"Error Lexico \"+yy_.yytext\r\n                        +\" linea \"+yy_.yylineno\r\n                        +\" columna \"+(yy_.yylloc.last_column+1));\r\n                                      \r\n                        \nbreak;\n}\n},\nrules: [/^(?:<=)/i,/^(?:>=)/i,/^(?:=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:!=)/i,/^(?:\\()/i,/^(?:\\/\\/)/i,/^(?:\\/)/i,/^(?:\\))/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:@)/i,/^(?:\\.\\.)/i,/^(?:\\.)/i,/^(?:\\|)/i,/^(?:::)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:div\\b)/i,/^(?:mod\\b)/i,/^(?:and\\b)/i,/^(?:or\\b)/i,/^(?:last\\(\\))/i,/^(?:position\\(\\))/i,/^(?:ancestor\\b)/i,/^(?:attribute\\b)/i,/^(?:self\\b)/i,/^(?:child\\b)/i,/^(?:descendant\\b)/i,/^(?:following\\b)/i,/^(?:sibling\\b)/i,/^(?:namespace\\b)/i,/^(?:parent\\b)/i,/^(?:preceding\\b)/i,/^(?:text\\(\\))/i,/^(?:node\\(\\))/i,/^(?:last\\(\\))/i,/^(?:position\\(\\))/i,/^(?:text\\(\\))/i,/^(?:[0-9]+(\\.[0-9]+)?\\b)/i,/^(?:([0-9]+))/i,/^(?:([a-zñA-ZÑ_][a-zñA-ZÑ0-9_]*))/i,/^(?:((\"((\\\\([\\'\\\"\\\\ntr]))|([^\\\"\\\\]+))*\")))/i,/^(?:[\\s\\r\\n\\t])/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = gramatica;\nexports.Parser = gramatica.Parser;\nexports.parse = function () { return gramatica.parse.apply(gramatica, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","import Errores from \"./AST/Errores\";\r\nimport { GeneradorC3D } from \"./GeneradorC3D/GeneradorC3D\";\r\nimport Simbolos from \"./TablaSimbolos/Simbolos\";\r\nimport { TablaSimbolos } from \"./TablaSimbolos/TablaSimbolos\";\r\n\r\nexport default class Controlador{\r\n    public errores: Array<Errores>;\r\n    public consola: string;\r\n    public ambito: string;\r\n    public cuerpo: string;\r\n    public idlast: string;\r\n    public position:number;\r\n    public posicionid:number;\r\n    public acceso:number;\r\n    public entrada:string;\r\n    public generador: GeneradorC3D;\r\n    public exprecion;\r\n    public ts;\r\n    public extxt;\r\n\r\n    constructor (){\r\n        this.errores = new  Array<Errores>();\r\n        this.consola =\"\";\r\n        this.cuerpo;\r\n        this.idlast=\"\";\r\n        this.position=0;\r\n        this.acceso=1;\r\n        this.generador=GeneradorC3D.getInstancia();\r\n    }\r\n\r\n    public append (consola: string){\r\n        this.consola+=consola+\"\\n\";\r\n    }\r\n\r\n    graficar_ts(controlador:Controlador, ts:TablaSimbolos):string{\r\n        var cuerpohtml = \"<thead class=\\\"black white-text\\\"><tr><td colspan=\\\"6\\\">Tabla de Simbolos </td></tr><tr><th>Tipo</th><th>Nombre</th><th>Ambito</th><th>Valor</th></tr></thead>\";\r\n\r\n        cuerpohtml+=this.cuerpo;\r\n        \r\n        return cuerpohtml;\r\n    }\r\n\r\n    graficarEntornos(controlador:Controlador, ts:TablaSimbolos,ubicacion:string){\r\n        var cuerpohtml=\"\";\r\n        for(let sim of ts.tabla){\r\n            cuerpohtml += \"<tr mdbTableCol class=\\\"grey lighten-1 black-text\\\"><th scope=\\\"row\\\">\" +  this.getRol(sim.sim) + \"</th><td>\" + sim.identificador + \r\n            \"</td>\"+\r\n            \"</td><td>\" + ubicacion + \r\n            \"</td><td>\" + this.getValor(sim.sim) +  \"</tr>\";\r\n        }\r\n        this.cuerpo=this.cuerpo+cuerpohtml;\r\n    }\r\n\r\n    graficar_Semantico(controlador:Controlador, ts:TablaSimbolos):string{\r\n        var cuerpohtml = \"<thead class=\\\"black white-text\\\"><tr><td colspan=\\\"4\\\">Errores Semanticos </td></tr><tr><th>Tipo</th><th>Descripcion</th><th>Fila</th><th>Columna</th></tr></thead>\";\r\n\r\n\r\n        for(let sim of controlador.errores){\r\n            console.log(`Errores`);\r\n                \r\n            cuerpohtml += \"<tr mdbTableCol class=\\\"grey lighten-1 black-text\\\"><th scope=\\\"row\\\">\" + sim.tipo + \"</th><td>\" + sim.descripcion + \r\n                \"</td><td>\" + sim.linea +\"</td>\"  + \r\n                \"</td><td>\" + sim.columna +  \"</tr>\";\r\n        }\r\n            \r\n        \r\n        \r\n        return cuerpohtml;\r\n    }\r\n    getValor(sim:Simbolos):string{\r\n        if(sim.valor != null){\r\n            return sim.valor.toString(); \r\n        }else{\r\n            return '...';\r\n        }\r\n    }\r\n    getTipo(sim):string{\r\n\r\n        return sim.tipo.stype.toLowerCase();\r\n    }\r\n    getRol(sim:Simbolos):string{\r\n        let rol : string = '';\r\n        switch(sim.simbolo){\r\n            case 1:\r\n                rol = \"objeto\"\r\n                break\r\n            case 2:\r\n                rol = \"identificador\";\r\n                break;\r\n            case 3:\r\n                rol = \"metodo\";\r\n                break;\r\n             case 4:\r\n                rol = \"vector\";\r\n                break\r\n             case 5:\r\n                rol = \"lista\";\r\n                break;\r\n            case 6:\r\n                rol = \"parametro\"\r\n                break;\r\n        }\r\n        return rol;\r\n    }\r\n\r\n    getAmbito():string{\r\n        return 'global'\r\n    }\r\n    parametros(sim){\r\n        if(sim.lista_params != undefined){\r\n            return sim.lista_params.length\r\n        }else{\r\n            return \"...\";\r\n        }\r\n    }\r\n\r\n}","import Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport { Expreciones } from \"../Interfaces.ts/Expreciones\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\nimport Tipo, { tipo } from \"../TablaSimbolos/Tipo\";\r\nimport { retorno } from \"./retorno\";\r\n\r\n\r\nexport default class Primitivo implements Expreciones{\r\n\r\n    public primitivo : any;\r\n    public linea: number;\r\n    public columan: number;\r\n    public nodo: number;\r\n    lblTrue: string;\r\n    lblFalse: string;\r\n\r\n    constructor (primitivo: any,line: number, columna: number,nodo:number){\r\n        \r\n        this.primitivo=primitivo;\r\n        this.linea=line;\r\n        this.columan=columna;\r\n        this.nodo = nodo;\r\n    }\r\n\r\n    getTipo(controlador: Controlador, ts: TablaSimbolos) {\r\n        let valor= this.getValor(controlador,ts);\r\n        if(typeof valor== 'number'){\r\n            return tipo.DOBLE;\r\n        }else if (typeof valor=='string'){\r\n            return tipo.CADENA;\r\n        }else if (typeof valor== 'boolean'){\r\n            return tipo.BOOLEANO;\r\n        }\r\n    }\r\n    getValor(controlador: Controlador, ts: TablaSimbolos) {\r\n        return this.primitivo;\r\n    }\r\n\r\n    \r\n    public getvalor3d(controlador: Controlador, ts: TablaSimbolos) {\r\n        let valor= this.getValor(controlador,ts);\r\n        const generator = controlador.generador;\r\n        if(typeof valor== 'number'){\r\n            return new retorno(this.primitivo,false,new Tipo(\"DOBLE\"));\r\n        }else if (typeof valor=='string'){\r\n            const temp = generator.newTemporal();\r\n            generator.genAsignacion(temp, 'h');\r\n            for (let i = 0; i < valor.length; i++) {\r\n                generator.genSetHeap('h', valor.charCodeAt(i));\r\n                generator.avanzarHeap();\r\n            }\r\n            generator.genSetHeap('h', '-1');\r\n            generator.avanzarHeap();\r\n        return new retorno(temp, true, new Tipo(\"STRING\"));\r\n        }else if (typeof valor== 'boolean'){\r\n            return tipo.BOOLEANO;\r\n        }\r\n    }\r\n\r\n    limpiar() {\r\n     }\r\n\r\n    \r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"Primitivo\",\"\");\r\n        padre.AddHijo(new Nodo(this.primitivo.toString(),\"\"));\r\n       return padre;\r\n    }\r\n   \r\n}","import Tipo from \"../TablaSimbolos/Tipo\";\r\nimport { GeneradorC3D } from \"../GeneradorC3D/GeneradorC3D\";\r\nimport Controlador from \"../Controlador\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\n\r\nexport class retorno {\r\n    valor:string;\r\n    istemp:boolean;\r\n    tipo:Tipo;\r\n    lblTrue: string;\r\n    lblFalse: string;\r\n\r\n    constructor(valor:string,istemp:boolean,tipo:Tipo){\r\n        this.valor=valor;\r\n        this.istemp=istemp;\r\n        this.tipo=tipo;\r\n        this.lblTrue=this.lblFalse='';\r\n    }   \r\n\r\n    public getvalor3d() {\r\n        return this.valor;\r\n    }\r\n}","import Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport { Expreciones } from \"../Interfaces.ts/Expreciones\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\nimport Tipo,{ tipo } from \"../TablaSimbolos/Tipo\";\r\nimport { retorno } from \"./retorno\";\r\n\r\n\r\nexport default class last implements Expreciones {\r\n    lblTrue: string;\r\n    lblFalse: string;\r\n    constructor(){\r\n\r\n    }\r\n    getvalor3d(controlador: Controlador, ts: TablaSimbolos) {\r\n        let cont=0;\r\n        for( let informacion of ts.tabla){\r\n            if(informacion.identificador==controlador.idlast){\r\n                cont++;\r\n           }\r\n       }\r\n       return new retorno(cont+\"\",false,new Tipo(\"DOBLE\"));\r\n    }\r\n\r\n    getTipo(controlador: Controlador, ts: TablaSimbolos) {\r\n        \r\n    }\r\n    getValor(controlador: Controlador, ts: TablaSimbolos) {\r\n        let cont=0;\r\n        for( let informacion of ts.tabla){\r\n            if(informacion.identificador==controlador.idlast){\r\n                cont++;\r\n           }\r\n       }\r\n       return cont;\r\n    }\r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"LAST();\",\"\");\r\n       return padre;\r\n    }\r\n    limpiar() {\r\n       \r\n     }\r\n\r\n}","import { GeneradorC3D } from \"./GeneradorC3D\";\r\n\r\nexport class Nativas {\r\n\r\n    public generarNativas() {\r\n        this.nativa_print_str();\r\n        //this.nativa_print_integer();\r\n        this.nativa_compararIgual_str_str();\r\n       // this.nativa_compararNoIgual_str_str();\r\n        //this.nativa_ToUpperCase();\r\n        //this.nativa_ToLowerCase();\r\n        this.nativa_concat_str_str();\r\n     //this.nativa_concat_dbl_str();\r\n      //  this.nativa_concat_str_dbl();\r\n        this.nativa_concat_int_str();\r\n        this.nativa_concat_str_int();\r\n        //this.nativa_concat_str_bol();\r\n        // this.nativa_concat_bol_str();\r\n        //this.nativa_lenght_str();\r\n        return GeneradorC3D.getInstancia().getNativas();\r\n    }\r\n\r\n    nativa_lenght_str() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t0 = gen.newTemporal();\r\n        let t1 = gen.newTemporal();\r\n        let t2 = gen.newTemporal();\r\n        let t3 = gen.newTemporal();\r\n        let next = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_lenght_str');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t0, 'p', '1', '+');\r\n        gen.genGetStack(t1, t0);\r\n        gen.genAsignacion(t3, '0');\r\n        gen.genLabel(next);\r\n        gen.genGetHeap(t2, t1);\r\n        gen.genIf(t2, '-1', '==', fin);\r\n        gen.genExpresion(t3, t3, '1', '+');\r\n        gen.genExpresion(t1, t1, '1', '+');\r\n        gen.genGoto(next);\r\n        gen.genLabel(fin);\r\n        gen.genSetStack('p', t3);\r\n        gen.genCode('return;');\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t0);\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(t2);\r\n        gen.freeTemp(t3);\r\n    }\r\n\r\n    nativa_print_str() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t1 = gen.newTemporal();\r\n        let t2 = gen.newTemporal();\r\n        let next = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_print_str');\r\n        gen.isFunc = '\\t';\r\n        gen.genGetStack(t1, 'p');\r\n        gen.genLabel(next);\r\n        gen.genGetHeap(t2, t1);\r\n        gen.genIf(t2, '-1', '==', fin);\r\n        gen.genPrint('c', t2);\r\n        gen.genExpresion(t1, t1, '1', '+');\r\n        gen.genGoto(next);\r\n        gen.genLabel(fin);\r\n        gen.genCode('return;');\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(t2);\r\n    }\r\n    /*\r\n        nativa_print_integer() {\r\n            const gen = GeneradorC3D.getInstancia();\r\n            let t1 = gen.newTemporal();\r\n            let t2 = gen.newTemporal();\r\n            let t3 = gen.newTemporal();\r\n            let inicio = gen.newLabel();\r\n            let nextPos = gen.newLabel();\r\n            let nextPrt = gen.newLabel();\r\n            let fin = gen.newLabel();\r\n    \r\n            gen.genFuncion('nativa_print_integer');\r\n            gen.isFunc = '\\t';\r\n            gen.genGetStack(t1, 'p');\r\n            gen.genIf(t1, '0', '>=', inicio);\r\n            gen.genPrint('c', '45');\r\n            gen.genExpresion(t1, t1, '-1', '*');\r\n            gen.genLabel(inicio);\r\n            gen.genAsignacion(t3, 'p');\r\n            gen.genSetStack(t3, '-1');\r\n            gen.genExpresion(t3, t3, '1', '+');\r\n            gen.genLabel(nextPos);\r\n            gen.genIf(t1, '0', '==', nextPrt);\r\n            gen.genCode(`${t2} = fmod(${t1}, 10);`);\r\n            gen.genSetStack(t3, t2);\r\n            gen.genExpresion(t3, t3, '1', '+');\r\n            gen.genExpresion(t1, t1, '10', '/');\r\n            gen.genGoto(nextPos);\r\n            gen.genLabel(nextPrt);\r\n            gen.genExpresion(t3, t3, '1', '-');\r\n            gen.genGetStack(t1, t3);\r\n            gen.genIf(t1, '-1', '==', fin);\r\n            gen.genPrint('i', t1);\r\n            gen.genGoto(nextPrt);\r\n            gen.genLabel(fin);\r\n            gen.genCode('return;');\r\n            gen.genEndFuncion();\r\n            gen.isFunc = '';\r\n            gen.freeTemp(t1);\r\n            gen.freeTemp(t2);\r\n            gen.freeTemp(t3);\r\n        }*/\r\n\r\n    nativa_compararIgual_str_str() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t0 = gen.newTemporal();\r\n        let p1 = gen.newTemporal();\r\n        let p2 = gen.newTemporal();\r\n        let c1 = gen.newTemporal();\r\n        let c2 = gen.newTemporal();\r\n        let lblfalse = gen.newLabel();\r\n        let lbltrue = gen.newLabel();\r\n        let l2 = gen.newLabel();\r\n        let inicio = gen.newLabel();\r\n        let nextPos = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_compararIgual_str_str');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t0, 'p', '1', '+');\r\n        gen.genGetStack(p1, t0);\r\n        gen.genExpresion(t0, 'p', '2', '+');\r\n        gen.genGetStack(p2, t0);\r\n\r\n        gen.genIf(p1, '-1', '==', l2);\r\n        gen.genIf(p2, '-1', '==', lblfalse);\r\n        gen.genGoto(inicio);\r\n        gen.genLabel(l2);\r\n        gen.genIf(p2, '-1', '==', lbltrue);\r\n        gen.genGoto(lblfalse);\r\n\r\n        gen.genLabel(inicio);\r\n        gen.genGetHeap(c1, p1);\r\n        gen.genGetHeap(c2, p2);\r\n\r\n        gen.genLabel(nextPos);\r\n        gen.genIf(c1, c2, '!=', lblfalse);\r\n        gen.genIf(c1, '-1', '==', lbltrue);\r\n        gen.genExpresion(p1, p1, '1', '+');\r\n        gen.genExpresion(p2, p2, '1', '+');\r\n        gen.genGetHeap(c1, p1);\r\n        gen.genGetHeap(c2, p2);\r\n        gen.genGoto(nextPos);\r\n\r\n        gen.genLabel(lbltrue);\r\n        gen.genSetStack('p', '1');\r\n        gen.genGoto(fin);\r\n        gen.genLabel(lblfalse);\r\n        gen.genSetStack('p', '0');\r\n\r\n        gen.genLabel(fin);\r\n        gen.genCode('return;');\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(p1);\r\n        gen.freeTemp(p2);\r\n        gen.freeTemp(c1);\r\n        gen.freeTemp(c2);\r\n    }\r\n\r\n    nativa_compararNoIgual_str_str() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t1 = gen.newTemporal();\r\n        let p1 = gen.newTemporal();\r\n        let p2 = gen.newTemporal();\r\n        let c1 = gen.newTemporal();\r\n        let c2 = gen.newTemporal();\r\n        let lblfalse = gen.newLabel();\r\n        let lbltrue = gen.newLabel();\r\n        let l2 = gen.newLabel();\r\n        let inicio = gen.newLabel();\r\n        let nextPos = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_compararNoIgual_str_str');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t1, 'p', '1', '+');\r\n        gen.genGetStack(p1, t1);\r\n        gen.genExpresion(t1, 'p', '2', '+');\r\n        gen.genGetStack(p2, t1);\r\n\r\n        gen.genIf(p1, '-1', '==', l2);\r\n        gen.genIf(p2, '-1', '==', lbltrue);\r\n        gen.genGoto(inicio);\r\n        gen.genLabel(l2);\r\n        gen.genIf(p2, '-1', '==', lblfalse);\r\n        gen.genGoto(lbltrue);\r\n\r\n        gen.genLabel(inicio);\r\n        gen.genGetHeap(c1, p1);\r\n        gen.genGetHeap(c2, p2);\r\n\r\n        gen.genLabel(nextPos);\r\n        gen.genIf(c1, c2, '!=', lbltrue);\r\n        gen.genIf(c1, '-1', '==', lblfalse);\r\n        gen.genExpresion(p1, p1, '1', '+');\r\n        gen.genExpresion(p2, p2, '1', '+');\r\n        gen.genGetHeap(c1, p1);\r\n        gen.genGetHeap(c2, p2);\r\n        gen.genGoto(nextPos);\r\n\r\n        gen.genLabel(lbltrue);\r\n        gen.genSetStack('p', '1');\r\n        gen.genGoto(fin);\r\n        gen.genLabel(lblfalse);\r\n        gen.genSetStack('p', '0');\r\n\r\n        gen.genLabel(fin);\r\n        gen.genCode('return;');\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(p1);\r\n        gen.freeTemp(p2);\r\n        gen.freeTemp(c1);\r\n        gen.freeTemp(c2);\r\n    }\r\n\r\n    nativa_ToUpperCase() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t1 = gen.newTemporal();\r\n        let t2 = gen.newTemporal();\r\n        let t3 = gen.newTemporal();\r\n        let t4 = gen.newTemporal();\r\n        let nextPos = gen.newLabel();\r\n        let setChar = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_ToUpperCase');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t1, 'p', '1', '+');\r\n        gen.genGetStack(t2, t1); // carga la referencia del string\r\n        gen.genAsignacion(t3, 'h');  // inicio de posicion vacia del heap\r\n\r\n        gen.genLabel(nextPos);\r\n        gen.genGetHeap(t4, t2);\r\n        gen.genIf(t4, '-1', '==', fin);\r\n        gen.genIf(t4, '97', '<', setChar);\r\n        gen.genIf(t4, '122', '>', setChar);\r\n        gen.genExpresion(t4, t4, '32', '-');\r\n\r\n        gen.genLabel(setChar);\r\n        gen.genSetHeap('h', t4);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(t2, t2, '1', '+');\r\n        gen.genGoto(nextPos);\r\n\r\n        gen.genLabel(fin);\r\n        gen.genSetHeap('h', '-1');\r\n        gen.avanzarHeap();\r\n        gen.genSetStack('p', t3);\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(t2);\r\n        gen.freeTemp(t3);\r\n        gen.freeTemp(t4);\r\n    }\r\n\r\n    nativa_ToLowerCase() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t1 = gen.newTemporal();\r\n        let t2 = gen.newTemporal();\r\n        let t3 = gen.newTemporal();\r\n        let t4 = gen.newTemporal();\r\n        let nextPos = gen.newLabel();\r\n        let setChar = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_ToLowerCase');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t1, 'p', '1', '+');\r\n        gen.genGetStack(t2, t1); // carga la referencia del string\r\n        gen.genAsignacion(t3, 'h');  // inicio de posicion vacia del heap\r\n\r\n        gen.genLabel(nextPos);\r\n        gen.genGetHeap(t4, t2);\r\n        gen.genIf(t4, '-1', '==', fin);\r\n        gen.genIf(t4, '65', '<', setChar);\r\n        gen.genIf(t4, '90', '>', setChar);\r\n        gen.genExpresion(t4, t4, '32', '+');\r\n\r\n        gen.genLabel(setChar);\r\n        gen.genSetHeap('h', t4);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(t2, t2, '1', '+');\r\n        gen.genGoto(nextPos);\r\n\r\n        gen.genLabel(fin);\r\n        gen.genSetHeap('h', '-1');\r\n        gen.avanzarHeap();\r\n        gen.genSetStack('p', t3);\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(t2);\r\n        gen.freeTemp(t3);\r\n        gen.freeTemp(t4);\r\n    }\r\n\r\n    nativa_concat_str_str() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t1 = gen.newTemporal();\r\n        let t2 = gen.newTemporal();\r\n        let p1 = gen.newTemporal();\r\n        let p2 = gen.newTemporal();\r\n        let str1 = gen.newLabel();\r\n        let str2 = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_concat_str_str');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t1, 'p', '1', '+');\r\n        gen.genGetStack(p1, t1);\r\n        gen.genExpresion(t1, 'p', '2', '+');\r\n        gen.genGetStack(p2, t1);\r\n\r\n        gen.genAsignacion(t1, 'h');\r\n        gen.genLabel(str1);\r\n        gen.genGetHeap(t2, p1);\r\n        gen.genIf(t2, '-1', '==', str2);\r\n        gen.genSetHeap('h', t2);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p1, p1, '1', '+');\r\n        gen.genGoto(str1);\r\n\r\n        gen.genLabel(str2);\r\n        gen.genGetHeap(t2, p2);\r\n        gen.genIf(t2, '-1', '==', fin);\r\n        gen.genSetHeap('h', t2);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p2, p2, '1', '+');\r\n        gen.genGoto(str2);\r\n\r\n        gen.genLabel(fin);\r\n        gen.genSetHeap('h', '-1');\r\n        gen.avanzarHeap();\r\n        gen.genSetStack('p', t1);\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(t2);\r\n        gen.freeTemp(p1);\r\n        gen.freeTemp(p2);\r\n    }\r\n\r\n    nativa_concat_int_str() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t0 = gen.newTemporal();\r\n        let t1 = gen.newTemporal();\r\n        let t2 = gen.newTemporal();\r\n        let p1 = gen.newTemporal();\r\n        let p2 = gen.newTemporal();\r\n        let inicio = gen.newLabel();\r\n        let nextPos = gen.newLabel();\r\n        let validar = gen.newLabel();\r\n        let str1 = gen.newLabel();\r\n        let str2 = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_concat_int_str');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t1, 'p', '1', '+');\r\n        gen.genGetStack(p1, t1);\r\n        gen.genExpresion(t1, 'p', '2', '+');\r\n        gen.genGetStack(p2, t1);\r\n\r\n        gen.genAsignacion(t0, 'h');\r\n\r\n        gen.genIf(p1, '0', '>=', inicio);\r\n        gen.genSetHeap('h', '45');\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p1, p1, '-1', '*');\r\n\r\n        gen.genLabel(inicio);\r\n        gen.genAsignacion(t1, '0');\r\n\r\n        gen.genLabel(nextPos);\r\n        gen.genIf(p1, '0', '==', validar);\r\n        gen.genExpresion(t1, t1, '10', '*');\r\n        gen.genCode(`${t2} = fmod(${p1}, 10);`);\r\n        //gen.genExpresion(t2, '(int)' + p1, '10', '%');\r\n        gen.genExpresion(t1, t1, t2, '+');\r\n        gen.genExpresion(p1, p1, '10', '/');\r\n        gen.genCode(p1 + ' = (int)' + p1 + ';');\r\n        gen.genGoto(nextPos);\r\n\r\n        gen.genLabel(validar);\r\n        gen.genIf(t1, '0', '!=', str1);\r\n        gen.genSetHeap('h', '48');\r\n        gen.avanzarHeap();\r\n\r\n        gen.genLabel(str1);\r\n        gen.genIf(t1, '0', '==', str2);\r\n        gen.genCode(`${t2} = fmod(${t1}, 10);`);\r\n        //gen.genExpresion(t2, '(int)' + t1, '10', '%');\r\n        gen.genExpresion(t2, t2, '48', '+');\r\n        gen.genSetHeap('h', t2);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(t1, t1, '10', '/');\r\n        gen.genCode(t1 + ' = (int)' + t1 + ';');\r\n        gen.genGoto(str1);\r\n\r\n        gen.genLabel(str2);\r\n        gen.genGetHeap(t2, p2);\r\n        gen.genIf(t2, '-1', '==', fin);\r\n        gen.genSetHeap('h', t2);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p2, p2, '1', '+');\r\n        gen.genGoto(str2);\r\n\r\n        gen.genLabel(fin);\r\n        gen.genSetHeap('h', '-1');\r\n        gen.avanzarHeap();\r\n        gen.genSetStack('p', t0);\r\n\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(t2);\r\n        gen.freeTemp(p1);\r\n        gen.freeTemp(p2);\r\n    }\r\n\r\n    nativa_concat_str_int() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t0 = gen.newTemporal();\r\n        let t1 = gen.newTemporal();\r\n        let t2 = gen.newTemporal();\r\n        let p1 = gen.newTemporal();\r\n        let p2 = gen.newTemporal();\r\n        let pre = gen.newLabel();\r\n        let inicio = gen.newLabel();\r\n        let nextPos = gen.newLabel();\r\n        let validar = gen.newLabel();\r\n        let str1 = gen.newLabel();\r\n        let str2 = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_concat_str_int');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t1, 'p', '1', '+');\r\n        gen.genGetStack(p1, t1);\r\n        gen.genExpresion(t1, 'p', '2', '+');\r\n        gen.genGetStack(p2, t1);\r\n\r\n        gen.genAsignacion(t0, 'h');\r\n\r\n        gen.genLabel(str2);\r\n        gen.genGetHeap(t2, p1);\r\n        gen.genIf(t2, '-1', '==', pre);\r\n        gen.genSetHeap('h', t2);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p1, p1, '1', '+');\r\n        gen.genGoto(str2);\r\n\r\n        gen.genLabel(pre);\r\n        gen.genIf(p2, '0', '>=', inicio);\r\n        gen.genSetHeap('h', '45');\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p2, p2, '-1', '*');\r\n\r\n        gen.genLabel(inicio);\r\n        gen.genAsignacion(t1, '0');\r\n\r\n\r\n        gen.genLabel(nextPos);\r\n        gen.genIf(p2, '0', '==', validar);\r\n        gen.genExpresion(t1, t1, '10', '*');\r\n        gen.genCode(`${t2} = fmod(${p2}, 10);`);\r\n        //gen.genExpresion(t2, '(int)' + p2, '10', '%');\r\n        gen.genExpresion(t1, t1, t2, '+');\r\n        gen.genExpresion(p2, p2, '10', '/');\r\n        gen.genCode(p2 + ' = (int)' + p2 + ';');\r\n        gen.genGoto(nextPos);\r\n\r\n        gen.genLabel(validar);\r\n        gen.genIf(t1, '0', '!=', str1);\r\n        gen.genSetHeap('h', '48');\r\n        gen.avanzarHeap();\r\n\r\n        gen.genLabel(str1);\r\n        gen.genIf(t1, '0', '==', fin);\r\n        gen.genCode(`${t2} = fmod(${t1}, 10);`);\r\n        //gen.genExpresion(t2, '(int)' + t1, '10', '%');\r\n        gen.genExpresion(t2, t2, '48', '+');\r\n        gen.genSetHeap('h', t2);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(t1, t1, '10', '/');\r\n        gen.genCode(t1 + ' = (int)' + t1 + ';');\r\n        gen.genGoto(str1);\r\n\r\n\r\n        gen.genLabel(fin);\r\n        gen.genSetHeap('h', '-1');\r\n        gen.avanzarHeap();\r\n        gen.genSetStack('p', t0);\r\n\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(t2);\r\n        gen.freeTemp(p1);\r\n        gen.freeTemp(p2);\r\n    }\r\n\r\n    nativa_concat_dbl_str() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t0 = gen.newTemporal();\r\n        let t1 = gen.newTemporal();\r\n        let t2 = gen.newTemporal();\r\n        let t3 = gen.newTemporal();\r\n        let t4 = gen.newTemporal();\r\n        let p1 = gen.newTemporal();\r\n        let p2 = gen.newTemporal();\r\n        let pre = gen.newLabel();\r\n        let inicio = gen.newLabel();\r\n        let nextPos = gen.newLabel();\r\n        let validar = gen.newLabel();\r\n        let str1 = gen.newLabel();\r\n        let strd = gen.newLabel();\r\n        let str2 = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_concat_dbl_str');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t1, 'p', '1', '+');\r\n        gen.genGetStack(p1, t1);\r\n        gen.genExpresion(t1, 'p', '2', '+');\r\n        gen.genGetStack(p2, t1);\r\n\r\n        gen.genAsignacion(t0, 'h');\r\n\r\n        gen.genIf(p1, '0', '>=', pre);\r\n        gen.genSetHeap('h', '45');\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p1, p1, '-1', '*');\r\n\r\n        gen.genLabel(pre);\r\n        gen.genCode(`${t1} = (int)${p1};`);\r\n        //gen.genCode(`${t2} = fmod(${p1}, 1);`);\r\n        gen.genAsignacion(t3, '0');\r\n\r\n        gen.genLabel(inicio);\r\n        gen.genIf(t1, '0', '==', validar);\r\n        gen.genExpresion(t3, t3, '10', '*');\r\n        gen.genCode(`${t2} = fmod(${t1}, 10);`);\r\n        gen.genExpresion(t3, t3, t2, '+');\r\n        gen.genExpresion(t1, t1, '10', '/');\r\n        gen.genCode(`${t1} = (int)${t1};`);\r\n        gen.genGoto(inicio);\r\n\r\n        gen.genLabel(validar);\r\n        gen.genIf(t3, '0', '!=', nextPos);\r\n        gen.genSetHeap('h', '48');\r\n        gen.avanzarHeap();\r\n\r\n        gen.genLabel(nextPos);\r\n        gen.genIf(t3, '0', '==', str1);\r\n        gen.genCode(`${t1} = fmod(${t3}, 10);`);\r\n        gen.genExpresion(t3, t3, '10', '/');\r\n        gen.genCode(`${t3} = (int)${t3};`);\r\n        gen.genExpresion(t2, t1, '48', '+');\r\n        gen.genSetHeap('h', t2);\r\n        gen.avanzarHeap();\r\n        gen.genGoto(nextPos);\r\n\r\n        gen.genLabel(str1);\r\n        gen.genSetHeap('h', '46');\r\n        gen.avanzarHeap();\r\n        gen.genAsignacion(t3, '0');\r\n        gen.genCode(`${t1} = fmod(${p1}, 1);`);\r\n\r\n        gen.genLabel(strd);\r\n        gen.genIf(t3, '3', '==', str2);\r\n        gen.genExpresion(t1, t1, '10', '*');\r\n        gen.genCode(`${t2} = fmod(${t1}, 10);`);\r\n        gen.genCode(`${t2} = (int)${t2};`);\r\n        gen.genExpresion(t4, t2, '48', '+');\r\n        gen.genSetHeap('h', t4);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(t3, t3, '1', '+');\r\n        gen.genGoto(strd);\r\n\r\n        gen.genLabel(str2);\r\n        gen.genGetHeap(t2, p2);\r\n        gen.genIf(t2, '-1', '==', fin);\r\n        gen.genSetHeap('h', t2);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p2, p2, '1', '+');\r\n        gen.genGoto(str2);\r\n\r\n        gen.genLabel(fin);\r\n        gen.genSetHeap('h', '-1');\r\n        gen.avanzarHeap();\r\n        gen.genSetStack('p', t0);\r\n\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(t2);\r\n        gen.freeTemp(t3);\r\n        gen.freeTemp(t4);\r\n        gen.freeTemp(p1);\r\n        gen.freeTemp(p2);\r\n    }\r\n\r\n    nativa_concat_str_dbl() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t0 = gen.newTemporal();\r\n        let t1 = gen.newTemporal();\r\n        let t2 = gen.newTemporal();\r\n        let t3 = gen.newTemporal();\r\n        let t4 = gen.newTemporal();\r\n        let p1 = gen.newTemporal();\r\n        let p2 = gen.newTemporal();\r\n        let pre = gen.newLabel();\r\n        let sig = gen.newLabel();\r\n        let inicio = gen.newLabel();\r\n        let nextPos = gen.newLabel();\r\n        let validar = gen.newLabel();\r\n        let str1 = gen.newLabel();\r\n        let strd = gen.newLabel();\r\n        let str2 = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_concat_str_dbl');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t1, 'p', '1', '+');\r\n        gen.genGetStack(p1, t1);\r\n        gen.genExpresion(t1, 'p', '2', '+');\r\n        gen.genGetStack(p2, t1);\r\n\r\n        gen.genAsignacion(t0, 'h');\r\n\r\n        gen.genLabel(str2);\r\n        gen.genGetHeap(t2, p1);\r\n        gen.genIf(t2, '-1', '==', sig);\r\n        gen.genSetHeap('h', t2);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p1, p1, '1', '+');\r\n        gen.genGoto(str2);\r\n\r\n        gen.genLabel(sig);\r\n        gen.genIf(p2, '0', '>=', pre);\r\n        gen.genSetHeap('h', '45');\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p2, p2, '-1', '*');\r\n\r\n        gen.genLabel(pre);\r\n        gen.genCode(`${t1} = (int)${p2};`);\r\n        //gen.genCode(`${t2} = fmod(${p2}, 1);`);\r\n        gen.genAsignacion(t3, '0');\r\n\r\n        gen.genLabel(inicio);\r\n        gen.genIf(t1, '0', '==', validar);\r\n        gen.genExpresion(t3, t3, '10', '*');\r\n        gen.genCode(`${t2} = fmod(${t1}, 10);`);\r\n        gen.genExpresion(t3, t3, t2, '+');\r\n        gen.genExpresion(t1, t1, '10', '/');\r\n        gen.genCode(`${t1} = (int)${t1};`);\r\n        gen.genGoto(inicio);\r\n\r\n        gen.genLabel(validar);\r\n        gen.genIf(t3, '0', '!=', nextPos);\r\n        gen.genSetHeap('h', '48');\r\n        gen.avanzarHeap();\r\n\r\n        gen.genLabel(nextPos);\r\n        gen.genIf(t3, '0', '==', str1);\r\n        gen.genCode(`${t1} = fmod(${t3}, 10);`);\r\n        gen.genExpresion(t3, t3, '10', '/');\r\n        gen.genCode(`${t3} = (int)${t3};`);\r\n        gen.genExpresion(t2, t1, '48', '+');\r\n        gen.genSetHeap('h', t2);\r\n        gen.avanzarHeap();\r\n        gen.genGoto(nextPos);\r\n\r\n        gen.genLabel(str1);\r\n        gen.genSetHeap('h', '46');\r\n        gen.avanzarHeap();\r\n        gen.genAsignacion(t3, '0');\r\n        gen.genCode(`${t1} = fmod(${p2}, 1);`);\r\n\r\n        gen.genLabel(strd);\r\n        gen.genIf(t3, '3', '==', fin);\r\n        gen.genExpresion(t1, t1, '10', '*');\r\n        gen.genCode(`${t2} = fmod(${t1}, 10);`);\r\n        gen.genCode(`${t2} = (int)${t2};`);\r\n        gen.genExpresion(t4, t2, '48', '+');\r\n        gen.genSetHeap('h', t4);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(t3, t3, '1', '+');\r\n        gen.genGoto(strd);\r\n\r\n        gen.genLabel(fin);\r\n        gen.genSetHeap('h', '-1');\r\n        gen.avanzarHeap();\r\n        gen.genSetStack('p', t0);\r\n\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(t2);\r\n        gen.freeTemp(t3);\r\n        gen.freeTemp(t4);\r\n        gen.freeTemp(p1);\r\n        gen.freeTemp(p2);\r\n    }\r\n\r\n    nativa_concat_str_bol() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t0 = gen.newTemporal();\r\n        let t1 = gen.newTemporal();\r\n        let p1 = gen.newTemporal();\r\n        let p2 = gen.newTemporal();\r\n        let str1 = gen.newLabel();\r\n        let bol = gen.newLabel();\r\n        let lblf = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_concat_str_bol');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t1, 'p', '1', '+');\r\n        gen.genGetStack(p1, t1);\r\n        gen.genExpresion(t1, 'p', '2', '+');\r\n        gen.genGetStack(p2, t1);\r\n\r\n        gen.genAsignacion(t0, 'h');\r\n\r\n        gen.genLabel(str1);\r\n        gen.genGetHeap(t1, p1);\r\n        gen.genIf(t1, '-1', '==', bol);\r\n        gen.genSetHeap('h', t1);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p1, p1, '1', '+');\r\n        gen.genGoto(str1);\r\n\r\n        gen.genLabel(bol);\r\n        gen.genIf(p2, '1', '!=', lblf);\r\n        gen.genSetHeap('h', '116');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '114');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '117');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '101');\r\n        gen.avanzarHeap();\r\n        gen.genGoto(fin);\r\n        gen.genLabel(lblf);\r\n        gen.genSetHeap('h', '102');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '97');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '108');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '115');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '101');\r\n        gen.avanzarHeap();\r\n\r\n        gen.genLabel(fin);\r\n        gen.genSetHeap('h', '-1');\r\n        gen.avanzarHeap();\r\n        gen.genSetStack('p', t0);\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(p1);\r\n        gen.freeTemp(p2);\r\n    }\r\n\r\n    nativa_concat_bol_str() {\r\n        const gen = GeneradorC3D.getInstancia();\r\n        let t0 = gen.newTemporal();\r\n        let t1 = gen.newTemporal();\r\n        let p1 = gen.newTemporal();\r\n        let p2 = gen.newTemporal();\r\n        let str2 = gen.newLabel();\r\n        let lblf = gen.newLabel();\r\n        let fin = gen.newLabel();\r\n\r\n        gen.genFuncion('nativa_concat_bol_str');\r\n        gen.isFunc = '\\t';\r\n        gen.genExpresion(t1, 'p', '1', '+');\r\n        gen.genGetStack(p1, t1);\r\n        gen.genExpresion(t1, 'p', '2', '+');\r\n        gen.genGetStack(p2, t1);\r\n\r\n        gen.genAsignacion(t0, 'h');\r\n\r\n        gen.genIf(p1, '1', '!=', lblf);\r\n        gen.genSetHeap('h', '116');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '114');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '117');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '101');\r\n        gen.avanzarHeap();\r\n        gen.genGoto(str2);\r\n        gen.genLabel(lblf);\r\n        gen.genSetHeap('h', '102');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '97');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '108');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '115');\r\n        gen.avanzarHeap();\r\n        gen.genSetHeap('h', '101');\r\n        gen.avanzarHeap();\r\n\r\n        gen.genLabel(str2);\r\n        gen.genGetHeap(t1, p2);\r\n        gen.genIf(t1, '-1', '==', fin);\r\n        gen.genSetHeap('h', t1);\r\n        gen.avanzarHeap();\r\n        gen.genExpresion(p2, p2, '1', '+');\r\n        gen.genGoto(str2);\r\n\r\n        gen.genLabel(fin);\r\n        gen.genSetHeap('h', '-1');\r\n        gen.avanzarHeap();\r\n        gen.genSetStack('p', t0);\r\n        gen.genEndFuncion();\r\n        gen.isFunc = '';\r\n        gen.freeTemp(t1);\r\n        gen.freeTemp(p1);\r\n        gen.freeTemp(p2);\r\n    }\r\n\r\n\r\n\r\n}","import Errores from \"../AST/Errores\";\r\nimport Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport { Expreciones } from \"../Interfaces.ts/Expreciones\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\n\r\n\r\nexport default class Ternario implements Expreciones{\r\n\r\n    \r\n    public condicion : Expreciones;\r\n    public verdadero : Expreciones;\r\n    public falso : Expreciones;\r\n    public linea : number;\r\n    public columna : number;\r\n    lblTrue: string;\r\n    lblFalse: string;\r\n\r\n    constructor(condicion, verdadero, falso, linea, columna) {\r\n        this.condicion = condicion;\r\n        this.verdadero = verdadero;\r\n        this.falso = falso;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n    getvalor3d(controlador: Controlador, ts: TablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getTipo(controlador: Controlador, ts: TablaSimbolos) {\r\n        let valor_condicion = this.condicion.getValor(controlador,ts);\r\n\r\n        if(typeof valor_condicion == 'boolean'){\r\n            return valor_condicion ? this.verdadero.getTipo(controlador,ts) : this.falso.getTipo(controlador,ts); \r\n        }else{\r\n            let error = new Errores('Semantico', `La condicion del ternario no es booleana.`, this.linea, this.columna);\r\n            controlador.errores.push(error);\r\n            controlador.append(`Error Semantico : La condicion del ternario no es booleana. En la linea ${this.linea} y columan ${this.columna}`);\r\n        }\r\n    }\r\n    limpiar() {\r\n     }\r\n    getValor(controlador: Controlador, ts: TablaSimbolos) {\r\n        let valor_condicion = this.condicion.getValor(controlador,ts);\r\n\r\n        if(typeof valor_condicion == 'boolean'){\r\n            return valor_condicion ? this.verdadero.getValor(controlador,ts) : this.falso.getValor(controlador,ts); \r\n        }else{\r\n            let error = new Errores('Semantico', `La condicion del ternario no es booleana.`, this.linea, this.columna);\r\n            controlador.errores.push(error);\r\n            controlador.append(`Error Semantico : La condicion del ternario no es booleana. En la linea ${this.linea} y columan ${this.columna}`);\r\n        }\r\n    }\r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"Ternario\",\"\");\r\n        padre.AddHijo(this.condicion.recorrer());\r\n        padre.AddHijo(new Nodo(\":\",\"\"));\r\n        padre.AddHijo(this.falso.recorrer());\r\n        padre.AddHijo(new Nodo(\"?\",\"\"));\r\n        padre.AddHijo(this.verdadero.recorrer());\r\n       return padre;\r\n    }\r\n\r\n}","\r\nimport Nodo from \"src/clases/AST/Nodo\";\r\nimport Controlador from \"src/clases/Controlador\";\r\nimport { Expreciones } from \"src/clases/Interfaces.ts/Expreciones\";\r\nimport { Instruccion } from \"src/clases/Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"src/clases/TablaSimbolos/TablaSimbolos\";\r\nimport Detener from \"../SentenciaTransferencia/Break\";\r\nimport Continuar from \"../SentenciaTransferencia/continuar\";\r\nimport retornar from \"../SentenciaTransferencia/retornar\";\r\n\r\n\r\nexport default class For implements Instruccion{\r\n\r\n    public condicion: Expreciones;\r\n    public lista_instrucciones : Array<Instruccion>;\r\n    public inicio;\r\n    public fin;\r\n    public linea : number;\r\n    public columna : number;\r\n\r\n    constructor(condicion, lista_instrucciones,inicio,fin,linea, columna) {\r\n        this.condicion = condicion;\r\n        this.lista_instrucciones = lista_instrucciones;\r\n        this.inicio=inicio;\r\n        this.fin=fin;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n\r\n    ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n        let ts_for = new TablaSimbolos(ts);\r\n        this.inicio.ejecutar(controlador,ts_for);\r\n        let valor_condicion = this.condicion.getValor(controlador, ts_for);\r\n        \r\n        if(typeof valor_condicion == 'boolean'){\r\n\r\n            while(this.condicion.getValor(controlador,ts_for)){\r\n\r\n                let ts_local = new TablaSimbolos(ts_for);\r\n                for(let ins of this.lista_instrucciones){\r\n                    let res = ins.ejecutar(controlador,ts_local);\r\n\r\n                    if( ins instanceof Detener || res instanceof Detener){\r\n                        controlador.graficarEntornos(controlador,ts_local,\" (While)\");\r\n                       return null;\r\n                    }else{\r\n                        if(ins instanceof Continuar || res instanceof Continuar){\r\n                            break;\r\n                        }else{\r\n                            if( ins instanceof retornar || res instanceof retornar){\r\n                                controlador.graficarEntornos(controlador,ts_local,\" (While)\");\r\n                                return res;\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                     //TODO verificar si res es de tipo CONTINUE, BREAK, RETORNO \r\n                }\r\n                controlador.graficarEntornos(controlador,ts_local,\" (FOR)\");\r\n\r\n                this.fin.ejecutar(controlador,ts_for);\r\n            }\r\n        }\r\n        controlador.graficarEntornos(controlador,ts_for,\" (FOR)\");\r\n    }\r\n    \r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"CICLO\",\"\");\r\n        padre.AddHijo(new Nodo(\"for\",\"\"));\r\n        padre.AddHijo(new Nodo(\"(\",\"\"));\r\n        padre.AddHijo(this.inicio.recorrer());\r\n        padre.AddHijo(new Nodo(\";\",\"\"));\r\n        padre.AddHijo(this.condicion.recorrer());\r\n        padre.AddHijo(new Nodo(\";\",\"\"));\r\n        padre.AddHijo(this.fin.recorrer());\r\n        padre.AddHijo(new Nodo(\")\",\"\"));\r\n        padre.AddHijo(new Nodo(\"{\",\"\"));\r\n        for(let ins of this.lista_instrucciones){\r\n            padre.AddHijo(ins.recorrer());\r\n        }\r\n        padre.AddHijo(new Nodo(\"}\",\"\"));\r\n        return padre;\r\n    }\r\n\r\n} ","\r\nimport Nodo from \"src/clases/AST/Nodo\";\r\nimport Controlador from \"src/clases/Controlador\";\r\nimport { Expreciones } from \"src/clases/Interfaces.ts/Expreciones\";\r\nimport { Instruccion } from \"src/clases/Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"src/clases/TablaSimbolos/TablaSimbolos\";\r\n\r\nexport default class retornar implements Instruccion{\r\n    public valor :Expreciones ;\r\n    constructor (valor){\r\n        this.valor=valor;\r\n    }\r\n    ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n        if(this.valor!=null){\r\n            return this.valor.getValor(controlador,ts);\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"RETURN\",\"\");\r\n        padre.AddHijo(new Nodo(\"return\",\"\"));\r\n        if(this.valor!=null){\r\n            padre.AddHijo(this.valor.recorrer());\r\n        }\r\n        return padre;\r\n    }\r\n\r\n}","import Nodo from \"src/clases/AST/Nodo\";\r\nimport Controlador from \"src/clases/Controlador\";\r\nimport { Expreciones } from \"src/clases/Interfaces.ts/Expreciones\";\r\nimport { TablaSimbolos } from \"src/clases/TablaSimbolos/TablaSimbolos\";\r\n\r\nexport enum Operador {\r\n    SUMA,\r\n    RESTA,\r\n    MULTI,\r\n    DIV,\r\n    POT,\r\n    MODULO,\r\n    MENORQUE,\r\n    MAYORQUE,\r\n    AND,\r\n    NOT,\r\n    UNARIO,\r\n    IGUALIGUAL,\r\n    MAYORIGUAL,\r\n    DIFERENTE,\r\n    MENORIGUAL,\r\n    OR\r\n}\r\n\r\nexport default class Operaciones implements Expreciones {\r\n\r\n    public exp1 : Expreciones;\r\n    public exp2 : Expreciones;\r\n    public expU : boolean;\r\n    public operador : Operador;\r\n    public linea: number;\r\n    public columna: number;\r\n    public op:string;\r\n    lblTrue: string;\r\n    lblFalse: string;\r\n\r\n\r\n    constructor (exp1 : Expreciones,operador : string ,exp2 : Expreciones,linea: number,columna: number,expU : boolean){\r\n        this.exp1=exp1;\r\n        this.exp2=exp2;\r\n        this.columna=columna;\r\n        this.linea=linea;\r\n        this.expU=expU;\r\n        this.op=operador;\r\n        this.operador=this.getOperador(operador);\r\n        this.lblFalse = this.lblTrue = '';\r\n    }\r\n    getvalor3d(controlador: Controlador, ts: TablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    limpiar() {\r\n       \r\n     }\r\n\r\n    getOperador(op : string): Operador{\r\n        if(op == '+'){\r\n            return Operador.SUMA;\r\n        }else if(op == '-'){\r\n            return Operador.RESTA;\r\n        }else if(op == '<'){\r\n            return Operador.MENORQUE;\r\n        }else if(op == '*'){\r\n            return Operador.MULTI;\r\n        }else if(op == '/'){\r\n            return Operador.DIV;\r\n        }else if(op == '>'){\r\n            return Operador.MAYORQUE;\r\n        }else if(op == '&&'){\r\n            return Operador.AND;\r\n        }else if(op == '!'){\r\n            return Operador.NOT;\r\n        }else if(op == 'UNARIO'){\r\n            return Operador.UNARIO;\r\n        }else if(op == '=='){\r\n            return Operador.IGUALIGUAL;\r\n        }else if(op == '>='){\r\n            return Operador.MAYORIGUAL;\r\n        }else if(op == '^'){\r\n            return Operador.POT;\r\n        }else if(op== '%'){\r\n            return Operador.MODULO;\r\n        }else if (op=='!='){\r\n            return Operador.DIFERENTE;\r\n        }else if( op == '<='){\r\n            return Operador.MENORIGUAL;\r\n        }else if ( op == '||'){\r\n            return Operador.OR;\r\n        }\r\n    }\r\n\r\n\r\n    getTipo(controlador: Controlador, ts: TablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getValor(controlador: Controlador, ts: TablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    recorrer(): Nodo {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    \r\n}","import Nodo from \"src/clases/AST/Nodo\";\r\nimport Controlador from \"src/clases/Controlador\";\r\nimport { Instruccion } from \"src/clases/Interfaces.ts/Instruccion\";\r\nimport { TablaSimbolos } from \"src/clases/TablaSimbolos/TablaSimbolos\";\r\n\r\n\r\nexport default class Continuar implements Instruccion{\r\n\r\n    constructor(){\r\n\r\n    }\r\n    ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n        return this;\r\n    }\r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"CONTUNUE\",\"\");\r\n        return padre;\r\n    }\r\n\r\n}\r\n","import { errorLex } from \"../Analizar\";\r\nimport Errores from \"./Errores\";\r\n\r\n\r\nexport class LErrores {\r\n    constructor(tipo: string, descripcion: string, analizador: string, linea: number, columna: number) {\r\n        console.log(\"hay un error\");\r\n        errorLex.push(new Errores(tipo,descripcion,linea,columna,analizador));\r\n        console.log(errorLex);\r\n    }\r\n}","import { TablaSimbolos } from \"./TablaSimbolos\";\r\n\r\nexport default class ambito {\r\n    public sig : TablaSimbolos;\r\n    public identificador:string;\r\n\r\n    constructor(identificador:string,sig : TablaSimbolos){\r\n        this.identificador=identificador;\r\n        this.sig=sig;\r\n    }\r\n}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/mode/markdown/markdown';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import Errores from \"../AST/Errores\";\r\nimport Nodo from \"../AST/Nodo\";\r\nimport Controlador from \"../Controlador\";\r\nimport { Instruccion } from \"../Interfaces.ts/Instruccion\";\r\nimport Simbolos from \"../TablaSimbolos/Simbolos\";\r\nimport { TablaSimbolos } from \"../TablaSimbolos/TablaSimbolos\";\r\nimport Tipo, { tipo } from \"../TablaSimbolos/Tipo\";\r\n\r\n\r\nexport default class Declaracion implements Instruccion{\r\n\r\n    public type: Tipo;\r\n    public stype: string;\r\n    public lista_simbolos: Array<Simbolos>;\r\n    public linea: number;\r\n    public columna  :  number;\r\n\r\n    constructor (type,lista_simbolos,linea,columna){\r\n        this.type=type;\r\n        this.lista_simbolos=lista_simbolos;\r\n        this.linea=linea;\r\n        this.columna=columna;\r\n    }\r\n\r\n    ejecutar(controlador: Controlador, ts: TablaSimbolos) {\r\n\r\n        for(let simbolo of this.lista_simbolos){\r\n            let variable = simbolo as Simbolos;\r\n\r\n            if(ts.existeEnActual(variable.identificador)){\r\n                let error = new Errores('Semantico', `La variable ${variable.identificador} ya existe en el entorno actual.`, this.linea, this.columna);\r\n                controlador.errores.push(error);\r\n                controlador.append(`Error Semantico : La variable ${variable.identificador} ya existe en el entorno actual. En la linea ${this.linea} y columan ${this.columna}`);\r\n                continue;\r\n            }\r\n\r\n            if(variable.valor!=null){\r\n                let valor=variable.valor.getValor(controlador,ts);\r\n\r\n                let tipo_valor = variable.valor.getTipo(controlador,ts);\r\n                console.log(tipo_valor, this.type.type);\r\n                if(tipo_valor == this.type.type || (tipo_valor == tipo.DOBLE && this.type.type == tipo.ENTERO)  ){\r\n                    let nuevo_simb =new Simbolos(variable.simbolo,this.type,variable.identificador,valor);\r\n                    ts.agregar(variable.identificador,nuevo_simb);   \r\n                }else if(tipo_valor == tipo.CADENA && this.type.type== tipo.CARACTER){\r\n                    if(valor.length==1){\r\n                        let nuevo_simb =new Simbolos(variable.simbolo,this.type,variable.identificador,valor);\r\n                        ts.agregar(variable.identificador,nuevo_simb); \r\n                    }else{\r\n                        let error = new Errores('Semantico', `La variable ${variable.identificador} no se le puede asignar el valor \\\"${valor}\\\" por que son de distinto tipo.`, this.linea, this.columna);\r\n                        controlador.errores.push(error);\r\n                        controlador.append(`Error Semantico : La variable ${variable.identificador} no se le puede asignar el valor \\\"${valor}\\\" por que son de distinto tipo. En la linea ${this.linea} y columan ${this.columna}`);\r\n                    }\r\n                }else{\r\n                    let error = new Errores('Semantico', `La variable ${variable.identificador} no se le puede asignar el valor \\\"${valor}\\\" por que son de distinto tipo.`, this.linea, this.columna);\r\n                    controlador.errores.push(error);\r\n                    controlador.append(`Error Semantico : La variable ${variable.identificador} no se le puede asignar el valor \\\"${valor}\\\" por que son de distinto tipo. En la linea ${this.linea} y columan ${this.columna}`);\r\n                }\r\n            \r\n            }else{\r\n                let nuevo_simb =new Simbolos(variable.simbolo,this.type,variable.identificador,null);\r\n                ts.agregar(variable.identificador,nuevo_simb);\r\n            }\r\n\r\n\r\n        }\r\n        \r\n    }\r\n    recorrer(): Nodo {\r\n        let padre = new Nodo(\"Declaraciones\",\"\");\r\n        for(let simbolo of this.lista_simbolos){\r\n           let  p = new Nodo(\"Declaracion\",\"\");\r\n           p.AddHijo(new Nodo(simbolo.identificador,\"\"));\r\n           p.AddHijo(new Nodo(\";\",\"\"));\r\n           padre.AddHijo(p);\r\n        }\r\n        return padre;\r\n    }\r\n\r\n}","\r\nexport default class Errores{\r\n    public tipo: String;\r\n    public analizador:String;\r\n    public descripcion: String;\r\n    public linea: number;\r\n    public columna: number;\r\n\r\n    constructor (tipo,descripcion,linea,columna,analizador?){\r\n        this.tipo =tipo;\r\n        this.descripcion=descripcion;\r\n        this.linea=linea;\r\n        this.columna=columna;\r\n        this.analizador=analizador;\r\n    }\r\n\r\n}","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}