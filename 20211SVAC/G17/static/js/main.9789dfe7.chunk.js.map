{"version":3,"sources":["code/analizadorXPath/AST/Entorno.js","code/analizadorXPath/Expresion/Logical.js","code/analizadorXPath/Expresion/Arithmetics.js","code/analizadorXPath/Expresion/Comparison.js","code/analizadorXPath/Expresion/postfix.js","code/analizadorC/AST/modelos.js","code/analizadorC/AST/instrucciones/si.js","code/analizadorXPath/Xpath.js","code/analizadorXPath/Instruccion/Xquery.js","code/analizadorXPath/XPathDesc.js","code/analizadorXML/grammar.js","code/analizadorXMLDesc/grammarDesc.js","code/analizadorC/optimizador.js","code/analizadorC/c.js","code/analizadorC/AST/instrucciones/declaracion.js","code/analizadorC/AST/instrucciones/bloque.js","code/analizadorC/AST/instrucciones/return.js","code/analizadorXPath/Expresion/axes.js","code/analizadorXPath/AST/Global.js","code/analizadorC/AST/expresiones/expresion.js","logo.svg","components/Navigation.js","components/InConsole.js","components/TablaSimbolo.js","components/TablaSimbolos.js","components/TablaErrores.js","components/Gramatical.js","Routes.js","App.js","reportWebVitals.js","index.js","code/CST.js","code/analizadorC/AST/instrucciones/asignacion.js","code/C3D.js","code/analizadorXML/helpers.js","code/analizadorXPath/Expresion/Expresiones.js"],"names":["require","ErroresGlobal","LimpiarErrores","CrearGlobal","AgregarGlobal","C3D","Tipo","getTipoById","numero","Siblings","Colision","ColisionTipo","INTEGER","DECIMAL","ERROR","ColisionLogical","BOOLEAN","TipoPath","Comando","Prologo","Instrucciones","Nodos","Edges","graphviz","errores","tablaGramatica","this","XML","returnXMLC3D","Salida","retornos","prologo","iterator","Nodo","concat","getValor","NODO","length","retorno","tipo","ConvertiraXML","entorno","valor","xml","instruccion","getC3D","addCodigo3D","cod","STRING","T0","newTemp","funcBoleanas","funcIndices","ATRIB","IMPRIMIRATRIBUTO","IMPRIMIRCONSULTA","console","log","getFullC3D","ListaNodes","ListaEdges","contador","num","push","id","label","from","to","nodoActual","i","nodos","Graficar","nodo","nodes","edges","NoGrade","Math","abs","edge","iteracion","atributos","atributo","nombre","hijos","texto","Predicado","predicado","posibles","undefined","temp","posible","concatenarNodos","principales","secundarios","posicion","secundario","setPosicion","concatenarNodosOrden","nuevoRetorno","iSec","principal","Logical","Literal","izquierdo","op","derecho","Objetos","Map","obj","valIzq","valDer","operar","values","NodosActuales","TCretorno","TC0","retIzq","retDer","TC1","T1","T2","La","newLbl","Lb","T3","T4","T5","TSP","T6","T7","T8","Lc","Ld","Le","Lf","T9","T10","TC2","T11","T12","T13","Lg","Lh","Li","Lj","TL1","TL2","TL3","TL4","LR0","LR1","LR2","LR3","LR4","TP4","TP5","TP6","LP4","LP5","objeto","izqValor","derValor","todos","izq","der","set","Arithmetic","newValor","contiene","TC3","TC4","TF1","CASTNUM","TF2","T14","TC5","Number","trunc","Error","Linea","columna","Unary","RangeExp","inicio","fin","valinicio","valfin","index","Concat","Tcima","TBase","Lm","Lk","Ta","Tb","Tc","Td","LA","LB","LC","LD","ComparisonExp","salir","comparison","TR0","TR1","TR2","TR3","TR4","TR5","TR6","TR7","TP","TQ","TR","LW","Lx","Tcont","Treal","Tinicio","Tcont1","PostFix","Texto","ABS","getTextoRelativo","TEXT","TT1","ContextItemExpr","REL","GenerarNodosHijos","nodoTipo","nodoNombre","nodoCorcheteA","nodoCorcheteC","SELF","ascci","charCodeAt","tempCod","PREDICADODECIMAL","PREDICADONODO","padre","hijo","nuevaPila","Object","assign","pila","CallFunction","argumentos","expArgumentos","argumento","Last","Node","Position","Mayusculas","Minusculas","toString","toNumber","subString","CallFunctionPrefix","prefix","funciones","retonarGlobal","funcion","nuevoEntorno","ArgumentosRealizados","declaraciones","transformTipo","type","Entorno","posTipo","posTexto","contains","body","ejectuar","expresion","match","parseInt","lastIndex","LAST","posiciones","Camino","CAMINO","nuevo","upperCase","UPPERCASE","TT2","TT3","TT4","TT5","lowerCase","newNodo","TOSTRING","minimo","substring","SUBSTR1","TT6","SUBSTR2","TT7","Instruccion","linea","esFuncional","etiquetasInternas","esSaltoConstante","Expresion","esCero","esSiempreTrue","esSiempreFalse","CTipo","esArray","Si","condicion","ira","iraFalso","cond","optimizar","Ira","etiqueta","obtenerNegativa","tcond","tresd","tira","Etiqueta","XPath","o","k","v","l","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","$VT","$VU","$VV","$VW","$VX","$VY","$VZ","$V_","$V$","$V01","$V11","$V21","$V31","$V41","$V51","$V61","$V71","$V81","$V91","$Va1","parser","trace","yy","symbols_","terminals_","2","10","11","12","14","16","17","18","19","20","21","23","26","27","28","39","41","44","45","46","48","49","50","51","57","58","59","60","61","62","63","64","65","67","69","72","73","74","75","76","77","79","81","83","84","86","87","88","89","91","93","104","105","106","107","108","109","110","111","112","113","117","118","119","120","121","122","124","125","131","132","133","135","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","grafo","generarPadre","generarHijos","generarTexto","retornoErrores","ListaErrores","retornoGrafo","grafoCST","$","expr","pilaNodos","PilaEdges","GrahpvizNodo","GrahpvizEdges","TablaGramatica","setLineaColumna","first_line","first_column","CrearFuncion","Flower","name","exp","mode","order","empty","IfThenElse","PathExp","Atributo","Child","Descendant","Attribute","Self","DescSelf","FollowSibling","Follow","CaminoInverso","Parent","Ancestor","PrecedingSibling","Preceding","AncestorSelf","Variable","Parentesis","table","3","4","5","6","7","8","29","30","31","32","36","37","66","68","70","78","80","82","85","90","92","94","95","96","97","98","101","102","103","115","116","123","126","127","128","129","130","1","9","13","33","34","35","38","40","71","42","47","99","100","134","52","53","43","54","55","56","22","25","15","24","defaultActions","219","229","235","237","240","242","244","parseError","str","hash","recoverable","error","parse","input","self","stack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","popStack","n","getPrototypeOf","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","lex","token","yyval","error_rule_depth","locateNearestErrorRecoveryRule","stack_probe","depth","errStr","showPosition","join","text","line","loc","Array","last_line","last_column","range","apply","err","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","rules","_currentRules","flex","begin","condition","popState","pop","conditions","topState","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","exports","main","process","exit","source","readFileSync","normalize","module","argv","clauseexp","returnexp","EntornoLocal","clause","EjecutarClouse","EjecutarReturn","DeclararLet","DeclararFor","EjecutarWhere","EjecutarOrder","NuevoEntornoLocal","posicionEntorno","nuevoValor","EntornoFiltrado","mapa","insertarOrden","LocalEnOrden","tempmapa","bandera","comparacion","valor1","valor2","condiciones","bloqueverdadero","bloquefalso","XpathDesc","reverse","grammar","c3d","SetearXML","datos","tabla","helpers","ObjetoPrincipal","esTexto","CambiarCodificacion","tipoCodificacion","objetoCorrecto","Objeto","result","ReemplazaTexto","grammarDesc","tempfin","setTipo","analizadorC","Optimizador","textoOptimizar","textoOptimizado","textoSplit","newInstrucciones","ResultadoParse","instrucciones","ins","lib","cDeclaracion","DeclaracionVariable","DeclaracionArray","DeclaracionFuncion","cBloque","Bloque","cReturn","Return","cAsignacion","Asignacion","AsignacionArray","cSi","cExpresion","Comparacion","Aritmetico","Arreglo","Unario","Id","Casteo","modelos","ids","tamano","params","bloque","instruccionAnterior","iraActual","instruccionActual","insertar","optimizar2","intercambiarEtiquetas","cnd","tExp","Axes","Axis","RecursivaCamino","DESCENDANT","GraficarAxis","actual","suma","subretorno","RecursivaAtributo","RECURSIVAATRIBUTO","RRECURSIVAATROBUTO","ATRIBUTO","nuevoNodo","retornohijos","descendientes","DESCENDANTRECURSIVA","DESCENDANTSELF","nivel","Padre","hermanos","indice","entries","realretorno","FOLLOWINGSIBLING","EntornoActual","val","convertido","tempRetorno","PARENT","ancestros","ancestro","retornoReal","ANCESTOR","ANCESTORRECURSIVA","ANCESTORSELF","PRECEDINGSIBLING","Global","res","tresdExp","tresdPos","comparar","newOp","tizq","tder","XPathDesc","Navigation","props","handleOnChange","e","setState","InputTextarea","getValue","handleOnChangeC3D","C3DTextarea","handleXML","XMLTextarea","handleSubmit","event","fileReader","FileReader","onloadend","handleFileReader","readAsText","target","files","content","clearC3D","resultado","alert","datosCSTXML","Mistakes","TablaGramatical","handleSubmitPath","fileReader2","handleFileReaderPath","handleFocus","fileDownloadUrl","OutputTextarea","datosCST","AST","graphvizCST","MistakesXPath","TablaGramticalXPath","textostr","localStorage","getItem","JSON","fileInput","React","createRef","fileInput2","bind","removeItem","parseXPath","respuesta","Ejecutar","xpathC3D","EjecutarC3D","InvertirNodes","x","blob","Blob","URL","createObjectURL","dofileDownload","click","revokeObjectURL","className","onClick","setItem","stringify","style","textDecoration","pathname","datosAST","Limpiar","src","logo","alt","multiple","accept","ref","onChange","htmlFor","display","download","href","descargar","xmlDesc","actualizar","value","theme","lineNumbers","styleActiveLine","columnNumbers","inputStyle","onBlur","placeholder","setText","setTextDesc","lineWrapping","foldGutter","gutter","readOnly","Optimizar","size","Component","InConsole","layout","hierarchical","color","interaction","hover","events","select","location","datosXML","graph","getNetwork","getEdges","getNodes","vis","TablaSimbolo","data","map","item","ambito","fila","ReactDOM","render","document","getElementById","TablaSimbolos","readSimbols","ent","entActual","TablaErrores","Gramatical","produccion","Routes","useEffect","title","exact","path","component","Reporte","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","pilaHijos","concatenado","textoActual","Hijos","array","exppresion","tarray","texpresion","contadorXML","cntLbl","cntLblXML","hp","hpXML","sp","spXML","c3dXML","str3d","castNum","tab","clearConcatenado","getCima","getNextSP","guardarString","guardarIndexes","refNombre","refAtri","refHijo","refValor","tempPadre","guardarIndexRaiz","guardarStackAtri","guardarStackHijos","getReferencia","Tref","agregarComentario","addfuncion3d","encab","agregarEncabezado","addC3D","getstr3d","funciones3d","funcComparar","funcCompararAscii","ImprimirAtributo","ImprimirAtributoR","imprimirConsulta","ImprimirConsultaR","funcText","funcNumberToString","funcLast","funcUpperCase","LOWERCASE","funcLowerCase","funcSubStr_int","funcSubStr_int_int","predicadoDecimal","predicadoNodo","funcCaminoABS","funcParent","funcAtributo","funcAtributoDescendantRecursiva","funcAtributoDescendant","funcImprimirString","funcFollowingSibling","funcPrecedingSibling","funcDescendantRecursiva","funcDescendant","funcDescendantSelf","funcAncestorRecursiva","funcAncestor","funcAncestorSelf","funcSelf","Retorno","trueLabel","falseLabel","objetos","ltrue","lfalse","TA","TB","TD","TE","TF","TG","TH","TI","TJ","TK","TL","TM","TN","TO","LX","LZ","Tlargo","T15","T16","L1","L2","L3","T2A","T2B","T2C","T2D","T2E","T2F","T2G","TA0","T2H","TA1","T2I","T2J","T2K","T2L","T2M","T2N","T2O","T2P","T2Q","E2A","E2B","LA1","LA3","E2C","E2D","T1A","T1B","T1C","T1D","T1E","T1F","T1G","T1H","T1I","E1A","E1B","E1C","E1D","L0","L4","L5","L6","L7","L8","L9","T3A","T3B","T3C","T3D","T3E","T3F","T3G","E3A","T17","T18","T19","T20","T21","T22","T23","LE","LF","LG","LH","LI","LJ","LK","LL","LN","LO","LP","LQ","LR","LM","LS","leerHeap","Temp1","Labl1","Labl2","leerStack","leerHeapConsulta","TP1","TP2","TP3","LP1","LP2","LP3","TPC","LT1","LT2","LT3","LT4","LT5","TT0","TTS","TT_2","TT_1","TT_3","refPadres","temphijo","refPadre","tempTipo","retornoHijo","tempAtri","tempPadreAtri","Temp2","tempTexto","posNombre","posValor","contenido","iconv","toLowerCase","decode","encodingExists","NodoExp","ToString","ToLower","tmp","caminos","Retornos","tempretorno","expresiones"],"mappings":"8lBAAA,EAAsEA,EAAQ,IAAtEC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,eAAgBC,EAAvC,EAAuCA,YAAaC,EAApD,EAAoDA,cAChDC,EAAML,EAAQ,GAELM,EAAO,CAChB,QAAY,EACZ,QAAY,EACZ,OAAY,EACZ,KAAY,EACZ,QAAY,EACZ,MAAY,EACZ,MAAY,EACZ,QAAY,GAGT,SAASC,EAAYC,GAE1B,OAAOA,GAEL,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,QACT,KAAK,EACH,MAAO,QACT,KAAK,EACH,MAAO,WAIN,IAAIC,EAAW,GAETC,EACb,CACE,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAC3C,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAC3C,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAC3C,EAAC,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GACzC,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAC3C,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAC3C,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,IAGhCC,EACb,CACE,CAACL,EAAKM,QAASN,EAAKO,QAASP,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKO,QAASP,EAAKQ,OACtF,CAACR,EAAKO,QAASP,EAAKO,QAASP,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKO,QAASP,EAAKQ,OACtF,CAACR,EAAKQ,MAASR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,OACtF,CAACR,EAAKO,QAASP,EAAKO,QAASP,EAAKQ,MAAOR,EAAKO,QAASP,EAAKQ,MAAOR,EAAKO,QAASP,EAAKQ,OACtF,CAACR,EAAKQ,MAASR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,OACtF,CAACR,EAAKO,QAASP,EAAKO,QAASP,EAAKQ,MAAOR,EAAKO,QAASP,EAAKQ,MAAOR,EAAKO,QAASP,EAAKQ,OACtF,CAACR,EAAKQ,MAASR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,QAG3EC,EACb,CACE,CAACT,EAAKQ,MAAUR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,OACvF,CAACR,EAAKQ,MAAUR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,OACvF,CAACR,EAAKQ,MAAUR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,OACvF,CAACR,EAAKQ,MAAUR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKU,QAASV,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,OACvF,CAACR,EAAKQ,MAAUR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,OACvF,CAACR,EAAKQ,MAAUR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,OACvF,CAACR,EAAKQ,MAAUR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,MAAOR,EAAKQ,MAASR,EAAKQ,QAG5EG,EAAW,CACpB,IAAQ,WACR,IAAQ,YAGCC,EAAb,WAEE,WAAYC,EAAQC,EAAcC,EAAMC,EAAMC,EAASC,EAAQC,GAC9D,oBACCC,KAAKN,cAAgBA,EACrBM,KAAKP,QAAUA,EACfO,KAAKL,MAAMA,EACXK,KAAKJ,MAAMA,EACXI,KAAKH,SAASA,EACdG,KAAKF,QAAUA,EACfE,KAAKD,eAAiBA,EAV1B,4CAaE,SAASE,GAEPzB,IACAG,EAAIuB,eACJ,IAAIC,EAAS,GACTC,EAAS,GACb3B,IALF,oBAMwBuB,KAAKP,SAN7B,IAME,2BAAoC,CAAC,IAA1BY,EAAyB,QAClC3B,EAAc2B,IAPlB,kDASyBL,KAAKN,eAT9B,IASE,2BAA2C,CAAC,IAAjCY,EAAgC,QACpCC,EAAQjC,EAAQ,GAAhBiC,KACLH,EAAWA,EAASI,OAClBF,EAASG,SACP,CACE,IAAIF,EAAK3B,EAAK8B,KAAKT,EAAI,GAAG,GAAG,OAdvC,8BAmBsB,GAAjBG,EAASO,SAEVR,GAAU,kCArBd,oBAuBwBC,GAvBxB,IAuBE,2BAAgC,CAAC,IAAtBQ,EAAqB,QAC3BA,EAAQC,MAAQjC,EAAK8B,KAEtBP,GAAUW,EAAcF,EAAQG,QAAQ,GAAK,KAEvCH,EAAQC,MAAMjC,EAAKQ,MAEzBe,GAAU,iCAIVA,GAAUS,EAAQI,MAAQ,MAlChC,8BAsCE,OADAhB,KAAKF,QAAUE,KAAKF,QAAQU,OAAOjC,GAC5B4B,IApDX,yBAwDE,SAAYc,GACV,IADc,EAEVb,EAAS,GAFC,cAGYJ,KAAKN,eAHjB,IAGd,2BAA8C,CAAC,IAApCwB,EAAmC,QAC5Cd,EAAWA,EAASI,OAAOU,EAAYC,WAJ3B,kDAQQf,GARR,IAQd,2BAAgC,CAAC,IAAtBQ,EAAqB,QAO9B,OANAjC,EAAIyC,YAAJ,mDACAzC,EAAIyC,YAAJ,kCACAzC,EAAIyC,YAAJ,4BAEAzC,EAAIyC,YAAYR,EAAQS,KAEjBT,EAAQC,MAEb,KAAKjC,EAAK0C,OACR,IAAIC,EAAK5C,EAAI6C,UACb7C,EAAI8C,aAAa9C,EAAI+C,YAAYJ,SAAU,EAC3C3C,EAAIyC,YAAJ,mBACAzC,EAAIyC,YAAJ,UAAmBG,EAAnB,kBACA5C,EAAIyC,YAAJ,qBAA8BG,EAA9B,eAAuCX,EAAQI,MAA/C,SACArC,EAAIyC,YAAJ,wBACAzC,EAAIyC,YAAJ,mBACA,MACF,KAAKxC,EAAKO,QACRR,EAAIyC,YAAJ,uBAAgCR,EAAQI,MAAxC,UACA,MACF,KAAKpC,EAAKM,QACRP,EAAIyC,YAAJ,4BAAqCR,EAAQI,MAA7C,UACA,MACF,KAAKpC,EAAK+C,MAERhD,EAAI8C,aAAa9C,EAAI+C,YAAYE,mBAAoB,EACrDjD,EAAIyC,YAAJ,2BACA,MACF,KAAKxC,EAAK8B,KAER/B,EAAI8C,aAAa9C,EAAI+C,YAAYG,mBAAoB,EACrDlD,EAAIyC,YAAJ,6BAxCQ,8BA8Dd,OAFAU,QAAQC,IAAI3B,GACHzB,EAAIqD,eArHjB,sBAyHE,WAEE,IAAIC,EAAa,GACbC,EAAa,GACbC,EAAW,CAACC,IAAI,GACpBH,EAAWI,KAAK,CAACC,GAAG,EAAEC,MAAM,QAC5BL,EAAWG,KAAK,CAACG,KAAK,EAAEC,GAAG,IAC3B,IAAIC,EAAa,CAACJ,GAAGH,EAASC,IAAIG,MAAM,SACxCJ,EAASC,MACTH,EAAWI,KAAKK,GAChB,IAAI,IAAIC,EAAI,EAAGA,EAAI3C,KAAKN,cAAciB,OAAQgC,IAC9C,CACE,IAAIC,EAAQ,GACN,GAAHD,IAEDV,EAAWI,KAAK,CAACC,GAAGH,EAASC,IAAIG,MAAM,MACvCK,EAAMP,KAAK,CAACC,GAAGH,EAASC,IAAIG,MAAM,MAClCJ,EAASC,OAEXQ,EAAQA,EAAMpC,OAAOR,KAAKN,cAAciD,GAAGE,SAASZ,EAAWC,EAAWC,IAR5E,oBASqBS,GATrB,IASE,2BAA0B,CAAC,IAAhBE,EAAe,QACxBZ,EAAWG,KAAK,CAACG,KAAKE,EAAWJ,GAAGG,GAAGK,EAAKR,MAVhD,+BAaA,MAAO,CAACS,MAAMd,EAAWe,MAAMd,KAjJnC,2BAoJE,WAEE,IADF,EACMe,EAAUjD,KAAKL,MAAMK,KAAKL,MAAMgB,OAAO,GAAG2B,GADhD,cAEqBtC,KAAKL,OAF1B,IAEE,2BAA+B,CAAC,IAArBmD,EAAoB,QAC7BA,EAAKR,GAAKY,KAAKC,IAAIL,EAAKR,GAAGW,IAH/B,kDAKqBjD,KAAKJ,OAL1B,IAKE,2BAA+B,CAAC,IAArBwD,EAAoB,QAC7BA,EAAKZ,KAAOU,KAAKC,IAAIC,EAAKZ,KAAKS,GAC/BG,EAAKX,GAAKS,KAAKC,IAAIC,EAAKX,GAAGQ,IAP/B,mCArJF,KAiKA,SAASnC,EAAc8B,EAAMS,GAGzB,IADA,IAAIpD,EAAI,GACC0C,EAAE,EAAEA,EAAEU,EAAUV,IACrB1C,GAAO,KAEXA,GAAK,IAAI2C,EAAM/B,KAAK,IALxB,oBAM2B+B,EAAMU,WANjC,IAMI,2BAAwC,CAAC,IAA9BC,EAA6B,QACpCtD,GAAK,GAAF,OAAKsD,EAASC,OAAd,aAAyBD,EAASvC,MAAlC,OAPX,8BASI,GAAG4B,EAAMa,MAAM9C,OAAO,GAAkB,IAAbiC,EAAMc,MACjC,CACIzD,GAAK,IACLA,GAAK2C,EAAMc,MAFf,oBAGuBd,EAAMa,OAH7B,IAGI,2BAAgC,CAC5BxD,GAAM,KAAOa,EADe,QACIuC,EAAU,IAJlD,8BAMI,GAAGT,EAAMa,MAAM9C,OAAS,EACxB,CACIV,GAAO,KACP,IAAS0C,EAAE,EAAEA,EAAEU,EAAUV,IACrB1C,GAAO,KAGfA,GAAK,KAAK2C,EAAM/B,KAAK,SAIrBZ,GAAO,KAEX,OAAOA,EAGJ,SAAS0D,EAAUC,EAAUhD,GAElC,GAAGgD,EAAUjD,OAAS,EACtB,CAAC,IAAD,gBACyBiD,GADzB,IACE,2BAAkC,CAAC,IAC7BC,EAD4B,QACRpD,SAASG,GACjC,GAAoB,GAAjBiD,EAASlD,OAEV,MAAO,GAET,QAAqBmD,GAAlBD,EAAS,GAAGhD,KAEb,OAAOgD,EAAS,GAAGhD,MAEjB,KAAKjC,EAAK8B,KACRE,EAAQiD,EACR,MACF,KAAKjF,EAAKM,QACV,KAAKN,EAAKO,QACR,IADF,EACM4E,EAAK,GADX,cAGwBF,GAHxB,IAGE,2BAAgC,CAAC,IAAtBG,EAAqB,QAC3BpD,EAAQoD,EAAQhD,MAAM,KAEvB+C,EAAK1B,KAAKzB,EAAQoD,EAAQhD,MAAM,MANtC,8BAUEJ,EAAUmD,IAzBpB,+BA+BA,OAAOnD,EAGF,SAASqD,EAAgBC,EAAYC,GAE1C,IADF,EACMC,EAAWF,EAAYvD,OAAO,EAAIuD,EAAYA,EAAYvD,OAAO,GAAGyD,SAAW,EADrF,cAE2BD,GAF3B,IAEE,2BAAsC,CAAC,IAA5BE,EAA2B,QACpCA,EAAWC,YAAYF,GACvBF,EAAY7B,KAAKgC,GACjBD,KALJ,8BAOE,OAAOF,EAGF,SAASK,EAAqBL,EAAYC,GAE/C,IADF,EACMK,EAAe,GACfC,EAAO,EAFb,cAG0BP,GAH1B,IAGE,2BAAqC,CACnC,IADoC,IAA3BQ,EAA0B,QAC5BD,EAAON,EAAYxD,QACrB+D,EAAUN,SAAWD,EAAYM,GAAML,SADVK,IAG9BD,EAAanC,KAAK8B,EAAYM,IAOlCD,EAAanC,KAAKqC,IAdtB,8BAgBE,KAAOD,EAAON,EAAYxD,OAAQ8D,IAChCD,EAAanC,KAAK8B,EAAYM,IAEhC,OAAOD,I,yGCnVH7F,EAAML,EAAQ,GAChB,EAAuCA,EAAQ,GAA9CM,EAAL,EAAKA,KAIQ+F,GAJb,EAAWtF,gBAAX,EAA4BR,YACFP,EAAQ,IAA1BC,cACYD,EAAQ,GAApBsG,QAER,WAEI,WAAYC,EAAUC,EAAGC,GACxB,oBACG/E,KAAK8E,GAAGA,EACR9E,KAAK6E,UAAUA,EACf7E,KAAK+E,QAAQA,EANrB,4CASI,SAASC,GAEL,IADJ,EACQ5E,EAAW,IAAI6E,IADvB,cAGoBD,GAHpB,IAGI,2BAAyB,CAAC,IAAjBE,EAAgB,QACjBC,EAASnF,KAAK6E,UAAUpE,SAAS,CAACyE,IAClCE,EAASpF,KAAK+E,QAAQtE,SAAS,CAACyE,IACpCG,EAAOjF,EAASJ,KAAK8E,GAAGK,EAAOC,EAAOJ,IAN9C,8BAQI,IARJ,EAQQjB,EAAO,GARf,cAS2B3D,EAASkF,UATpC,IASI,2BAA0C,CAAC,IAAhChF,EAA+B,QACtCyD,EAAK1B,KAAK/B,IAVlB,8BAYI,OAAOyD,IAtBf,sBAyBI,SAAS9B,EAAWC,EAAWC,GAE3B,IAAIoD,EAAgB,GAChB7C,EAAa,CAACJ,GAAGH,EAASC,IAAIG,MAAMvC,KAAK8E,IAC7CS,EAAclD,KAAKK,GAAYT,EAAWI,KAAKK,GAAYP,EAASC,MACpE,IAJJ,EAIQQ,EAAQ5C,KAAK6E,UAAUhC,SAASZ,EAAWC,EAAWC,GAJ9D,cAKuBS,GALvB,IAKI,2BAA0B,CAAC,IAAhBE,EAAe,QACtBZ,EAAWG,KAAK,CAACG,KAAKE,EAAWJ,GAAGG,GAAGK,EAAKR,MANpD,8BAQIM,EAAM5C,KAAK+E,QAAQlC,SAASZ,EAAWC,EAAWC,GARtD,oBASuBS,GATvB,IASI,2BAA0B,CAAC,IAAhBE,EAAe,QACtBZ,EAAWG,KAAK,CAACG,KAAKE,EAAWJ,GAAGG,GAAGK,EAAKR,MAVpD,8BAYI,OAAOiD,IAtCf,oBAyCI,WAEI,IAAIC,EAIAC,EAHApE,EAAM,GACNqE,EAAS1F,KAAK6E,UAAU1D,SACxBwE,EAAS3F,KAAK+E,QAAQ5D,SAI1B,GAFAE,GAAG,yBAEAqE,EAAO7E,MAAQjC,EAAK8B,MAAQgF,EAAO7E,MAAQjC,EAAKU,SAAWoG,EAAO7E,MAAQjC,EAAK+C,OAASgE,EAAO9E,MAAQjC,EAAK8B,MAAQiF,EAAO9E,MAAQjC,EAAKU,SAAWqG,EAAO9E,MAAQjC,EAAK+C,MAC1K,CACyBiE,EAArBH,EAAM9G,EAAI6C,UAAsB,IAAID,EAAK5C,EAAI6C,UAAeqE,EAAKlH,EAAI6C,UAAesE,EAAKnH,EAAI6C,UACzFuE,EAAKpH,EAAIqH,SAAcC,EAAKtH,EAAIqH,SAcpC,GAbA3E,GAAG,UAAOoE,EAAP,aACHpE,GAAG,UAAOE,EAAP,iBACHF,GAAG,UAAOwE,EAAP,cACHxE,GAAG,UAAO4E,EAAP,OACH5E,GAAG,UAAOyE,EAAP,iCAAkCD,EAAlC,SACHxE,GAAG,aAAUyE,EAAV,wBAA4BC,EAA5B,OACH1E,GAAG,qBAAkBE,EAAlB,eAA2BuE,EAA3B,OACHzE,GAAG,UAAOE,EAAP,cAAeA,EAAf,WACHF,GAAG,UAAOwE,EAAP,cAAeA,EAAf,WACHxE,GAAG,eAAY4E,EAAZ,OACH5E,GAAG,UAAO0E,EAAP,OACH1E,GAAG,qBAAkBE,EAAlB,aAEY,IAAZmE,EAAOrE,KAAWqE,EAAO7E,MAAQjC,EAAKU,QACzC,CACQuG,EAAKlH,EAAI6C,UAAesE,EAAKnH,EAAI6C,UAArC,IAAqD0E,EAAKvH,EAAI6C,UAC1D2E,EAAKxH,EAAI6C,UAAe4E,EAAKzH,EAAI6C,UAAeoE,EAAMjH,EAAI6C,UAC1D6E,EAAM1H,EAAI6C,UACV8E,EAAK3H,EAAI6C,UAAe+E,EAAK5H,EAAI6C,UAAegF,EAAK7H,EAAI6C,UAEXiF,GAA9CV,EAAKpH,EAAIqH,SAAcC,EAAKtH,EAAIqH,SAAmBrH,EAAIqH,UACvDU,EAAK/H,EAAIqH,SAAcW,EAAKhI,EAAIqH,SAAcY,EAAKjI,EAAIqH,SAE3D3E,GAAG,UAAOwE,EAAP,cAAeJ,EAAf,QACHpE,GAAG,UAAO4E,EAAP,OACH5E,GAAG,UAAOyE,EAAP,iCAAkCD,EAAlC,SACHxE,GAAG,aAAUyE,EAAV,wBAA4BC,EAA5B,OACH1E,GAAG,UAAOwE,EAAP,cAAeA,EAAf,WACHxE,GAAG,eAAY4E,EAAZ,OACH5E,GAAG,UAAO0E,EAAP,OACH1E,GAAG,gBAAawE,EAAb,WACHxE,GAAG,UAAO6E,EAAP,iBACH7E,GAAG,UAAO8E,EAAP,cACH9E,GAAG,UAAOqF,EAAP,OACHrF,GAAG,UAAO+E,EAAP,yBAA0BF,EAA1B,QACH7E,GAAG,aAAU+E,EAAV,wBAA4BK,EAA5B,OACHpF,GAAG,6BAA0B8E,EAA1B,aAAiCC,EAAjC,OACH/E,GAAG,UAAO6E,EAAP,cAAeA,EAAf,WACH7E,GAAG,UAAO8E,EAAP,cAAeA,EAAf,WACH9E,GAAG,eAAYqF,EAAZ,OACHrF,GAAG,UAAOoF,EAAP,OACHpF,GAAG,6BAA0B8E,EAA1B,aACH9E,GAAG,UAAOuE,EAAP,aACHvE,GAAG,UAAOgF,EAAP,YACHhF,GAAG,eAAY6E,EAAZ,WAEH7E,GAAOqE,EAAOrE,IACdA,GAAG,UAAOiF,EAAP,cAAeZ,EAAO1E,MAAtB,OACHK,GAAG,UAAOkF,EAAP,cAAeX,EAAf,OACHvE,GAAG,UAAOuF,EAAP,OACHvF,GAAG,UAAOmF,EAAP,iCAAkCF,EAAlC,QACHjF,GAAG,aAAUmF,EAAV,wBAA4BG,EAA5B,OACHtF,GAAG,6BAA0BkF,EAA1B,eAAmCC,EAAnC,OACHnF,GAAG,UAAOiF,EAAP,cAAeA,EAAf,WACHjF,GAAG,UAAOkF,EAAP,cAAeA,EAAf,WACHlF,GAAG,eAAYuF,EAAZ,OACHvF,GAAG,UAAOsF,EAAP,OACHtF,GAAG,6BAA0BkF,EAA1B,aAEHlF,GAAG,eAAYgF,EAAZ,OAGP,GAAe,IAAZX,EAAOrE,MAAYqE,EAAO7E,MAAQjC,EAAK8B,MAAQgF,EAAO7E,MAAQjC,EAAK+C,OACtE,CACQkE,EAAKlH,EAAI6C,UAAesE,EAAKnH,EAAI6C,UACjC0E,EAAKvH,EAAI6C,UAAe2E,EAAKxH,EAAI6C,UACjC4E,EAAKzH,EAAI6C,UAAeoE,EAAMjH,EAAI6C,UAClC6E,EAAM1H,EAAI6C,UAEVuE,EAAKpH,EAAIqH,SAAcC,EAAKtH,EAAIqH,SAChCS,EAAK9H,EAAIqH,SAAcU,EAAK/H,EAAIqH,SAEpC3E,GAAG,UAAOwE,EAAP,cAAeJ,EAAf,QACHpE,GAAG,UAAO4E,EAAP,OACH5E,GAAG,UAAOyE,EAAP,iCAAkCD,EAAlC,SACHxE,GAAG,aAAUyE,EAAV,wBAA4BC,EAA5B,OACH1E,GAAG,UAAOwE,EAAP,cAAeA,EAAf,WACHxE,GAAG,eAAY4E,EAAZ,OACH5E,GAAG,UAAO0E,EAAP,OACH1E,GAAG,gBAAawE,EAAb,WACHxE,GAAG,UAAO6E,EAAP,iBACH7E,GAAG,UAAO8E,EAAP,cACH9E,GAAG,UAAOqF,EAAP,OACHrF,GAAG,UAAO+E,EAAP,yBAA0BF,EAA1B,QACH7E,GAAG,aAAU+E,EAAV,wBAA4BK,EAA5B,OACHpF,GAAG,6BAA0B8E,EAA1B,aAAiCC,EAAjC,OACH/E,GAAG,UAAO6E,EAAP,cAAeA,EAAf,WACH7E,GAAG,UAAO8E,EAAP,cAAeA,EAAf,WACH9E,GAAG,eAAYqF,EAAZ,OACHrF,GAAG,UAAOoF,EAAP,OACHpF,GAAG,6BAA0B8E,EAA1B,aACH9E,GAAG,UAAOuE,EAAP,aACHvE,GAAG,UAAOgF,EAAP,YACHhF,GAAG,eAAY6E,EAAZ,WAEH7E,GAAOqE,EAAOrE,IACdA,GAAG,eAAYgF,EAAZ,OAGP,GAAe,IAAZV,EAAOtE,KAAWsE,EAAO9E,MAAQjC,EAAKU,QACzC,CACQgH,EAAK3H,EAAI6C,UAAe+E,EAAK5H,EAAI6C,UAAgBgF,EAAK7H,EAAI6C,UAA9D,IACIqF,EAAKlI,EAAI6C,UAAesF,EAAMnI,EAAI6C,UAAeuF,EAAMpI,EAAI6C,UAE3DwF,GADAX,EAAM1H,EAAI6C,UACJ7C,EAAI6C,WAAeyF,EAAMtI,EAAI6C,UAAe0F,EAAMvI,EAAI6C,UAG5D2F,GADAR,EAAKhI,EAAIqH,SAAcY,EAAKjI,EAAIqH,SAC3BrH,EAAIqH,UAAcoB,EAAKzI,EAAIqH,SAChCqB,EAAK1I,EAAIqH,SAAcsB,EAAK3I,EAAIqH,SAE3B3E,GAANuE,EAAS,UAAOU,EAAP,cAAeV,EAAf,OACF,UAAOU,EAAP,cAAeb,EAAf,OACVpE,GAAG,UAAOuF,EAAP,OACHvF,GAAG,UAAOkF,EAAP,iCAAkCD,EAAlC,QACHjF,GAAG,aAAUkF,EAAV,wBAA4BI,EAA5B,OACHtF,GAAG,UAAOiF,EAAP,cAAeA,EAAf,WACHjF,GAAG,eAAYuF,EAAZ,OACHvF,GAAG,UAAOsF,EAAP,OACHtF,GAAG,gBAAaiF,EAAb,WACHjF,GAAG,UAAOmF,EAAP,gBACHnF,GAAG,UAAOwF,EAAP,cACHxF,GAAG,UAAO8F,EAAP,OACH9F,GAAG,UAAOyF,EAAP,yBAA2BN,EAA3B,QACHnF,GAAG,aAAUyF,EAAV,wBAA6BM,EAA7B,OACH/F,GAAG,6BAA0BwF,EAA1B,aAAiCC,EAAjC,OACHzF,GAAG,UAAOmF,EAAP,cAAeA,EAAf,WACHnF,GAAG,UAAOwF,EAAP,cAAeA,EAAf,WACHxF,GAAG,eAAY8F,EAAZ,OACH9F,GAAG,UAAO+F,EAAP,OACH/F,GAAG,6BAA0BwF,EAA1B,aACHxF,GAAG,UAAO0F,EAAP,aACH1F,GAAG,UAAOgF,EAAP,YACHhF,GAAG,eAAYmF,EAAZ,WAEHnF,GAAOsE,EAAOtE,IACdA,GAAG,UAAO2F,EAAP,cAAgBrB,EAAO3E,MAAvB,OACHK,GAAG,UAAO4F,EAAP,cAAgBF,EAAhB,OACH1F,GAAG,UAAOgG,EAAP,OACHhG,GAAG,UAAO6F,EAAP,iCAAmCF,EAAnC,QACH3F,GAAG,aAAU6F,EAAV,wBAA6BI,EAA7B,OACHjG,GAAG,6BAA0B4F,EAA1B,eAAoCC,EAApC,OACH7F,GAAG,UAAO2F,EAAP,cAAgBA,EAAhB,WACH3F,GAAG,UAAO4F,EAAP,cAAgBA,EAAhB,WACH5F,GAAG,eAAYgG,EAAZ,OACHhG,GAAG,UAAOiG,EAAP,OACHjG,GAAG,6BAA0B4F,EAA1B,aAEH5F,GAAG,eAAYgF,EAAZ,OAGP,GAAiB,IAAdV,EAAOtE,MAAcsE,EAAO9E,MAAQjC,EAAK8B,MAAQiF,EAAO9E,MAAQjC,EAAK+C,OACxE,CACQ2E,EAAK3H,EAAI6C,UAAe+E,EAAK5H,EAAI6C,UACjCgF,EAAK7H,EAAI6C,UAAeqF,EAAKlI,EAAI6C,UACjCsF,EAAMnI,EAAI6C,UAAeuF,EAAMpI,EAAI6C,UACnC6E,EAAM1H,EAAI6C,UAEVmF,EAAKhI,EAAIqH,SAAcY,EAAKjI,EAAIqH,SAChCmB,EAAKxI,EAAIqH,SAAcoB,EAAKzI,EAAIqH,SAE3B3E,GAANuE,EAAS,UAAOU,EAAP,cAAeV,EAAf,OACF,UAAOU,EAAP,cAAeb,EAAf,OACVpE,GAAG,UAAOuF,EAAP,OACHvF,GAAG,UAAOkF,EAAP,iCAAkCD,EAAlC,QACHjF,GAAG,aAAUkF,EAAV,wBAA4BI,EAA5B,OACHtF,GAAG,UAAOiF,EAAP,cAAeA,EAAf,WACHjF,GAAG,eAAYuF,EAAZ,OACHvF,GAAG,UAAOsF,EAAP,OACHtF,GAAG,gBAAaiF,EAAb,WACHjF,GAAG,UAAOmF,EAAP,gBACHnF,GAAG,UAAOwF,EAAP,cACHxF,GAAG,UAAO8F,EAAP,OACH9F,GAAG,UAAOyF,EAAP,yBAA2BN,EAA3B,QACHnF,GAAG,aAAUyF,EAAV,wBAA6BM,EAA7B,OACH/F,GAAG,6BAA0BwF,EAA1B,aAAiCC,EAAjC,OACHzF,GAAG,UAAOmF,EAAP,cAAeA,EAAf,WACHnF,GAAG,UAAOwF,EAAP,cAAeA,EAAf,WACHxF,GAAG,eAAY8F,EAAZ,OACH9F,GAAG,UAAO+F,EAAP,OACH/F,GAAG,6BAA0BwF,EAA1B,aACHxF,GAAG,UAAO0F,EAAP,aACH1F,GAAG,UAAOgF,EAAP,YACHhF,GAAG,eAAYmF,EAAZ,WAEHnF,GAAOsE,EAAOtE,IACdA,GAAG,eAAYgF,EAAZ,QAcX,GAVe,IAAZX,EAAOrE,KAAWqE,EAAO7E,MAAQjC,EAAKU,SAAWoG,EAAO7E,MAAQjC,EAAK8B,MAAQgF,EAAO7E,MAAQjC,EAAK+C,QAEhGN,GAAOqE,EAAOrE,KAGH,IAAZsE,EAAOtE,KAAWsE,EAAO9E,MAAQjC,EAAKU,SAAWqG,EAAO9E,MAAQjC,EAAK8B,MAAQiF,EAAO9E,MAAQjC,EAAK+C,QAEhGN,GAAOsE,EAAOtE,KAGfqE,EAAO7E,MAAQjC,EAAKU,UAEnBkG,EAAYI,EACTD,EAAO9E,MAAQjC,EAAKU,SACvB,CACI,IAAIiI,EAAM5I,EAAI6C,UAAegG,EAAM7I,EAAI6C,UAAeiG,EAAM9I,EAAI6C,UAAekG,EAAM/I,EAAI6C,UAErFmG,EAAMhJ,EAAIqH,SAAc4B,EAAMjJ,EAAIqH,SAAc6B,EAAMlJ,EAAIqH,SAAc8B,EAAMnJ,EAAIqH,SAAc+B,EAAMpJ,EAAIqH,SAQ9G,OANA3E,GAAG,UAAOkG,EAAP,cAAgB3B,EAAhB,OACHvE,GAAG,UAAOmG,EAAP,cAAgBT,EAAhB,OACH1F,GAAG,UAAO0G,EAAP,OACH1G,GAAG,UAAOoG,EAAP,iCAAmCF,EAAnC,QACHlG,GAAG,UAAOqG,EAAP,iCAAmCF,EAAnC,QACHnG,GAAG,aAAUoG,EAAV,wBAA6BE,EAA7B,OACI3H,KAAK8E,IAER,IAAK,MACDzD,GAAG,aAAUoG,EAAV,uBAA4BG,EAA5B,OACHvG,GAAG,aAAUqG,EAAV,uBAA4BE,EAA5B,OACHvG,GAAG,eAAYwG,EAAZ,OACH,MACJ,IAAK,KACDxG,GAAG,aAAUoG,EAAV,uBAA4BI,EAA5B,OACHxG,GAAG,aAAUqG,EAAV,uBAA4BG,EAA5B,OAGXxG,GAAG,UAAOuG,EAAP,OACHvG,GAAG,wBACHA,GAAG,iBACHA,GAAG,yBACHA,GAAG,eAAYyG,EAAZ,OAEHzG,GAAG,UAAOwG,EAAP,OACHxG,GAAG,wBACHA,GAAG,iBACHA,GAAG,yBAEHA,GAAG,UAAOyG,EAAP,OACHzG,GAAG,UAAOkG,EAAP,cAAgBA,EAAhB,WACHlG,GAAG,UAAOmG,EAAP,cAAgBA,EAAhB,WACHnG,GAAG,eAAY0G,EAAZ,OACH1G,GAAG,UAAOsG,EAAP,OAEH,IAAIK,EAAMrJ,EAAI6C,UAAeyG,EAAMtJ,EAAI6C,UAAe0G,EAAMvJ,EAAI6C,UAC5D2G,EAAMxJ,EAAIqH,SAAcoC,EAAMzJ,EAAIqH,SAEtC3E,GAAG,UAAO2G,EAAP,YACH3G,GAAG,UAAO8G,EAAP,QACH9G,GAAG,UAAO4G,EAAP,yBAA2BD,EAA3B,SACH3G,GAAG,cAAW4G,EAAX,wBAA8BG,EAA9B,QACH/G,GAAG,UAAO6G,EAAP,cAAgBtC,EAAhB,cAAyBoC,EAAzB,QACH3G,GAAG,6BAA0B6G,EAA1B,eAAoCD,EAApC,OACH5G,GAAG,UAAO2G,EAAP,cAAgBA,EAAhB,YACH3G,GAAG,eAAY8G,EAAZ,QAGH9G,GAAG,UAAO+G,EAAP,QACH/G,GAAG,UAAO6G,EAAP,cAAgBtC,EAAhB,cAAyBoC,EAAzB,OACH3G,GAAG,6BAA0B6G,EAA1B,aACH7G,GAAG,aACHA,GAAG,0BAQX,OAJGqE,EAAO7E,MAAQjC,EAAK8B,MAAQgF,EAAO7E,MAAQjC,EAAKU,SAAWoG,EAAO7E,MAAQjC,EAAK+C,OAASgE,EAAO9E,MAAQjC,EAAK8B,MAAQiF,EAAO9E,MAAQjC,EAAKU,SAAWqG,EAAO9E,MAAQjC,EAAK+C,QAEtKN,GAAG,gBAAaoE,EAAb,QAEA,CAACpE,IAAIA,EAAIR,KAAKjC,EAAKU,QAAQ0B,MAAMwE,OAlUhD,MAsUA,SAASH,EAAOgD,EAAOvD,EAAGwD,EAASC,EAASC,GAGxC,OAAO1D,GACH,IAAK,MAAL,oBACsBwD,GADtB,IACI,2BAA4B,CAAC,IAAD,EAAjBG,EAAiB,sBACNF,GADM,IACxB,2BAA4B,CAAC,IAAlBG,EAAiB,QACxB,GAAGD,EAAI5H,MAAMjC,EAAK8B,KAClB,CACI,GAAGgI,EAAI7H,MAAMjC,EAAK8B,KAClB,CACI,GAAG+H,EAAI1H,SAAW2H,EAAI3H,QACtB,CACIsH,EAAOM,IAAIF,EAAI1H,QAAQ0H,GACvB,MAEJ,MAEJJ,EAAOM,IAAIF,EAAI1H,QAAQ0H,GACvB,MAEC,GAAGC,EAAI7H,MAAMjC,EAAK8B,KACvB,CACI2H,EAAOM,IAAIF,EAAI1H,QAAQ2H,GACvB,MAlBoB,oBAoBDF,GApBC,IAoBxB,2BAA8B,CAAC,IAApBlI,EAAmB,QAC1B+H,EAAOM,IAAIrI,EAASS,QAAQT,IArBR,8BAuBxB,QAxBoB,gCADhC,8BA4BI,MACJ,IAAK,KAAL,oBACsBgI,GADtB,IACI,2BAA4B,CAAC,IAAlBG,EAAiB,QACxB,GAAGA,EAAI5H,MAAMjC,EAAK8B,KAClB,CAAC,IAAD,gBAC2B8H,GAD3B,IACI,2BAA8B,CAAC,IAApBlI,EAAmB,QAC1B+H,EAAOM,IAAIrI,EAASS,QAAQT,IAFpC,8BAII,OAEJ+H,EAAOM,IAAIF,EAAI1H,QAAQ0H,IAT/B,kDAWsBF,GAXtB,IAWI,2BAA4B,CAAC,IAAlBG,EAAiB,QACxB,GAAGA,EAAI7H,MAAMjC,EAAK8B,KAClB,CAAC,IAAD,gBAC2B8H,GAD3B,IACI,2BAA8B,CAAC,IAApBlI,EAAmB,QAC1B+H,EAAOM,IAAIrI,EAASS,QAAQT,IAFpC,8BAII,OAEJ+H,EAAOM,IAAID,EAAI3H,QAAQ2H,IAnB/B,+BAuBJ,OAvDc,I,yOC3UZ/J,EAAML,EAAQ,GACpB,EAAsDA,EAAQ,GAAtDU,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcL,EAAhC,EAAgCA,KAAMC,EAAtC,EAAsCA,YAC9BN,EAAkBD,EAAQ,IAA1BC,cACAqG,EAAYtG,EAAQ,GAApBsG,QAEKgE,EAAb,WAEI,WAAa/D,EAAUC,EAAGC,GAAS,oBAC/B/E,KAAK8E,GAAGA,EACR9E,KAAK6E,UAAYA,EACjB7E,KAAK+E,QAAUA,EALvB,4CAQI,SAASC,GACL,IADa,EACTpE,EAAU,GAEVuE,EAASnF,KAAK6E,UAAUpE,SAASuE,GACjCI,EAASpF,KAAK+E,QAAQtE,SAASuE,GAJtB,cAMGG,GANH,IAMb,2BAAuB,CAAC,IAAD,EAAdsD,EAAc,sBACHrD,GADG,IACnB,2BAAuB,CAAC,IAAfsD,EAAc,QACfG,EAAWxD,EAAOoD,EAAKzI,KAAK8E,GAAI4D,QACrB5E,GAAV+E,GAAiC,MAAVA,GAAoB7I,KAAK8I,SAASlI,EAAQiI,IAClEjI,EAAQyB,KACJ,IAAIuC,EACA3F,EAAawJ,EAAI5H,MAAM6H,EAAI7H,MAC3BgI,KAPG,gCANV,8BAmBb,OAAOjI,IA3Bf,oBA8BI,WACI,IAGI6E,EAwGAsD,EAmCAC,EA9IA3H,EAAM,GACNqE,EAAS1F,KAAK6E,UAAU1D,SACxBwE,EAAS3F,KAAK+E,QAAQ5D,SAG1B,GADAE,GAAG,wBACAqE,EAAO7E,MAAQjC,EAAK8B,MAAQgF,EAAO7E,MAAQjC,EAAK+C,OAASgE,EAAO9E,MAAQjC,EAAK8B,MAAQiF,EAAO9E,MAAQjC,EAAK+C,MAC5G,CACI8D,EAAM9G,EAAI6C,UAAW,IAAID,EAAK5C,EAAI6C,UAAeqE,EAAKlH,EAAI6C,UAAesE,EAAKnH,EAAI6C,UAC9EuE,EAAKpH,EAAIqH,SAAcC,EAAKtH,EAAIqH,SAcpC,GAbA3E,GAAG,UAAOoE,EAAP,aACHpE,GAAG,UAAOE,EAAP,iBACHF,GAAG,UAAOwE,EAAP,cACHxE,GAAG,UAAO4E,EAAP,OACH5E,GAAG,UAAOyE,EAAP,iCAAkCD,EAAlC,SACHxE,GAAG,aAAUyE,EAAV,wBAA4BC,EAA5B,OACH1E,GAAG,qBAAkBE,EAAlB,eAA2BuE,EAA3B,OACHzE,GAAG,UAAOE,EAAP,cAAeA,EAAf,WACHF,GAAG,UAAOwE,EAAP,cAAeA,EAAf,WACHxE,GAAG,eAAY4E,EAAZ,OACH5E,GAAG,UAAO0E,EAAP,OACH1E,GAAG,qBAAkBE,EAAlB,aAEY,IAAZmE,EAAOrE,MAAYqE,EAAO7E,MAAQjC,EAAK8B,MAAQgF,EAAO7E,MAAQjC,EAAK+C,OACtE,CACQkE,EAAKlH,EAAI6C,UAAesE,EAAKnH,EAAI6C,UAArC,IACI0E,EAAKvH,EAAI6C,UAAe2E,EAAKxH,EAAI6C,UACjC4E,EAAKzH,EAAI6C,UAAeoE,EAAMjH,EAAI6C,UAClC6E,EAAM1H,EAAI6C,UAEViF,GADAV,EAAKpH,EAAIqH,SAAcC,EAAKtH,EAAIqH,SAC3BrH,EAAIqH,UAAcU,EAAK/H,EAAIqH,SAEpC3E,GAAG,UAAOwE,EAAP,cAAeJ,EAAf,QACHpE,GAAG,UAAO4E,EAAP,OACH5E,GAAG,UAAOyE,EAAP,iCAAkCD,EAAlC,SACHxE,GAAG,aAAUyE,EAAV,wBAA4BC,EAA5B,OACH1E,GAAG,UAAOwE,EAAP,cAAeA,EAAf,WACHxE,GAAG,eAAY4E,EAAZ,OACH5E,GAAG,UAAO0E,EAAP,OACH1E,GAAG,gBAAawE,EAAb,WACHxE,GAAG,UAAO6E,EAAP,iBACH7E,GAAG,UAAO8E,EAAP,cACH9E,GAAG,UAAOqF,EAAP,OACHrF,GAAG,UAAO+E,EAAP,yBAA0BF,EAA1B,QACH7E,GAAG,aAAU+E,EAAV,wBAA4BK,EAA5B,OACHpF,GAAG,6BAA0B8E,EAA1B,aAAiCC,EAAjC,OACH/E,GAAG,UAAO6E,EAAP,cAAeA,EAAf,WACH7E,GAAG,UAAO8E,EAAP,cAAeA,EAAf,WACH9E,GAAG,eAAYqF,EAAZ,OACHrF,GAAG,UAAOoF,EAAP,OACHpF,GAAG,6BAA0B8E,EAA1B,aACH9E,GAAG,UAAOuE,EAAP,aACHvE,GAAG,UAAOgF,EAAP,YACHhF,GAAG,eAAY6E,EAAZ,WAEH7E,GAAOqE,EAAOrE,IACdA,GAAG,eAAYgF,EAAZ,OAIP,GAAiB,IAAdV,EAAOtE,MAAcsE,EAAO9E,MAAQjC,EAAK8B,MAAQiF,EAAO9E,MAAQjC,EAAK+C,OACxE,CACI,IAAI2E,EAAK3H,EAAI6C,UAAe+E,EAAK5H,EAAI6C,UACjCgF,EAAK7H,EAAI6C,UAAeqF,EAAKlI,EAAI6C,UACjCsF,EAAMnI,EAAI6C,UAAeuF,EAAMpI,EAAI6C,UAGnCmF,GAFAN,EAAM1H,EAAI6C,UAEL7C,EAAIqH,UAAcY,EAAKjI,EAAIqH,SAChCmB,EAAKxI,EAAIqH,SAAcoB,EAAKzI,EAAIqH,SAEpC3E,GAAG,UAAOiF,EAAP,cAAeb,EAAf,OACHpE,GAAG,UAAOuF,EAAP,OACHvF,GAAG,UAAOkF,EAAP,iCAAkCD,EAAlC,QACHjF,GAAG,aAAUkF,EAAV,wBAA4BI,EAA5B,OACHtF,GAAG,UAAOiF,EAAP,cAAeA,EAAf,WACHjF,GAAG,eAAYuF,EAAZ,OACHvF,GAAG,UAAOsF,EAAP,OACHtF,GAAG,gBAAaiF,EAAb,WACHjF,GAAG,UAAOmF,EAAP,gBACHnF,GAAG,UAAOwF,EAAP,cACHxF,GAAG,UAAO8F,EAAP,OACH9F,GAAG,UAAOyF,EAAP,yBAA2BN,EAA3B,QACHnF,GAAG,aAAUyF,EAAV,wBAA6BM,EAA7B,OACH/F,GAAG,6BAA0BwF,EAA1B,aAAiCC,EAAjC,OACHzF,GAAG,UAAOmF,EAAP,cAAeA,EAAf,WACHnF,GAAG,UAAOwF,EAAP,cAAeA,EAAf,WACHxF,GAAG,eAAY8F,EAAZ,OACH9F,GAAG,UAAO+F,EAAP,OACH/F,GAAG,6BAA0BwF,EAA1B,aACHxF,GAAG,UAAO0F,EAAP,aACH1F,GAAG,UAAOgF,EAAP,YACHhF,GAAG,eAAYmF,EAAZ,WAEHnF,GAAOsE,EAAOtE,IACdA,GAAG,eAAYgF,EAAZ,QAeX,GAXe,IAAZX,EAAOrE,KAAWqE,EAAO7E,MAAQjC,EAAK8B,MAAQgF,EAAO7E,MAAQjC,EAAK+C,QAEjEN,GAAOqE,EAAOrE,KAGH,IAAZsE,EAAOtE,KAAWsE,EAAO9E,MAAQjC,EAAK8B,MAAQiF,EAAO9E,MAAQjC,EAAK+C,QAEjEN,GAAOsE,EAAOtE,KAIfqE,EAAO7E,MAAQjC,EAAKO,SAAWuG,EAAO7E,MAAQjC,EAAKM,QAElD6J,EAAMrD,EAAO1E,WAGZ,GAAG0E,EAAO7E,MAAQjC,EAAK8B,KAC5B,CACI,IAAIuI,EAAIzH,oBAAcwF,EAAMxF,oBAAcyF,EAAMzF,oBAAUuH,EAAMvH,oBAChEH,GAAG,UAAO4H,EAAP,iCAAmCrD,EAAnC,QACHvE,GAAG,UAAO4H,EAAP,cAAgBA,EAAhB,WACH5H,GAAG,UAAO2F,EAAP,2BAA6BiC,EAA7B,QACH5H,GAAG,iBACHA,GAAG,UAAO4F,EAAP,gBACH5F,GAAG,qBAAkB4F,EAAlB,eAA4BD,EAA5B,OACHrI,EAAI8C,aAAa9C,EAAI+C,YAAYwH,UAAW,EAC5C7H,GAAG,eACHA,GAAG,UAAO0H,EAAP,wBACH1H,GAAG,sBAEF,GAAGqE,EAAO7E,MAAQjC,EAAK+C,MAC5B,CACQsH,EAAIzH,oBAAcwF,EAAMxF,oBAAcyF,EAAMzF,oBAAUuH,EAAMvH,oBAChEH,GAAG,UAAO4H,EAAP,iCAAmCrD,EAAnC,QACHvE,GAAG,UAAO4H,EAAP,cAAgBA,EAAhB,WACH5H,GAAG,UAAO2F,EAAP,kCAAoCiC,EAApC,QACH5H,GAAG,iBACHA,GAAG,UAAO4F,EAAP,gBACH5F,GAAG,qBAAkB4F,EAAlB,eAA4BD,EAA5B,OACHrI,EAAI8C,aAAa9C,EAAI+C,YAAYwH,UAAW,EAC5C7H,GAAG,eACHA,GAAG,UAAO0H,EAAP,wBACH1H,GAAG,iBAIP,GAAGsE,EAAO9E,MAAQjC,EAAKO,QAEnB6J,EAAMrD,EAAO3E,WAGZ,GAAG2E,EAAO9E,MAAQjC,EAAK8B,KAC5B,CACI,IAAIyI,EAAI3H,oBAAe0F,EAAM1F,oBAAc4H,EAAM5H,oBAAUwH,EAAMxH,oBACjEH,GAAG,UAAO8H,EAAP,iCAAmCpC,EAAnC,QACH1F,GAAG,UAAO8H,EAAP,cAAgBA,EAAhB,WACH9H,GAAG,UAAO6F,EAAP,2BAA6BiC,EAA7B,QACH9H,GAAG,iBACHA,GAAG,UAAO+H,EAAP,gBACH/H,GAAG,qBAAkB+H,EAAlB,eAA4BlC,EAA5B,OACHvI,EAAI8C,aAAa9C,EAAI+C,YAAYwH,UAAW,EAC5C7H,GAAG,eACHA,GAAG,UAAO2H,EAAP,wBACH3H,GAAG,sBAEF,GAAGsE,EAAO9E,MAAQjC,EAAK+C,MAC5B,CACQwH,EAAI3H,oBAAe0F,EAAM1F,oBAAc4H,EAAM5H,oBAAUwH,EAAMxH,oBACjEH,GAAG,UAAO8H,EAAP,iCAAmCpC,EAAnC,QACH1F,GAAG,UAAO8H,EAAP,cAAgBA,EAAhB,WACH9H,GAAG,UAAO6F,EAAP,kCAAoCiC,EAApC,QACH9H,GAAG,iBACHA,GAAG,UAAO+H,EAAP,gBACH/H,GAAG,qBAAkB+H,EAAlB,eAA4BlC,EAA5B,OACHvI,EAAI8C,aAAa9C,EAAI+C,YAAYwH,UAAW,EAC5C7H,GAAG,eACHA,GAAG,UAAO2H,EAAP,wBACH3H,GAAG,iBAGP,IAAIgI,EAAM7H,oBACV,OAAOxB,KAAK8E,IAER,IAAK,IACDzD,GAAG,UAAOgI,EAAP,cAAgBN,EAAhB,cAAyBC,EAAzB,OACH,MACJ,IAAK,IACD3H,GAAG,UAAOgI,EAAP,cAAgBN,EAAhB,cAAyBC,EAAzB,OACH,MACJ,IAAK,IACD3H,GAAG,UAAOgI,EAAP,cAAgBN,EAAhB,cAAyBC,EAAzB,OACH,MACJ,IAAK,MACD3H,GAAG,UAAOgI,EAAP,qBAAuBN,EAAvB,qBAAuCC,EAAvC,OACH,MACJ,IAAK,MACD3H,GAAG,UAAOgI,EAAP,mBAAqBN,EAArB,cAA8BC,EAA9B,OACH,MACJ,IAAK,OACD3H,GAAG,UAAOgI,EAAP,oBAAsBN,EAAtB,cAA+BC,EAA/B,QAOX,OAJGtD,EAAO7E,MAAQjC,EAAK8B,MAAQgF,EAAO7E,MAAQjC,EAAK+C,OAASgE,EAAO9E,MAAQjC,EAAK8B,MAAQiF,EAAO9E,MAAQjC,EAAK+C,QAExGN,GAAG,gBAAaoE,EAAb,QAEA,CAACpE,IAAIA,EAAIR,KAAKjC,EAAKO,QAAQ6B,MAAMqI,KA1OhD,sBA6OI,SAAShB,EAAOvJ,GACf,IAAD,gBAC2BuJ,GAD3B,IACI,2BAA+B,CAC3B,GAD2B,QACfrH,OAAOlC,EAAQ,OAAO,GAF1C,8BAII,OAAO,IAlPf,sBAqPI,SAASmD,EAAWC,EAAWC,GAE3B,IAAIoD,EAAgB,GAChB7C,EAAa,CAACJ,GAAGH,EAASC,IAAIG,MAAMvC,KAAK8E,IAC7CS,EAAclD,KAAKK,GAAYT,EAAWI,KAAKK,GAAYP,EAASC,MACpE,IAJJ,EAIQQ,EAAQ5C,KAAK6E,UAAUhC,SAASZ,EAAWC,EAAWC,GAJ9D,cAKuBS,GALvB,IAKI,2BAA0B,CAAC,IAAhBE,EAAe,QACtBZ,EAAWG,KAAK,CAACG,KAAKE,EAAWJ,GAAGG,GAAGK,EAAKR,MANpD,8BAQIM,EAAM5C,KAAK+E,QAAQlC,SAASZ,EAAWC,EAAWC,GARtD,oBASuBS,GATvB,IASI,2BAA0B,CAAC,IAAhBE,EAAe,QACtBZ,EAAWG,KAAK,CAACG,KAAKE,EAAWJ,GAAGG,GAAGK,EAAKR,MAVpD,8BAYI,OAAOiD,MAlQf,KAsQA,SAASF,EAAOoD,EAAK3D,EAAI4D,GACrB,IAAI9H,GAAU,EAEd,GAAI5B,EAASyJ,EAAI5H,MAAM6H,EAAI7H,MACvB,OAAOiE,GACH,IAAK,IACDlE,EAAW0I,OAAOb,EAAIzH,OAASsI,OAAOZ,EAAI1H,OAC1C,MACJ,IAAK,IACDJ,EAAU0I,OAAOb,EAAIzH,OAASsI,OAAOZ,EAAI1H,OACzC,MACJ,IAAK,IACDJ,EAAU0I,OAAOb,EAAIzH,OAASsI,OAAOZ,EAAI1H,OACzC,MACJ,IAAK,MACDJ,EAAU0I,OAAOb,EAAIzH,OAASsI,OAAOZ,EAAI1H,OACzC,MACJ,IAAK,MACDJ,EAAU0I,OAAOb,EAAIzH,OAASsI,OAAOZ,EAAI1H,OACzC,MACJ,IAAK,OACDJ,EAAUsC,KAAKqG,MAAMD,OAAOb,EAAIzH,OAASsI,OAAOZ,EAAI1H,aAM5DzC,EAAc8D,KAAK,CAACmH,MAAM,mCAAD,OAAoC3K,EAAY4J,EAAI5H,MAApD,cAA+DhC,EAAY6J,EAAI7H,OAAQA,KAAK,YAAY4I,MAAM,EAAEC,QAAQ,IAErJ,OAAO9I,EAGJ,IAAM+I,EAAb,WACI,WAAa7E,EAAGD,GAAW,oBACvB7E,KAAK8E,GAAGA,EACR9E,KAAK6E,UAAYA,EAHzB,4CAMI,SAASG,GACL,IADa,EACTpE,EAAU,GADD,cAGGoE,GAHH,IAGb,2BAAyB,CAAC,IAAD,EAAhBE,EAAgB,QACjBC,EAASnF,KAAK6E,UAAUpE,SAAS,CAACyE,IADjB,cAGLC,GAHK,IAGrB,2BAAwB,CAAC,IAAhBsD,EAAe,QACpB,GAAIzJ,EAASJ,EAAKM,SAASuJ,EAAI5H,MAAM,CACjC,IAAIgI,EAAW,KACf,OAAO7I,KAAK8E,IACR,IAAK,IACD+D,GAAaJ,EAAIzH,MACrB,MACA,IAAK,IACD6H,GAAaJ,EAAIzH,MAGrB6H,IAAa7I,KAAK8I,SAASlI,EAAQiI,IAAWjI,EAAQyB,KAAK,IAAIuC,EAAQ6D,EAAI5H,KAAMgI,SAIrFtK,EAAc8D,KAAK,CAACmH,MAAM,qCAAD,OAAsC3K,EAAY4J,EAAI5H,OAAQA,KAAK,YAAY4I,MAAM,EAAEC,QAAQ,KAlB3G,gCAHZ,8BAyBb,OAAO9I,IA/Bf,oBAkCI,WACI,IAEI6E,EA6DAsD,EA/DA1H,EAAM,GACNqE,EAAS1F,KAAK6E,UAAU1D,SAG5B,GAAGuE,EAAO7E,MAAQjC,EAAK8B,MAAQgF,EAAO7E,MAAQjC,EAAK+C,MACnD,CACI8D,EAAM9G,EAAI6C,UAAW,IAAID,EAAK5C,EAAI6C,UAAeqE,EAAKlH,EAAI6C,UAAesE,EAAKnH,EAAI6C,UAC9EuE,EAAKpH,EAAIqH,SAAcC,EAAKtH,EAAIqH,SAcpC,GAbA3E,GAAG,UAAOoE,EAAP,aACHpE,GAAG,UAAOE,EAAP,iBACHF,GAAG,UAAOwE,EAAP,cACHxE,GAAG,UAAO4E,EAAP,OACH5E,GAAG,UAAOyE,EAAP,iCAAkCD,EAAlC,SACHxE,GAAG,aAAUyE,EAAV,wBAA4BC,EAA5B,OACH1E,GAAG,qBAAkBE,EAAlB,eAA2BuE,EAA3B,OACHzE,GAAG,UAAOE,EAAP,cAAeA,EAAf,WACHF,GAAG,UAAOwE,EAAP,cAAeA,EAAf,WACHxE,GAAG,eAAY4E,EAAZ,OACH5E,GAAG,UAAO0E,EAAP,OACH1E,GAAG,qBAAkBE,EAAlB,aAEY,IAAZmE,EAAOrE,MAAYqE,EAAO7E,MAAQjC,EAAK8B,MAAQgF,EAAO7E,MAAQjC,EAAK+C,OACtE,CACQkE,EAAKlH,EAAI6C,UAAesE,EAAKnH,EAAI6C,UAArC,IACI0E,EAAKvH,EAAI6C,UAAe2E,EAAKxH,EAAI6C,UACjC4E,EAAKzH,EAAI6C,UAAeoE,EAAMjH,EAAI6C,UAGlCiF,GADAV,EAAKpH,EAAIqH,SAAcC,EAAKtH,EAAIqH,SAC3BrH,EAAIqH,UAAcU,EAAK/H,EAAIqH,SAEpC3E,GAAG,UAAOwE,EAAP,cAAeJ,EAAf,QACHpE,GAAG,UAAO4E,EAAP,OACH5E,GAAG,UAAOyE,EAAP,iCAAkCD,EAAlC,SACHxE,GAAG,aAAUyE,EAAV,wBAA4BC,EAA5B,OACH1E,GAAG,UAAOwE,EAAP,cAAeA,EAAf,WACHxE,GAAG,eAAY4E,EAAZ,OACH5E,GAAG,UAAO0E,EAAP,OACH1E,GAAG,gBAAawE,EAAb,WACHxE,GAAG,UAAO6E,EAAP,iBACH7E,GAAG,UAAO8E,EAAP,cACH9E,GAAG,UAAOqF,EAAP,OACHrF,GAAG,UAAO+E,EAAP,yBAA0BF,EAA1B,QACH7E,GAAG,aAAU+E,EAAV,wBAA4BK,EAA5B,OACHpF,GAAG,6BAA0B8E,EAA1B,aAAiCC,EAAjC,OACH/E,GAAG,UAAO6E,EAAP,cAAeA,EAAf,WACH7E,GAAG,UAAO8E,EAAP,cAAeA,EAAf,WACH9E,GAAG,eAAYqF,EAAZ,OACHrF,GAAG,UAAOoF,EAAP,OACHpF,GAAG,6BAA0B8E,EAA1B,aACH9E,GAAG,UAAOuE,EAAP,aACHvE,GAAG,eAAY6E,EAAZ,WAEH7E,GAAOqE,EAAOrE,IACdA,GAAG,oBAAiB6E,EAAjB,OACH7E,GAAG,kBAUX,GANe,IAAZqE,EAAOrE,KAAWqE,EAAO7E,MAAQjC,EAAK8B,MAAQgF,EAAO7E,MAAQjC,EAAK+C,QAEjEN,GAAOqE,EAAOrE,KAIfqE,EAAO7E,MAAQjC,EAAKO,SAAWuG,EAAO7E,MAAQjC,EAAKM,QAElD6J,EAAMrD,EAAO1E,WAGZ,GAAG0E,EAAO7E,MAAQjC,EAAK8B,KAC5B,CACI,IAAIuI,EAAIzH,oBAAcwF,EAAMxF,oBAAcyF,EAAMzF,oBAAUuH,EAAMvH,oBAChEH,GAAG,UAAO4H,EAAP,iCAAmCrD,EAAnC,QACHvE,GAAG,UAAO4H,EAAP,cAAgBA,EAAhB,WACH5H,GAAG,UAAO2F,EAAP,2BAA6BiC,EAA7B,QACH5H,GAAG,iBACHA,GAAG,UAAO4F,EAAP,gBACH5F,GAAG,qBAAkB4F,EAAlB,eAA4BD,EAA5B,OACHrI,EAAI8C,aAAa9C,EAAI+C,YAAYwH,UAAW,EAC5C7H,GAAG,eACHA,GAAG,UAAO0H,EAAP,wBACH1H,GAAG,sBAEF,GAAGqE,EAAO7E,MAAQjC,EAAK+C,MAC5B,CACQsH,EAAIzH,oBAAcwF,EAAMxF,oBAAcyF,EAAMzF,oBAAUuH,EAAMvH,oBAChEH,GAAG,UAAO4H,EAAP,iCAAmCrD,EAAnC,QACHvE,GAAG,UAAO4H,EAAP,cAAgBA,EAAhB,WACH5H,GAAG,UAAO2F,EAAP,kCAAoCiC,EAApC,QACH5H,GAAG,iBACHA,GAAG,UAAO4F,EAAP,gBACH5F,GAAG,qBAAkB4F,EAAlB,eAA4BD,EAA5B,OACHrI,EAAI8C,aAAa9C,EAAI+C,YAAYwH,UAAW,EAC5C7H,GAAG,eACHA,GAAG,UAAO0H,EAAP,wBACH1H,GAAG,iBAEP,IAAIgI,EAAM7H,oBACV,OAAOxB,KAAK8E,IAER,IAAK,IACDzD,GAAG,UAAOgI,EAAP,cAAgBN,EAAhB,OACH,MACJ,IAAK,IACD1H,GAAG,UAAOgI,EAAP,gBAAkBN,EAAlB,OAOX,OAJGrD,EAAO7E,MAAQjC,EAAK8B,MAAQgF,EAAO7E,MAAQjC,EAAK+C,QAE/CN,GAAG,gBAAaoE,EAAb,QAEA,CAACpE,IAAIA,EAAIR,KAAKjC,EAAKO,QAAQ6B,MAAMqI,KAlJhD,sBAqJI,SAAShB,EAAOvJ,GACf,IAAD,gBAC2BuJ,GAD3B,IACI,2BAA+B,CAC3B,GAD2B,QACfrH,OAAOlC,EAAQ,OAAO,GAF1C,8BAII,OAAO,IA1Jf,sBA6JI,SAASmD,EAAWC,EAAWC,GAE3B,IAAIoD,EAAgB,GAChB7C,EAAa,CAACJ,GAAGH,EAASC,IAAIG,MAAMvC,KAAK8E,IAC7CS,EAAclD,KAAKK,GAAYT,EAAWI,KAAKK,GAAYP,EAASC,MACpE,IAJJ,EAIQQ,EAAQ5C,KAAK6E,UAAUhC,SAASZ,EAAWC,EAAWC,GAJ9D,cAKuBS,GALvB,IAKI,2BAA0B,CAAC,IAAhBE,EAAe,QACtBZ,EAAWG,KAAK,CAACG,KAAKE,EAAWJ,GAAGG,GAAGK,EAAKR,MANpD,8BAQI,OAAOiD,MAtKf,KA4KaqE,EAAb,WAEI,WAAYC,EAAOC,GAClB,oBACG9J,KAAK6J,OAASA,EACd7J,KAAK8J,IAAMA,EALnB,4CAQI,SAAS9E,GAEL,IAAIpE,EAAU,GACVmJ,EAAY/J,KAAK6J,OAAOpJ,SAASuE,GACjCgF,EAAShK,KAAK8J,IAAIrJ,SAASuE,GAE/B,GAAuB,GAApB+E,EAAUpJ,QAAgC,GAAjBqJ,EAAOrJ,QAAeqJ,EAAO,GAAGnJ,MAAMjC,EAAKM,SAAW6K,EAAU,GAAGlJ,MAAMjC,EAAKM,QAGtG,OADAX,EAAc8D,KAAK,CAACmH,MAAM,+BAA+B3I,KAAK,YAAY4I,MAAM,EAAEC,QAAQ,IACnF,GAEX,IAAK,IAAIO,EAAQX,OAAOS,EAAU,GAAG/I,OAAQiJ,GAASX,OAAOU,EAAO,GAAGhJ,OAAQiJ,IAC3ErJ,EAAQyB,KAAK,IAAIuC,EAAQhG,EAAKM,QAAQ+K,IAE1C,OAAOrJ,IAtBf,sBAyBI,SAASqB,EAAWC,EAAWC,GAE3B,IAAIoD,EAAgB,GAChB7C,EAAa,CAACJ,GAAGH,EAASC,IAAIG,MAAM,MACxCgD,EAAclD,KAAKK,GAAYT,EAAWI,KAAKK,GAAYP,EAASC,MACpE,IAJJ,EAIQQ,EAAQ5C,KAAK6E,UAAUhC,SAASZ,EAAWC,EAAWC,GAJ9D,cAKuBS,GALvB,IAKI,2BAA0B,CAAC,IAAhBE,EAAe,QACtBZ,EAAWG,KAAK,CAACG,KAAKE,EAAWJ,GAAGG,GAAGK,EAAKR,MANpD,8BAQIM,EAAM5C,KAAK+E,QAAQlC,SAASZ,EAAWC,EAAWC,GARtD,oBASuBS,GATvB,IASI,2BAA0B,CAAC,IAAhBE,EAAe,QACtBZ,EAAWG,KAAK,CAACG,KAAKE,EAAWJ,GAAGG,GAAGK,EAAKR,MAVpD,8BAYI,OAAOiD,MAtCf,KA0Ca2E,EAAb,WAEI,WAAarF,EAAUE,GAAS,oBAC5B/E,KAAK6E,UAAYA,EACjB7E,KAAK+E,QAAUA,EAJvB,4CAOI,SAASC,GACL,IADa,EACTpE,EAAU,GAEVuE,EAASnF,KAAK6E,UAAUpE,SAASuE,GACjCI,EAASpF,KAAK+E,QAAQtE,SAASuE,GAJtB,cAMGG,GANH,IAMb,2BAAuB,CAAC,IAAD,EAAdsD,EAAc,sBACHrD,GADG,IACnB,2BAAuB,CAAC,IAAfsD,EAAc,QACnB9H,EAAQyB,KACJ,IAAIuC,EACAhG,EAAK0C,OADT,UAEOmH,EAAIzH,OAFX,OAEmB0H,EAAI1H,UALZ,gCANV,8BAgBb,OAAOJ,IAvBf,oBA2BI,WACI,IAGI6E,EAwGAsD,EA4DAC,EAvKA3H,EAAM,GACNqE,EAAS1F,KAAK6E,UAAU1D,SACxBwE,EAAS3F,KAAK+E,QAAQ5D,SAG1B,GAAGuE,EAAO7E,MAAQjC,EAAK8B,MAAQgF,EAAO7E,MAAQjC,EAAK+C,OAASgE,EAAO9E,MAAQjC,EAAK8B,MAAQiF,EAAO9E,MAAQjC,EAAK+C,MAC5G,CACI8D,EAAM9G,EAAI6C,UAAW,IAAID,EAAK5C,EAAI6C,UAAeqE,EAAKlH,EAAI6C,UAAesE,EAAKnH,EAAI6C,UAC9EuE,EAAKpH,EAAIqH,SAAcC,EAAKtH,EAAIqH,SAcpC,GAbA3E,GAAG,UAAOoE,EAAP,aACHpE,GAAG,UAAOE,EAAP,iBACHF,GAAG,UAAOwE,EAAP,cACHxE,GAAG,UAAO4E,EAAP,OACH5E,GAAG,UAAOyE,EAAP,iCAAkCD,EAAlC,SACHxE,GAAG,aAAUyE,EAAV,wBAA4BC,EAA5B,OACH1E,GAAG,qBAAkBE,EAAlB,eAA2BuE,EAA3B,OACHzE,GAAG,UAAOE,EAAP,cAAeA,EAAf,WACHF,GAAG,UAAOwE,EAAP,cAAeA,EAAf,WACHxE,GAAG,eAAY4E,EAAZ,OACH5E,GAAG,UAAO0E,EAAP,OACH1E,GAAG,qBAAkBE,EAAlB,aAEY,IAAZmE,EAAOrE,MAAYqE,EAAO7E,MAAQjC,EAAK8B,MAAQgF,EAAO7E,MAAQjC,EAAK+C,OACtE,CACQkE,EAAKlH,EAAI6C,UAAesE,EAAKnH,EAAI6C,UAArC,IACI0E,EAAKvH,EAAI6C,UAAe2E,EAAKxH,EAAI6C,UACjC4E,EAAKzH,EAAI6C,UAAeoE,EAAMjH,EAAI6C,UAGlCiF,GADAV,EAAKpH,EAAIqH,SAAcC,EAAKtH,EAAIqH,SAC3BrH,EAAIqH,UAAcU,EAAK/H,EAAIqH,SAEpC3E,GAAG,UAAOwE,EAAP,cAAeJ,EAAf,QACHpE,GAAG,UAAO4E,EAAP,OACH5E,GAAG,UAAOyE,EAAP,iCAAkCD,EAAlC,SACHxE,GAAG,aAAUyE,EAAV,wBAA4BC,EAA5B,OACH1E,GAAG,UAAOwE,EAAP,cAAeA,EAAf,WACHxE,GAAG,eAAY4E,EAAZ,OACH5E,GAAG,UAAO0E,EAAP,OACH1E,GAAG,gBAAawE,EAAb,WACHxE,GAAG,UAAO6E,EAAP,iBACH7E,GAAG,UAAO8E,EAAP,cACH9E,GAAG,UAAOqF,EAAP,OACHrF,GAAG,UAAO+E,EAAP,yBAA0BF,EAA1B,QACH7E,GAAG,aAAU+E,EAAV,wBAA4BK,EAA5B,OACHpF,GAAG,6BAA0B8E,EAA1B,aAAiCC,EAAjC,OACH/E,GAAG,UAAO6E,EAAP,cAAeA,EAAf,WACH7E,GAAG,UAAO8E,EAAP,cAAeA,EAAf,WACH9E,GAAG,eAAYqF,EAAZ,OACHrF,GAAG,UAAOoF,EAAP,OACHpF,GAAG,6BAA0B8E,EAA1B,aACH9E,GAAG,UAAOuE,EAAP,aACHvE,GAAG,eAAY6E,EAAZ,WAEH7E,GAAOqE,EAAOrE,IACdA,GAAG,oBAAiB6E,EAAjB,OACH7E,GAAG,iBAIP,GAAiB,IAAdsE,EAAOtE,MAAcsE,EAAO9E,MAAQjC,EAAK8B,MAAQiF,EAAO9E,MAAQjC,EAAK+C,OACxE,CACI,IAAI2E,EAAK3H,EAAI6C,UAAe+E,EAAK5H,EAAI6C,UACjCgF,EAAK7H,EAAI6C,UAAeqF,EAAKlI,EAAI6C,UACjCsF,EAAMnI,EAAI6C,UAAeuF,EAAMpI,EAAI6C,UAEnCmF,EAAKhI,EAAIqH,SAAcY,EAAKjI,EAAIqH,SAChCmB,EAAKxI,EAAIqH,SAAcoB,EAAKzI,EAAIqH,SAEpC3E,GAAG,UAAOiF,EAAP,cAAeb,EAAf,OACHpE,GAAG,UAAOuF,EAAP,OACHvF,GAAG,UAAOkF,EAAP,iCAAkCD,EAAlC,QACHjF,GAAG,aAAUkF,EAAV,wBAA4BI,EAA5B,OACHtF,GAAG,UAAOiF,EAAP,cAAeA,EAAf,WACHjF,GAAG,eAAYuF,EAAZ,OACHvF,GAAG,UAAOsF,EAAP,OACHtF,GAAG,gBAAaiF,EAAb,WACHjF,GAAG,UAAOmF,EAAP,gBACHnF,GAAG,UAAOwF,EAAP,cACHxF,GAAG,UAAO8F,EAAP,OACH9F,GAAG,UAAOyF,EAAP,yBAA2BN,EAA3B,QACHnF,GAAG,aAAUyF,EAAV,wBAA6BM,EAA7B,OACH/F,GAAG,6BAA0BwF,EAA1B,aAAiCC,EAAjC,OACHzF,GAAG,UAAOmF,EAAP,cAAeA,EAAf,WACHnF,GAAG,UAAOwF,EAAP,cAAeA,EAAf,WACHxF,GAAG,eAAY8F,EAAZ,OACH9F,GAAG,UAAO+F,EAAP,OACH/F,GAAG,6BAA0BwF,EAA1B,aACHxF,GAAG,UAAO0F,EAAP,aACH1F,GAAG,eAAYmF,EAAZ,WAEHnF,GAAOsE,EAAOtE,IACdA,GAAG,oBAAiBmF,EAAjB,OACHnF,GAAG,kBAgBX,GAZe,IAAZqE,EAAOrE,KAAWqE,EAAO7E,MAAQjC,EAAK8B,MAAQgF,EAAO7E,MAAQjC,EAAK+C,QAEjEN,GAAOqE,EAAOrE,KAGH,IAAZsE,EAAOtE,KAAWsE,EAAO9E,MAAQjC,EAAK8B,MAAQiF,EAAO9E,MAAQjC,EAAK+C,QAEjEN,GAAOsE,EAAOtE,KAKfqE,EAAO7E,MAAQjC,EAAKO,SAAWuG,EAAO7E,MAAQjC,EAAKM,QACtD,CACQ4H,EAAMtF,oBAAV,IAAyBwF,EAAMxF,oBAAWuH,EAAMvH,oBAAW,IAAI4H,EAAM5H,oBACjE2I,EAAQ3I,oBAAe4I,EAAQ5I,oBAE/B8F,EAAK3I,EAAIqH,SAAcqB,EAAK1I,EAAIqH,SAAcqE,EAAK1L,EAAIqH,SAAcsE,EAAK3L,EAAIqH,SAGlF3E,GAAG,kBACHA,GAAG,UAAO+I,EAAP,iBACH/I,GAAG,UAAO8I,EAAP,cAAkBC,EAAlB,QACH/I,GAAG,UAAOyF,EAAP,cAAgBpB,EAAO1E,MAAvB,QAEHK,GAAG,UAAOiG,EAAP,QACHjG,GAAG,UAAO2F,EAAP,mBAAqBF,EAArB,aAEHzF,GAAG,cAAWyF,EAAX,uBAA6BO,EAA7B,QACHhG,GAAG,UAAOyF,EAAP,mBAAqBA,EAArB,WACHzF,GAAG,qBAAkB8I,EAAlB,eAA8BnD,EAA9B,QACH3F,GAAG,UAAO8I,EAAP,cAAkBA,EAAlB,YACH9I,GAAG,eAAYiG,EAAZ,QAEHjG,GAAG,UAAOgG,EAAP,QACHhG,GAAG,UAAO8I,EAAP,cAAkBA,EAAlB,YACH9I,GAAG,UAAO0H,EAAP,aACH1H,GAAG,UAAOgJ,EAAP,QACHhJ,GAAG,cAAW8I,EAAX,cAAsBC,EAAtB,kBAAqCE,EAArC,QACHjJ,GAAG,UAAO+H,EAAP,yBAA2Be,EAA3B,SACH9I,GAAG,UAAO+H,EAAP,cAAgBA,EAAhB,aACH/H,GAAG,0BAAuB+H,EAAvB,QACH/H,GAAG,kBACHA,GAAG,UAAO8I,EAAP,cAAkBA,EAAlB,YACH9I,GAAG,eAAYgJ,EAAZ,QAEHhJ,GAAG,UAAOiJ,EAAP,QACHjJ,GAAG,yBACHA,GAAG,uBAGF,GAAGqE,EAAO7E,MAAQjC,EAAK0C,OACxByH,EAAMvH,oBACNH,GAAG,UAAO0H,EAAP,cAAgBrD,EAAO1E,MAAvB,aAEF,GAAG0E,EAAO7E,MAAQjC,EAAK8B,KAC5B,CACI,IAAIuI,EAAIzH,oBAAWuH,EAAMvH,oBACzBH,GAAG,UAAO4H,EAAP,iCAAmCrD,EAAnC,QACHvE,GAAG,UAAO4H,EAAP,cAAgBA,EAAhB,WACH5H,GAAG,UAAO0H,EAAP,2BAA6BE,EAA7B,aAEF,GAAGvD,EAAO7E,MAAQjC,EAAK+C,MAC5B,CACQsH,EAAIzH,oBAAWuH,EAAMvH,oBACzBH,GAAG,UAAO4H,EAAP,iCAAmCrD,EAAnC,QACHvE,GAAG,UAAO4H,EAAP,cAAgBA,EAAhB,WACH5H,GAAG,UAAO0H,EAAP,kCAAoCE,EAApC,QAKP,GAAGtD,EAAO9E,MAAQjC,EAAKO,SAAWwG,EAAO9E,MAAQjC,EAAKM,QACtD,CACQ4H,EAAMtF,oBAAewF,EAAMxF,oBAAWwH,EAAMxH,oBAAe4H,EAAM5H,oBACjE2I,EAAQ3I,oBAAe4I,EAAQ5I,oBAE/B8F,EAAK3I,EAAIqH,SAAcqB,EAAK1I,EAAIqH,SAAcqE,EAAK1L,EAAIqH,SAAcsE,EAAK3L,EAAIqH,SAGlF3E,GAAG,kBACHA,GAAG,UAAO+I,EAAP,iBACH/I,GAAG,UAAO8I,EAAP,cAAkBC,EAAlB,QACH/I,GAAG,UAAOyF,EAAP,cAAgBnB,EAAO3E,MAAvB,QAEHK,GAAG,UAAOiG,EAAP,QACHjG,GAAG,UAAO2F,EAAP,mBAAqBF,EAArB,aAEHzF,GAAG,cAAWyF,EAAX,uBAA6BO,EAA7B,QACHhG,GAAG,UAAOyF,EAAP,mBAAqBA,EAArB,WACHzF,GAAG,qBAAkB8I,EAAlB,eAA8BnD,EAA9B,QACH3F,GAAG,UAAO8I,EAAP,cAAkBA,EAAlB,YACH9I,GAAG,eAAYiG,EAAZ,QAEHjG,GAAG,UAAOgG,EAAP,QACHhG,GAAG,UAAO8I,EAAP,cAAkBA,EAAlB,YACH9I,GAAG,UAAO2H,EAAP,aACH3H,GAAG,UAAOgJ,EAAP,QAEHhJ,GAAG,cAAW8I,EAAX,cAAsBC,EAAtB,kBAAqCE,EAArC,QACHjJ,GAAG,UAAO+H,EAAP,yBAA2Be,EAA3B,SACH9I,GAAG,UAAO+H,EAAP,cAAgBA,EAAhB,aACH/H,GAAG,0BAAuB+H,EAAvB,QACH/H,GAAG,kBACHA,GAAG,UAAO8I,EAAP,cAAkBA,EAAlB,YACH9I,GAAG,eAAYgJ,EAAZ,QAEHhJ,GAAG,UAAOiJ,EAAP,QACHjJ,GAAG,yBACHA,GAAG,uBAEF,GAAGsE,EAAO9E,MAAQjC,EAAK0C,OACxB0H,EAAMxH,oBACNH,GAAG,UAAO2H,EAAP,cAAgBrD,EAAO3E,MAAvB,aAEF,GAAG2E,EAAO9E,MAAQjC,EAAK8B,KAC5B,CACI,IAAIyI,EAAI3H,oBAAWwH,EAAMxH,oBACzBH,GAAG,UAAO8H,EAAP,iCAAmCpC,EAAnC,QACH1F,GAAG,UAAO8H,EAAP,cAAgBA,EAAhB,WACH9H,GAAG,UAAO2H,EAAP,2BAA6BG,EAA7B,aAEF,GAAGxD,EAAO9E,MAAQjC,EAAK+C,MAC5B,CACQwH,EAAI3H,oBAAWwH,EAAMxH,oBACzBH,GAAG,UAAO8H,EAAP,iCAAmCpC,EAAnC,QACH1F,GAAG,UAAO8H,EAAP,cAAgBA,EAAhB,WACH9H,GAAG,UAAO2H,EAAP,kCAAoCG,EAApC,QAGP,IAAIE,EAAM7H,oBACN+I,EAAK/I,oBAAegJ,EAAKhJ,oBAAeiJ,EAAKjJ,oBAAekJ,EAAKlJ,oBACjEmJ,EAAKhM,EAAIqH,SAAc4E,EAAKjM,EAAIqH,SAAc6E,EAAKlM,EAAIqH,SAAc8E,EAAKnM,EAAIqH,SA+BlF,OA7BA3E,GAAG,UAAOgI,EAAP,YAEHhI,GAAG,UAAOkJ,EAAP,cAAexB,EAAf,QACH1H,GAAG,UAAOuJ,EAAP,QACHvJ,GAAG,UAAOmJ,EAAP,wBAAyBD,EAAzB,SACHlJ,GAAG,cAAWmJ,EAAX,wBAA6BG,EAA7B,QACHtJ,GAAG,0BAAuBmJ,EAAvB,QACHnJ,GAAG,kBACHA,GAAG,UAAOkJ,EAAP,cAAeA,EAAf,YACHlJ,GAAG,eAAYuJ,EAAZ,QAEHvJ,GAAG,UAAOsJ,EAAP,QACHtJ,GAAG,UAAOoJ,EAAP,cAAezB,EAAf,QACH3H,GAAG,UAAOyJ,EAAP,QACHzJ,GAAG,UAAOqJ,EAAP,wBAAyBD,EAAzB,SACHpJ,GAAG,cAAWqJ,EAAX,wBAA6BG,EAA7B,QACHxJ,GAAG,0BAAuBqJ,EAAvB,QACHrJ,GAAG,kBACHA,GAAG,UAAOoJ,EAAP,cAAeA,EAAf,YACHpJ,GAAG,eAAYyJ,EAAZ,QACHzJ,GAAG,UAAOwJ,EAAP,QACHxJ,GAAG,yBACHA,GAAG,kBAEAqE,EAAO7E,MAAQjC,EAAK8B,MAAQgF,EAAO7E,MAAQjC,EAAK+C,OAASgE,EAAO9E,MAAQjC,EAAK8B,MAAQiF,EAAO9E,MAAQjC,EAAK+C,QAExGN,GAAG,gBAAaoE,EAAb,QAGA,CAACpE,IAAIA,EAAIR,KAAKjC,EAAK0C,OAAON,MAAMqI,KA/R/C,sBAmSI,SAASpH,EAAWC,EAAWC,GAE3B,IAAIoD,EAAgB,GAChB7C,EAAa,CAACJ,GAAGH,EAASC,IAAIG,MAAM,MACxCgD,EAAclD,KAAKK,GAAYT,EAAWI,KAAKK,GAAYP,EAASC,MACpE,IAJJ,EAIQQ,EAAQ5C,KAAK6E,UAAUhC,SAASZ,EAAWC,EAAWC,GAJ9D,cAKuBS,GALvB,IAKI,2BAA0B,CAAC,IAAhBE,EAAe,QACtBZ,EAAWG,KAAK,CAACG,KAAKE,EAAWJ,GAAGG,GAAGK,EAAKR,MANpD,8BAQIM,EAAM5C,KAAK+E,QAAQlC,SAASZ,EAAWC,EAAWC,GARtD,oBASuBS,GATvB,IASI,2BAA0B,CAAC,IAAhBE,EAAe,QACtBZ,EAAWG,KAAK,CAACG,KAAKE,EAAWJ,GAAGG,GAAGK,EAAKR,MAVpD,8BAYI,OAAOiD,MAhTf,M,+GClgBI,EAAgCjH,EAAQ,GAAvCM,EAAL,EAAKA,KAAMI,EAAX,EAAWA,SAAUH,EAArB,EAAqBA,YACfF,EAAML,EAAQ,GACZC,EAAkBD,EAAQ,IAA1BC,cAGKwM,GAFOzM,EAAQ,GAApBsG,QAER,WAEI,WAAaC,EAAUC,EAAGC,GAAS,oBAC/B/E,KAAK8E,GAAGA,EACR9E,KAAK6E,UAAYA,EACjB7E,KAAK+E,QAAUA,EALvB,4CAQI,SAASC,GAEL,IADJ,EACQpE,EAAU,GADlB,cAGoBoE,GAHpB,IAGI,2BAAyB,CAAC,IAAD,EAAhBE,EAAgB,QACjBC,EAASnF,KAAK6E,UAAUpE,SAAS,CAACyE,IAClCE,EAASpF,KAAK+E,QAAQtE,SAAS,CAACyE,IAFf,cAGLC,GAHK,IAGrB,2BAAwB,CAAC,IAAD,EAAfsD,EAAe,QAChBuC,GAAQ,EADQ,cAEJ5F,GAFI,IAEpB,2BAAuB,CAAC,IAAfsD,EAAc,QACnB,GAAIuC,EAAWxC,EAAIzI,KAAK8E,GAAG4D,GAAK,CAC5B9H,EAAQyB,KAAK6C,GACb8F,GAAQ,EACR,QANY,8BASpB,GAAIA,EAAO,OAZM,gCAH7B,8BAkBI,OAAOpK,IA3Bf,sBA8BI,SAASqB,EAAWC,EAAWC,GAE3B,IAAIoD,EAAgB,GAChB7C,EAAa,CAACJ,GAAGH,EAASC,IAAIG,MAAMvC,KAAK8E,IAC7CS,EAAclD,KAAKK,GAAYT,EAAWI,KAAKK,GAAYP,EAASC,MACpE,IAJJ,EAIQQ,EAAQ5C,KAAK6E,UAAUhC,SAASZ,EAAWC,EAAWC,GAJ9D,cAKuBS,GALvB,IAKI,2BAA0B,CAAC,IAAhBE,EAAe,QACtBZ,EAAWG,KAAK,CAACG,KAAKE,EAAWJ,GAAGG,GAAGK,EAAKR,MANpD,8BAQIM,EAAM5C,KAAK+E,QAAQlC,SAASZ,EAAWC,EAAWC,GARtD,oBASuBS,GATvB,IASI,2BAA0B,CAAC,IAAhBE,EAAe,QACtBZ,EAAWG,KAAK,CAACG,KAAKE,EAAWJ,GAAGG,GAAGK,EAAKR,MAVpD,8BAYI,OAAOiD,IA3Cf,oBA8CI,WAEI,IAAIC,EAIAC,EAASG,EAASmB,EAHlB1F,EAAM,GACNqE,EAAS1F,KAAK6E,UAAU1D,SACxBwE,EAAS3F,KAAK+E,QAAQ5D,SAG1B,GADAE,GAAG,wBACAqE,EAAO7E,MAAQjC,EAAK8B,MAAQgF,EAAO7E,MAAQjC,EAAK+C,OAASgE,EAAO9E,MAAQjC,EAAK8B,MAAQiF,EAAO9E,MAAQjC,EAAK+C,MAC5G,CACyBiE,EAArBH,EAAM9G,EAAI6C,UAAsB,IAAID,EAAK5C,EAAI6C,UAAeqE,EAAKlH,EAAI6C,UAAesE,EAAKnH,EAAI6C,UACzFuE,EAAKpH,EAAIqH,SAAcC,EAAKtH,EAAIqH,SAcpC,GAbA3E,GAAG,UAAOoE,EAAP,aACHpE,GAAG,UAAOE,EAAP,iBACHF,GAAG,UAAOwE,EAAP,cACHxE,GAAG,UAAO4E,EAAP,OACH5E,GAAG,UAAOyE,EAAP,iCAAkCD,EAAlC,SACHxE,GAAG,aAAUyE,EAAV,wBAA4BC,EAA5B,OACH1E,GAAG,qBAAkBE,EAAlB,eAA2BuE,EAA3B,OACHzE,GAAG,UAAOE,EAAP,cAAeA,EAAf,WACHF,GAAG,UAAOwE,EAAP,cAAeA,EAAf,WACHxE,GAAG,eAAY4E,EAAZ,OACH5E,GAAG,UAAO0E,EAAP,OACH1E,GAAG,qBAAkBE,EAAlB,aAEY,IAAZmE,EAAOrE,MAAYqE,EAAO7E,MAAQjC,EAAK8B,MAAQgF,EAAO7E,MAAQjC,EAAK+C,OACtE,CACQkE,EAAKlH,EAAI6C,UAAesE,EAAKnH,EAAI6C,UAArC,IACI0E,EAAKvH,EAAI6C,UAAe2E,EAAKxH,EAAI6C,UACjC4E,EAAKzH,EAAI6C,UAAWoE,EAAMjH,EAAI6C,UAClC,IAAI6E,EAAM1H,EAAI6C,UAGViF,GADAV,EAAKpH,EAAIqH,SAAcC,EAAKtH,EAAIqH,SAC3BrH,EAAIqH,UAAcU,EAAK/H,EAAIqH,SAEpC3E,GAAG,UAAOwE,EAAP,cAAeJ,EAAf,QACHpE,GAAG,UAAO4E,EAAP,OACH5E,GAAG,UAAOyE,EAAP,iCAAkCD,EAAlC,SACHxE,GAAG,aAAUyE,EAAV,wBAA4BC,EAA5B,OACH1E,GAAG,UAAOwE,EAAP,cAAeA,EAAf,WACHxE,GAAG,eAAY4E,EAAZ,OACH5E,GAAG,UAAO0E,EAAP,OACH1E,GAAG,gBAAawE,EAAb,WACHxE,GAAG,UAAO6E,EAAP,iBACH7E,GAAG,UAAO8E,EAAP,cACH9E,GAAG,UAAOqF,EAAP,OACHrF,GAAG,UAAO+E,EAAP,yBAA0BF,EAA1B,QACH7E,GAAG,aAAU+E,EAAV,wBAA4BK,EAA5B,OACHpF,GAAG,6BAA0B8E,EAA1B,aAAiCC,EAAjC,OACH/E,GAAG,UAAO6E,EAAP,cAAeA,EAAf,WACH7E,GAAG,UAAO8E,EAAP,cAAeA,EAAf,WACH9E,GAAG,eAAYqF,EAAZ,OACHrF,GAAG,UAAOoF,EAAP,OACHpF,GAAG,6BAA0B8E,EAA1B,aACH9E,GAAG,UAAOuE,EAAP,aACHvE,GAAG,UAAOgF,EAAP,YACHhF,GAAG,eAAY6E,EAAZ,WAEH7E,GAAOqE,EAAOrE,IACdA,GAAG,eAAYgF,EAAZ,OAIP,GAAiB,IAAdV,EAAOtE,MAAcsE,EAAO9E,MAAQjC,EAAK8B,MAAQiF,EAAO9E,MAAQjC,EAAK+C,OACxE,CACI,IAAI2E,EAAK3H,EAAI6C,UAAe+E,EAAK5H,EAAI6C,UACjCgF,EAAK7H,EAAI6C,UAAeqF,EAAKlI,EAAI6C,UACjCsF,EAAMnI,EAAI6C,UAAWuF,EAAMpI,EAAI6C,UAC/B6E,EAAM1H,EAAI6C,UAAd,IAEImF,EAAKhI,EAAIqH,SAAcY,EAAKjI,EAAIqH,SAChCmB,EAAKxI,EAAIqH,SAAcoB,EAAKzI,EAAIqH,SAEpC3E,GAAG,UAAOiF,EAAP,cAAeb,EAAf,OACHpE,GAAG,UAAOuF,EAAP,OACHvF,GAAG,UAAOkF,EAAP,iCAAkCD,EAAlC,QACHjF,GAAG,aAAUkF,EAAV,wBAA4BI,EAA5B,OACHtF,GAAG,UAAOiF,EAAP,cAAeA,EAAf,WACHjF,GAAG,eAAYuF,EAAZ,OACHvF,GAAG,UAAOsF,EAAP,OACHtF,GAAG,gBAAaiF,EAAb,WACHjF,GAAG,UAAOmF,EAAP,gBACHnF,GAAG,UAAOwF,EAAP,cACHxF,GAAG,UAAO8F,EAAP,OACH9F,GAAG,UAAOyF,EAAP,yBAA2BN,EAA3B,QACHnF,GAAG,aAAUyF,EAAV,wBAA6BM,EAA7B,OACH/F,GAAG,6BAA0BwF,EAA1B,aAAiCC,EAAjC,OACHzF,GAAG,UAAOmF,EAAP,cAAeA,EAAf,WACHnF,GAAG,UAAOwF,EAAP,cAAeA,EAAf,WACHxF,GAAG,eAAY8F,EAAZ,OACH9F,GAAG,UAAO+F,EAAP,OACH/F,GAAG,6BAA0BwF,EAA1B,aACHxF,GAAG,UAAO0F,EAAP,aACH1F,GAAG,UAAOgF,EAAP,YACHhF,GAAG,eAAYmF,EAAZ,WAEHnF,GAAOsE,EAAOtE,IACdA,GAAG,eAAYgF,EAAZ,QAeX,GAXe,IAAZX,EAAOrE,KAAWqE,EAAO7E,MAAQjC,EAAK8B,MAAQgF,EAAO7E,MAAQjC,EAAK+C,QAEjEN,GAAOqE,EAAOrE,KAGH,IAAZsE,EAAOtE,KAAWsE,EAAO9E,MAAQjC,EAAK8B,MAAQiF,EAAO9E,MAAQjC,EAAK+C,QAEjEN,GAAOsE,EAAOtE,KAIfqE,EAAO7E,MAAQjC,EAAK8B,KAEnB,OADA8E,EAAYI,EACLD,EAAO9E,MAEV,KAAKjC,EAAK0C,OACF,IAAI4J,EAAMvM,EAAI6C,UAAe2J,EAAMxM,EAAI6C,UAAe4J,EAAMzM,EAAI6C,UAAe6J,EAAM1M,EAAI6C,UAAe8J,EAAM3M,EAAI6C,UAC9G+J,EAAM5M,EAAI6C,UAAegK,EAAM7M,EAAI6C,UAAeiK,EAAM9M,EAAI6C,UAE5DsG,EAAMnJ,EAAIqH,SAAc4B,EAAMjJ,EAAIqH,SAAc+B,EAAMpJ,EAAIqH,SAAc6B,EAAMlJ,EAAIqH,SAiBtF,OAfA3E,GAAG,UAAO6J,EAAP,cAAgBvF,EAAO3E,MAAvB,OACHK,GAAG,UAAO8J,EAAP,cAAgBvF,EAAhB,OACHvE,GAAG,UAAOwG,EAAP,OACHxG,GAAG,UAAO+J,EAAP,iCAAmCD,EAAnC,QACH9J,GAAG,aAAU+J,EAAV,sBAA2BtD,EAA3B,OACHzG,GAAG,UAAOgK,EAAP,cAAgBD,EAAhB,WACH/J,GAAG,UAAOiK,EAAP,2BAA6BD,EAA7B,QACHhK,GAAG,iBACHA,GAAG,UAAOkK,EAAP,gBACHlK,GAAG,qBAAkBkK,EAAlB,eAA4BD,EAA5B,OACHjK,GAAG,UAAOmK,EAAP,gBACHnK,GAAG,qBAAkBmK,EAAlB,eAA4BN,EAA5B,OACH7J,GAAG,qBACHA,GAAG,UAAOoK,EAAP,wBACHpK,GAAG,iBACIrB,KAAK8E,IAER,IAAK,IACDzD,GAAG,cAAWoK,EAAX,uBAA6B7D,EAA7B,OACH,MACJ,IAAK,KACDvG,GAAG,cAAWoK,EAAX,uBAA6B7D,EAA7B,OACH,MACJ,IAAK,IACDvG,GAAG,cAAWoK,EAAX,uBAA6B7D,EAA7B,OACH,MACJ,IAAK,KACDvG,GAAG,cAAWoK,EAAX,sBAA4B7D,EAA5B,OACH,MACJ,IAAK,IACDvG,GAAG,cAAWoK,EAAX,uBAA6B7D,EAA7B,OACH,MACJ,IAAK,KACDvG,GAAG,cAAWoK,EAAX,sBAA4B7D,EAA5B,OAGXvG,GAAG,wBACHA,GAAG,kBACHA,GAAG,yBACHA,GAAG,eAAY0G,EAAZ,OACH1G,GAAG,UAAOuG,EAAP,OACHvG,GAAG,wBACHA,GAAG,kBACHA,GAAG,yBACHA,GAAG,UAAO0G,EAAP,OACH1G,GAAG,UAAO8J,EAAP,cAAgBA,EAAhB,WACH9J,GAAG,eAAYwG,EAAZ,OACHxG,GAAG,UAAOyG,EAAP,OAEH,IAAI4D,EAAK/M,EAAI6C,UAAemK,EAAKhN,EAAI6C,UAAeoK,EAAKjN,EAAI6C,UAEzDqK,EAAKlN,EAAIqH,SAAc8F,EAAKnN,EAAIqH,SAEpC3E,GAAG,UAAOqK,EAAP,YACHrK,GAAG,UAAOsK,EAAP,yBAA0BD,EAA1B,SACHrK,GAAG,UAAOwK,EAAP,QACHxK,GAAG,cAAWsK,EAAX,wBAA6BG,EAA7B,QACHzK,GAAG,UAAOuK,EAAP,cAAehG,EAAf,cAAwB8F,EAAxB,QACHrK,GAAG,6BAA0BuK,EAA1B,eAAmCD,EAAnC,OACHtK,GAAG,UAAOqK,EAAP,cAAeA,EAAf,YACHrK,GAAG,UAAOsK,EAAP,yBAA0BD,EAA1B,QACHrK,GAAG,eAAYwK,EAAZ,QAGHxK,GAAG,UAAOyK,EAAP,QACHzK,GAAG,UAAOuK,EAAP,cAAehG,EAAf,cAAwB8F,EAAxB,OACHrK,GAAG,6BAA0BuK,EAA1B,aACHvK,GAAG,aACHA,GAAG,0BAEP,MAEJ,KAAKzC,EAAKM,QACV,KAAKN,EAAKO,QACF+L,EAAMvM,EAAI6C,UAAe2J,EAAMxM,EAAI6C,UAAe4J,EAAMzM,EAAI6C,UAAe6J,EAAM1M,EAAI6C,UAAe8J,EAAM3M,EAAI6C,UAC9G+J,EAAM5M,EAAI6C,UAAegK,EAAM7M,EAAI6C,UAEnCsG,EAAMnJ,EAAIqH,SAAc4B,EAAMjJ,EAAIqH,SAAc+B,EAAMpJ,EAAIqH,SAAc6B,EAAMlJ,EAAIqH,SAiBtF,OAfA3E,GAAG,UAAO6J,EAAP,cAAgBvF,EAAO3E,MAAvB,OACHK,GAAG,UAAO8J,EAAP,cAAgBvF,EAAhB,OACHvE,GAAG,UAAOwG,EAAP,OACHxG,GAAG,UAAO+J,EAAP,iCAAmCD,EAAnC,QACH9J,GAAG,aAAU+J,EAAV,sBAA2BtD,EAA3B,OACHzG,GAAG,UAAOgK,EAAP,cAAgBD,EAAhB,WACH/J,GAAG,UAAOiK,EAAP,2BAA6BD,EAA7B,QAEHhK,GAAG,UAAOkK,EAAP,gBACHlK,GAAG,qBAAkBkK,EAAlB,eAA4BD,EAA5B,OACH3M,EAAI8C,aAAa9C,EAAI+C,YAAYwH,UAAW,EAC5C7H,GAAG,eACHA,GAAG,UAAOmK,EAAP,wBACHnK,GAAG,iBAEIrB,KAAK8E,IAER,IAAK,IACDzD,GAAG,cAAWmK,EAAX,eAAqBN,EAArB,kBAAkCtD,EAAlC,OACH,MACJ,IAAK,KACDvG,GAAG,cAAWmK,EAAX,eAAqBN,EAArB,kBAAkCtD,EAAlC,OACH,MACJ,IAAK,IACDvG,GAAG,cAAWmK,EAAX,eAAqBN,EAArB,kBAAkCtD,EAAlC,OACH,MACJ,IAAK,KACDvG,GAAG,cAAWmK,EAAX,cAAoBN,EAApB,kBAAiCtD,EAAjC,OACH,MACJ,IAAK,IACDvG,GAAG,cAAWmK,EAAX,eAAqBN,EAArB,kBAAkCtD,EAAlC,OACH,MACJ,IAAK,KACDvG,GAAG,cAAWmK,EAAX,cAAoBN,EAApB,kBAAiCtD,EAAjC,OAGXvG,GAAG,wBACHA,GAAG,kBACHA,GAAG,yBACHA,GAAG,eAAY0G,EAAZ,OACH1G,GAAG,UAAOuG,EAAP,OACHvG,GAAG,wBACHA,GAAG,kBACHA,GAAG,yBACHA,GAAG,UAAO0G,EAAP,OACH1G,GAAG,UAAO8J,EAAP,cAAgBA,EAAhB,WACH9J,GAAG,eAAYwG,EAAZ,OACHxG,GAAG,UAAOyG,EAAP,OAEC4D,EAAK/M,EAAI6C,UAAemK,EAAKhN,EAAI6C,UAAeoK,EAAKjN,EAAI6C,UAEzDqK,EAAKlN,EAAIqH,SAAc8F,EAAKnN,EAAIqH,SAEpC3E,GAAG,UAAOqK,EAAP,YACHrK,GAAG,UAAOsK,EAAP,yBAA0BD,EAA1B,SACHrK,GAAG,UAAOwK,EAAP,QACHxK,GAAG,cAAWsK,EAAX,wBAA6BG,EAA7B,QACHzK,GAAG,UAAOuK,EAAP,cAAehG,EAAf,cAAwB8F,EAAxB,QACHrK,GAAG,6BAA0BuK,EAA1B,eAAmCD,EAAnC,OACHtK,GAAG,UAAOqK,EAAP,cAAeA,EAAf,YACHrK,GAAG,UAAOsK,EAAP,yBAA0BD,EAA1B,QACHrK,GAAG,eAAYwK,EAAZ,QAGHxK,GAAG,UAAOyK,EAAP,QACHzK,GAAG,UAAOuK,EAAP,cAAehG,EAAf,cAAwB8F,EAAxB,OACHrK,GAAG,6BAA0BuK,EAA1B,aACHvK,GAAG,aACHA,GAAG,0BAEP,MAEA,KAAKzC,EAAK8B,KACV,KAAK9B,EAAK+C,YAIb,GAAG+D,EAAO7E,MAAQjC,EAAK+C,MAExB,OADA6D,EAAYI,EACLD,EAAO9E,MAEV,KAAKjC,EAAK0C,OAEE4J,EAAMvM,EAAI6C,UAAe2J,EAAMxM,EAAI6C,UAAe4J,EAAMzM,EAAI6C,UAAe6J,EAAM1M,EAAI6C,UAAe8J,EAAM3M,EAAI6C,UAC9G+J,EAAM5M,EAAI6C,UAAegK,EAAM7M,EAAI6C,UAAeiK,EAAM9M,EAAI6C,UAE5DsG,EAAMnJ,EAAIqH,SAAc4B,EAAMjJ,EAAIqH,SAAc+B,EAAMpJ,EAAIqH,SAAc6B,EAAMlJ,EAAIqH,SAiBtF,OAfA3E,GAAG,UAAO6J,EAAP,cAAgBvF,EAAO3E,MAAvB,OACHK,GAAG,UAAO8J,EAAP,cAAgBvF,EAAhB,OACHvE,GAAG,UAAOwG,EAAP,OACHxG,GAAG,UAAO+J,EAAP,iCAAmCD,EAAnC,QACH9J,GAAG,aAAU+J,EAAV,sBAA2BtD,EAA3B,OACHzG,GAAG,UAAOgK,EAAP,cAAgBD,EAAhB,WACH/J,GAAG,UAAOiK,EAAP,kCAAoCD,EAApC,QACHhK,GAAG,iBACHA,GAAG,UAAOkK,EAAP,gBACHlK,GAAG,qBAAkBkK,EAAlB,eAA4BD,EAA5B,OACHjK,GAAG,UAAOmK,EAAP,gBACHnK,GAAG,qBAAkBmK,EAAlB,eAA4BN,EAA5B,OACH7J,GAAG,qBACHA,GAAG,UAAOoK,EAAP,wBACHpK,GAAG,iBACIrB,KAAK8E,IAER,IAAK,IACDzD,GAAG,cAAWoK,EAAX,uBAA6B7D,EAA7B,OACH,MACJ,IAAK,KACDvG,GAAG,cAAWoK,EAAX,uBAA6B7D,EAA7B,OACH,MACJ,IAAK,IACDvG,GAAG,cAAWoK,EAAX,uBAA6B7D,EAA7B,OACH,MACJ,IAAK,KACDvG,GAAG,cAAWoK,EAAX,sBAA4B7D,EAA5B,OACH,MACJ,IAAK,IACDvG,GAAG,cAAWoK,EAAX,uBAA6B7D,EAA7B,OACH,MACJ,IAAK,KACDvG,GAAG,cAAWoK,EAAX,sBAA4B7D,EAA5B,OAGXvG,GAAG,wBACHA,GAAG,kBACHA,GAAG,yBACHA,GAAG,eAAY0G,EAAZ,OACH1G,GAAG,UAAOuG,EAAP,OACHvG,GAAG,wBACHA,GAAG,kBACHA,GAAG,yBACHA,GAAG,UAAO0G,EAAP,OACH1G,GAAG,UAAO8J,EAAP,cAAgBA,EAAhB,WACH9J,GAAG,eAAYwG,EAAZ,OACHxG,GAAG,UAAOyG,EAAP,OAEC4D,EAAK/M,EAAI6C,UAAemK,EAAKhN,EAAI6C,UAAeoK,EAAKjN,EAAI6C,UAEzDqK,EAAKlN,EAAIqH,SAAc8F,EAAKnN,EAAIqH,SAEpC3E,GAAG,UAAOqK,EAAP,YACHrK,GAAG,UAAOsK,EAAP,yBAA0BD,EAA1B,SACHrK,GAAG,UAAOwK,EAAP,QACHxK,GAAG,cAAWsK,EAAX,wBAA6BG,EAA7B,QACHzK,GAAG,UAAOuK,EAAP,cAAehG,EAAf,cAAwB8F,EAAxB,QACHrK,GAAG,6BAA0BuK,EAA1B,eAAmCD,EAAnC,OACHtK,GAAG,UAAOqK,EAAP,cAAeA,EAAf,YACHrK,GAAG,UAAOsK,EAAP,yBAA0BD,EAA1B,QACHrK,GAAG,eAAYwK,EAAZ,QAGHxK,GAAG,UAAOyK,EAAP,QACHzK,GAAG,UAAOuK,EAAP,cAAehG,EAAf,cAAwB8F,EAAxB,OACHrK,GAAG,6BAA0BuK,EAA1B,aACHvK,GAAG,aACHA,GAAG,0BAEP,MAEJ,KAAKzC,EAAKM,QACV,KAAKN,EAAKO,QAEE+L,EAAMvM,EAAI6C,UAAe2J,EAAMxM,EAAI6C,UAAe4J,EAAMzM,EAAI6C,UAAe6J,EAAM1M,EAAI6C,UAAe8J,EAAM3M,EAAI6C,UAC9G+J,EAAM5M,EAAI6C,UAAgBiK,EAAM9M,EAAI6C,UAEpCsG,EAAMnJ,EAAIqH,SAAc4B,EAAMjJ,EAAIqH,SAAc+B,EAAMpJ,EAAIqH,SAAc6B,EAAMlJ,EAAIqH,SAiBtF,OAfA3E,GAAG,UAAO6J,EAAP,cAAgBvF,EAAO3E,MAAvB,OACHK,GAAG,UAAO8J,EAAP,cAAgBvF,EAAhB,OACHvE,GAAG,UAAOwG,EAAP,OACHxG,GAAG,UAAO+J,EAAP,iCAAmCD,EAAnC,QACH9J,GAAG,aAAU+J,EAAV,sBAA2BtD,EAA3B,OACHzG,GAAG,UAAOgK,EAAP,cAAgBD,EAAhB,WACH/J,GAAG,UAAOiK,EAAP,kCAAoCD,EAApC,QAEHhK,GAAG,iBACHA,GAAG,UAAOkK,EAAP,gBACHlK,GAAG,qBAAkBkK,EAAlB,eAA4BD,EAA5B,OACH3M,EAAI8C,aAAa9C,EAAI+C,YAAYwH,UAAW,EAC5C7H,GAAG,eACHA,GAAG,UAAOoK,EAAP,wBACHpK,GAAG,iBACIrB,KAAK8E,IAER,IAAK,IACDzD,GAAG,cAAWoK,EAAX,eAAqBP,EAArB,kBAAkCtD,EAAlC,OACH,MACJ,IAAK,KACDvG,GAAG,cAAWoK,EAAX,eAAqBP,EAArB,kBAAkCtD,EAAlC,OACH,MACJ,IAAK,IACDvG,GAAG,cAAWoK,EAAX,eAAqBP,EAArB,kBAAkCtD,EAAlC,OACH,MACJ,IAAK,KACDvG,GAAG,cAAWoK,EAAX,cAAoBP,EAApB,kBAAiCtD,EAAjC,OACH,MACJ,IAAK,IACDvG,GAAG,cAAWoK,EAAX,eAAqBP,EAArB,kBAAkCtD,EAAlC,OACH,MACJ,IAAK,KACDvG,GAAG,cAAWoK,EAAX,cAAoBP,EAApB,kBAAiCtD,EAAjC,OAGXvG,GAAG,wBACHA,GAAG,kBACHA,GAAG,yBACHA,GAAG,eAAY0G,EAAZ,OACH1G,GAAG,UAAOuG,EAAP,OACHvG,GAAG,wBACHA,GAAG,kBACHA,GAAG,yBACHA,GAAG,UAAO0G,EAAP,OACH1G,GAAG,UAAO8J,EAAP,cAAgBA,EAAhB,WACH9J,GAAG,eAAYwG,EAAZ,OACHxG,GAAG,UAAOyG,EAAP,OAEC4D,EAAK/M,EAAI6C,UAAemK,EAAKhN,EAAI6C,UAAeoK,EAAKjN,EAAI6C,UAEzDqK,EAAKlN,EAAIqH,SAAc8F,EAAKnN,EAAIqH,SAEpC3E,GAAG,UAAOqK,EAAP,YACHrK,GAAG,UAAOsK,EAAP,yBAA0BD,EAA1B,SACHrK,GAAG,UAAOwK,EAAP,QACHxK,GAAG,cAAWsK,EAAX,wBAA6BG,EAA7B,QACHzK,GAAG,UAAOuK,EAAP,cAAehG,EAAf,cAAwB8F,EAAxB,QACHrK,GAAG,6BAA0BuK,EAA1B,eAAmCD,EAAnC,OACHtK,GAAG,UAAOqK,EAAP,cAAeA,EAAf,YACHrK,GAAG,UAAOsK,EAAP,yBAA0BD,EAA1B,QACHrK,GAAG,eAAYwK,EAAZ,QAGHxK,GAAG,UAAOyK,EAAP,QACHzK,GAAG,UAAOuK,EAAP,cAAehG,EAAf,cAAwB8F,EAAxB,OACHrK,GAAG,6BAA0BuK,EAA1B,aACHvK,GAAG,aACHA,GAAG,0BAEP,MAGJ,KAAKzC,EAAK8B,KACV,KAAK9B,EAAK+C,YAGb,GAAI+D,EAAO7E,MAAQjC,EAAKO,QACzB,OAAQwG,EAAO9E,MACX,KAAKjC,EAAKO,QAEE+L,EAAMvM,EAAI6C,UAAe2J,EAAMxM,EAAI6C,UAAvC,IAAsDuK,EAAQpN,EAAI6C,UACrCwK,GAAzBZ,EAAMzM,EAAI6C,UAAuB7C,EAAI6C,WACrCyK,GADoDZ,EAAM1M,EAAI6C,UACpD7C,EAAI6C,WAAe0K,EAASvN,EAAI6C,UAC1CqG,EAAMlJ,EAAIqH,SAAc8B,EAAMnJ,EAAIqH,SAAcD,EAAKpH,EAAIqH,SAAcC,EAAKtH,EAAIqH,SAAcS,EAAK9H,EAAIqH,SAsB3G,OApBA3E,GAAG,UAAO6J,EAAP,cAAgBxF,EAAO1E,MAAvB,OACHK,GAAG,UAAO8J,EAAP,cAAgBxF,EAAO3E,MAAvB,OAEHK,GAAG,UAAO2K,EAAP,cACH3K,GAAG,UAAO+J,EAAP,aACH/J,GAAG,UAAO0K,EAAP,YACH1K,GAAG,UAAOwG,EAAP,OACHxG,GAAG,UAAOgK,EAAP,iCAAmCD,EAAnC,QACH/J,GAAG,aAAUgK,EAAV,wBAA6BvD,EAA7B,OACHzG,GAAG,UAAO+J,EAAP,cAAgBA,EAAhB,YACH/J,GAAG,UAAO0K,EAAP,cAAkBA,EAAlB,YACH1K,GAAG,eAAYwG,EAAZ,QAEHxG,GAAG,UAAOyG,EAAP,QAGHzG,GAAG,gBAAa+J,EAAb,YACH/J,GAAG,UAAO4K,EAAP,cACH5K,GAAG,UAAO6K,EAAP,cAEIlM,KAAK8E,IAEJ,IAAK,IACDzD,GAAG,cAAW6J,EAAX,eAAqBC,EAArB,kBAAkC1E,EAAlC,OACH,MACJ,IAAK,KACDpF,GAAG,cAAW6J,EAAX,eAAqBC,EAArB,kBAAkC1E,EAAlC,OACH,MACJ,IAAK,IACDpF,GAAG,cAAW6J,EAAX,eAAqBC,EAArB,kBAAkC1E,EAAlC,OACH,MACJ,IAAK,KACDpF,GAAG,cAAW6J,EAAX,cAAoBC,EAApB,kBAAiC1E,EAAjC,OACH,MACJ,IAAK,IACDpF,GAAG,cAAW6J,EAAX,eAAqBC,EAArB,kBAAkC1E,EAAlC,OACH,MACJ,IAAK,KACDpF,GAAG,cAAW6J,EAAX,cAAoBC,EAApB,kBAAiC1E,EAAjC,OAIfpF,GAAG,UAAO0E,EAAP,QACH1E,GAAG,cAAW0K,EAAX,uBAA+B9F,EAA/B,QACH5E,GAAG,6BAA0B6K,EAA1B,aACH7K,GAAG,UAAO6K,EAAP,cAAmBA,EAAnB,YACH7K,GAAG,UAAO0K,EAAP,cAAkBA,EAAlB,YACH1K,GAAG,eAAY0E,EAAZ,QAGH1E,GAAG,UAAOoF,EAAP,QACHpF,GAAG,cAAW0K,EAAX,uBAA+B9F,EAA/B,QACH5E,GAAG,6BAA0B6K,EAA1B,aACH7K,GAAG,UAAO6K,EAAP,cAAmBA,EAAnB,YACH7K,GAAG,UAAO0K,EAAP,cAAkBA,EAAlB,YACH1K,GAAG,eAAYoF,EAAZ,QAEHpF,GAAG,UAAO4E,EAAP,QACH5E,GAAG,6BAA0B6K,EAA1B,cACH7K,GAAG,gBAAa2K,EAAb,QAEHxG,EAAYyG,EAEhB,MACJ,KAAKrN,EAAK0C,aAKb,GAAIoE,EAAO7E,MAAQjC,EAAK0C,OACzB,OAAQqE,EAAO9E,MACX,KAAKjC,EAAKO,QAEN,MACJ,KAAKP,EAAK0C,OAEE4J,EAAMvM,EAAI6C,UAAe2J,EAAMxM,EAAI6C,UAAe4J,EAAMzM,EAAI6C,UAAeuK,EAAQpN,EAAI6C,UACvFyK,EAAUtN,EAAI6C,UAAe0K,EAASvN,EAAI6C,UAAewK,EAAQrN,EAAI6C,UACrE6J,EAAM1M,EAAI6C,UAAe+J,EAAM5M,EAAI6C,UAAegK,EAAM7M,EAAI6C,UAAeiK,EAAM9M,EAAI6C,UACrFqG,EAAMlJ,EAAIqH,SAAc8B,EAAMnJ,EAAIqH,SAAcD,EAAKpH,EAAIqH,SAAcC,EAAKtH,EAAIqH,SAChFS,EAAK9H,EAAIqH,SAkCb,OAhCA3E,GAAG,UAAO6J,EAAP,cAAgBxF,EAAO1E,MAAvB,OACHK,GAAG,UAAO8J,EAAP,cAAgBxF,EAAO3E,MAAvB,OAGHK,GAAG,UAAO2K,EAAP,cACH3K,GAAG,UAAO+J,EAAP,aACH/J,GAAG,UAAO0K,EAAP,YACH1K,GAAG,UAAOwG,EAAP,OACHxG,GAAG,UAAOgK,EAAP,iCAAmCD,EAAnC,QACH/J,GAAG,aAAUgK,EAAV,sBAA2BvD,EAA3B,OACHzG,GAAG,UAAO+J,EAAP,cAAgBA,EAAhB,YACH/J,GAAG,UAAO0K,EAAP,cAAkBA,EAAlB,YACH1K,GAAG,eAAYwG,EAAZ,QAKHxG,GAAG,UAAOyG,EAAP,QAGHzG,GAAG,gBAAa+J,EAAb,YACH/J,GAAG,UAAO4K,EAAP,cACH5K,GAAG,UAAO6K,EAAP,cAEH7K,GAAG,iBACHA,GAAG,UAAOkK,EAAP,gBACHlK,GAAG,qBAAkBkK,EAAlB,eAA4BL,EAA5B,OACH7J,GAAG,UAAOmK,EAAP,gBACHnK,GAAG,qBAAkBmK,EAAlB,eAA4BL,EAA5B,OACH9J,GAAG,qBACHA,GAAG,UAAOoK,EAAP,wBACHpK,GAAG,iBACIrB,KAAK8E,IAER,IAAK,IACDzD,GAAG,cAAWoK,EAAX,uBAA6BhF,EAA7B,OACH,MACJ,IAAK,KACDpF,GAAG,cAAWoK,EAAX,uBAA6BhF,EAA7B,OACH,MACJ,IAAK,IACDpF,GAAG,cAAWoK,EAAX,uBAA6BhF,EAA7B,OACH,MACJ,IAAK,KACDpF,GAAG,cAAWoK,EAAX,sBAA4BhF,EAA5B,OACH,MACJ,IAAK,IACDpF,GAAG,cAAWoK,EAAX,uBAA6BhF,EAA7B,OACH,MACJ,IAAK,KACDpF,GAAG,cAAWoK,EAAX,sBAA4BhF,EAA5B,OAIXpF,GAAG,UAAO0E,EAAP,QACH1E,GAAG,cAAW0K,EAAX,uBAA+B9F,EAA/B,QACH5E,GAAG,6BAA0B6K,EAA1B,aACH7K,GAAG,UAAO6K,EAAP,cAAmBA,EAAnB,YACH7K,GAAG,UAAO0K,EAAP,cAAkBA,EAAlB,YACH1K,GAAG,eAAY0E,EAAZ,QAEH1E,GAAG,UAAOoF,EAAP,QACHpF,GAAG,cAAW0K,EAAX,uBAA+B9F,EAA/B,QACH5E,GAAG,6BAA0B6K,EAA1B,aACH7K,GAAG,UAAO6K,EAAP,cAAmBA,EAAnB,YACH7K,GAAG,UAAO0K,EAAP,cAAkBA,EAAlB,YACH1K,GAAG,eAAYoF,EAAZ,QAEHpF,GAAG,UAAO4E,EAAP,QACH5E,GAAG,6BAA0B6K,EAA1B,cACH7K,GAAG,gBAAa2K,EAAb,QAEHxG,EAAYyG,OAOvB,GAAGtG,EAAO9E,MAAQjC,EAAK8B,KAGxB,OADA8E,EAAYuB,EACLrB,EAAO7E,MAEV,KAAKjC,EAAK0C,OACE4J,EAAMvM,EAAI6C,UAAe2J,EAAMxM,EAAI6C,UAAe4J,EAAMzM,EAAI6C,UAAe6J,EAAM1M,EAAI6C,UAAe8J,EAAM3M,EAAI6C,UAC9G+J,EAAM5M,EAAI6C,UAAegK,EAAM7M,EAAI6C,UAAeiK,EAAM9M,EAAI6C,UAE5DsG,EAAMnJ,EAAIqH,SAAc4B,EAAMjJ,EAAIqH,SAAc+B,EAAMpJ,EAAIqH,SAAc6B,EAAMlJ,EAAIqH,SAiBtF,OAfA3E,GAAG,UAAO6J,EAAP,cAAgBxF,EAAO1E,MAAvB,OACHK,GAAG,UAAO8J,EAAP,cAAgBpE,EAAhB,OACH1F,GAAG,UAAOwG,EAAP,OACHxG,GAAG,UAAO+J,EAAP,iCAAmCD,EAAnC,QACH9J,GAAG,aAAU+J,EAAV,sBAA2BtD,EAA3B,OACHzG,GAAG,UAAOgK,EAAP,cAAgBD,EAAhB,WACH/J,GAAG,UAAOiK,EAAP,2BAA6BD,EAA7B,QACHhK,GAAG,iBACHA,GAAG,UAAOkK,EAAP,gBACHlK,GAAG,qBAAkBkK,EAAlB,eAA4BL,EAA5B,OACH7J,GAAG,UAAOmK,EAAP,gBACHnK,GAAG,qBAAkBmK,EAAlB,eAA4BF,EAA5B,OACHjK,GAAG,qBACHA,GAAG,UAAOoK,EAAP,wBACHpK,GAAG,iBACIrB,KAAK8E,IAER,IAAK,IACDzD,GAAG,cAAWoK,EAAX,uBAA6B7D,EAA7B,OACH,MACJ,IAAK,KACDvG,GAAG,cAAWoK,EAAX,uBAA6B7D,EAA7B,OACH,MACJ,IAAK,IACDvG,GAAG,cAAWoK,EAAX,uBAA6B7D,EAA7B,OACH,MACJ,IAAK,KACDvG,GAAG,cAAWoK,EAAX,sBAA4B7D,EAA5B,OACH,MACJ,IAAK,IACDvG,GAAG,cAAWoK,EAAX,uBAA6B7D,EAA7B,OACH,MACJ,IAAK,KACDvG,GAAG,cAAWoK,EAAX,sBAA4B7D,EAA5B,OAGXvG,GAAG,wBACHA,GAAG,kBACHA,GAAG,yBACHA,GAAG,eAAY0G,EAAZ,OACH1G,GAAG,UAAOuG,EAAP,OACHvG,GAAG,wBACHA,GAAG,kBACHA,GAAG,yBACHA,GAAG,UAAO0G,EAAP,OACH1G,GAAG,UAAO8J,EAAP,cAAgBA,EAAhB,WACH9J,GAAG,eAAYwG,EAAZ,OACHxG,GAAG,UAAOyG,EAAP,OAEC4D,EAAK/M,EAAI6C,UAAemK,EAAKhN,EAAI6C,UAAeoK,EAAKjN,EAAI6C,UAEzDqK,EAAKlN,EAAIqH,SAAc8F,EAAKnN,EAAIqH,SAEpC3E,GAAG,UAAOqK,EAAP,YACHrK,GAAG,UAAOsK,EAAP,yBAA0BD,EAA1B,SACHrK,GAAG,UAAOwK,EAAP,QACHxK,GAAG,cAAWsK,EAAX,wBAA6BG,EAA7B,QACHzK,GAAG,UAAOuK,EAAP,cAAe7E,EAAf,cAAwB2E,EAAxB,QACHrK,GAAG,6BAA0BuK,EAA1B,eAAmCD,EAAnC,OACHtK,GAAG,UAAOqK,EAAP,cAAeA,EAAf,YACHrK,GAAG,UAAOsK,EAAP,yBAA0BD,EAA1B,QACHrK,GAAG,eAAYwK,EAAZ,QAGHxK,GAAG,UAAOyK,EAAP,QACHzK,GAAG,UAAOuK,EAAP,cAAe7E,EAAf,cAAwB2E,EAAxB,OACHrK,GAAG,6BAA0BuK,EAA1B,aACHvK,GAAG,aACHA,GAAG,0BAEP,MAEJ,KAAKzC,EAAKM,QACV,KAAKN,EAAKO,QACF+L,EAAMvM,EAAI6C,UAAe2J,EAAMxM,EAAI6C,UAAe4J,EAAMzM,EAAI6C,UAAe6J,EAAM1M,EAAI6C,UAAe8J,EAAM3M,EAAI6C,UAC9G+J,EAAM5M,EAAI6C,UAAegK,EAAM7M,EAAI6C,UAEnCsG,EAAMnJ,EAAIqH,SAAc4B,EAAMjJ,EAAIqH,SAAc+B,EAAMpJ,EAAIqH,SAAc6B,EAAMlJ,EAAIqH,SAiBtF,OAfA3E,GAAG,UAAO6J,EAAP,cAAgBxF,EAAO1E,MAAvB,OACHK,GAAG,UAAO8J,EAAP,cAAgBpE,EAAhB,OACH1F,GAAG,UAAOwG,EAAP,OACHxG,GAAG,UAAO+J,EAAP,iCAAmCD,EAAnC,QACH9J,GAAG,aAAU+J,EAAV,sBAA2BtD,EAA3B,OACHzG,GAAG,UAAOgK,EAAP,cAAgBD,EAAhB,WACH/J,GAAG,UAAOiK,EAAP,2BAA6BD,EAA7B,QAEHhK,GAAG,UAAOkK,EAAP,gBACHlK,GAAG,qBAAkBkK,EAAlB,eAA4BD,EAA5B,OACH3M,EAAI8C,aAAa9C,EAAI+C,YAAYwH,UAAW,EAC5C7H,GAAG,eACHA,GAAG,UAAOmK,EAAP,wBACHnK,GAAG,iBAEIrB,KAAK8E,IAER,IAAK,IACDzD,GAAG,cAAW6J,EAAX,eAAqBM,EAArB,kBAAkC5D,EAAlC,OACH,MACJ,IAAK,KACDvG,GAAG,cAAW6J,EAAX,eAAqBM,EAArB,kBAAkC5D,EAAlC,OACH,MACJ,IAAK,IACDvG,GAAG,cAAW6J,EAAX,eAAqBM,EAArB,kBAAkC5D,EAAlC,OACH,MACJ,IAAK,KACDvG,GAAG,cAAW6J,EAAX,cAAoBM,EAApB,kBAAiC5D,EAAjC,OACH,MACJ,IAAK,IACDvG,GAAG,cAAW6J,EAAX,eAAqBM,EAArB,kBAAkC5D,EAAlC,OACH,MACJ,IAAK,KACDvG,GAAG,cAAW6J,EAAX,cAAoBM,EAApB,kBAAiC5D,EAAjC,OAGXvG,GAAG,wBACHA,GAAG,kBACHA,GAAG,yBACHA,GAAG,eAAY0G,EAAZ,OACH1G,GAAG,UAAOuG,EAAP,OACHvG,GAAG,wBACHA,GAAG,kBACHA,GAAG,yBACHA,GAAG,UAAO0G,EAAP,OACH1G,GAAG,UAAO8J,EAAP,cAAgBA,EAAhB,WACH9J,GAAG,eAAYwG,EAAZ,OACHxG,GAAG,UAAOyG,EAAP,OAEC4D,EAAK/M,EAAI6C,UAAemK,EAAKhN,EAAI6C,UAAeoK,EAAKjN,EAAI6C,UAEzDqK,EAAKlN,EAAIqH,SAAc8F,EAAKnN,EAAIqH,SAEpC3E,GAAG,UAAOqK,EAAP,YACHrK,GAAG,UAAOsK,EAAP,yBAA0BD,EAA1B,SACHrK,GAAG,UAAOwK,EAAP,QACHxK,GAAG,cAAWsK,EAAX,wBAA6BG,EAA7B,QACHzK,GAAG,UAAOuK,EAAP,cAAe7E,EAAf,cAAwB2E,EAAxB,QACHrK,GAAG,6BAA0BuK,EAA1B,eAAmCD,EAAnC,OACHtK,GAAG,UAAOqK,EAAP,cAAeA,EAAf,YACHrK,GAAG,UAAOsK,EAAP,yBAA0BD,EAA1B,QACHrK,GAAG,eAAYwK,EAAZ,QAGHxK,GAAG,UAAOyK,EAAP,QACHzK,GAAG,UAAOuK,EAAP,cAAe7E,EAAf,cAAwB2E,EAAxB,OACHrK,GAAG,6BAA0BuK,EAA1B,aACHvK,GAAG,aACHA,GAAG,0BAEP,MAEA,KAAKzC,EAAK8B,KACV,KAAK9B,EAAK+C,YAGb,GAAGgE,EAAO9E,MAAQjC,EAAK+C,MAExB,OADA6D,EAAYuB,EACLrB,EAAO7E,MAEV,KAAKjC,EAAK0C,OAEE4J,EAAMvM,EAAI6C,UAAe2J,EAAMxM,EAAI6C,UAAe4J,EAAMzM,EAAI6C,UAAe6J,EAAM1M,EAAI6C,UAAe8J,EAAM3M,EAAI6C,UAC9G+J,EAAM5M,EAAI6C,UAAegK,EAAM7M,EAAI6C,UAAeiK,EAAM9M,EAAI6C,UAE5DsG,EAAMnJ,EAAIqH,SAAc4B,EAAMjJ,EAAIqH,SAAc+B,EAAMpJ,EAAIqH,SAAc6B,EAAMlJ,EAAIqH,SAiBtF,OAfA3E,GAAG,UAAO6J,EAAP,cAAgBxF,EAAO1E,MAAvB,OACHK,GAAG,UAAO8J,EAAP,cAAgBpE,EAAhB,OACH1F,GAAG,UAAOwG,EAAP,OACHxG,GAAG,UAAO+J,EAAP,iCAAmCD,EAAnC,QACH9J,GAAG,aAAU+J,EAAV,sBAA2BtD,EAA3B,OACHzG,GAAG,UAAOgK,EAAP,cAAgBD,EAAhB,WACH/J,GAAG,UAAOiK,EAAP,kCAAoCD,EAApC,QACHhK,GAAG,iBACHA,GAAG,UAAOkK,EAAP,gBACHlK,GAAG,qBAAkBkK,EAAlB,eAA4BL,EAA5B,OACH7J,GAAG,UAAOmK,EAAP,gBACHnK,GAAG,qBAAkBmK,EAAlB,eAA4BF,EAA5B,OACHjK,GAAG,qBACHA,GAAG,UAAOoK,EAAP,wBACHpK,GAAG,iBACIrB,KAAK8E,IAER,IAAK,IACDzD,GAAG,cAAWoK,EAAX,uBAA6B7D,EAA7B,OACH,MACJ,IAAK,KACDvG,GAAG,cAAWoK,EAAX,uBAA6B7D,EAA7B,OACH,MACJ,IAAK,IACDvG,GAAG,cAAWoK,EAAX,uBAA6B7D,EAA7B,OACH,MACJ,IAAK,KACDvG,GAAG,cAAWoK,EAAX,sBAA4B7D,EAA5B,OACH,MACJ,IAAK,IACDvG,GAAG,cAAWoK,EAAX,uBAA6B7D,EAA7B,OACH,MACJ,IAAK,KACDvG,GAAG,cAAWoK,EAAX,sBAA4B7D,EAA5B,OAGXvG,GAAG,wBACHA,GAAG,kBACHA,GAAG,yBACHA,GAAG,eAAY0G,EAAZ,OACH1G,GAAG,UAAOuG,EAAP,OACHvG,GAAG,wBACHA,GAAG,kBACHA,GAAG,yBACHA,GAAG,UAAO0G,EAAP,OACH1G,GAAG,UAAO8J,EAAP,cAAgBA,EAAhB,WACH9J,GAAG,eAAYwG,EAAZ,OACHxG,GAAG,UAAOyG,EAAP,OAEC4D,EAAK/M,EAAI6C,UAAemK,EAAKhN,EAAI6C,UAAeoK,EAAKjN,EAAI6C,UAEzDqK,EAAKlN,EAAIqH,SAAc8F,EAAKnN,EAAIqH,SAEpC3E,GAAG,UAAOqK,EAAP,YACHrK,GAAG,UAAOsK,EAAP,yBAA0BD,EAA1B,SACHrK,GAAG,UAAOwK,EAAP,QACHxK,GAAG,cAAWsK,EAAX,wBAA6BG,EAA7B,QACHzK,GAAG,UAAOuK,EAAP,cAAe7E,EAAf,cAAwB2E,EAAxB,QACHrK,GAAG,6BAA0BuK,EAA1B,eAAmCD,EAAnC,OACHtK,GAAG,UAAOqK,EAAP,cAAeA,EAAf,YACHrK,GAAG,UAAOsK,EAAP,yBAA0BD,EAA1B,QACHrK,GAAG,eAAYwK,EAAZ,QAGHxK,GAAG,UAAOyK,EAAP,QACHzK,GAAG,UAAOuK,EAAP,cAAe7E,EAAf,cAAwB2E,EAAxB,OACHrK,GAAG,6BAA0BuK,EAA1B,aACHvK,GAAG,aACHA,GAAG,0BAEP,MAEJ,KAAKzC,EAAKM,QACV,KAAKN,EAAKO,QAEE+L,EAAMvM,EAAI6C,UAAe2J,EAAMxM,EAAI6C,UAAe4J,EAAMzM,EAAI6C,UAAe6J,EAAM1M,EAAI6C,UAAe8J,EAAM3M,EAAI6C,UAC9G+J,EAAM5M,EAAI6C,UAAgBiK,EAAM9M,EAAI6C,UAEpCsG,EAAMnJ,EAAIqH,SAAc4B,EAAMjJ,EAAIqH,SAAc+B,EAAMpJ,EAAIqH,SAAc6B,EAAMlJ,EAAIqH,SAiBtF,OAfA3E,GAAG,UAAO6J,EAAP,cAAgBxF,EAAO1E,MAAvB,OACHK,GAAG,UAAO8J,EAAP,cAAgBpE,EAAhB,OACH1F,GAAG,UAAOwG,EAAP,OACHxG,GAAG,UAAO+J,EAAP,iCAAmCD,EAAnC,QACH9J,GAAG,aAAU+J,EAAV,sBAA2BtD,EAA3B,OACHzG,GAAG,UAAOgK,EAAP,cAAgBD,EAAhB,WACH/J,GAAG,UAAOiK,EAAP,kCAAoCD,EAApC,QAEHhK,GAAG,iBACHA,GAAG,UAAOkK,EAAP,gBACHlK,GAAG,qBAAkBkK,EAAlB,eAA4BD,EAA5B,OACH3M,EAAI8C,aAAa9C,EAAI+C,YAAYwH,UAAW,EAC5C7H,GAAG,eACHA,GAAG,UAAOoK,EAAP,wBACHpK,GAAG,iBACIrB,KAAK8E,IAER,IAAK,IACDzD,GAAG,cAAW6J,EAAX,eAAqBO,EAArB,kBAAkC7D,EAAlC,OACH,MACJ,IAAK,KACDvG,GAAG,cAAW6J,EAAX,eAAqBO,EAArB,kBAAkC7D,EAAlC,OACH,MACJ,IAAK,IACDvG,GAAG,cAAW6J,EAAX,eAAqBO,EAArB,kBAAkC7D,EAAlC,OACH,MACJ,IAAK,KACDvG,GAAG,cAAW6J,EAAX,cAAoBO,EAApB,kBAAiC7D,EAAjC,OACH,MACJ,IAAK,IACDvG,GAAG,cAAW6J,EAAX,eAAqBO,EAArB,kBAAkC7D,EAAlC,OACH,MACJ,IAAK,KACDvG,GAAG,cAAW6J,EAAX,cAAoBO,EAApB,kBAAiC7D,EAAjC,OAGXvG,GAAG,wBACHA,GAAG,kBACHA,GAAG,yBACHA,GAAG,eAAY0G,EAAZ,OACH1G,GAAG,UAAOuG,EAAP,OACHvG,GAAG,wBACHA,GAAG,kBACHA,GAAG,yBACHA,GAAG,UAAO0G,EAAP,OACH1G,GAAG,UAAO8J,EAAP,cAAgBA,EAAhB,WACH9J,GAAG,eAAYwG,EAAZ,OACHxG,GAAG,UAAOyG,EAAP,OAEC4D,EAAK/M,EAAI6C,UAAemK,EAAKhN,EAAI6C,UAAeoK,EAAKjN,EAAI6C,UAEzDqK,EAAKlN,EAAIqH,SAAc8F,EAAKnN,EAAIqH,SAEpC3E,GAAG,UAAOqK,EAAP,YACHrK,GAAG,UAAOsK,EAAP,yBAA0BD,EAA1B,SACHrK,GAAG,UAAOwK,EAAP,QACHxK,GAAG,cAAWsK,EAAX,wBAA6BG,EAA7B,QACHzK,GAAG,UAAOuK,EAAP,cAAe7E,EAAf,cAAwB2E,EAAxB,QACHrK,GAAG,6BAA0BuK,EAA1B,eAAmCD,EAAnC,OACHtK,GAAG,UAAOqK,EAAP,cAAeA,EAAf,YACHrK,GAAG,UAAOsK,EAAP,yBAA0BD,EAA1B,QACHrK,GAAG,eAAYwK,EAAZ,QAGHxK,GAAG,UAAOyK,EAAP,QACHzK,GAAG,UAAOuK,EAAP,cAAe7E,EAAf,cAAwB2E,EAAxB,OACHrK,GAAG,6BAA0BuK,EAA1B,aACHvK,GAAG,aACHA,GAAG,0BAEP,MAGJ,KAAKzC,EAAK8B,KACV,KAAK9B,EAAK+C,YAGb,GAAIgE,EAAO9E,MAAQjC,EAAKO,QACzB,OAAQuG,EAAO7E,MACX,KAAKjC,EAAKO,QAEE+L,EAAMvM,EAAI6C,UAAe2J,EAAMxM,EAAI6C,UAAeuK,EAAQpN,EAAI6C,UAC9D4J,EAAMzM,EAAI6C,UAAewK,EAAQrN,EAAI6C,UAAe6J,EAAM1M,EAAI6C,UAC9DyK,EAAUtN,EAAI6C,UAAe0K,EAASvN,EAAI6C,UAC1CqG,EAAMlJ,EAAIqH,SAAc8B,EAAMnJ,EAAIqH,SAAcD,EAAKpH,EAAIqH,SAAcC,EAAKtH,EAAIqH,SAAcS,EAAK9H,EAAIqH,SAsB3G,OApBA3E,GAAG,UAAO6J,EAAP,cAAgBvF,EAAO3E,MAAvB,OACHK,GAAG,UAAO8J,EAAP,cAAgBzF,EAAO1E,MAAvB,OAEHK,GAAG,UAAO2K,EAAP,cACH3K,GAAG,UAAO+J,EAAP,aACH/J,GAAG,UAAO0K,EAAP,YACH1K,GAAG,UAAOwG,EAAP,OACHxG,GAAG,UAAOgK,EAAP,iCAAmCD,EAAnC,QACH/J,GAAG,aAAUgK,EAAV,wBAA6BvD,EAA7B,OACHzG,GAAG,UAAO+J,EAAP,cAAgBA,EAAhB,YACH/J,GAAG,UAAO0K,EAAP,cAAkBA,EAAlB,YACH1K,GAAG,eAAYwG,EAAZ,QAEHxG,GAAG,UAAOyG,EAAP,QAGHzG,GAAG,gBAAa+J,EAAb,YACH/J,GAAG,UAAO4K,EAAP,cACH5K,GAAG,UAAO6K,EAAP,cAEIlM,KAAK8E,IAEJ,IAAK,IACDzD,GAAG,cAAW6J,EAAX,eAAqBC,EAArB,kBAAkC1E,EAAlC,OACH,MACJ,IAAK,KACDpF,GAAG,cAAW6J,EAAX,eAAqBC,EAArB,kBAAkC1E,EAAlC,OACH,MACJ,IAAK,IACDpF,GAAG,cAAW6J,EAAX,eAAqBC,EAArB,kBAAkC1E,EAAlC,OACH,MACJ,IAAK,KACDpF,GAAG,cAAW6J,EAAX,cAAoBC,EAApB,kBAAiC1E,EAAjC,OACH,MACJ,IAAK,IACDpF,GAAG,cAAW6J,EAAX,eAAqBC,EAArB,kBAAkC1E,EAAlC,OACH,MACJ,IAAK,KACDpF,GAAG,cAAW6J,EAAX,cAAoBC,EAApB,kBAAiC1E,EAAjC,OAIfpF,GAAG,UAAO0E,EAAP,QACH1E,GAAG,cAAW0K,EAAX,uBAA+B9F,EAA/B,QACH5E,GAAG,6BAA0B6K,EAA1B,aACH7K,GAAG,UAAO6K,EAAP,cAAmBA,EAAnB,YACH7K,GAAG,UAAO0K,EAAP,cAAkBA,EAAlB,YACH1K,GAAG,eAAY0E,EAAZ,QAGH1E,GAAG,UAAOoF,EAAP,QACHpF,GAAG,cAAW0K,EAAX,uBAA+B9F,EAA/B,QACH5E,GAAG,6BAA0B6K,EAA1B,aACH7K,GAAG,UAAO6K,EAAP,cAAmBA,EAAnB,YACH7K,GAAG,UAAO0K,EAAP,cAAkBA,EAAlB,YACH1K,GAAG,eAAYoF,EAAZ,QAEHpF,GAAG,UAAO4E,EAAP,QACH5E,GAAG,6BAA0B6K,EAA1B,cACH7K,GAAG,gBAAa2K,EAAb,QAEHxG,EAAYyG,EAEhB,MACJ,KAAKrN,EAAK0C,aAKb,GAAIqE,EAAO9E,MAAQjC,EAAK0C,OACzB,OAAQoE,EAAO7E,MACX,KAAKjC,EAAKO,QAEN,MACJ,KAAKP,EAAK0C,OAEE4J,EAAMvM,EAAI6C,UAAe2J,EAAMxM,EAAI6C,UAAe4J,EAAMzM,EAAI6C,UAAeuK,EAAQpN,EAAI6C,UACvFyK,EAAUtN,EAAI6C,UAAe0K,EAASvN,EAAI6C,UAAewK,EAAQrN,EAAI6C,UACrE6J,EAAM1M,EAAI6C,UAAe+J,EAAM5M,EAAI6C,UAAegK,EAAM7M,EAAI6C,UAAeiK,EAAM9M,EAAI6C,UACrFqG,EAAMlJ,EAAIqH,SAAc8B,EAAMnJ,EAAIqH,SAAcD,EAAKpH,EAAIqH,SAAcC,EAAKtH,EAAIqH,SAChFS,EAAK9H,EAAIqH,SAiCb,OA/BA3E,GAAG,UAAO6J,EAAP,cAAgBvF,EAAO3E,MAAvB,OACHK,GAAG,UAAO8J,EAAP,cAAgBzF,EAAO1E,MAAvB,OAGHK,GAAG,UAAO2K,EAAP,cACH3K,GAAG,UAAO+J,EAAP,aACH/J,GAAG,UAAO0K,EAAP,YACH1K,GAAG,UAAOwG,EAAP,OACHxG,GAAG,UAAOgK,EAAP,iCAAmCD,EAAnC,QACH/J,GAAG,aAAUgK,EAAV,sBAA2BvD,EAA3B,OACHzG,GAAG,UAAO+J,EAAP,cAAgBA,EAAhB,YACH/J,GAAG,UAAO0K,EAAP,cAAkBA,EAAlB,YACH1K,GAAG,eAAYwG,EAAZ,QAIHxG,GAAG,UAAOyG,EAAP,QAGHzG,GAAG,gBAAa+J,EAAb,YACH/J,GAAG,UAAO4K,EAAP,cACH5K,GAAG,UAAO6K,EAAP,cAEH7K,GAAG,iBACHA,GAAG,UAAOkK,EAAP,gBACHlK,GAAG,qBAAkBkK,EAAlB,eAA4BL,EAA5B,OACH7J,GAAG,UAAOmK,EAAP,gBACHnK,GAAG,qBAAkBmK,EAAlB,eAA4BL,EAA5B,OACH9J,GAAG,qBACHA,GAAG,UAAOoK,EAAP,wBACHpK,GAAG,iBACIrB,KAAK8E,IAER,IAAK,IACDzD,GAAG,cAAWoK,EAAX,uBAA6BhF,EAA7B,OACH,MACJ,IAAK,KACDpF,GAAG,cAAWoK,EAAX,uBAA6BhF,EAA7B,OACH,MACJ,IAAK,IACDpF,GAAG,cAAWoK,EAAX,uBAA6BhF,EAA7B,OACH,MACJ,IAAK,KACDpF,GAAG,cAAWoK,EAAX,sBAA4BhF,EAA5B,OACH,MACJ,IAAK,IACDpF,GAAG,cAAWoK,EAAX,uBAA6BhF,EAA7B,OACH,MACJ,IAAK,KACDpF,GAAG,cAAWoK,EAAX,sBAA4BhF,EAA5B,OAIXpF,GAAG,UAAO0E,EAAP,QACH1E,GAAG,cAAW0K,EAAX,uBAA+B9F,EAA/B,QACH5E,GAAG,6BAA0B6K,EAA1B,aACH7K,GAAG,UAAO6K,EAAP,cAAmBA,EAAnB,YACH7K,GAAG,UAAO0K,EAAP,cAAkBA,EAAlB,YACH1K,GAAG,eAAY0E,EAAZ,QAEH1E,GAAG,UAAOoF,EAAP,QACHpF,GAAG,cAAW0K,EAAX,uBAA+B9F,EAA/B,QACH5E,GAAG,6BAA0B6K,EAA1B,aACH7K,GAAG,UAAO6K,EAAP,cAAmBA,EAAnB,YACH7K,GAAG,UAAO0K,EAAP,cAAkBA,EAAlB,YACH1K,GAAG,eAAYoF,EAAZ,QAEHpF,GAAG,UAAO4E,EAAP,QACH5E,GAAG,6BAA0B6K,EAA1B,cACH7K,GAAG,gBAAa2K,EAAb,QAEHxG,EAAYyG,EAU5B,OAJGvG,EAAO7E,MAAQjC,EAAK8B,MAAQgF,EAAO7E,MAAQjC,EAAK+C,OAASgE,EAAO9E,MAAQjC,EAAK8B,MAAQiF,EAAO9E,MAAQjC,EAAK+C,QAExGN,GAAG,gBAAaoE,EAAb,QAEA,CAACpE,IAAIA,EAAIR,KAAKjC,EAAKU,QAAQ0B,MAAMwE,OAhpChD,MAopCA,SAASyF,EAAWxC,EAAK3D,EAAI4D,GACzB,IAAI1J,EAASyJ,EAAI5H,MAAM6H,EAAI7H,MAGvB,OADAtC,EAAc8D,KAAK,CAACmH,MAAM,mCAAD,OAAoC3K,EAAY4J,EAAI5H,MAApD,cAA+DhC,EAAY6J,EAAI7H,OAAQA,KAAK,YAAY4I,MAAM,EAAEC,QAAQ,KAC1I,EAEX,OAAO5E,GAEH,IAAK,IACD,OAAO2D,EAAIzH,OAAS0H,EAAI1H,MAC5B,IAAK,KACD,OAAOyH,EAAIzH,OAAS0H,EAAI1H,MAC5B,IAAK,IAEL,IAAK,KACD,OAAOyH,EAAIzH,OAAS0H,EAAI1H,MAC5B,IAAK,IACD,OAAOyH,EAAIzH,MAAQ0H,EAAI1H,MAC3B,IAAK,KACD,OAAOyH,EAAIzH,OAAS0H,EAAI1H,MAEhC,OAAO,I,wnBCzqCHzC,EAAkBD,EAAQ,IAA1BC,cACFI,EAAML,EAAQ,GAGd6N,EAEJ,WAAYvI,EAAU/C,GACrB,oBACCb,KAAK4D,UAAUA,EACf5D,KAAKa,KAAKA,GAIDuL,EAAb,kDAEE,WAAaxI,EAAW/C,GAAO,uCACvB+C,EAAW/C,GAHrB,4CAME,SAASmE,GAEP,IADF,EACMpE,EAAU,GADhB,cAIkBoE,GAJlB,IAIE,2BAAyB,CAAC,IAAjBE,EAAgB,QAEnBA,EAAIrE,MAAQjC,OAAK8B,OAEfV,KAAKa,MAAQtB,WAAS8M,IAEP,IAAbnH,EAAIlE,OAAaJ,EAAQyB,KAAK,IAAIuC,UAAQhG,OAAK0C,OAAO4D,EAAIlE,QAG9DJ,EAAUsE,EAAInE,QAAQuL,qBAb9B,8BAiBE,OAAO1L,IAxBX,oBA2BE,WAEEjC,EAAI8C,aAAa9C,EAAI+C,YAAY6K,OAAQ,EACzC,IAAIC,EAAM7N,EAAI6C,UACVH,EAAM,GAMV,OALAA,GAAG,iBACHA,GAAG,YACHA,GAAG,UAAOmL,EAAP,wBAGI,CAACnL,IAFRA,GAAG,eAEaR,KAAKjC,OAAK0C,OAAON,MAAMwL,OArC3C,GAA2BL,GAyCdM,EAAb,kDAEE,WAAY7I,EAAU/C,GACrB,uCACO+C,EAAU/C,GAJpB,4CAOE,SAAS+B,GAEP,IADF,EACMxC,EAAW,GACXQ,EAAU,GAFhB,cAGqBgC,GAHrB,IAGE,2BAA0B,CAAC,IAAhBE,EAAe,QAExB,GADAlC,EAAQyB,KAAKS,GACV9C,KAAKa,MAAMtB,WAASmN,IAErB,KAAIjJ,EAAMkJ,EAAkB7J,EAAK/B,SAC7BX,EAAWA,EAASI,OAAO,IAAIiM,EAAgBzM,KAAK4D,UAAU5D,KAAKa,MAAMJ,SAASgD,MAR5F,8BAaE,OAFA7C,EAAU+C,oBAAU3D,KAAK4D,UAAUhD,GACnCR,EAAWI,iBAAOI,EAAQR,KApB9B,sBAwBE,SAAS6B,EAAWC,EAAWC,GAE7B,IAAIoD,EAAgB,GAChBqH,EAAW,CAACtK,GAAGH,EAASC,IAAIG,MAAMvC,KAAKa,MAAMtB,WAAS8M,IAAM,IAAM,MACtE9G,EAAclD,KAAKuK,GAAU3K,EAAWI,KAAKuK,GAAUzK,EAASC,MAChE,IAAIyK,EAAa,CAACvK,GAAGH,EAASC,IAAIG,MAAM,KACxCgD,EAAclD,KAAKwK,GAAY5K,EAAWI,KAAKwK,GAAY1K,EAASC,MALtE,oBAM0BpC,KAAK4D,WAN/B,IAME,2BACA,CAAC,IADUA,EACX,QACMkJ,EAAgB,CAACxK,GAAGH,EAASC,IAAIG,MAAM,KAC3CgD,EAAclD,KAAKyK,GAAe7K,EAAWI,KAAKyK,GAAe3K,EAASC,MAC1E,IAAIM,EAAY,CAACJ,GAAGH,EAASC,IAAIG,MAAM,QACvCgD,EAAclD,KAAKK,GAAYT,EAAWI,KAAKK,GAAYP,EAASC,MACpE,IALF,EAKMQ,EAAQgB,EAAUf,SAASZ,EAAWC,EAAWC,GALvD,cAMqBS,GANrB,IAME,2BAA0B,CAAC,IAAhBE,EAAe,QACxBZ,EAAWG,KAAK,CAACG,KAAKE,EAAWJ,GAAGG,GAAGK,EAAKR,MAPhD,8BASE,IAAIyK,EAAgB,CAACzK,GAAGH,EAASC,IAAIG,MAAM,KAC3CgD,EAAclD,KAAK0K,GAAe9K,EAAWI,KAAK0K,GAAe5K,EAASC,OAjB9E,8BAmBE,OAAOmD,IA5CX,oBA+CE,WAEE5G,EAAI8C,aAAa9C,EAAI+C,YAAYsL,OAAQ,EACzC,IAAI3L,EAAM,GAGVA,GAAG,8CAA4CrB,KAAKwD,OAAjD,UAGH,IAAIiC,EAAM9G,EAAI6C,UACdH,GAAG,UAAQoE,EAAR,cAVG,oBAYc,KAZd,IAYN,2BAAyB,CAAC,IACpBwH,EADmB,QACLC,WAAW,GAC7B7L,GAAG,mCAAiC4L,EAAjC,QACH5L,GAAG,qBAfC,8BAiBNA,GAAG,kCACHA,GAAG,oBAEHA,GAAG,iCACHA,GAAG,kBACH,IAAI0H,EAAMpK,EAAI6C,UAMd,GALAH,GAAG,UAAQ0H,EAAR,iBACH1H,GAAG,qBAAmB0H,EAAnB,eAA6BtD,EAA7B,QACHpE,GAAG,aACHA,GAAG,kBAEArB,KAAK4D,UAAUjD,OAAS,EAC3B,CACE,IAAIwM,EADN,gBAE0BnN,KAAK4D,WAF/B,IAEE,2BAAwC,EACtCuJ,EADsC,QAClBhM,UACTN,MAAQjC,OAAKO,SAAWgO,EAAQtM,MAAQjC,OAAKM,UAEtDP,EAAI8C,aAAa9C,EAAI+C,YAAY0L,mBAAoB,EACrD/L,GAAO8L,EAAQ9L,IACfA,GAAG,iBACHA,GAAG,2BAAwB8L,EAAQnM,MAAhC,OACHK,GAAG,wBACHA,GAAG,iBAEF8L,EAAQtM,MAAQjC,OAAK0C,SAEtBD,GAAO8L,EAAQ9L,KAEd8L,EAAQtM,MAAQjC,OAAKU,UAEtBX,EAAI8C,aAAa9C,EAAI+C,YAAY2L,gBAAiB,EAClDhM,GAAO8L,EAAQ9L,IACfA,GAAG,iBACHA,GAAG,2BAAwB8L,EAAQnM,MAAhC,OACHK,GAAG,qBACHA,GAAG,mBAxBT,+BA6BA,MAAO,CAACA,IAAKA,EAAKR,KAAMjC,OAAK8B,UAzGjC,GAAqCyL,GA8GrC,SAASQ,EAAkBW,GAEzB,IADF,EACM7J,EAAQ,GADd,cAEqB6J,EAAM7J,OAF3B,IAEE,2BAAgC,CAAC,IAAtB8J,EAAqB,QAC1BC,EAAYC,OAAOC,OAAO,GAAGJ,EAAMK,MACvCH,EAAUnL,KAAKiL,GACf7J,EAAMpB,KAAK,IAAI9B,OAAK3B,OAAK8B,KAAK6M,EAAKC,EAAUD,EAAKvM,SALtD,8BAOE,OAAOyC,EAGF,IAAMmK,EAAb,kDAEE,WAAYhK,EAAU/C,EAAK2C,EAAOqK,GACjC,IAAD,8BACE,cAAMjK,EAAU/C,IACX2C,OAAOA,EACZ,EAAKqK,WAAaA,EAHpB,EAHF,4CASE,SAASjL,GAEP,IADF,EACMkL,EAAgB,GADtB,cAE0B9N,KAAK6N,YAF/B,IAEE,2BAAyC,CAAC,IAA/BE,EAA8B,QACrCD,EAAgBA,EAActN,OAAOuN,EAAUtN,SAASmC,KAH9D,8BAKE,IAAIhC,EAAU,GACd,OAAOZ,KAAKwD,QAEV,IAAK,OACH,GAAyB,GAAtBsK,EAAcnN,OAAU,CACzBC,EAAU,IAAIwL,EAAMpM,KAAK4D,UAAU5D,KAAKa,MAAMJ,SAASmC,GACvD,MAEFrE,EAAc8D,KAAK,CAACmH,MAAM,uCAAuC3I,KAAK,YAAY4I,MAAM,EAAEC,QAAQ,IAClG,MACF,IAAK,OACH,GAAyB,GAAtBoE,EAAcnN,OAAU,CACzBC,EAAU,IAAIoN,EAAKhO,KAAK4D,UAAU5D,KAAKa,MAAMJ,SAASmC,GACtD,MAEFrE,EAAc8D,KAAK,CAACmH,MAAM,uCAAuC3I,KAAK,YAAY4I,MAAM,EAAEC,QAAQ,IAClG,MACF,IAAK,OACH,GAAyB,GAAtBoE,EAAcnN,OAAU,CACzBC,EAAU,IAAIqN,EAAKjO,KAAK4D,UAAU5D,KAAKa,MAAMJ,SAASmC,GACtD,MAEFrE,EAAc8D,KAAK,CAACmH,MAAM,uCAAuC3I,KAAK,YAAY4I,MAAM,EAAEC,QAAQ,IAClG,MACF,IAAK,WACH,GAAyB,GAAtBoE,EAAcnN,OAAU,CACzBC,EAAU,IAAIsN,EAASlO,KAAK4D,UAAU5D,KAAKa,MAAMJ,SAASmC,GAC1D,MAEFrE,EAAc8D,KAAK,CAACmH,MAAM,uCAAuC3I,KAAK,YAAY4I,MAAM,EAAEC,QAAQ,IAClG,MACF,IAAK,aACH,GAAyB,GAAtBoE,EAAcnN,OAAU,CACzBC,EAAU,IAAIuN,EAAWnO,KAAK4D,UAAU5D,KAAKa,MAAMJ,SAASqN,GAC5D,MAEFvP,EAAc8D,KAAK,CAACmH,MAAM,oDAAoD3I,KAAK,YAAY4I,MAAM,EAAEC,QAAQ,IAC/G,MACF,IAAK,aACH,GAAyB,GAAtBoE,EAAcnN,OAAU,CACzBC,EAAU,IAAIwN,EAAWpO,KAAK4D,UAAU5D,KAAKa,MAAMJ,SAASqN,GAC5D,MAEFvP,EAAc8D,KAAK,CAACmH,MAAM,oDAAoD3I,KAAK,YAAY4I,MAAM,EAAEC,QAAQ,IAC/G,MACF,IAAK,SACH,GAAyB,GAAtBoE,EAAcnN,OACjB,CACEC,EAAU,IAAIyN,EAASrO,KAAK4D,UAAU5D,KAAKa,MAAMJ,SAASqN,GAC1D,MAEFvP,EAAc8D,KAAK,CAACmH,MAAM,+CAA+C3I,KAAK,YAAY4I,MAAM,EAAEC,QAAQ,IAC1G,MACF,IAAK,SACH,GAAyB,GAAtBoE,EAAcnN,OACjB,CACEC,EAAU,IAAI0N,EAAStO,KAAK4D,UAAU5D,KAAKa,MAAMJ,SAASqN,GAC1D,MAEFvP,EAAc8D,KAAK,CAACmH,MAAM,+CAA+C3I,KAAK,YAAY4I,MAAM,EAAEC,QAAQ,IAC1G,MACF,IAAK,YACH,GAAyB,GAAtBoE,EAAcnN,QAAmC,GAAtBmN,EAAcnN,OAC5C,CACEC,EAAU,IAAI2N,EAAUvO,KAAK4D,UAAU5D,KAAKa,MAAMJ,SAASqN,GAC3D,MAEFvP,EAAc8D,KAAK,CAACmH,MAAM,4EAA4E3I,KAAK,YAAY4I,MAAM,EAAEC,QAAQ,IACvI,MACF,QACEnL,EAAc8D,KAAK,CAACmH,MAAM,wBAAD,OAAyBxJ,KAAKwD,QAAS3C,KAAK,YAAY4I,MAAM,EAAEC,QAAQ,IACjG9I,EAAQyB,KAAK,IAAIuC,UAAQhG,OAAKQ,MAAM,YAIxC,OADAwB,EAAU+C,oBAAU3D,KAAK4D,UAAUhD,KAzFvC,sBA6FE,SAASqB,EAAWC,EAAWC,GAE7B,IAAIoD,EAAgB,GAChBqH,EAAW,CAACtK,GAAGH,EAASC,IAAIG,MAAMvC,KAAKa,MAAMtB,WAAS8M,IAAM,IAAM,MACtE9G,EAAclD,KAAKuK,GAAU3K,EAAWI,KAAKuK,GAAUzK,EAASC,MAChE,IAAIyK,EAAa,CAACvK,GAAGH,EAASC,IAAIG,MAAMvC,KAAKwD,OAALxD,MACxCuF,EAAclD,KAAKwK,GAAY5K,EAAWI,KAAKwK,GAAY1K,EAASC,MALtE,oBAM0BpC,KAAK4D,WAN/B,IAME,2BACA,CAAC,IADUA,EACX,QACMkJ,EAAgB,CAACxK,GAAGH,EAASC,IAAIG,MAAM,KAC3CgD,EAAclD,KAAKyK,GAAe7K,EAAWI,KAAKyK,GAAe3K,EAASC,MAC1E,IAAIM,EAAY,CAACJ,GAAGH,EAASC,IAAIG,MAAM,QACvCgD,EAAclD,KAAKK,GAAYT,EAAWI,KAAKK,GAAYP,EAASC,MACpE,IALF,EAKMQ,EAAQgB,EAAUf,SAASZ,EAAWC,EAAWC,GALvD,cAMqBS,GANrB,IAME,2BAA0B,CAAC,IAAhBE,EAAe,QACxBZ,EAAWG,KAAK,CAACG,KAAKE,EAAWJ,GAAGG,GAAGK,EAAKR,MAPhD,8BASE,IAAIyK,EAAgB,CAACzK,GAAGH,EAASC,IAAIG,MAAM,KAC3CgD,EAAclD,KAAK0K,GAAe9K,EAAWI,KAAK0K,GAAe5K,EAASC,OAjB9E,8BAmBE,OAAOmD,IAjHX,oBAqHE,WAEE,IADF,EACMnF,EAAW,GADjB,cAEyBJ,KAAK6N,YAF9B,IAEE,2BAAwC,CAAC,IAA9BvN,EAA6B,QACtCF,EAASiC,KAAK/B,EAASa,WAH3B,8BAME,OAAOnB,KAAKwD,QAEV,IAAK,OAEH,OADU,IAAI4I,EAAMpM,KAAK4D,UAAU5D,KAAKa,MACzBM,SACjB,IAAK,OAEH,OADU,IAAI6M,EAAKhO,KAAK4D,UAAU5D,KAAKa,MACxBM,SACjB,IAAK,OAEH,OADU,IAAI8M,EAAKjO,KAAK4D,UAAU5D,KAAKa,MACxBM,SACjB,IAAK,WACO,IAAI+M,EAASlO,KAAK4D,UAAU5D,KAAKa,MAC3C,MACF,IAAK,aAEH,OADU,IAAIsN,EAAWnO,KAAK4D,UAAU5D,KAAKa,MAC9BM,OAAOf,EAAS,IACjC,IAAK,aAEH,OADU,IAAIgO,EAAWpO,KAAK4D,UAAU5D,KAAKa,MAC9BM,OAAOf,EAAS,IACjC,IAAK,SAEH,OADU,IAAIiO,EAASrO,KAAK4D,UAAU5D,KAAKa,MAC5BM,OAAOf,EAAS,IACjC,IAAK,SAEH,OADU,IAAIkO,EAAStO,KAAK4D,UAAU5D,KAAKa,MAC5BM,OAAOf,EAAS,IACjC,IAAK,YAEH,OADU,IAAImO,EAAUvO,KAAK4D,UAAU5D,KAAKa,MAC7BM,OAAOf,QAxJ9B,GAAkC+L,GA8JrBqC,EAAb,kDAEE,WAAY5K,EAAU/C,EAAK4N,EAAOjL,EAAOqK,GACxC,IAAD,8BACE,cAAMjK,EAAU/C,IACX4N,OAASA,EACd,EAAKjL,OAASA,EACd,EAAKqK,WAAaA,EAJpB,EAHF,4CAUE,SAASjL,GAEP,GAAkB,MAAf5C,KAAKyO,OAEN,OAAO,IAAIb,EAAa5N,KAAK4D,UAAU5D,KAAKa,KAAKb,KAAKwD,OAAOxD,KAAK6N,YAAYpN,SAASmC,GAEpF,GAAkB,SAAf5C,KAAKyO,OACb,CACE,IADF,EACMrO,EAAU,GACVsO,EAAYC,0BAFlB,cAGwBD,GAHxB,IAGE,2BAAiC,CAAC,IAAvBE,EAAsB,QAC/B,GAAGA,EAAQpL,QAAUxD,KAAKwD,OAC1B,CACE,IADF,EACMqL,EAAY,YAAOjM,GACnBkM,EAAuB,GAF7B,cAG0B9O,KAAK6N,YAH/B,IAGE,2BAAyC,CAAC,IAA/BE,EAA8B,QACvCe,EAAqBzM,KAAK0L,EAAUtN,SAASoO,KAJjD,8BAME,GAAGC,EAAqBnO,QAAUiO,EAAQG,cAAcpO,OAGtD,OADApC,EAAc8D,KAAK,CAACmH,MAAM,wCAAwC3I,KAAK,YAAY4I,MAAM,EAAEC,QAAQ,IAC5F,GAET,IAAK,IAAI/G,EAAI,EAAGA,EAAImM,EAAqBnO,OAAQgC,IAAK,CAEpD,IAAG3C,KAAKgP,cAAcF,EAAqBnM,EAAEiM,EAAQG,cAAcpM,GAAGsM,MAkBpE,OADA1Q,EAAc8D,KAAK,CAACmH,MAAM,wCAAwC3I,KAAK,YAAY4I,MAAM,EAAEC,QAAQ,IAC5F,GAhBP,IAAIwF,EACJ,CACErO,KAAO+N,EAAQG,cAAcpM,GAAGa,OAChCF,UAAY,GACZG,MAAMqL,EAAqBnM,GAC3Be,MAAM,GACNyL,QAAU,EACVC,SAAW,GAETpP,KAAKqP,SAASR,EAAaK,EAAQN,EAAQG,cAAcpM,GAAGa,SAE9DqL,EAAaxM,KAAK,IAAI9B,OAAK3B,OAAK8B,KAAKwO,EAAQ,GAAG,GAAG,IA1B3D,oBAkCyBN,EAAQU,MAlCjC,IAkCE,2BAAqC,CAAC,IAA3BC,EAA0B,QACnCnP,EAAWA,EAASI,OAAO+O,EAAS9O,SAASoO,KAnCjD,8BAqCI,GAAqB,MAAhBD,EAAQ/N,MAAgBT,EAAS,GAAGS,MAAQ+N,EAAQ/N,KAGzD,OADAtC,EAAc8D,KAAK,CAACmH,MAAM,oCAAoC3I,KAAK,YAAY4I,MAAM,EAAEC,QAAQ,IACxF,GAET,QA/CN,8BAkDE,OAAOtJ,KAnEb,sBAsEE,SAASwC,EAAMsM,EAAQ1L,GAEnB,IAAK,IAAIb,EAAI,EAAGA,EAAIC,EAAMjC,OAAQgC,IAChC,GAAGC,EAAMD,GAAG5B,QAAQF,MAAQ2C,EAG1B,OADAZ,EAAMD,GAAK,IAAIpC,OAAK3B,OAAK8B,KAAKwO,EAAQ,GAAG,GAAG,IACrC,EAGX,OAAO,IA/Eb,2BAiFE,SAAcJ,EAAqBnM,EAAE9B,GAEnC,IAAI2O,EAAY,qBAChB,OAAO3O,GAEL,KAAK,KACH,OAAO,EACT,KAAKjC,OAAKO,QACR,OAAO2P,EAAqBnM,GAAG,GAAG9B,MAEhC,KAAKjC,OAAK8B,KACV,KAAK9B,OAAK+C,MACR,QAAGmN,EAAqBnM,GAAG,GAAG3B,MAAMyO,MAAMD,KAExCV,EAAqBnM,GAAG,GAAK,IAAIiC,UAAQhG,OAAKO,QAAQmK,OAAOwF,EAAqBnM,GAAG,GAAG3B,SACjF,GAGX,KAAKpC,OAAKO,QACV,KAAKP,OAAKM,QACR,OAAO,EACT,QACE,OAAO,EAEb,KAAKN,OAAKM,QACR,OAAO4P,EAAqBnM,GAAG,GAAG9B,MAEhC,KAAKjC,OAAK8B,KACV,KAAK9B,OAAK+C,MACR,QAAGmN,EAAqBnM,GAAG,GAAG3B,MAAMyO,MAAMD,KAExCV,EAAqBnM,GAAG,GAAK,IAAIiC,UAAQhG,OAAKO,QAAQuQ,SAASZ,EAAqBnM,GAAG,GAAG3B,MAAM,MACzF,GAGX,KAAKpC,OAAKO,QACV,KAAKP,OAAKM,QACR,OAAO,EACT,QACE,OAAO,EAEb,KAAKN,OAAK0C,OACR,OAAOwN,EAAqBnM,GAAG,GAAG9B,MAEhC,KAAKjC,OAAK8B,KACV,KAAK9B,OAAK+C,MAER,OADA3B,KAAK8O,qBAAqBnM,GAAG,GAAK,IAAIiC,UAAQhG,OAAK0C,OAAOwN,EAAqBnM,GAAG,GAAG3B,QAC9E,EACT,KAAKpC,OAAK0C,OACR,OAAO,EACT,QACE,OAAO,EAEb,KAAK1C,OAAK8B,KACV,KAAK9B,OAAK+C,MACR,OAAGmN,EAAqBnM,GAAG,GAAG9B,MAAQA,KAxI9C,oBA6IE,WAEE,GAAkB,MAAfb,KAAKyO,OAEN,OAAO,IAAIb,EAAa5N,KAAK4D,UAAU5D,KAAKa,KAAKb,KAAKwD,OAAOxD,KAAK6N,YAAY1M,aAjJpF,GAAwCgL,GAsJ3B6B,EAAb,kDAGE,WAAapK,EAAW/C,GAAO,uCACvB+C,EAAW/C,GAJrB,4CAOE,SAASmE,GAEP,IAAIpE,EAAU,GACV+O,EAAY3K,EAAQrE,OAExB,OADAC,EAAQyB,KAAK,IAAIuC,UAAQhG,OAAKM,QAASyQ,IAChC/O,IAZX,oBAeE,WAEEjC,EAAI8C,aAAa9C,EAAI+C,YAAYkO,OAAQ,EACzC,IAAIpD,EAAM7N,EAAI6C,UACVH,EAAM,GAMV,OALAA,GAAG,iBACHA,GAAG,YACHA,GAAG,UAAOmL,EAAP,wBAGI,CAACnL,IAFRA,GAAG,eAEaR,KAAKjC,OAAKO,QAAQ6B,MAAMwL,OAzB5C,GAA0BL,GA6Bb+B,EAAb,kDAEE,WAAatK,EAAW/C,GAAO,uCACvB+C,EAAW/C,GAHrB,4CAME,SAAS+B,GAEP,IADF,EACMiN,EAAa,GADnB,cAEqBjN,GAFrB,IAEE,2BAA0B,CAExB,IAFyB,IACrBwB,EADoB,QACNA,SACXA,EAAUlB,KAAKqG,MAAMnF,GAAU,KACtC,CACE,IAAIL,EAAOb,KAAKqG,MAAMnF,GAEtBA,GAAU,GACVA,GAFAL,GAAM,GAIR8L,EAAWxN,KAAK,IAAIuC,UAAQhG,OAAKM,QAAQgE,KAAKqG,MAAMnF,MAXxD,8BAaE,OAAOyL,MApBX,GAA8B1D,GAwBjB8B,EAAb,kDAEE,WAAarK,EAAW/C,GAAO,uCACvB+C,EAAW/C,GAHrB,4CAME,SAAS+B,GAEP,IADF,EACMiN,EAAa,GADnB,cAEqBjN,GAFrB,IAEE,2BAA0B,CAAC,IAAhBE,EAAe,QACT,IAAZA,EAAK9B,OAEN6O,EAAWxN,KAAK,IAAIuC,UAAQhG,OAAK0C,OAAOwB,EAAK9B,QAE/C6O,EAAaA,EAAWrP,OAAO,IAAIsP,SAAO,IAAI,GAAG9P,KAAKa,MAAMJ,SAAS,CAACqC,MAP1E,8BASE,OAAO+M,IAhBX,oBAmBE,WAEElR,EAAI8C,aAAa9C,EAAI+C,YAAYqO,SAAU,EAC3C,IAAI1O,EAAM,GAGVA,GAAG,iCAA+BrB,KAAKwD,OAApC,UAEH,IAAIiC,EAAM9G,EAAI6C,UACdH,GAAG,UAAQoE,EAAR,cARL,oBAUsB,KAVtB,IAUE,2BAAyB,CAAC,IACpBwH,EADmB,QACLC,WAAW,GAC7B7L,GAAG,mCAAiC4L,EAAjC,QACH5L,GAAG,qBAbP,8BAeEA,GAAG,kCACHA,GAAG,oBAEHA,GAAG,iCACHA,GAAG,kBACH,IAAI0H,EAAMpK,EAAI6C,UAMd,OALAH,GAAG,UAAQ0H,EAAR,iBACH1H,GAAG,qBAAmB0H,EAAnB,eAA6BtD,EAA7B,QACHpE,GAAG,eAGI,CAACA,IAFRA,GAAG,kBAEaR,KAAKjC,OAAK8B,UA9C9B,GAA0ByL,GAkDbgC,EAAb,kDAEE,WAAavK,EAAW/C,GAAO,uCACvB+C,EAAW/C,GAHrB,4CAME,SAAS+B,GAEP,IADF,EACMxC,EAAW,GADjB,cAEqBwC,GAFrB,IAEE,2BAA0B,CAAC,IAAhBE,EAAe,QACxB,GAAGA,EAAKjC,MAAMjC,OAAK0C,OACnB,CACE,IAAI0O,EAAQ,IAAIpL,UAAQhG,OAAK0C,OAAO2O,oBAAUnN,EAAK9B,QACnDZ,EAASiC,KAAK2N,QAEPlN,EAAKjC,MAAQjC,OAAK8B,MAAQoC,EAAKjC,MAAQjC,OAAK+C,MAEnDvB,EAASiC,KAAK,IAAIuC,UAAQhG,OAAK0C,OAAO2O,oBAAUnN,EAAK9B,SAIrDzC,EAAc8D,KAAK,CAACmH,MAAM,yDAAyD3I,KAAK,YAAY4I,MAAM,EAAEC,QAAQ,KAd1H,8BAiBE,OAAOtJ,IAxBX,oBA2BE,SAAO2N,GAEL,IAAI1M,EAAM,GAGV,GAFAA,GAAO0M,EAAU1M,IACjB1C,EAAI8C,aAAa9C,EAAI+C,YAAYwO,YAAa,EAC3CnC,EAAUlN,MAAQjC,OAAK0C,OAC1B,CACE,IAAIkL,EAAM7N,EAAI6C,UAAe2O,EAAMxR,EAAI6C,UAOvC,OANAH,GAAG,iBACHA,GAAG,UAAOmL,EAAP,gBACHnL,GAAG,qBAAkBmL,EAAlB,eAA4BuB,EAAU/M,MAAtC,OACHK,GAAG,iBACHA,GAAG,UAAO8O,EAAP,wBAEI,CAAC9O,IADRA,GAAG,iBACaR,KAAKjC,OAAK0C,OAAON,MAAMmP,GAEzC,GAAGpC,EAAUlN,MAAQjC,OAAK8B,KAC1B,CACM8L,EAAM7N,EAAI6C,UAAe2O,EAAMxR,EAAI6C,UAAvC,IAAsD4O,EAAMzR,EAAI6C,UAAe6O,EAAM1R,EAAI6C,UACrF8O,EAAM3R,EAAI6C,UAWd,OAVAH,GAAG,UAAOmL,EAAP,aACHnL,GAAG,UAAO8O,EAAP,iCAAmC3D,EAAnC,QACHnL,GAAG,UAAO8O,EAAP,cAAgBA,EAAhB,WACH9O,GAAG,UAAO+O,EAAP,2BAA6BD,EAA7B,QACH9O,GAAG,iBACHA,GAAG,UAAOgP,EAAP,gBACHhP,GAAG,qBAAkBgP,EAAlB,eAA4BD,EAA5B,OACH/O,GAAG,iBACHA,GAAG,UAAOiP,EAAP,wBAEI,CAACjP,IADRA,GAAG,iBACaR,KAAKjC,OAAK0C,OAAON,MAAMsP,GAEzC,GAAGvC,EAAUlN,MAAQjC,OAAK+C,MAC1B,CACM6K,EAAM7N,EAAI6C,UAAe2O,EAAMxR,EAAI6C,UAAe4O,EAAMzR,EAAI6C,UAAe6O,EAAM1R,EAAI6C,UACrF8O,EAAM3R,EAAI6C,UAWd,OAVAH,GAAG,UAAOmL,EAAP,aACHnL,GAAG,UAAO8O,EAAP,iCAAmC3D,EAAnC,QACHnL,GAAG,UAAO8O,EAAP,cAAgBA,EAAhB,WACH9O,GAAG,UAAO+O,EAAP,kCAAoCD,EAApC,QACH9O,GAAG,iBACHA,GAAG,UAAOgP,EAAP,gBACHhP,GAAG,qBAAkBgP,EAAlB,eAA4BD,EAA5B,OACH/O,GAAG,iBACHA,GAAG,UAAOiP,EAAP,wBAEI,CAACjP,IADRA,GAAG,iBACaR,KAAKjC,OAAK0C,OAAON,MAAMsP,QAzE7C,GAAgCnE,GA8EnBiC,EAAb,kDAEE,WAAaxK,EAAW/C,GAAO,uCACvB+C,EAAW/C,GAHrB,4CAME,SAAS+B,GAEP,IADF,EACMxC,EAAW,GADjB,cAEqBwC,GAFrB,IAEE,2BAA0B,CAAC,IAAhBE,EAAe,QACxB,GAAGA,EAAKjC,MAAMjC,OAAK0C,QAAUwB,EAAKjC,MAAQjC,OAAK8B,MAAQoC,EAAKjC,MAAQjC,OAAK+C,MACzE,CACE,IAAIqO,EAAQ,IAAIpL,UAAQhG,OAAK0C,OAAOiP,oBAAUzN,EAAK9B,QACnDZ,EAASiC,KAAK2N,QAEPlN,EAAKjC,MAAQjC,OAAK8B,MAAQoC,EAAKjC,MAAQjC,OAAK+C,MAEnDvB,EAASiC,KAAK,IAAIuC,UAAQhG,OAAK0C,OAAOiP,oBAAUzN,EAAK9B,SAIrDzC,EAAc8D,KAAK,CAACmH,MAAM,yDAAyD3I,KAAK,YAAY4I,MAAM,EAAEC,QAAQ,KAd1H,8BAiBE,OAAOtJ,IAxBX,oBA2BE,SAAO2N,GAEL,IAAI1M,EAAM,GAGV,GAFAA,GAAO0M,EAAU1M,IACjB1C,EAAI8C,aAAa9C,EAAI+C,YAAYwO,YAAa,EAC3CnC,EAAUlN,MAAQjC,OAAK0C,OAC1B,CACE,IAAIkL,EAAM7N,EAAI6C,UAAe2O,EAAMxR,EAAI6C,UAOvC,OANAH,GAAG,iBACHA,GAAG,UAAOmL,EAAP,gBACHnL,GAAG,qBAAkBmL,EAAlB,eAA4BuB,EAAU/M,MAAtC,OACHK,GAAG,iBACHA,GAAG,UAAO8O,EAAP,wBAEI,CAAC9O,IADRA,GAAG,iBACaR,KAAKjC,OAAK0C,OAAON,MAAMmP,GAEzC,GAAGpC,EAAUlN,MAAQjC,OAAK8B,KAC1B,CACM8L,EAAM7N,EAAI6C,UAAe2O,EAAMxR,EAAI6C,UAAvC,IAAsD4O,EAAMzR,EAAI6C,UAAe6O,EAAM1R,EAAI6C,UACrF8O,EAAM3R,EAAI6C,UAWd,OAVAH,GAAG,UAAOmL,EAAP,aACHnL,GAAG,UAAO8O,EAAP,iCAAmC3D,EAAnC,QACHnL,GAAG,UAAO8O,EAAP,cAAgBA,EAAhB,WACH9O,GAAG,UAAO+O,EAAP,2BAA6BD,EAA7B,QACH9O,GAAG,iBACHA,GAAG,UAAOgP,EAAP,gBACHhP,GAAG,qBAAkBgP,EAAlB,eAA4BD,EAA5B,OACH/O,GAAG,iBACHA,GAAG,UAAOiP,EAAP,wBAEI,CAACjP,IADRA,GAAG,iBACaR,KAAKjC,OAAK0C,OAAON,MAAMsP,GAEzC,GAAGvC,EAAUlN,MAAQjC,OAAK+C,MAC1B,CACM6K,EAAM7N,EAAI6C,UAAe2O,EAAMxR,EAAI6C,UAAe4O,EAAMzR,EAAI6C,UAAe6O,EAAM1R,EAAI6C,UACrF8O,EAAM3R,EAAI6C,UAWd,OAVAH,GAAG,UAAOmL,EAAP,aACHnL,GAAG,UAAO8O,EAAP,iCAAmC3D,EAAnC,QACHnL,GAAG,UAAO8O,EAAP,cAAgBA,EAAhB,WACH9O,GAAG,UAAO+O,EAAP,kCAAoCD,EAApC,QACH9O,GAAG,iBACHA,GAAG,UAAOgP,EAAP,gBACHhP,GAAG,qBAAkBgP,EAAlB,eAA4BD,EAA5B,OACH/O,GAAG,iBACHA,GAAG,UAAOiP,EAAP,wBAEI,CAACjP,IADRA,GAAG,iBACaR,KAAKjC,OAAK0C,OAAON,MAAMsP,QAzE7C,GAAgCnE,GA8EnBkC,EAAb,kDAEE,WAAazK,EAAW/C,GAAO,uCACvB+C,EAAW/C,GAHrB,4CAME,SAAS+B,GAEP,IADF,EACMxC,EAAW,GADjB,cAEqBwC,GAFrB,IAEE,2BAA0B,CAAC,IAAhBE,EAAe,QACpB0N,EAAU,IAAI5L,UAAQhG,OAAK0C,OAAOwB,EAAK9B,MAAMqN,YACjDjO,EAASiC,KAAKmO,IAJlB,8BAME,OAAOpQ,IAbX,oBAgBE,SAAO2N,GACLpP,EAAI8C,aAAa9C,EAAI+C,YAAY+O,WAAY,EAC7C,IAAIpP,EAAM,GACV,GAAG0M,EAAUlN,MAAQjC,OAAK8B,KAAK,CAC7B,IAAIa,EAAK5C,EAAI6C,UAAeqE,EAAKlH,EAAI6C,UAAesE,EAAKnH,EAAI6C,UAY7D,OAXAH,GAAO0M,EAAU1M,IAEjBA,GAAG,kBACHA,GAAG,UAAOE,EAAP,cACHF,GAAG,UAAOwE,EAAP,iCAAkCtE,EAAlC,SACHF,GAAG,UAAOwE,EAAP,cAAeA,EAAf,YACHxE,GAAG,UAAOyE,EAAP,2BAA4BD,EAA5B,SACHxE,GAAG,2BAAwByE,EAAxB,QACHzE,GAAG,uBACHA,GAAG,UAAOE,EAAP,yBAEI,CAACF,IADRA,GAAG,kBACaR,KAAKjC,OAAK0C,OAAON,MAAMO,GAEpC,GAAIwM,EAAUlN,MAAQjC,OAAK+C,MAAM,CACpCN,GAAO0M,EAAU1M,IACbE,EAAK5C,EAAI6C,UAAeqE,EAAKlH,EAAI6C,UAAesE,EAAKnH,EAAI6C,UAA7D,IACI0E,EAAKvH,EAAI6C,UAYb,OAVAH,GAAG,kBACHA,GAAG,UAAOE,EAAP,cACHF,GAAG,UAAOwE,EAAP,kCACHxE,GAAG,UAAOwE,EAAP,cAAeA,EAAf,WACHxE,GAAG,UAAOyE,EAAP,2BAA4BD,EAA5B,SACHxE,GAAG,UAAO6E,EAAP,kCAAmCJ,EAAnC,SACHzE,GAAG,2BAAwB6E,EAAxB,QACH7E,GAAG,uBACHA,GAAG,UAAOE,EAAP,yBAEI,CAACF,IADRA,GAAG,kBACaR,KAAKjC,OAAK0C,OAAON,MAAMO,GAEpC,GAAGwM,EAAUlN,MAAQjC,OAAKO,SAAW4O,EAAUlN,MAAQjC,OAAKM,QAAQ,CACvEmC,GAAO0M,EAAU1M,IACbE,EAAK5C,EAAI6C,UAOb,OALAH,GAAG,kBACHA,GAAG,2BAAwB0M,EAAU/M,MAAlC,QACHK,GAAG,uBACHA,GAAG,UAAOE,EAAP,yBAEI,CAACF,IADRA,GAAG,kBACaR,KAAKjC,OAAK0C,OAAON,MAAMO,QA5D7C,GAA8B4K,GAkEjBmC,EAAb,kDAEE,WAAa1K,EAAW/C,GAAO,uCACvB+C,EAAW/C,GAHrB,4CAME,SAAS+B,GAEP,IADF,EACMxC,EAAW,GADjB,cAEqBwC,GAFrB,IAEE,2BAA0B,CAAC,IAAhBE,EAAe,QACpBiB,EAAOuF,OAAOxG,EAAK9B,OACpB8B,EAAK9B,MAENZ,EAASiC,KAAK,IAAIuC,UAAQhG,OAAKO,QAAQ4E,IAIvCxF,EAAc8D,KAAK,CAACmH,MAAM,wCAAwC3I,KAAK,YAAY4I,MAAM,EAAEC,QAAQ,KAVzG,8BAaE,OAAOtJ,IApBX,oBAuBE,SAAO2N,GACLpP,EAAI8C,aAAa9C,EAAI+C,YAAYwH,UAAW,EAC5C,IAAI7H,EAAM,GACV,GAAG0M,EAAUlN,MAAQjC,OAAK8B,KAAK,CAC7B,IAAIa,EAAK5C,EAAI6C,UAAeqE,EAAKlH,EAAI6C,UAAesE,EAAKnH,EAAI6C,UAAe0E,EAAKvH,EAAI6C,UAarF,OAZAH,GAAO0M,EAAU1M,IAEjBA,GAAG,kBACHA,GAAG,UAAOE,EAAP,cACHF,GAAG,UAAOwE,EAAP,iCAAkCtE,EAAlC,SACHF,GAAG,UAAOwE,EAAP,cAAeA,EAAf,YACHxE,GAAG,UAAOyE,EAAP,2BAA4BD,EAA5B,SACHxE,GAAG,UAAO6E,EAAP,iBACH7E,GAAG,qBAAkB6E,EAAlB,eAA2BJ,EAA3B,QACHzE,GAAG,gBACHA,GAAG,UAAOE,EAAP,yBAEI,CAACF,IADRA,GAAG,kBACaR,KAAKjC,OAAKO,QAAQ6B,MAAMO,GAErC,GAAIwM,EAAUlN,MAAQjC,OAAK+C,MAAM,CACpCN,GAAO0M,EAAU1M,IACbE,EAAK5C,EAAI6C,UAAeqE,EAAKlH,EAAI6C,UAAesE,EAAKnH,EAAI6C,UACzD0E,EAAKvH,EAAI6C,UAYb,OAVAH,GAAG,kBACHA,GAAG,UAAOE,EAAP,cACHF,GAAG,UAAOwE,EAAP,kCACHxE,GAAG,UAAOwE,EAAP,cAAeA,EAAf,WACHxE,GAAG,UAAOyE,EAAP,kCAAmCD,EAAnC,SACHxE,GAAG,UAAO6E,EAAP,iBACH7E,GAAG,qBAAkB6E,EAAlB,eAA2BJ,EAA3B,QACHzE,GAAG,gBACHA,GAAG,UAAOE,EAAP,yBAEI,CAACF,IADRA,GAAG,kBACaR,KAAKjC,OAAKO,QAAQ6B,MAAMO,GAErC,GAAGwM,EAAUlN,MAAQjC,OAAK0C,OAAO,CACpCD,GAAO0M,EAAU1M,IACbE,EAAK5C,EAAI6C,UAAeqE,EAAKlH,EAAI6C,UAQrC,OANAH,GAAG,kBACHA,GAAG,UAAOwE,EAAP,iBACHxE,GAAG,qBAAkBwE,EAAlB,eAA2BkI,EAAU/M,MAArC,QACHK,GAAG,gBACHA,GAAG,UAAOE,EAAP,yBAEI,CAACF,IADRA,GAAG,kBACaR,KAAKjC,OAAKO,QAAQ6B,MAAMO,QArE9C,GAA8B4K,GA0EjBoC,EAAb,kDAEE,WAAa3K,EAAW/C,GAAO,uCACvB+C,EAAW/C,GAHrB,4CAME,SAAS+B,GAEP,GAAiB,GAAdA,EAAMjC,QAEP,IAAKiC,EAAM,GAAG/B,MAAQjC,OAAK0C,QAAUsB,EAAM,GAAG/B,MAAQjC,OAAK8B,MAAQkC,EAAM,GAAG/B,MAAQjC,OAAK+C,SACrFiB,EAAM,GAAG/B,MAAMjC,OAAKO,SAAWyD,EAAM,GAAG/B,MAAMjC,OAAKM,SAAU,CAC/D,IAAIwR,EAASpH,OAAO1G,EAAM,GAAG5B,OAAS,EAAI,EAAKsI,OAAO1G,EAAM,GAAG5B,OAAS,EAExE,MAAO,CADK,IAAI4D,UAAQhG,OAAK0C,OAAOsB,EAAM,GAAG5B,MAAMqN,WAAWsC,UAAUD,WAM1E,IAAK9N,EAAM,GAAG/B,MAAQjC,OAAK0C,QAAUsB,EAAM,GAAG/B,MAAQjC,OAAK8B,MAAQkC,EAAM,GAAG/B,MAAQjC,OAAK+C,SACnFiB,EAAM,GAAG/B,MAAMjC,OAAKO,SAAWyD,EAAM,GAAG/B,MAAMjC,OAAKM,WACnD0D,EAAM,GAAG/B,MAAMjC,OAAKO,SAAWyD,EAAM,GAAG/B,MAAMjC,OAAKM,SAAW,CAClE,IAAIwR,EAASpH,OAAO1G,EAAM,GAAG5B,OAAS,EAAI,EAAKsI,OAAO1G,EAAM,GAAG5B,OAAS,EAExE,MAAO,CADK,IAAI4D,UAAQhG,OAAK0C,OAAOsB,EAAM,GAAG5B,MAAMqN,WAAWsC,UAAUD,EAAOA,EAASpH,OAAO1G,EAAM,GAAG5B,aAvBhH,oBA6BE,SAAO6M,GAEL,IAAIxM,EAAM,GACV,GAAwB,GAArBwM,EAAWlN,OACd,CAIE,GAHAU,GAAOwM,EAAW,GAAGxM,IACrBA,GAAOwM,EAAW,GAAGxM,IACrB1C,EAAI8C,aAAa9C,EAAI+C,YAAYkP,UAAW,EACzC/C,EAAW,GAAGhN,MAAQjC,OAAK0C,OAC9B,CACE,IAAIkL,EAAM7N,EAAI6C,UAAe2O,EAAMxR,EAAI6C,UAAe4O,EAAMzR,EAAI6C,UAShE,OARAH,GAAG,iBACHA,GAAG,UAAOmL,EAAP,gBACHnL,GAAG,qBAAkBmL,EAAlB,eAA4BqB,EAAW,GAAG7M,MAA1C,OACHK,GAAG,UAAO8O,EAAP,gBACH9O,GAAG,qBAAkB8O,EAAlB,eAA4BtC,EAAW,GAAG7M,MAA1C,OACHK,GAAG,qBACHA,GAAG,UAAO+O,EAAP,wBAEI,CAAC/O,IADRA,GAAG,iBACaR,KAAKjC,OAAK0C,OAAON,MAAMoP,GAEpC,GAAGvC,EAAW,GAAGhN,MAAQjC,OAAK8B,KACnC,CACM8L,EAAM7N,EAAI6C,UAAe2O,EAAMxR,EAAI6C,UAAe4O,EAAMzR,EAAI6C,UAAhE,IAA+E6O,EAAM1R,EAAI6C,UACrF8O,EAAM3R,EAAI6C,UAAeqP,EAAMlS,EAAI6C,UAavC,OAZAH,GAAG,UAAOmL,EAAP,aACHnL,GAAG,UAAO8O,EAAP,iCAAmC3D,EAAnC,QACHnL,GAAG,UAAO8O,EAAP,cAAgBA,EAAhB,WACH9O,GAAG,UAAO+O,EAAP,2BAA6BD,EAA7B,QACH9O,GAAG,iBACHA,GAAG,UAAOgP,EAAP,gBACHhP,GAAG,qBAAkBgP,EAAlB,eAA4BD,EAA5B,OACH/O,GAAG,UAAOiP,EAAP,gBACHjP,GAAG,qBAAkBiP,EAAlB,eAA4BzC,EAAW,GAAG7M,MAA1C,OACHK,GAAG,qBACHA,GAAG,UAAOwP,EAAP,wBAEI,CAACxP,IADRA,GAAG,iBACaR,KAAKjC,OAAK0C,OAAON,MAAM6P,GAEpC,GAAGhD,EAAW,GAAGhN,MAAQjC,OAAK+C,MACnC,CACM6K,EAAM7N,EAAI6C,UAAe2O,EAAMxR,EAAI6C,UAAe4O,EAAMzR,EAAI6C,UAAe6O,EAAM1R,EAAI6C,UACrF8O,EAAM3R,EAAI6C,UAAeqP,EAAMlS,EAAI6C,UAavC,OAZAH,GAAG,UAAOmL,EAAP,aACHnL,GAAG,UAAO8O,EAAP,iCAAmC3D,EAAnC,QACHnL,GAAG,UAAO8O,EAAP,cAAgBA,EAAhB,WACH9O,GAAG,UAAO+O,EAAP,kCAAoCD,EAApC,QACH9O,GAAG,iBACHA,GAAG,UAAOgP,EAAP,gBACHhP,GAAG,qBAAkBgP,EAAlB,eAA4BD,EAA5B,OACH/O,GAAG,UAAOiP,EAAP,gBACHjP,GAAG,qBAAkBiP,EAAlB,eAA4BzC,EAAW,GAAG7M,MAA1C,OACHK,GAAG,qBACHA,GAAG,UAAOwP,EAAP,wBAEI,CAACxP,IADRA,GAAG,iBACaR,KAAKjC,OAAK0C,OAAON,MAAM6P,QAI3C,CAKE,GAJAxP,GAAOwM,EAAW,GAAGxM,IACrBA,GAAOwM,EAAW,GAAGxM,IACrBA,GAAOwM,EAAW,GAAGxM,IACrB1C,EAAI8C,aAAa9C,EAAI+C,YAAYoP,UAAW,EACzCjD,EAAW,GAAGhN,MAAQjC,OAAK0C,OAC9B,CACMkL,EAAM7N,EAAI6C,UAAe2O,EAAMxR,EAAI6C,UAAe4O,EAAMzR,EAAI6C,UAAe6O,EAAM1R,EAAI6C,UAWzF,OAVAH,GAAG,iBACHA,GAAG,UAAOmL,EAAP,gBACHnL,GAAG,qBAAkBmL,EAAlB,eAA4BqB,EAAW,GAAG7M,MAA1C,OACHK,GAAG,UAAO8O,EAAP,gBACH9O,GAAG,qBAAkB8O,EAAlB,eAA4BtC,EAAW,GAAG7M,MAA1C,OACHK,GAAG,UAAO+O,EAAP,gBACH/O,GAAG,qBAAkB+O,EAAlB,eAA4BvC,EAAW,GAAG7M,MAA1C,OACHK,GAAG,yBACHA,GAAG,UAAOgP,EAAP,wBAEI,CAAChP,IADRA,GAAG,iBACaR,KAAKjC,OAAK0C,OAAON,MAAMqP,GAEpC,GAAGxC,EAAW,GAAGhN,MAAQjC,OAAK8B,KACnC,CACM8L,EAAM7N,EAAI6C,UAAe2O,EAAMxR,EAAI6C,UAAe4O,EAAMzR,EAAI6C,UAAe6O,EAAM1R,EAAI6C,UACrF8O,EAAM3R,EAAI6C,UAAeqP,EAAMlS,EAAI6C,UADvC,IACsDuP,EAAMpS,EAAI6C,UAehE,OAdAH,GAAG,UAAOmL,EAAP,aACHnL,GAAG,UAAO8O,EAAP,iCAAmC3D,EAAnC,QACHnL,GAAG,UAAO8O,EAAP,cAAgBA,EAAhB,WACH9O,GAAG,UAAO+O,EAAP,2BAA6BD,EAA7B,QACH9O,GAAG,iBACHA,GAAG,UAAOgP,EAAP,gBACHhP,GAAG,qBAAkBgP,EAAlB,eAA4BD,EAA5B,OACH/O,GAAG,UAAOiP,EAAP,gBACHjP,GAAG,qBAAkBiP,EAAlB,eAA4BzC,EAAW,GAAG7M,MAA1C,OACHK,GAAG,UAAOwP,EAAP,gBACHxP,GAAG,qBAAkBwP,EAAlB,eAA4BhD,EAAW,GAAG7M,MAA1C,OACHK,GAAG,yBACHA,GAAG,UAAO0P,EAAP,wBAEI,CAAC1P,IADRA,GAAG,iBACaR,KAAKjC,OAAK0C,OAAON,MAAM+P,GAEpC,GAAGlD,EAAW,GAAGhN,MAAQjC,OAAK+C,MACnC,CACM6K,EAAM7N,EAAI6C,UAAe2O,EAAMxR,EAAI6C,UAAe4O,EAAMzR,EAAI6C,UAAe6O,EAAM1R,EAAI6C,UACrF8O,EAAM3R,EAAI6C,UAAeqP,EAAMlS,EAAI6C,UAAeuP,EAAMpS,EAAI6C,UAehE,OAdAH,GAAG,UAAOmL,EAAP,aACHnL,GAAG,UAAO8O,EAAP,iCAAmC3D,EAAnC,QACHnL,GAAG,UAAO8O,EAAP,cAAgBA,EAAhB,WACH9O,GAAG,UAAO+O,EAAP,kCAAoCD,EAApC,QACH9O,GAAG,iBACHA,GAAG,UAAOgP,EAAP,gBACHhP,GAAG,qBAAkBgP,EAAlB,eAA4BD,EAA5B,OACH/O,GAAG,UAAOiP,EAAP,gBACHjP,GAAG,qBAAkBiP,EAAlB,eAA4BzC,EAAW,GAAG7M,MAA1C,OACHK,GAAG,UAAOwP,EAAP,gBACHxP,GAAG,qBAAkBwP,EAAlB,eAA4BhD,EAAW,GAAG7M,MAA1C,OACHK,GAAG,yBACHA,GAAG,UAAO0P,EAAP,wBAEI,CAAC1P,IADRA,GAAG,iBACaR,KAAKjC,OAAK0C,OAAON,MAAM+P,SAlJ/C,GAA+B5E,I,sQCv3BlB5L,EAAb,kCAIayQ,EAAb,kDAGI,aAAc,IAAD,8BACT,gBAHJC,MAAQ,EAEK,EADbvH,QAAU,EAIN,EAAKwH,aAAe,EACpB,EAAKC,kBAAqB,GAC1B,EAAKC,kBAAmB,EALf,EAHjB,UAAiC7Q,GAYpB8Q,EAAb,kDACI,aAAc,IAAD,8BACT,gBACKC,QAAS,EACd,EAAKC,eAAgB,EACrB,EAAKC,gBAAiB,EAJb,EADjB,UAA+BjR,GASlBkR,EACT,WAAY5Q,EAAM6Q,GAAU,oBACxB1R,KAAKa,KAAOA,EACZb,KAAK0R,QAAUA,GAIV9S,EAAO,CAChB,QAAY,EACZ,QAAY,EACZ,OAAY,EACZ,GAAY,EACZ,QAAY,EACZ,MAAY,EACZ,MAAY,EACZ,QAAY,I,+LCtCH+S,EAAb,kDACI,WAAYC,EAAWC,GAAK,IAAD,8BACvB,gBACKD,UAAYA,EACjB,EAAKC,IAAMA,EACX,EAAKC,UAAW,EAJO,EAD/B,6CAQI,WAEI,IAAIC,EAAO/R,KAAK4R,UAAUI,YAQ1B,OAFAhS,KAAKoR,iBAAmBW,EAAKR,cAAgBQ,EAAKP,eAE3CxR,OAlBf,wBAqBI,WAEI,IAAI+R,EAAO/R,KAAK4R,UAAUI,YAM1BhS,KAAKoR,iBAAmBW,EAAKR,cAAgBQ,EAAKP,eAElD,IAAI5Q,EAAUZ,KAOd,OANI+R,EAAKR,eAAiBvR,KAAK6R,IAC3BjR,EAAU,IAAIqR,EAAIjS,KAAK6R,IAAIK,UACrBH,EAAKP,gBAAkBxR,KAAK8R,WAClClR,EAAU,IAAIqR,EAAIjS,KAAK8R,SAASI,WAG7BtR,IAtCf,mCAyCI,WACI,IAAImR,EAAO/R,KAAK4R,UAAUO,kBAK1B,OAHAnS,KAAK4R,UAAYG,EACjB/R,KAAK6R,IAAM7R,KAAK8R,SAChB9R,KAAK8R,UAAW,EACT9R,OA/Cf,mBAkDI,WACI,IAAIoS,EAAQpS,KAAK4R,UAAUS,QACvBC,EAAOtS,KAAK6R,IAAIQ,QAChBzR,EAAO,cAAUwR,EAAV,aAAoBE,GAI/B,OAHItS,KAAK8R,WACLlR,GAAWZ,KAAK8R,SAASO,SAEtBzR,MAzDf,GAAwBoQ,eA6DXiB,EAAb,kDACI,WAAYC,GAAU,IAAD,8BACjB,gBACKA,SAAWA,EAFC,EADzB,6CAMI,WACI,OAAOlS,OAPf,mBAUI,WACI,MAAM,QAAN,OAAeA,KAAKkS,SAApB,YAXR,GAAyBlB,eAeZuB,EAAb,kDACI,WAAYL,GAAU,IAAD,8BACjB,gBACKA,SAAWA,EAFC,EADzB,6CAMI,WACI,OAAOlS,OAPf,mBAUI,WAEI,MAAM,GAAN,OAAUA,KAAKkS,SAAf,YAZR,GAA8BlB,gB,qBC9E9B,cAyEA,IAAIwB,EAAS,WACb,IAAIC,EAAE,SAASC,EAAEC,EAAEF,EAAEG,GAAG,IAAIH,EAAEA,GAAG,GAAGG,EAAEF,EAAE/R,OAAOiS,IAAIH,EAAEC,EAAEE,IAAID,GAAG,OAAOF,GAAGI,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,EAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAKC,EAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAKC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAKC,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAKC,EAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,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AIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,GAA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","file":"static/js/main.9789dfe7.chunk.js","sourcesContent":["const { ErroresGlobal, LimpiarErrores, CrearGlobal, AgregarGlobal } = require('./Global')\r\nvar C3D = require('../../C3D')\r\n//Enum de tipos\r\nexport const Tipo = {\r\n    \"INTEGER\" : 0,\r\n    \"DECIMAL\" : 1,\r\n    \"STRING\"  : 2,\r\n    \"NODO\"    : 3,\r\n    \"BOOLEAN\" : 4,\r\n    \"ATRIB\"   : 5,\r\n    \"ERROR\"   : 6,\r\n    \"SIBLING\" : 7\r\n} \r\n\r\nexport function getTipoById(numero)\r\n{\r\n  switch(numero)\r\n  {\r\n    case 0:\r\n      return \"integer\"\r\n    case 1:\r\n      return \"decimal\"\r\n    case 2:\r\n      return \"string\"\r\n    case 3:\r\n      return \"nodo\"\r\n    case 4:\r\n      return \"boolean\"\r\n    case 5:\r\n      return \"atrib\" \r\n    case 6:\r\n      return \"error\" \r\n    case 7:\r\n      return \"sibling\"\r\n  }\r\n}  \r\n\r\nexport var Siblings = []\r\n\r\nexport const Colision = \r\n[\r\n  [true , true , false, false, false, true , false],\r\n  [true , true , false, false, false, true , false],\r\n  [false, false, true , true , false, true , false],\r\n  [true, true, true , true , false, true , false],\r\n  [false, false, false, false, true , false, false],\r\n  [true , true , true , true , false, true , false],\r\n  [false, false, false, false, false, false, false]\r\n]\r\n\r\nexport const ColisionTipo = \r\n[\r\n  [Tipo.INTEGER, Tipo.DECIMAL, Tipo.ERROR, Tipo.ERROR,   Tipo.ERROR, Tipo.DECIMAL, Tipo.ERROR],\r\n  [Tipo.DECIMAL, Tipo.DECIMAL, Tipo.ERROR, Tipo.ERROR,   Tipo.ERROR, Tipo.DECIMAL, Tipo.ERROR],\r\n  [Tipo.ERROR,   Tipo.ERROR,   Tipo.ERROR, Tipo.ERROR,   Tipo.ERROR, Tipo.ERROR  , Tipo.ERROR],\r\n  [Tipo.DECIMAL, Tipo.DECIMAL, Tipo.ERROR, Tipo.DECIMAL, Tipo.ERROR, Tipo.DECIMAL, Tipo.ERROR],\r\n  [Tipo.ERROR,   Tipo.ERROR,   Tipo.ERROR, Tipo.ERROR,   Tipo.ERROR, Tipo.ERROR  , Tipo.ERROR],\r\n  [Tipo.DECIMAL, Tipo.DECIMAL, Tipo.ERROR, Tipo.DECIMAL, Tipo.ERROR, Tipo.DECIMAL, Tipo.ERROR],\r\n  [Tipo.ERROR,   Tipo.ERROR,   Tipo.ERROR, Tipo.ERROR,   Tipo.ERROR, Tipo.ERROR  , Tipo.ERROR],\r\n]\r\n\r\nexport const ColisionLogical = \r\n[\r\n  [Tipo.ERROR,    Tipo.ERROR,   Tipo.ERROR, Tipo.ERROR,   Tipo.ERROR, Tipo.ERROR  , Tipo.ERROR],\r\n  [Tipo.ERROR,    Tipo.ERROR,   Tipo.ERROR, Tipo.ERROR,   Tipo.ERROR, Tipo.ERROR  , Tipo.ERROR],\r\n  [Tipo.ERROR,    Tipo.ERROR,   Tipo.ERROR, Tipo.ERROR,   Tipo.ERROR, Tipo.ERROR  , Tipo.ERROR],\r\n  [Tipo.ERROR,    Tipo.ERROR,   Tipo.ERROR, Tipo.BOOLEAN, Tipo.ERROR, Tipo.ERROR  , Tipo.ERROR],\r\n  [Tipo.ERROR,    Tipo.ERROR,   Tipo.ERROR, Tipo.ERROR,   Tipo.ERROR, Tipo.ERROR  , Tipo.ERROR],\r\n  [Tipo.ERROR,    Tipo.ERROR,   Tipo.ERROR, Tipo.ERROR,   Tipo.ERROR, Tipo.ERROR  , Tipo.ERROR],\r\n  [Tipo.ERROR,    Tipo.ERROR,   Tipo.ERROR, Tipo.ERROR,   Tipo.ERROR, Tipo.ERROR  , Tipo.ERROR],\r\n]\r\n\r\nexport const TipoPath = {\r\n    \"ABS\" : \"absoluto\",\r\n    \"REL\" : \"relativo\"\r\n}\r\n\r\nexport class Comando\r\n{\r\n  constructor(Prologo,Instrucciones,Nodos,Edges,graphviz,errores,tablaGramatica)\r\n  {\r\n    this.Instrucciones = Instrucciones\r\n    this.Prologo = Prologo\r\n    this.Nodos=Nodos\r\n    this.Edges=Edges\r\n    this.graphviz=graphviz\r\n    this.errores = errores\r\n    this.tablaGramatica = tablaGramatica\r\n  }\r\n\r\n  Ejecutar(XML)\r\n  {\r\n    LimpiarErrores()\r\n    C3D.returnXMLC3D()\r\n    var Salida = \"\"\r\n    var retornos=[]\r\n    CrearGlobal();\r\n    for (const prologo of this.Prologo) {\r\n      AgregarGlobal(prologo)\r\n    }\r\n    for (const iterator of this.Instrucciones) {\r\n      var {Nodo} = require('../Expresion/Expresiones')\r\n      retornos = retornos.concat(\r\n        iterator.getValor(\r\n          [\r\n            new Nodo(Tipo.NODO,XML,[],\"\",1)\r\n          ]\r\n        )\r\n      )\r\n    }\r\n    if(retornos.length==0)\r\n    {\r\n      Salida += \"No se encontro esta consulta\" + \"\\n\"\r\n    }\r\n    for (const retorno of retornos) {\r\n      if(retorno.tipo == Tipo.NODO)\r\n      {\r\n        Salida += ConvertiraXML(retorno.entorno,0) + \"\\n\"\r\n      }\r\n      else if(retorno.tipo==Tipo.ERROR)\r\n      {\r\n        Salida += \"No se encontro esta consulta\" + \"\\n\"\r\n      }\r\n      else\r\n      {\r\n        Salida += retorno.valor + \"\\n\"\r\n      }\r\n    }\r\n    this.errores = this.errores.concat(ErroresGlobal)\r\n    return Salida;\r\n  }\r\n\r\n  // función para generar c3d\r\n  EjecutarC3D(xml){\r\n    var salida = \"\"\r\n    var retornos=[]\r\n    for (const instruccion of this.Instrucciones) {\r\n      retornos = retornos.concat(instruccion.getC3D())\r\n      \r\n    }\r\n\r\n    for (const retorno of retornos) {\r\n      C3D.addCodigo3D(`\\n/* Añadiendo la raiz para la consulta */\\n`);\r\n      C3D.addCodigo3D(`stackConsulta[0] = stack[0];\\n`)\r\n      C3D.addCodigo3D(`stackConsulta[1] = -2;\\n`) \r\n\r\n      C3D.addCodigo3D(retorno.cod)\r\n\r\n      switch(retorno.tipo)\r\n      {\r\n        case Tipo.STRING:\r\n          var T0 = C3D.newTemp();\r\n          C3D.funcBoleanas[C3D.funcIndices.STRING] = true\r\n          C3D.addCodigo3D(`sp = sp + 1; \\n`)\r\n          C3D.addCodigo3D(`${T0} = sp + 0; \\n`)\r\n          C3D.addCodigo3D(`stack[(int)${T0}] = ${retorno.valor}; \\n`)\r\n          C3D.addCodigo3D(`imprimirString(); \\n`)\r\n          C3D.addCodigo3D(`sp = sp - 1; \\n`)\r\n          break;\r\n        case Tipo.DECIMAL:\r\n          C3D.addCodigo3D(`printf(\"%f\", ${retorno.valor}); \\n`);\r\n          break;\r\n        case Tipo.INTEGER:\r\n          C3D.addCodigo3D(`printf(\"%d\", (int)${retorno.valor}); \\n`);\r\n          break;\r\n        case Tipo.ATRIB:\r\n          //entonces fue un atributo\r\n          C3D.funcBoleanas[C3D.funcIndices.IMPRIMIRATRIBUTO] = true\r\n          C3D.addCodigo3D(`ImprimirAtributoR(); \\n`);\r\n          break;\r\n        case Tipo.NODO:\r\n          //entonces fue un camino\r\n          C3D.funcBoleanas[C3D.funcIndices.IMPRIMIRCONSULTA] = true\r\n          C3D.addCodigo3D(`ImprimirConsultaR(); \\n`);\r\n      }\r\n      // if(retorno){\r\n      //   C3D.addCodigo3D(C3D.getstr3d())\r\n      //   switch (retorno.tipo) {\r\n      //     case Tipo.STRING:\r\n            \r\n          \r\n          \r\n      //   }\r\n      // }\r\n      // if(retorno.tipo == 5 /*Tipo.ATRIB*/){\r\n        \r\n      // }else if(retorno.tipo == 3 /*Tipo.NODO*/){\r\n      // }\r\n    }\r\n\r\n    \r\n\r\n    // imprimir \r\n    console.log(retornos)\r\n    salida = C3D.getFullC3D()\r\n    return salida\r\n  }\r\n\r\n  Graficar()\r\n  {\r\n    var ListaNodes = []\r\n    var ListaEdges = []\r\n    var contador = {num:2}\r\n    ListaNodes.push({id:1,label:\"AST\"})\r\n    ListaEdges.push({from:1,to:2})\r\n    var nodoActual = {id:contador.num,label:\"XPath\"}\r\n    contador.num++\r\n    ListaNodes.push(nodoActual)\r\n    for(var i = 0; i < this.Instrucciones.length; i++)\r\n    {\r\n      var nodos = [] \r\n      if(i!=0)\r\n      {\r\n        ListaNodes.push({id:contador.num,label:\"|\"})\r\n        nodos.push({id:contador.num,label:\"|\"})\r\n        contador.num++\r\n      }\r\n      nodos = nodos.concat(this.Instrucciones[i].Graficar(ListaNodes,ListaEdges,contador))\r\n      for (const nodo of nodos) {\r\n        ListaEdges.push({from:nodoActual.id,to:nodo.id})\r\n      }\r\n    }\r\n    return {nodes:ListaNodes,edges:ListaEdges}\r\n  }\r\n\r\n  InvertirNodes()\r\n  {\r\n    var NoGrade = this.Nodos[this.Nodos.length-1].id\r\n    for (const nodo of this.Nodos) {\r\n      nodo.id = Math.abs(nodo.id-NoGrade)\r\n    }\r\n    for (const edge of this.Edges) {\r\n      edge.from = Math.abs(edge.from-NoGrade)\r\n      edge.to = Math.abs(edge.to-NoGrade)\r\n    }\r\n  }\r\n}\r\n\r\nfunction ConvertiraXML(nodos,iteracion)\r\n{\r\n    var XML=\"\"\r\n    for (var i=0;i<iteracion;i++) {\r\n        XML += \"  \"\r\n    }\r\n    XML+=\"<\"+nodos.tipo+\" \"\r\n    for (const atributo of nodos.atributos) {\r\n        XML+=`${atributo.nombre}=\"${atributo.valor}\" `\r\n    }\r\n    if(nodos.hijos.length>0 || nodos.texto!=\"\")\r\n    {\r\n        XML+=\">\"\r\n        XML+=nodos.texto\r\n        for (const hijo of nodos.hijos) {\r\n            XML+= \"\\n\" + ConvertiraXML(hijo,iteracion+1)\r\n        }\r\n        if(nodos.hijos.length > 0)\r\n        {\r\n            XML += \"\\n\";\r\n            for (var i=0;i<iteracion;i++) {\r\n                XML += \"  \"\r\n            }\r\n        }\r\n        XML+=\"</\"+nodos.tipo+\">\"\r\n    }   \r\n    else\r\n    {\r\n        XML += \"/>\"\r\n    }\r\n    return XML\r\n}\r\n\r\nexport function Predicado(predicado,retorno)\r\n{\r\n  if(predicado.length > 0)\r\n  {\r\n    for (const iterator of predicado) {\r\n      var posibles = iterator.getValor(retorno)\r\n      if(posibles.length==0)\r\n      {\r\n        return []\r\n      }\r\n      if(posibles[0].tipo!=undefined)\r\n      {\r\n        switch(posibles[0].tipo)\r\n        {\r\n          case Tipo.NODO:\r\n            retorno=posibles\r\n            break\r\n          case Tipo.INTEGER:\r\n          case Tipo.DECIMAL:\r\n            var temp=[]\r\n            var posicion=1;\r\n            for (const posible of posibles) {\r\n              if(retorno[posible.valor-1])\r\n              {\r\n                temp.push(retorno[posible.valor-1])\r\n                posicion++;\r\n              }\r\n            }\r\n            retorno = temp\r\n            break\r\n        }\r\n      }\r\n    } \r\n  }\r\n  return retorno\r\n}\r\n\r\nexport function concatenarNodos(principales,secundarios)\r\n{\r\n  var posicion = principales.length>0 ? principales[principales.length-1].posicion : 1\r\n  for (const secundario of secundarios) {\r\n    secundario.setPosicion(posicion)\r\n    principales.push(secundario)\r\n    posicion++;\r\n  }\r\n  return principales\r\n}\r\n\r\nexport function concatenarNodosOrden(principales,secundarios)\r\n{\r\n  var nuevoRetorno = []\r\n  var iSec = 0\r\n  for (const principal of principales) {\r\n    for (; iSec < secundarios.length; iSec++) {\r\n      if(principal.posicion > secundarios[iSec].posicion)\r\n      {\r\n        nuevoRetorno.push(secundarios[iSec]) \r\n      }\r\n      else\r\n      {\r\n        break\r\n      }\r\n    }\r\n    nuevoRetorno.push(principal)\r\n  }\r\n  for (; iSec < secundarios.length; iSec++) {\r\n    nuevoRetorno.push(secundarios[iSec]) \r\n  }\r\n  return nuevoRetorno\r\n}\r\n\r\n","const C3D = require('../../C3D')\r\nvar {Tipo, ColisionLogical, getTipoById} = require(\"../AST/Entorno\")\r\nconst { ErroresGlobal } = require('../AST/Global')\r\nconst { Literal } = require(\"./Expresiones\")\r\n//Funcion para el Or entre booleanos\r\nexport class Logical\r\n{\r\n    constructor(izquierdo,op,derecho)\r\n    {\r\n        this.op=op\r\n        this.izquierdo=izquierdo;\r\n        this.derecho=derecho;\r\n    }\r\n    \r\n    getValor(Objetos)\r\n    {\r\n        var retornos = new Map()\r\n\r\n        for (var obj of Objetos ){\r\n            var valIzq = this.izquierdo.getValor([obj])\r\n            var valDer = this.derecho.getValor([obj])\r\n            operar(retornos,this.op,valIzq,valDer,Objetos)\r\n        }\r\n        var temp = []\r\n        for (const iterator of retornos.values()) {\r\n            temp.push(iterator)\r\n        }\r\n        return temp\r\n    }\r\n\r\n    Graficar(ListaNodes,ListaEdges,contador)\r\n    {\r\n        var NodosActuales = []\r\n        var nodoActual = {id:contador.num,label:this.op}\r\n        NodosActuales.push(nodoActual);ListaNodes.push(nodoActual);contador.num++\r\n        var nodos = this.izquierdo.Graficar(ListaNodes,ListaEdges,contador)\r\n        for (const nodo of nodos) {\r\n            ListaEdges.push({from:nodoActual.id,to:nodo.id})\r\n        }\r\n        nodos=this.derecho.Graficar(ListaNodes,ListaEdges,contador)\r\n        for (const nodo of nodos) {\r\n            ListaEdges.push({from:nodoActual.id,to:nodo.id})\r\n        }\r\n        return NodosActuales\r\n    }\r\n\r\n    getC3D()\r\n    {\r\n        var TCretorno;\r\n        var cod = ''\r\n        var retIzq = this.izquierdo.getC3D()\r\n        var retDer = this.derecho.getC3D()\r\n        var TC0; var TC1; var TC2;\r\n        cod += `//Inicio del Logical\\n`\r\n\r\n        if(retIzq.tipo == Tipo.NODO || retIzq.tipo == Tipo.BOOLEAN || retIzq.tipo == Tipo.ATRIB || retDer.tipo == Tipo.NODO || retDer.tipo == Tipo.BOOLEAN || retDer.tipo == Tipo.ATRIB )\r\n        {\r\n            TC0 = C3D.newTemp(); TC1 = TC0; var T0 = C3D.newTemp(); var T1 = C3D.newTemp(); var T2 = C3D.newTemp();\r\n            var La = C3D.newLbl(); var Lb = C3D.newLbl(); \r\n            cod += `${TC0} = spc;\\n`\r\n            cod += `${T0} = sp + 1; \\n`\r\n            cod += `${T1} = spc; \\n`\r\n            cod += `${Lb}:\\n`\r\n            cod += `${T2} = stackConsulta[(int)${T1}]; \\n`\r\n            cod += `if(${T2} == -2) goto ${La};\\n`\r\n            cod += `stack[(int)${T0}] = ${T2};\\n`\r\n            cod += `${T0} = ${T0} + 1;\\n`\r\n            cod += `${T1} = ${T1} + 1;\\n`\r\n            cod += `goto ${Lb};\\n`\r\n            cod += `${La}:\\n`\r\n            cod += `stack[(int)${T0}] = -2;\\n`\r\n\r\n            if(retIzq.cod!='' && retIzq.tipo == Tipo.BOOLEAN)\r\n            {\r\n                var T1 = C3D.newTemp(); var T2 = C3D.newTemp();  var T3 = C3D.newTemp(); \r\n                var T4 = C3D.newTemp(); var T5 = C3D.newTemp(); var TC1 = C3D.newTemp(); \r\n                var TSP = C3D.newTemp();\r\n                var T6 = C3D.newTemp(); var T7 = C3D.newTemp(); var T8 = C3D.newTemp();\r\n\r\n                var La = C3D.newLbl(); var Lb = C3D.newLbl(); var Lc = C3D.newLbl(); \r\n                var Ld = C3D.newLbl(); var Le = C3D.newLbl(); var Lf = C3D.newLbl();\r\n\r\n                cod += `${T1} = ${TC0}; \\n`\r\n                cod += `${Lb}:\\n`\r\n                cod += `${T2} = stackConsulta[(int)${T1}]; \\n`\r\n                cod += `if(${T2} == -2) goto ${La};\\n`\r\n                cod += `${T1} = ${T1} + 1;\\n`\r\n                cod += `goto ${Lb};\\n`\r\n                cod += `${La}:\\n`\r\n                cod += `spc = ${T1} + 1;\\n`\r\n                cod += `${T3} = sp + 1; \\n`\r\n                cod += `${T4} = spc; \\n`\r\n                cod += `${Ld}:\\n`\r\n                cod += `${T5} = stack[(int)${T3}];\\n`\r\n                cod += `if(${T5} == -2) goto ${Lc};\\n`\r\n                cod += `stackConsulta[(int)${T4}]=${T5};\\n`\r\n                cod += `${T3} = ${T3} + 1;\\n`\r\n                cod += `${T4} = ${T4} + 1;\\n`\r\n                cod += `goto ${Ld};\\n`\r\n                cod += `${Lc}:\\n`\r\n                cod += `stackConsulta[(int)${T4}] = -2;\\n`\r\n                cod += `${TC1} = spc;\\n`\r\n                cod += `${TSP} = sp;\\n`\r\n                cod += `sp = ${T3} + 1;\\n`  \r\n\r\n                cod += retIzq.cod   \r\n                cod += `${T6} = ${retIzq.valor};\\n`\r\n                cod += `${T7} = ${TC1};\\n`\r\n                cod += `${Lf}:\\n`\r\n                cod += `${T8} = stackConsulta[(int)${T6}];\\n`\r\n                cod += `if(${T8} == -2) goto ${Le};\\n`\r\n                cod += `stackConsulta[(int)${T7}] = ${T8};\\n`\r\n                cod += `${T6} = ${T6} + 1;\\n`\r\n                cod += `${T7} = ${T7} + 1;\\n`\r\n                cod += `goto ${Lf};\\n`\r\n                cod += `${Le}:\\n`\r\n                cod += `stackConsulta[(int)${T7}] = -2;\\n`\r\n\r\n                cod += `sp = ${TSP};\\n`\r\n            }\r\n\r\n            if(retIzq.cod!='' && (retIzq.tipo == Tipo.NODO || retIzq.tipo == Tipo.ATRIB))\r\n            { \r\n                var T1 = C3D.newTemp(); var T2 = C3D.newTemp(); \r\n                var T3 = C3D.newTemp(); var T4 = C3D.newTemp();\r\n                var T5 = C3D.newTemp(); var TC1 = C3D.newTemp();\r\n                var TSP = C3D.newTemp();\r\n\r\n                var La = C3D.newLbl(); var Lb = C3D.newLbl(); \r\n                var Lc = C3D.newLbl(); var Ld = C3D.newLbl();\r\n\r\n                cod += `${T1} = ${TC0}; \\n`\r\n                cod += `${Lb}:\\n`\r\n                cod += `${T2} = stackConsulta[(int)${T1}]; \\n`\r\n                cod += `if(${T2} == -2) goto ${La};\\n`\r\n                cod += `${T1} = ${T1} + 1;\\n`\r\n                cod += `goto ${Lb};\\n`\r\n                cod += `${La}:\\n`\r\n                cod += `spc = ${T1} + 1;\\n`\r\n                cod += `${T3} = sp + 1; \\n`\r\n                cod += `${T4} = spc; \\n`\r\n                cod += `${Ld}:\\n`\r\n                cod += `${T5} = stack[(int)${T3}];\\n`\r\n                cod += `if(${T5} == -2) goto ${Lc};\\n`\r\n                cod += `stackConsulta[(int)${T4}]=${T5};\\n`\r\n                cod += `${T3} = ${T3} + 1;\\n`\r\n                cod += `${T4} = ${T4} + 1;\\n`\r\n                cod += `goto ${Ld};\\n`\r\n                cod += `${Lc}:\\n`\r\n                cod += `stackConsulta[(int)${T4}] = -2;\\n`\r\n                cod += `${TC1} = spc;\\n`\r\n                cod += `${TSP} = sp;\\n`\r\n                cod += `sp = ${T3} + 1;\\n`  \r\n\r\n                cod += retIzq.cod\r\n                cod += `sp = ${TSP};\\n`\r\n            }\r\n\r\n            if(retDer.cod!='' && retDer.tipo == Tipo.BOOLEAN)\r\n            {\r\n                var T6 = C3D.newTemp(); var T7 = C3D.newTemp();  var T8 = C3D.newTemp(); \r\n                var T9 = C3D.newTemp(); var T10 = C3D.newTemp(); var TC2 = C3D.newTemp();\r\n                var TSP = C3D.newTemp();\r\n                var T11 = C3D.newTemp(); var T12 = C3D.newTemp(); var T13 = C3D.newTemp();\r\n\r\n                var Le = C3D.newLbl(); var Lf = C3D.newLbl(); \r\n                var Lg = C3D.newLbl(); var Lh = C3D.newLbl();\r\n                var Li = C3D.newLbl(); var Lj = C3D.newLbl();\r\n                \r\n                if(TC1){ cod += `${T6} = ${TC1};\\n` }\r\n                else { cod += `${T6} = ${TC0};\\n` }\r\n                cod += `${Lf}:\\n`\r\n                cod += `${T7} = stackConsulta[(int)${T6}];\\n`\r\n                cod += `if(${T7} == -2) goto ${Le};\\n`\r\n                cod += `${T6} = ${T6} + 1;\\n`\r\n                cod += `goto ${Lf};\\n`\r\n                cod += `${Le}:\\n`\r\n                cod += `spc = ${T6} + 1;\\n`\r\n                cod += `${T8} = sp + 1;\\n`\r\n                cod += `${T9} = spc; \\n`\r\n                cod += `${Lg}:\\n`\r\n                cod += `${T10} = stack[(int)${T8}];\\n`\r\n                cod += `if(${T10} == -2) goto ${Lh};\\n`\r\n                cod += `stackConsulta[(int)${T9}]=${T10};\\n`\r\n                cod += `${T8} = ${T8} + 1;\\n`\r\n                cod += `${T9} = ${T9} + 1;\\n`\r\n                cod += `goto ${Lg};\\n`\r\n                cod += `${Lh}:\\n`\r\n                cod += `stackConsulta[(int)${T9}] = -2;\\n`\r\n                cod += `${TC2} = spc;\\n`\r\n                cod += `${TSP} = sp;\\n`\r\n                cod += `sp = ${T8} + 1;\\n`\r\n\r\n                cod += retDer.cod\r\n                cod += `${T11} = ${retDer.valor};\\n`\r\n                cod += `${T12} = ${TC2};\\n`\r\n                cod += `${Li}:\\n`\r\n                cod += `${T13} = stackConsulta[(int)${T11}];\\n`\r\n                cod += `if(${T13} == -2) goto ${Lj};\\n`\r\n                cod += `stackConsulta[(int)${T12}] = ${T13};\\n`\r\n                cod += `${T11} = ${T11} + 1;\\n`\r\n                cod += `${T12} = ${T12} + 1;\\n`\r\n                cod += `goto ${Li};\\n`\r\n                cod += `${Lj}:\\n`\r\n                cod += `stackConsulta[(int)${T12}] = -2;\\n`\r\n\r\n                cod += `sp = ${TSP};\\n`\r\n            }\r\n            \r\n            if(retDer.cod != '' && (retDer.tipo == Tipo.NODO || retDer.tipo == Tipo.ATRIB))\r\n            {\r\n                var T6 = C3D.newTemp(); var T7 = C3D.newTemp(); \r\n                var T8 = C3D.newTemp(); var T9 = C3D.newTemp(); \r\n                var T10 = C3D.newTemp(); var TC2 = C3D.newTemp();\r\n                var TSP = C3D.newTemp();\r\n\r\n                var Le = C3D.newLbl(); var Lf = C3D.newLbl(); \r\n                var Lg = C3D.newLbl(); var Lh = C3D.newLbl()\r\n                \r\n                if(TC1){ cod += `${T6} = ${TC1};\\n` }\r\n                else { cod += `${T6} = ${TC0};\\n` }\r\n                cod += `${Lf}:\\n`\r\n                cod += `${T7} = stackConsulta[(int)${T6}];\\n`\r\n                cod += `if(${T7} == -2) goto ${Le};\\n`\r\n                cod += `${T6} = ${T6} + 1;\\n`\r\n                cod += `goto ${Lf};\\n`\r\n                cod += `${Le}:\\n`\r\n                cod += `spc = ${T6} + 1;\\n`\r\n                cod += `${T8} = sp + 1;\\n`\r\n                cod += `${T9} = spc; \\n`\r\n                cod += `${Lg}:\\n`\r\n                cod += `${T10} = stack[(int)${T8}];\\n`\r\n                cod += `if(${T10} == -2) goto ${Lh};\\n`\r\n                cod += `stackConsulta[(int)${T9}]=${T10};\\n`\r\n                cod += `${T8} = ${T8} + 1;\\n`\r\n                cod += `${T9} = ${T9} + 1;\\n`\r\n                cod += `goto ${Lg};\\n`\r\n                cod += `${Lh}:\\n`\r\n                cod += `stackConsulta[(int)${T9}] = -2;\\n`\r\n                cod += `${TC2} = spc;\\n`\r\n                cod += `${TSP} = sp;\\n`\r\n                cod += `sp = ${T8} + 1;\\n`\r\n\r\n                cod += retDer.cod\r\n                cod += `sp = ${TSP};\\n`\r\n            }  \r\n        }\r\n        \r\n        if(retIzq.cod!='' && retIzq.tipo != Tipo.BOOLEAN && retIzq.tipo != Tipo.NODO && retIzq.tipo != Tipo.ATRIB )\r\n        {\r\n            cod += retIzq.cod\r\n        }\r\n        \r\n        if(retDer.cod!='' && retDer.tipo != Tipo.BOOLEAN && retDer.tipo != Tipo.NODO && retDer.tipo != Tipo.ATRIB )\r\n        {\r\n            cod += retDer.cod\r\n        }\r\n\r\n        if(retIzq.tipo == Tipo.BOOLEAN)\r\n        {\r\n            TCretorno = TC1\r\n            if(retDer.tipo == Tipo.BOOLEAN)\r\n            {\r\n                var TL1 = C3D.newTemp(); var TL2 = C3D.newTemp(); var TL3 = C3D.newTemp(); var TL4 = C3D.newTemp(); \r\n\r\n                var LR0 = C3D.newLbl(); var LR1 = C3D.newLbl(); var LR2 = C3D.newLbl(); var LR3 = C3D.newLbl(); var LR4 = C3D.newLbl();\r\n\r\n                cod += `${TL1} = ${TC1};\\n`\r\n                cod += `${TL2} = ${TC2};\\n`\r\n                cod += `${LR4}:\\n`\r\n                cod += `${TL3} = stackConsulta[(int)${TL1}];\\n`\r\n                cod += `${TL4} = stackConsulta[(int)${TL2}];\\n`\r\n                cod += `if(${TL3} == -2) goto ${LR0};\\n`\r\n                switch(this.op)\r\n                {\r\n                    case \"and\":\r\n                        cod += `if(${TL3} == 0) goto ${LR1};\\n`\r\n                        cod += `if(${TL4} == 0) goto ${LR1};\\n`\r\n                        cod += `goto ${LR2};\\n`\r\n                        break;\r\n                    case \"or\":\r\n                        cod += `if(${TL3} == 1) goto ${LR2};\\n`\r\n                        cod += `if(${TL4} == 1) goto ${LR2};\\n`\r\n                        break;\r\n                }\r\n                cod += `${LR1}:\\n`\r\n                cod += `stacX[(int)sx] = 0;\\n`\r\n                cod += `sx = sx + 1;\\n`\r\n                cod += `stacX[(int)sx] = -2;\\n`\r\n                cod += `goto ${LR3};\\n`\r\n\r\n                cod += `${LR2}:\\n`\r\n                cod += `stacX[(int)sx] = 1;\\n`\r\n                cod += `sx = sx + 1;\\n`\r\n                cod += `stacX[(int)sx] = -2;\\n`\r\n\r\n                cod += `${LR3}:\\n`\r\n                cod += `${TL1} = ${TL1} + 1;\\n`\r\n                cod += `${TL2} = ${TL2} + 1;\\n`\r\n                cod += `goto ${LR4};\\n`\r\n                cod += `${LR0}:\\n`\r\n\r\n                var TP4 = C3D.newTemp(); var TP5 = C3D.newTemp(); var TP6 = C3D.newTemp();\r\n                var LP4 = C3D.newLbl(); var LP5 = C3D.newLbl();\r\n                //Reemplazar el StackConsulta por el StackX\r\n                cod += `${TP4} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n                cod += `${LP4}: \\n`\r\n                cod += `${TP5} = stacX[(int)${TP4}]; \\n`\r\n                cod += `if (${TP5} == -2) goto ${LP5}; \\n`      //si el stackX ya se termino vamos a LD\r\n                cod += `${TP6} = ${TC1} + ${TP4}; \\n`              //posicion contador del stackConsulta\r\n                cod += `stackConsulta[(int)${TP6}] = ${TP5};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n                cod += `${TP4} = ${TP4} + 1; \\n`                //aumentamos el contador de stackX\r\n                cod += `goto ${LP4}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n\r\n                //se acabo el stackX, no hay mas para guardar\r\n                cod += `${LP5}: \\n`    \r\n                cod += `${TP6} = ${TC1} + ${TP4};\\n`\r\n                cod += `stackConsulta[(int)${TP6}] = -2;\\n`\r\n                cod += `sx = 0; \\n`\r\n                cod += `stacX[(int)sx] = -2; \\n`\r\n            }\r\n        }\r\n        \r\n        if(retIzq.tipo == Tipo.NODO || retIzq.tipo == Tipo.BOOLEAN || retIzq.tipo == Tipo.ATRIB || retDer.tipo == Tipo.NODO || retDer.tipo == Tipo.BOOLEAN || retDer.tipo == Tipo.ATRIB )\r\n        {\r\n            cod += `spc = ${TC0};\\n`\r\n        }\r\n        return {cod:cod,tipo:Tipo.BOOLEAN,valor:TCretorno}   \r\n    }\r\n}\r\n\r\nfunction operar(objeto,op,izqValor,derValor,todos){\r\n    var retorno = false\r\n    // validar tipos\r\n    switch(op){\r\n        case \"and\":\r\n            for (const izq of izqValor) {\r\n                for (const der of derValor) {\r\n                    if(izq.tipo==Tipo.NODO)\r\n                    {\r\n                        if(der.tipo==Tipo.NODO)\r\n                        {\r\n                            if(izq.entorno == der.entorno)\r\n                            {\r\n                                objeto.set(izq.entorno,izq)\r\n                                break\r\n                            }\r\n                            break\r\n                        }\r\n                        objeto.set(izq.entorno,izq)\r\n                        break\r\n                    }\r\n                    else if(der.tipo==Tipo.NODO)\r\n                    {\r\n                        objeto.set(izq.entorno,der)\r\n                        break\r\n                    }\r\n                    for (const iterator of todos) {\r\n                        objeto.set(iterator.entorno,iterator)\r\n                    }\r\n                    return\r\n                }\r\n            }\r\n            break\r\n        case \"or\":\r\n            for (const izq of izqValor) {\r\n                if(izq.tipo!=Tipo.NODO)\r\n                {\r\n                    for (const iterator of todos) {\r\n                        objeto.set(iterator.entorno,iterator)\r\n                    }\r\n                    return\r\n                }\r\n                objeto.set(izq.entorno,izq)\r\n            }\r\n            for (const der of derValor) {\r\n                if(der.tipo!=Tipo.NODO)\r\n                {\r\n                    for (const iterator of todos) {\r\n                        objeto.set(iterator.entorno,iterator)\r\n                    }\r\n                    return\r\n                }\r\n                objeto.set(der.entorno,der)\r\n            }\r\n            break\r\n    }\r\n    return retorno\r\n}","import { Retorno, newTemp} from '../../C3D';\r\nconst C3D = require('../../C3D')\r\nconst { Colision, ColisionTipo, Tipo, getTipoById } = require('../AST/Entorno')\r\nconst { ErroresGlobal } = require('../AST/Global')\r\nconst { Literal } = require(\"./Expresiones\");\r\n\r\nexport class Arithmetic {\r\n\r\n    constructor (izquierdo,op,derecho){\r\n        this.op=op\r\n        this.izquierdo = izquierdo;\r\n        this.derecho = derecho;\r\n    }\r\n\r\n    getValor(Objetos){\r\n        var retorno = []\r\n\r\n        var valIzq = this.izquierdo.getValor(Objetos)\r\n        var valDer = this.derecho.getValor(Objetos)\r\n            // plano cartesiano entre valores izq y valores \r\n        for (var izq of valIzq){\r\n            for (var der of valDer){\r\n                var newValor = operar(izq, this.op, der)\r\n                if ((newValor!=undefined || newValor!=null) && !this.contiene(retorno,newValor)){\r\n                    retorno.push(\r\n                        new Literal(\r\n                            ColisionTipo[izq.tipo][der.tipo],\r\n                            newValor\r\n                        )\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        return retorno\r\n    }\r\n\r\n    getC3D(){\r\n        var cod = ''\r\n        var retIzq = this.izquierdo.getC3D()\r\n        var retDer = this.derecho.getC3D()\r\n        var TC0; var TC1; var TC2;\r\n        cod += `//Inicio Arimeticas\\n`\r\n        if(retIzq.tipo == Tipo.NODO || retIzq.tipo == Tipo.ATRIB || retDer.tipo == Tipo.NODO || retDer.tipo == Tipo.ATRIB )\r\n        {\r\n            TC0 = C3D.newTemp(); var T0 = C3D.newTemp(); var T1 = C3D.newTemp(); var T2 = C3D.newTemp();\r\n            var La = C3D.newLbl(); var Lb = C3D.newLbl(); \r\n            cod += `${TC0} = spc;\\n`\r\n            cod += `${T0} = sp + 1; \\n`\r\n            cod += `${T1} = spc; \\n`\r\n            cod += `${Lb}:\\n`\r\n            cod += `${T2} = stackConsulta[(int)${T1}]; \\n`\r\n            cod += `if(${T2} == -2) goto ${La};\\n`\r\n            cod += `stack[(int)${T0}] = ${T2};\\n`\r\n            cod += `${T0} = ${T0} + 1;\\n`\r\n            cod += `${T1} = ${T1} + 1;\\n`\r\n            cod += `goto ${Lb};\\n`\r\n            cod += `${La}:\\n`\r\n            cod += `stack[(int)${T0}] = -2;\\n`\r\n\r\n            if(retIzq.cod!='' && (retIzq.tipo == Tipo.NODO || retIzq.tipo == Tipo.ATRIB))\r\n            { \r\n                var T1 = C3D.newTemp(); var T2 = C3D.newTemp(); \r\n                var T3 = C3D.newTemp(); var T4 = C3D.newTemp();\r\n                var T5 = C3D.newTemp(); var TC1 = C3D.newTemp();\r\n                var TSP = C3D.newTemp();\r\n                var La = C3D.newLbl(); var Lb = C3D.newLbl(); \r\n                var Lc = C3D.newLbl(); var Ld = C3D.newLbl();\r\n\r\n                cod += `${T1} = ${TC0}; \\n`\r\n                cod += `${Lb}:\\n`\r\n                cod += `${T2} = stackConsulta[(int)${T1}]; \\n`\r\n                cod += `if(${T2} == -2) goto ${La};\\n`\r\n                cod += `${T1} = ${T1} + 1;\\n`\r\n                cod += `goto ${Lb};\\n`\r\n                cod += `${La}:\\n`\r\n                cod += `spc = ${T1} + 1;\\n`\r\n                cod += `${T3} = sp + 1; \\n`\r\n                cod += `${T4} = spc; \\n`\r\n                cod += `${Ld}:\\n`\r\n                cod += `${T5} = stack[(int)${T3}];\\n`\r\n                cod += `if(${T5} == -2) goto ${Lc};\\n`\r\n                cod += `stackConsulta[(int)${T4}]=${T5};\\n`\r\n                cod += `${T3} = ${T3} + 1;\\n`\r\n                cod += `${T4} = ${T4} + 1;\\n`\r\n                cod += `goto ${Ld};\\n`\r\n                cod += `${Lc}:\\n`\r\n                cod += `stackConsulta[(int)${T4}] = -2;\\n`\r\n                cod += `${TC1} = spc;\\n`\r\n                cod += `${TSP} = sp;\\n`\r\n                cod += `sp = ${T3} + 1;\\n`  \r\n\r\n                cod += retIzq.cod\r\n                cod += `sp = ${TSP};\\n`\r\n\r\n            }\r\n            \r\n            if(retDer.cod != '' && (retDer.tipo == Tipo.NODO || retDer.tipo == Tipo.ATRIB))\r\n            {\r\n                var T6 = C3D.newTemp(); var T7 = C3D.newTemp(); \r\n                var T8 = C3D.newTemp(); var T9 = C3D.newTemp(); \r\n                var T10 = C3D.newTemp(); var TC2 = C3D.newTemp();\r\n                var TSP = C3D.newTemp();\r\n\r\n                var Le = C3D.newLbl(); var Lf = C3D.newLbl(); \r\n                var Lg = C3D.newLbl(); var Lh = C3D.newLbl()\r\n                \r\n                cod += `${T6} = ${TC0};\\n`\r\n                cod += `${Lf}:\\n`\r\n                cod += `${T7} = stackConsulta[(int)${T6}];\\n`\r\n                cod += `if(${T7} == -2) goto ${Le};\\n`\r\n                cod += `${T6} = ${T6} + 1;\\n`\r\n                cod += `goto ${Lf};\\n`\r\n                cod += `${Le}:\\n`\r\n                cod += `spc = ${T6} + 1;\\n`\r\n                cod += `${T8} = sp + 1;\\n`\r\n                cod += `${T9} = spc; \\n`\r\n                cod += `${Lg}:\\n`\r\n                cod += `${T10} = stack[(int)${T8}];\\n`\r\n                cod += `if(${T10} == -2) goto ${Lh};\\n`\r\n                cod += `stackConsulta[(int)${T9}]=${T10};\\n`\r\n                cod += `${T8} = ${T8} + 1;\\n`\r\n                cod += `${T9} = ${T9} + 1;\\n`\r\n                cod += `goto ${Lg};\\n`\r\n                cod += `${Lh}:\\n`\r\n                cod += `stackConsulta[(int)${T9}] = -2;\\n`\r\n                cod += `${TC2} = spc;\\n`\r\n                cod += `${TSP} = sp;\\n`\r\n                cod += `sp = ${T8} + 1;\\n`\r\n\r\n                cod += retDer.cod\r\n                cod += `sp = ${TSP};\\n` \r\n            }  \r\n        }\r\n        \r\n        if(retIzq.cod!='' && retIzq.tipo != Tipo.NODO && retIzq.tipo != Tipo.ATRIB )\r\n        {\r\n            cod += retIzq.cod\r\n        }\r\n        \r\n        if(retDer.cod!='' && retDer.tipo != Tipo.NODO && retDer.tipo != Tipo.ATRIB )\r\n        {\r\n            cod += retDer.cod\r\n        }\r\n\r\n        var TC3;\r\n        if(retIzq.tipo == Tipo.DECIMAL || retIzq.tipo == Tipo.INTEGER)\r\n        {\r\n            TC3 = retIzq.valor\r\n            //cod += `${TC3} = ${retIzq.valor};\\n` \r\n        }\r\n        else if(retIzq.tipo == Tipo.NODO)\r\n        {   \r\n            var TF1=newTemp();var T11 = newTemp();var T12 = newTemp();TC3 = newTemp();\r\n            cod += `${TF1} = stackConsulta[(int)${TC1}];\\n`\r\n            cod += `${TF1} = ${TF1} + 3;\\n`\r\n            cod += `${T11} = Indexes[(int)${TF1}];\\n`\r\n            cod += `sp = sp + 1;\\n`\r\n            cod += `${T12} = sp + 1;\\n`\r\n            cod += `stack[(int)${T12}] = ${T11};\\n`\r\n            C3D.funcBoleanas[C3D.funcIndices.CASTNUM] = true\r\n            cod += `CastNum();\\n`\r\n            cod += `${TC3} = stack[(int)sp];\\n`\r\n            cod += `sp = sp - 1;\\n`\r\n        }\r\n        else if(retIzq.tipo == Tipo.ATRIB)\r\n        {\r\n            var TF1=newTemp();var T11 = newTemp();var T12 = newTemp();TC3 = newTemp();\r\n            cod += `${TF1} = stackConsulta[(int)${TC1}];\\n`\r\n            cod += `${TF1} = ${TF1} + 1;\\n`\r\n            cod += `${T11} = stackAtributos[(int)${TF1}];\\n`\r\n            cod += `sp = sp + 1;\\n`\r\n            cod += `${T12} = sp + 1;\\n`\r\n            cod += `stack[(int)${T12}] = ${T11};\\n`\r\n            C3D.funcBoleanas[C3D.funcIndices.CASTNUM] = true\r\n            cod += `CastNum();\\n`\r\n            cod += `${TC3} = stack[(int)sp];\\n`\r\n            cod += `sp = sp - 1;\\n`\r\n        }\r\n\r\n        var TC4;\r\n        if(retDer.tipo == Tipo.DECIMAL)\r\n        {\r\n            TC4 = retDer.valor;\r\n            //cod += `${TC4} = ${retDer.valor};\\n` \r\n        }\r\n        else if(retDer.tipo == Tipo.NODO)\r\n        {\r\n            var TF2=newTemp(); var T13 = newTemp();var T14 = newTemp();TC4 = newTemp();\r\n            cod += `${TF2} = stackConsulta[(int)${TC2}];\\n`\r\n            cod += `${TF2} = ${TF2} + 3;\\n`\r\n            cod += `${T13} = Indexes[(int)${TF2}];\\n`\r\n            cod += `sp = sp + 1;\\n`\r\n            cod += `${T14} = sp + 1;\\n`\r\n            cod += `stack[(int)${T14}] = ${T13};\\n`\r\n            C3D.funcBoleanas[C3D.funcIndices.CASTNUM] = true\r\n            cod += `CastNum();\\n`\r\n            cod += `${TC4} = stack[(int)sp];\\n`\r\n            cod += `sp = sp - 1;\\n`\r\n        }\r\n        else if(retDer.tipo == Tipo.ATRIB)\r\n        {\r\n            var TF2=newTemp(); var T13 = newTemp();var T14 = newTemp();TC4 = newTemp();\r\n            cod += `${TF2} = stackConsulta[(int)${TC2}];\\n`\r\n            cod += `${TF2} = ${TF2} + 1;\\n`\r\n            cod += `${T13} = stackAtributos[(int)${TF2}];\\n`\r\n            cod += `sp = sp + 1;\\n`\r\n            cod += `${T14} = sp + 1;\\n`\r\n            cod += `stack[(int)${T14}] = ${T13};\\n`\r\n            C3D.funcBoleanas[C3D.funcIndices.CASTNUM] = true\r\n            cod += `CastNum();\\n`\r\n            cod += `${TC4} = stack[(int)sp];\\n`\r\n            cod += `sp = sp - 1;\\n` \r\n        }\r\n\r\n        var TC5 = newTemp();\r\n        switch(this.op)\r\n        {\r\n            case \"+\":\r\n                cod += `${TC5} = ${TC3} + ${TC4};\\n`\r\n                break;\r\n            case \"-\":\r\n                cod += `${TC5} = ${TC3} - ${TC4};\\n`\r\n                break;\r\n            case \"*\":\r\n                cod += `${TC5} = ${TC3} * ${TC4};\\n`\r\n                break;\r\n            case \"div\":\r\n                cod += `${TC5} = (float)${TC3} / (float)${TC4};\\n`\r\n                break;\r\n            case \"mod\":\r\n                cod += `${TC5} = (int)${TC3} % ${TC4};\\n`\r\n                break;\r\n            case \"idiv\":\r\n                cod += `${TC5} = (int)(${TC3} / ${TC4});\\n`\r\n                break;\r\n        } \r\n        if(retIzq.tipo == Tipo.NODO || retIzq.tipo == Tipo.ATRIB || retDer.tipo == Tipo.NODO || retDer.tipo == Tipo.ATRIB )\r\n        {\r\n            cod += `spc = ${TC0};\\n`\r\n        }\r\n        return {cod:cod,tipo:Tipo.DECIMAL,valor:TC5}\r\n    }\r\n    \r\n    contiene(objeto,numero)\r\n    {\r\n        for (const iterator of objeto) {\r\n            if(iterator.valor==numero) return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    Graficar(ListaNodes,ListaEdges,contador)\r\n    {\r\n        var NodosActuales = []\r\n        var nodoActual = {id:contador.num,label:this.op}\r\n        NodosActuales.push(nodoActual);ListaNodes.push(nodoActual);contador.num++\r\n        var nodos = this.izquierdo.Graficar(ListaNodes,ListaEdges,contador)\r\n        for (const nodo of nodos) {\r\n            ListaEdges.push({from:nodoActual.id,to:nodo.id})\r\n        }\r\n        nodos=this.derecho.Graficar(ListaNodes,ListaEdges,contador)\r\n        for (const nodo of nodos) {\r\n            ListaEdges.push({from:nodoActual.id,to:nodo.id})\r\n        }\r\n        return NodosActuales\r\n    }\r\n}\r\n\r\nfunction operar(izq, op, der){\r\n    var retorno = false\r\n    // validar tipos\r\n    if (Colision[izq.tipo][der.tipo]){\r\n        switch(op){\r\n            case \"+\":\r\n                retorno =  Number(izq.valor) + Number(der.valor)\r\n                break;\r\n            case \"-\":\r\n                retorno = Number(izq.valor) - Number(der.valor)\r\n                break;\r\n            case \"*\":\r\n                retorno = Number(izq.valor) * Number(der.valor)\r\n                break;\r\n            case \"div\":\r\n                retorno = Number(izq.valor) / Number(der.valor)\r\n                break;\r\n            case \"mod\":\r\n                retorno = Number(izq.valor) % Number(der.valor)\r\n                break;\r\n            case \"idiv\":\r\n                retorno = Math.trunc(Number(izq.valor) / Number(der.valor))\r\n                break;\r\n        }   \r\n    } \r\n    else\r\n    {\r\n        ErroresGlobal.push({Error:`No se pudieron operar los tipos ${getTipoById(izq.tipo)} - ${getTipoById(der.tipo)}`,tipo:\"Semantico\",Linea:0,columna:0})\r\n    } \r\n    return retorno\r\n}\r\n\r\nexport class Unary {\r\n    constructor (op,izquierdo){\r\n        this.op=op\r\n        this.izquierdo = izquierdo;\r\n    }\r\n\r\n    getValor(Objetos){\r\n        var retorno = []\r\n        // recorrer lista de objetos\r\n        for (var obj of Objetos) {\r\n            var valIzq = this.izquierdo.getValor([obj])\r\n            // recorrer lista de resultados de izquierda\r\n            for (var izq of valIzq) {\r\n                if (Colision[Tipo.INTEGER][izq.tipo]){\r\n                    var newValor = null\r\n                    switch(this.op){\r\n                        case \"-\":\r\n                            newValor = - izq.valor\r\n                        break;\r\n                        case \"+\":\r\n                            newValor = + izq.valor\r\n                        break;\r\n                    } \r\n                    if (newValor && !this.contiene(retorno,newValor)) retorno.push(new Literal(izq.tipo, newValor))\r\n                }\r\n                else\r\n                {\r\n                    ErroresGlobal.push({Error:`No se puede realizar operacion en ${getTipoById(izq.tipo)}`,tipo:\"Semantico\",Linea:0,columna:0})\r\n                } \r\n            }\r\n        }\r\n        return retorno\r\n    }\r\n\r\n    getC3D(){\r\n        var cod = ''\r\n        var retIzq = this.izquierdo.getC3D()\r\n        var TC0; var TC1;\r\n\r\n        if(retIzq.tipo == Tipo.NODO || retIzq.tipo == Tipo.ATRIB)\r\n        {\r\n            TC0 = C3D.newTemp(); var T0 = C3D.newTemp(); var T1 = C3D.newTemp(); var T2 = C3D.newTemp();\r\n            var La = C3D.newLbl(); var Lb = C3D.newLbl(); \r\n            cod += `${TC0} = spc;\\n`\r\n            cod += `${T0} = sp + 1; \\n`\r\n            cod += `${T1} = spc; \\n`\r\n            cod += `${Lb}:\\n`\r\n            cod += `${T2} = stackConsulta[(int)${T1}]; \\n`\r\n            cod += `if(${T2} == -2) goto ${La};\\n`\r\n            cod += `stack[(int)${T0}] = ${T2};\\n`\r\n            cod += `${T0} = ${T0} + 1;\\n`\r\n            cod += `${T1} = ${T1} + 1;\\n`\r\n            cod += `goto ${Lb};\\n`\r\n            cod += `${La}:\\n`\r\n            cod += `stack[(int)${T0}] = -2;\\n`\r\n\r\n            if(retIzq.cod!='' && (retIzq.tipo == Tipo.NODO || retIzq.tipo == Tipo.ATRIB))\r\n            { \r\n                var T1 = C3D.newTemp(); var T2 = C3D.newTemp(); \r\n                var T3 = C3D.newTemp(); var T4 = C3D.newTemp();\r\n                var T5 = C3D.newTemp(); var TC1 = C3D.newTemp();\r\n\r\n                var La = C3D.newLbl(); var Lb = C3D.newLbl(); \r\n                var Lc = C3D.newLbl(); var Ld = C3D.newLbl();\r\n\r\n                cod += `${T1} = ${TC0}; \\n`\r\n                cod += `${Lb}:\\n`\r\n                cod += `${T2} = stackConsulta[(int)${T1}]; \\n`\r\n                cod += `if(${T2} == -2) goto ${La};\\n`\r\n                cod += `${T1} = ${T1} + 1;\\n`\r\n                cod += `goto ${Lb};\\n`\r\n                cod += `${La}:\\n`\r\n                cod += `spc = ${T1} + 1;\\n`\r\n                cod += `${T3} = sp + 1; \\n`\r\n                cod += `${T4} = spc; \\n`\r\n                cod += `${Ld}:\\n`\r\n                cod += `${T5} = stack[(int)${T3}];\\n`\r\n                cod += `if(${T5} == -2) goto ${Lc};\\n`\r\n                cod += `stackConsulta[(int)${T4}]=${T5};\\n`\r\n                cod += `${T3} = ${T3} + 1;\\n`\r\n                cod += `${T4} = ${T4} + 1;\\n`\r\n                cod += `goto ${Ld};\\n`\r\n                cod += `${Lc}:\\n`\r\n                cod += `stackConsulta[(int)${T4}] = -2;\\n`\r\n                cod += `${TC1} = spc;\\n`\r\n                cod += `sp = ${T3} + 1;\\n`  \r\n\r\n                cod += retIzq.cod\r\n                cod += `sp = sp - ${T3};\\n`\r\n                cod += `sp = sp - 1;\\n`\r\n            }   \r\n        }\r\n        \r\n        if(retIzq.cod!='' && retIzq.tipo != Tipo.NODO && retIzq.tipo != Tipo.ATRIB )\r\n        {\r\n            cod += retIzq.cod\r\n        }\r\n        \r\n        var TC3;\r\n        if(retIzq.tipo == Tipo.DECIMAL || retIzq.tipo == Tipo.INTEGER)\r\n        {\r\n            TC3 = retIzq.valor\r\n            //cod += `${TC3} = ${retIzq.valor};\\n` \r\n        }\r\n        else if(retIzq.tipo == Tipo.NODO)\r\n        {   \r\n            var TF1=newTemp();var T11 = newTemp();var T12 = newTemp();TC3 = newTemp();\r\n            cod += `${TF1} = stackConsulta[(int)${TC1}];\\n`\r\n            cod += `${TF1} = ${TF1} + 3;\\n`\r\n            cod += `${T11} = Indexes[(int)${TF1}];\\n`\r\n            cod += `sp = sp + 1;\\n`\r\n            cod += `${T12} = sp + 1;\\n`\r\n            cod += `stack[(int)${T12}] = ${T11};\\n`\r\n            C3D.funcBoleanas[C3D.funcIndices.CASTNUM] = true\r\n            cod += `CastNum();\\n`\r\n            cod += `${TC3} = stack[(int)sp];\\n`\r\n            cod += `sp = sp - 1;\\n`\r\n        }\r\n        else if(retIzq.tipo == Tipo.ATRIB)\r\n        {\r\n            var TF1=newTemp();var T11 = newTemp();var T12 = newTemp();TC3 = newTemp();\r\n            cod += `${TF1} = stackConsulta[(int)${TC1}];\\n`\r\n            cod += `${TF1} = ${TF1} + 1;\\n`\r\n            cod += `${T11} = stackAtributos[(int)${TF1}];\\n`\r\n            cod += `sp = sp + 1;\\n`\r\n            cod += `${T12} = sp + 1;\\n`\r\n            cod += `stack[(int)${T12}] = ${T11};\\n`\r\n            C3D.funcBoleanas[C3D.funcIndices.CASTNUM] = true\r\n            cod += `CastNum();\\n`\r\n            cod += `${TC3} = stack[(int)sp];\\n`\r\n            cod += `sp = sp - 1;\\n`\r\n        }\r\n        var TC5 = newTemp();\r\n        switch(this.op)\r\n        {\r\n            case \"+\":\r\n                cod += `${TC5} = ${TC3};\\n`\r\n                break;\r\n            case \"-\":\r\n                cod += `${TC5} = - ${TC3};\\n`\r\n                break;\r\n        } \r\n        if(retIzq.tipo == Tipo.NODO || retIzq.tipo == Tipo.ATRIB)\r\n        {\r\n            cod += `spc = ${TC0};\\n`\r\n        }\r\n        return {cod:cod,tipo:Tipo.DECIMAL,valor:TC5}\r\n    }\r\n\r\n    contiene(objeto,numero)\r\n    {\r\n        for (const iterator of objeto) {\r\n            if(iterator.valor==numero) return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    Graficar(ListaNodes,ListaEdges,contador)\r\n    {\r\n        var NodosActuales = []\r\n        var nodoActual = {id:contador.num,label:this.op}\r\n        NodosActuales.push(nodoActual);ListaNodes.push(nodoActual);contador.num++\r\n        var nodos = this.izquierdo.Graficar(ListaNodes,ListaEdges,contador)\r\n        for (const nodo of nodos) {\r\n            ListaEdges.push({from:nodoActual.id,to:nodo.id})\r\n        }\r\n        return NodosActuales\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class RangeExp\r\n{\r\n    constructor(inicio,fin)\r\n    {\r\n        this.inicio = inicio\r\n        this.fin = fin\r\n    }\r\n\r\n    getValor(Objetos)\r\n    {\r\n        var retorno = []\r\n        var valinicio = this.inicio.getValor(Objetos)\r\n        var valfin = this.fin.getValor(Objetos)\r\n            // plano cartesiano entre valores izq y valores \r\n        if(valinicio.length != 1 || valfin.length != 1 || valfin[0].tipo!=Tipo.INTEGER || valinicio[0].tipo!=Tipo.INTEGER)\r\n        {\r\n            ErroresGlobal.push({Error:`Se esperaba entero to entero`,tipo:\"Semantico\",Linea:0,columna:0})\r\n            return []\r\n        }\r\n        for (let index = Number(valinicio[0].valor); index <= Number(valfin[0].valor); index++) {\r\n            retorno.push(new Literal(Tipo.INTEGER,index))\r\n        }\r\n        return retorno\r\n    }\r\n    \r\n    Graficar(ListaNodes,ListaEdges,contador)\r\n    {\r\n        var NodosActuales = []\r\n        var nodoActual = {id:contador.num,label:\"to\"}\r\n        NodosActuales.push(nodoActual);ListaNodes.push(nodoActual);contador.num++\r\n        var nodos = this.izquierdo.Graficar(ListaNodes,ListaEdges,contador)\r\n        for (const nodo of nodos) {\r\n            ListaEdges.push({from:nodoActual.id,to:nodo.id})\r\n        }\r\n        nodos=this.derecho.Graficar(ListaNodes,ListaEdges,contador)\r\n        for (const nodo of nodos) {\r\n            ListaEdges.push({from:nodoActual.id,to:nodo.id})\r\n        }\r\n        return NodosActuales\r\n    }\r\n}\r\n\r\nexport class Concat \r\n{\r\n    constructor (izquierdo,derecho){\r\n        this.izquierdo = izquierdo;\r\n        this.derecho = derecho;\r\n    }\r\n\r\n    getValor(Objetos){\r\n        var retorno = []\r\n\r\n        var valIzq = this.izquierdo.getValor(Objetos)\r\n        var valDer = this.derecho.getValor(Objetos)\r\n            // plano cartesiano entre valores izq y valores \r\n        for (var izq of valIzq){\r\n            for (var der of valDer){\r\n                retorno.push(\r\n                    new Literal(\r\n                        Tipo.STRING,\r\n                        `${izq.valor}${der.valor}`\r\n                    )\r\n                )\r\n            }\r\n        }\r\n        return retorno\r\n    } \r\n\r\n\r\n    getC3D(){\r\n        var cod = ''\r\n        var retIzq = this.izquierdo.getC3D()\r\n        var retDer = this.derecho.getC3D()\r\n        var TC0; var TC1; var TC2;\r\n\r\n        if(retIzq.tipo == Tipo.NODO || retIzq.tipo == Tipo.ATRIB || retDer.tipo == Tipo.NODO || retDer.tipo == Tipo.ATRIB )\r\n        {\r\n            TC0 = C3D.newTemp(); var T0 = C3D.newTemp(); var T1 = C3D.newTemp(); var T2 = C3D.newTemp();\r\n            var La = C3D.newLbl(); var Lb = C3D.newLbl(); \r\n            cod += `${TC0} = spc;\\n`\r\n            cod += `${T0} = sp + 1; \\n`\r\n            cod += `${T1} = spc; \\n`\r\n            cod += `${Lb}:\\n`\r\n            cod += `${T2} = stackConsulta[(int)${T1}]; \\n`\r\n            cod += `if(${T2} == -2) goto ${La};\\n`\r\n            cod += `stack[(int)${T0}] = ${T2};\\n`\r\n            cod += `${T0} = ${T0} + 1;\\n`\r\n            cod += `${T1} = ${T1} + 1;\\n`\r\n            cod += `goto ${Lb};\\n`\r\n            cod += `${La}:\\n`\r\n            cod += `stack[(int)${T0}] = -2;\\n`\r\n\r\n            if(retIzq.cod!='' && (retIzq.tipo == Tipo.NODO || retIzq.tipo == Tipo.ATRIB))\r\n            { \r\n                var T1 = C3D.newTemp(); var T2 = C3D.newTemp(); \r\n                var T3 = C3D.newTemp(); var T4 = C3D.newTemp();\r\n                var T5 = C3D.newTemp(); var TC1 = C3D.newTemp();\r\n\r\n                var La = C3D.newLbl(); var Lb = C3D.newLbl(); \r\n                var Lc = C3D.newLbl(); var Ld = C3D.newLbl();\r\n\r\n                cod += `${T1} = ${TC0}; \\n`\r\n                cod += `${Lb}:\\n`\r\n                cod += `${T2} = stackConsulta[(int)${T1}]; \\n`\r\n                cod += `if(${T2} == -2) goto ${La};\\n`\r\n                cod += `${T1} = ${T1} + 1;\\n`\r\n                cod += `goto ${Lb};\\n`\r\n                cod += `${La}:\\n`\r\n                cod += `spc = ${T1} + 1;\\n`\r\n                cod += `${T3} = sp + 1; \\n`\r\n                cod += `${T4} = spc; \\n`\r\n                cod += `${Ld}:\\n`\r\n                cod += `${T5} = stack[(int)${T3}];\\n`\r\n                cod += `if(${T5} == -2) goto ${Lc};\\n`\r\n                cod += `stackConsulta[(int)${T4}]=${T5};\\n`\r\n                cod += `${T3} = ${T3} + 1;\\n`\r\n                cod += `${T4} = ${T4} + 1;\\n`\r\n                cod += `goto ${Ld};\\n`\r\n                cod += `${Lc}:\\n`\r\n                cod += `stackConsulta[(int)${T4}] = -2;\\n`\r\n                cod += `${TC1} = spc;\\n`\r\n                cod += `sp = ${T3} + 1;\\n`  \r\n\r\n                cod += retIzq.cod\r\n                cod += `sp = sp - ${T3};\\n`\r\n                cod += `sp = sp - 1;\\n`\r\n\r\n            }\r\n            \r\n            if(retDer.cod != '' && (retDer.tipo == Tipo.NODO || retDer.tipo == Tipo.ATRIB))\r\n            {\r\n                var T6 = C3D.newTemp(); var T7 = C3D.newTemp(); \r\n                var T8 = C3D.newTemp(); var T9 = C3D.newTemp(); \r\n                var T10 = C3D.newTemp(); var TC2 = C3D.newTemp();\r\n\r\n                var Le = C3D.newLbl(); var Lf = C3D.newLbl(); \r\n                var Lg = C3D.newLbl(); var Lh = C3D.newLbl()\r\n                \r\n                cod += `${T6} = ${TC0};\\n`\r\n                cod += `${Lf}:\\n`\r\n                cod += `${T7} = stackConsulta[(int)${T6}];\\n`\r\n                cod += `if(${T7} == -2) goto ${Le};\\n`\r\n                cod += `${T6} = ${T6} + 1;\\n`\r\n                cod += `goto ${Lf};\\n`\r\n                cod += `${Le}:\\n`\r\n                cod += `spc = ${T6} + 1;\\n`\r\n                cod += `${T8} = sp + 1;\\n`\r\n                cod += `${T9} = spc; \\n`\r\n                cod += `${Lg}:\\n`\r\n                cod += `${T10} = stack[(int)${T8}];\\n`\r\n                cod += `if(${T10} == -2) goto ${Lh};\\n`\r\n                cod += `stackConsulta[(int)${T9}]=${T10};\\n`\r\n                cod += `${T8} = ${T8} + 1;\\n`\r\n                cod += `${T9} = ${T9} + 1;\\n`\r\n                cod += `goto ${Lg};\\n`\r\n                cod += `${Lh}:\\n`\r\n                cod += `stackConsulta[(int)${T9}] = -2;\\n`\r\n                cod += `${TC2} = spc;\\n`\r\n                cod += `sp = ${T8} + 1;\\n`\r\n\r\n                cod += retDer.cod\r\n                cod += `sp = sp - ${T8};\\n`\r\n                cod += `sp = sp - 1;\\n` \r\n            }  \r\n        }\r\n        \r\n        if(retIzq.cod!='' && retIzq.tipo != Tipo.NODO && retIzq.tipo != Tipo.ATRIB )\r\n        {\r\n            cod += retIzq.cod\r\n        }\r\n        \r\n        if(retDer.cod!='' && retDer.tipo != Tipo.NODO && retDer.tipo != Tipo.ATRIB )\r\n        {\r\n            cod += retDer.cod\r\n        }\r\n        /* Concatenacion como tal */\r\n        //Hijo Izquierdo\r\n        var TC3;\r\n        if(retIzq.tipo == Tipo.DECIMAL || retIzq.tipo == Tipo.INTEGER)\r\n        {\r\n            var T10 = newTemp(); var T11 = newTemp(); TC3 = newTemp(); var T14 = newTemp();\r\n            var Tcima = newTemp(); var TBase = newTemp();\r\n\r\n            var Lj = C3D.newLbl(); var Li = C3D.newLbl(); var Lm = C3D.newLbl(); var Lk = C3D.newLbl();\r\n            \r\n            //nos cambiamos de entorno\r\n            cod += `sp = sp + 1; \\n`\r\n            cod += `${TBase} = sp + 0; \\n` \r\n            cod += `${Tcima} = ${TBase}; \\n`\r\n            cod += `${T10} = ${retIzq.valor}; \\n`       //capturamos el valor\r\n\r\n            cod += `${Lj}: \\n`\r\n            cod += `${T11} = (int)${T10} % 10; \\n`           //guardamos el residuo de hacer un mod \r\n            \r\n            cod += `if (${T10} == 0) goto ${Li}; \\n`    //si el cociente es cero terminamos de guardar\r\n            cod += `${T10} = (int)${T10}/10; \\n`        //guardamos el cociente la parte entera\r\n            cod += `stack[(int)${Tcima}] = ${T11}; \\n`  //si no es cero, guardamos en el stack el cociente\r\n            cod += `${Tcima} = ${Tcima} + 1; \\n`        //aumentamos el contador\r\n            cod += `goto ${Lj}; \\n`\r\n\r\n            cod += `${Li}: \\n`  //se termino el numero\r\n            cod += `${Tcima} = ${Tcima} - 1; \\n`\r\n            cod += `${TC3} = hp; \\n`\r\n            cod += `${Lm}: \\n`\r\n            cod += `if (${Tcima} < ${TBase}) goto ${Lk}; \\n` //recorremos el stack en forma invertida\r\n            cod += `${T14} = stack[(int)${Tcima}]; \\n`\r\n            cod += `${T14} = ${T14} + 48; \\n`\r\n            cod += `heap[(int)hp] = ${T14}; \\n`   //metemos en el heap\r\n            cod += `hp = hp + 1; \\n`\r\n            cod += `${Tcima} = ${Tcima} - 1; \\n`\r\n            cod += `goto ${Lm}; \\n`\r\n\r\n            cod += `${Lk}: \\n`  //terminamos el numero invertido\r\n            cod += `heap[(int)hp] = -1; \\n`\r\n            cod += `hp = hp + 1; \\n`\r\n\r\n        }\r\n        else if(retIzq.tipo == Tipo.STRING){\r\n            TC3 = newTemp();\r\n            cod += `${TC3} = ${retIzq.valor}; \\n`\r\n        }\r\n        else if(retIzq.tipo == Tipo.NODO)\r\n        {   \r\n            var TF1=newTemp(); TC3 = newTemp();\r\n            cod += `${TF1} = stackConsulta[(int)${TC1}];\\n`\r\n            cod += `${TF1} = ${TF1} + 3;\\n`\r\n            cod += `${TC3} = Indexes[(int)${TF1}];\\n`            \r\n        }\r\n        else if(retIzq.tipo == Tipo.ATRIB)\r\n        {\r\n            var TF1=newTemp(); TC3 = newTemp();\r\n            cod += `${TF1} = stackConsulta[(int)${TC1}];\\n`\r\n            cod += `${TF1} = ${TF1} + 1;\\n`\r\n            cod += `${TC3} = stackAtributos[(int)${TF1}];\\n`            \r\n        }\r\n\r\n        //Hijo Derecho\r\n        var TC4;\r\n        if(retDer.tipo == Tipo.DECIMAL || retDer.tipo == Tipo.INTEGER)\r\n        {\r\n            var T10 = newTemp(); var T11 = newTemp(); TC4 = newTemp(); var T14 = newTemp();\r\n            var Tcima = newTemp(); var TBase = newTemp();\r\n\r\n            var Lj = C3D.newLbl(); var Li = C3D.newLbl(); var Lm = C3D.newLbl(); var Lk = C3D.newLbl();\r\n            \r\n            //nos cambiamos de entorno\r\n            cod += `sp = sp + 1; \\n`\r\n            cod += `${TBase} = sp + 0; \\n` \r\n            cod += `${Tcima} = ${TBase}; \\n`\r\n            cod += `${T10} = ${retDer.valor}; \\n`       //capturamos el valor\r\n\r\n            cod += `${Lj}: \\n`\r\n            cod += `${T11} = (int)${T10} % 10; \\n`           //guardamos el residuo de hacer un mod \r\n            \r\n            cod += `if (${T10} == 0) goto ${Li}; \\n`    //si el cociente es cero terminamos de guardar\r\n            cod += `${T10} = (int)${T10}/10; \\n`        //guardamos el cociente la parte entera\r\n            cod += `stack[(int)${Tcima}] = ${T11}; \\n`  //si no es cero, guardamos en el stack el cociente\r\n            cod += `${Tcima} = ${Tcima} + 1; \\n`        //aumentamos el contador\r\n            cod += `goto ${Lj}; \\n`\r\n\r\n            cod += `${Li}: \\n`  //se termino el numero\r\n            cod += `${Tcima} = ${Tcima} - 1; \\n`\r\n            cod += `${TC4} = hp; \\n`\r\n            cod += `${Lm}: \\n`\r\n            \r\n            cod += `if (${Tcima} < ${TBase}) goto ${Lk}; \\n` //recorremos el stack en forma invertida\r\n            cod += `${T14} = stack[(int)${Tcima}]; \\n`\r\n            cod += `${T14} = ${T14} + 48; \\n`\r\n            cod += `heap[(int)hp] = ${T14}; \\n`   //metemos en el heap\r\n            cod += `hp = hp + 1; \\n`\r\n            cod += `${Tcima} = ${Tcima} - 1; \\n`\r\n            cod += `goto ${Lm}; \\n`\r\n\r\n            cod += `${Lk}: \\n`  //terminamos el numero invertido\r\n            cod += `heap[(int)hp] = -1; \\n`\r\n            cod += `hp = hp + 1; \\n`\r\n        }\r\n        else if(retDer.tipo == Tipo.STRING){\r\n            TC4 = newTemp();\r\n            cod += `${TC4} = ${retDer.valor}; \\n`\r\n        }\r\n        else if(retDer.tipo == Tipo.NODO)\r\n        {\r\n            var TF2=newTemp(); TC4 = newTemp();\r\n            cod += `${TF2} = stackConsulta[(int)${TC2}];\\n`\r\n            cod += `${TF2} = ${TF2} + 3;\\n`\r\n            cod += `${TC4} = Indexes[(int)${TF2}];\\n`            \r\n        }\r\n        else if(retDer.tipo == Tipo.ATRIB)\r\n        {\r\n            var TF2=newTemp(); TC4 = newTemp();\r\n            cod += `${TF2} = stackConsulta[(int)${TC2}];\\n`\r\n            cod += `${TF2} = ${TF2} + 1;\\n`\r\n            cod += `${TC4} = stackAtributos[(int)${TF2}];\\n`             \r\n        }\r\n\r\n        var TC5 = newTemp();\r\n        var Ta = newTemp(); var Tb = newTemp(); var Tc = newTemp(); var Td = newTemp();\r\n        var LA = C3D.newLbl(); var LB = C3D.newLbl(); var LC = C3D.newLbl(); var LD = C3D.newLbl(); \r\n\r\n        cod += `${TC5} = hp;\\n`\r\n        /*guardamos el primer hijo*/\r\n        cod += `${Ta} = ${TC3}; \\n` //capturamos donde inicia el primer hijo\r\n        cod += `${LB}: \\n`\r\n        cod += `${Tb} = heap[(int)${Ta}]; \\n`        \r\n        cod += `if (${Tb} == -1) goto ${LA}; \\n`\r\n        cod += `heap[(int)hp] = ${Tb}; \\n`\r\n        cod += `hp = hp + 1; \\n`\r\n        cod += `${Ta} = ${Ta} + 1; \\n`\r\n        cod += `goto ${LB}; \\n`\r\n\r\n        cod += `${LA}: \\n`      //si ya se termino el primer string pasamos al siguiente\r\n        cod += `${Tc} = ${TC4}; \\n`\r\n        cod += `${LD}: \\n`\r\n        cod += `${Td} = heap[(int)${Tc}]; \\n`\r\n        cod += `if (${Td} == -1) goto ${LC}; \\n`\r\n        cod += `heap[(int)hp] = ${Td}; \\n`\r\n        cod += `hp = hp + 1; \\n`\r\n        cod += `${Tc} = ${Tc} + 1; \\n`\r\n        cod += `goto ${LD}; \\n`\r\n        cod += `${LC}: \\n`\r\n        cod += `heap[(int)hp] = -1; \\n`\r\n        cod += `hp = hp + 1; \\n`\r\n\r\n        if(retIzq.tipo == Tipo.NODO || retIzq.tipo == Tipo.ATRIB || retDer.tipo == Tipo.NODO || retDer.tipo == Tipo.ATRIB )\r\n        {\r\n            cod += `spc = ${TC0};\\n`\r\n        }\r\n\r\n        return {cod:cod,tipo:Tipo.STRING,valor:TC5}\r\n    }\r\n\r\n\r\n    Graficar(ListaNodes,ListaEdges,contador)\r\n    {\r\n        var NodosActuales = []\r\n        var nodoActual = {id:contador.num,label:\"||\"}\r\n        NodosActuales.push(nodoActual);ListaNodes.push(nodoActual);contador.num++\r\n        var nodos = this.izquierdo.Graficar(ListaNodes,ListaEdges,contador)\r\n        for (const nodo of nodos) {\r\n            ListaEdges.push({from:nodoActual.id,to:nodo.id})\r\n        }\r\n        nodos=this.derecho.Graficar(ListaNodes,ListaEdges,contador)\r\n        for (const nodo of nodos) {\r\n            ListaEdges.push({from:nodoActual.id,to:nodo.id})\r\n        }\r\n        return NodosActuales\r\n    }\r\n}\r\n","var {Tipo, Colision, getTipoById} = require(\"../AST/Entorno\");\r\nconst C3D = require('../../C3D')\r\nconst { ErroresGlobal } = require('../AST/Global')\r\nconst { Literal } = require(\"./Expresiones\");\r\n\r\nexport class ComparisonExp {\r\n\r\n    constructor (izquierdo,op,derecho){\r\n        this.op=op\r\n        this.izquierdo = izquierdo;\r\n        this.derecho = derecho;\r\n    }\r\n\r\n    getValor(Objetos)\r\n    {\r\n        var retorno = []\r\n        \r\n        for (var obj of Objetos ){\r\n            var valIzq = this.izquierdo.getValor([obj])\r\n            var valDer = this.derecho.getValor([obj])\r\n            for (var izq of valIzq) {\r\n                var salir = false\r\n                for (var der of valDer){\r\n                    if (comparison(izq,this.op,der)){\r\n                        retorno.push(obj)\r\n                        salir = true\r\n                        break\r\n                    }\r\n                }\r\n                if (salir) break\r\n            }\r\n        }\r\n        return retorno\r\n    }\r\n\r\n    Graficar(ListaNodes,ListaEdges,contador)\r\n    {\r\n        var NodosActuales = []\r\n        var nodoActual = {id:contador.num,label:this.op}\r\n        NodosActuales.push(nodoActual);ListaNodes.push(nodoActual);contador.num++\r\n        var nodos = this.izquierdo.Graficar(ListaNodes,ListaEdges,contador)\r\n        for (const nodo of nodos) {\r\n            ListaEdges.push({from:nodoActual.id,to:nodo.id})\r\n        }\r\n        nodos=this.derecho.Graficar(ListaNodes,ListaEdges,contador)\r\n        for (const nodo of nodos) {\r\n            ListaEdges.push({from:nodoActual.id,to:nodo.id})\r\n        }\r\n        return NodosActuales\r\n    }\r\n\r\n    getC3D()\r\n    {\r\n        var TCretorno;\r\n        var cod = ''\r\n        var retIzq = this.izquierdo.getC3D()\r\n        var retDer = this.derecho.getC3D()\r\n        var TC0; var TC1; var TC2;\r\n        cod += `//Inicio Relacional\\n`\r\n        if(retIzq.tipo == Tipo.NODO || retIzq.tipo == Tipo.ATRIB || retDer.tipo == Tipo.NODO || retDer.tipo == Tipo.ATRIB )\r\n        {\r\n            TC0 = C3D.newTemp(); TC1 = TC0; var T0 = C3D.newTemp(); var T1 = C3D.newTemp(); var T2 = C3D.newTemp();\r\n            var La = C3D.newLbl(); var Lb = C3D.newLbl(); \r\n            cod += `${TC0} = spc;\\n`\r\n            cod += `${T0} = sp + 1; \\n`\r\n            cod += `${T1} = spc; \\n`\r\n            cod += `${Lb}:\\n`\r\n            cod += `${T2} = stackConsulta[(int)${T1}]; \\n`\r\n            cod += `if(${T2} == -2) goto ${La};\\n`\r\n            cod += `stack[(int)${T0}] = ${T2};\\n`\r\n            cod += `${T0} = ${T0} + 1;\\n`\r\n            cod += `${T1} = ${T1} + 1;\\n`\r\n            cod += `goto ${Lb};\\n`\r\n            cod += `${La}:\\n`\r\n            cod += `stack[(int)${T0}] = -2;\\n`\r\n\r\n            if(retIzq.cod!='' && (retIzq.tipo == Tipo.NODO || retIzq.tipo == Tipo.ATRIB))\r\n            { \r\n                var T1 = C3D.newTemp(); var T2 = C3D.newTemp(); \r\n                var T3 = C3D.newTemp(); var T4 = C3D.newTemp();\r\n                var T5 = C3D.newTemp(); TC1 = C3D.newTemp();\r\n                var TSP = C3D.newTemp();\r\n\r\n                var La = C3D.newLbl(); var Lb = C3D.newLbl(); \r\n                var Lc = C3D.newLbl(); var Ld = C3D.newLbl();\r\n\r\n                cod += `${T1} = ${TC0}; \\n`\r\n                cod += `${Lb}:\\n`\r\n                cod += `${T2} = stackConsulta[(int)${T1}]; \\n`\r\n                cod += `if(${T2} == -2) goto ${La};\\n`\r\n                cod += `${T1} = ${T1} + 1;\\n`\r\n                cod += `goto ${Lb};\\n`\r\n                cod += `${La}:\\n`\r\n                cod += `spc = ${T1} + 1;\\n`\r\n                cod += `${T3} = sp + 1; \\n`\r\n                cod += `${T4} = spc; \\n`\r\n                cod += `${Ld}:\\n`\r\n                cod += `${T5} = stack[(int)${T3}];\\n`\r\n                cod += `if(${T5} == -2) goto ${Lc};\\n`\r\n                cod += `stackConsulta[(int)${T4}]=${T5};\\n`\r\n                cod += `${T3} = ${T3} + 1;\\n`\r\n                cod += `${T4} = ${T4} + 1;\\n`\r\n                cod += `goto ${Ld};\\n`\r\n                cod += `${Lc}:\\n`\r\n                cod += `stackConsulta[(int)${T4}] = -2;\\n`\r\n                cod += `${TC1} = spc;\\n`\r\n                cod += `${TSP} = sp;\\n`\r\n                cod += `sp = ${T3} + 1;\\n`  \r\n\r\n                cod += retIzq.cod\r\n                cod += `sp = ${TSP};\\n`\r\n\r\n            }\r\n            \r\n            if(retDer.cod != '' && (retDer.tipo == Tipo.NODO || retDer.tipo == Tipo.ATRIB))\r\n            {\r\n                var T6 = C3D.newTemp(); var T7 = C3D.newTemp(); \r\n                var T8 = C3D.newTemp(); var T9 = C3D.newTemp(); \r\n                var T10 = C3D.newTemp(); TC2 = C3D.newTemp();\r\n                var TSP = C3D.newTemp();\r\n\r\n                var Le = C3D.newLbl(); var Lf = C3D.newLbl(); \r\n                var Lg = C3D.newLbl(); var Lh = C3D.newLbl()\r\n                \r\n                cod += `${T6} = ${TC0};\\n`\r\n                cod += `${Lf}:\\n`\r\n                cod += `${T7} = stackConsulta[(int)${T6}];\\n`\r\n                cod += `if(${T7} == -2) goto ${Le};\\n`\r\n                cod += `${T6} = ${T6} + 1;\\n`\r\n                cod += `goto ${Lf};\\n`\r\n                cod += `${Le}:\\n`\r\n                cod += `spc = ${T6} + 1;\\n`\r\n                cod += `${T8} = sp + 1;\\n`\r\n                cod += `${T9} = spc; \\n`\r\n                cod += `${Lg}:\\n`\r\n                cod += `${T10} = stack[(int)${T8}];\\n`\r\n                cod += `if(${T10} == -2) goto ${Lh};\\n`\r\n                cod += `stackConsulta[(int)${T9}]=${T10};\\n`\r\n                cod += `${T8} = ${T8} + 1;\\n`\r\n                cod += `${T9} = ${T9} + 1;\\n`\r\n                cod += `goto ${Lg};\\n`\r\n                cod += `${Lh}:\\n`\r\n                cod += `stackConsulta[(int)${T9}] = -2;\\n`\r\n                cod += `${TC2} = spc;\\n`\r\n                cod += `${TSP} = sp;\\n`\r\n                cod += `sp = ${T8} + 1;\\n`\r\n\r\n                cod += retDer.cod\r\n                cod += `sp = ${TSP};\\n` \r\n            }  \r\n        }\r\n        \r\n        if(retIzq.cod!='' && retIzq.tipo != Tipo.NODO && retIzq.tipo != Tipo.ATRIB )\r\n        {\r\n            cod += retIzq.cod\r\n        }\r\n        \r\n        if(retDer.cod!='' && retDer.tipo != Tipo.NODO && retDer.tipo != Tipo.ATRIB )\r\n        {\r\n            cod += retDer.cod\r\n        }\r\n\r\n        /* Comparaciones del hijo izquierdo */\r\n        if(retIzq.tipo == Tipo.NODO) {\r\n            TCretorno = TC1;\r\n            switch(retDer.tipo)\r\n            {\r\n                case Tipo.STRING: {\r\n                        var TR0 = C3D.newTemp(); var TR1 = C3D.newTemp(); var TR2 = C3D.newTemp(); var TR3 = C3D.newTemp(); var TR4 = C3D.newTemp();\r\n                        var TR5 = C3D.newTemp(); var TR6 = C3D.newTemp(); var TR7 = C3D.newTemp(); \r\n\r\n                        var LR3 = C3D.newLbl(); var LR1 = C3D.newLbl(); var LR4 = C3D.newLbl(); var LR2 = C3D.newLbl();\r\n\r\n                        cod += `${TR0} = ${retDer.valor};\\n`\r\n                        cod += `${TR1} = ${TC1};\\n`\r\n                        cod += `${LR2}:\\n`\r\n                        cod += `${TR2} = stackConsulta[(int)${TR1}];\\n`\r\n                        cod += `if(${TR2}==-2) goto ${LR3};\\n`\r\n                        cod += `${TR3} = ${TR2} + 3;\\n`\r\n                        cod += `${TR4} = Indexes[(int)${TR3}];\\n`\r\n                        cod += `sp = sp + 1;\\n`\r\n                        cod += `${TR5} = sp + 1;\\n`\r\n                        cod += `stack[(int)${TR5}] = ${TR4};\\n`\r\n                        cod += `${TR6} = sp + 2;\\n`\r\n                        cod += `stack[(int)${TR6}] = ${TR0};\\n`\r\n                        cod += `CompararAscii();\\n`\r\n                        cod += `${TR7} = stack[(int)sp];\\n`\r\n                        cod += `sp = sp - 1;\\n`\r\n                        switch(this.op)\r\n                        {\r\n                            case \"=\":\r\n                                cod += `if (${TR7} != 0) goto ${LR1};\\n`\r\n                                break;\r\n                            case \"!=\":\r\n                                cod += `if (${TR7} == 0) goto ${LR1};\\n`\r\n                                break;\r\n                            case \"<\":\r\n                                cod += `if (${TR7} >= 0) goto ${LR1};\\n`\r\n                                break;\r\n                            case \"<=\":\r\n                                cod += `if (${TR7} > 0) goto ${LR1};\\n`\r\n                                break;\r\n                            case \">\":\r\n                                cod += `if (${TR7} <= 0) goto ${LR1};\\n`\r\n                                break;\r\n                            case \">=\":\r\n                                cod += `if (${TR7} < 0) goto ${LR1};\\n`\r\n                                break;\r\n                        }\r\n                        cod += `stacX[(int)sx] = 1;\\n`\r\n                        cod += `sx = sx + 1;\\n;`\r\n                        cod += `stacX[(int)sx] = -2;\\n`\r\n                        cod += `goto ${LR4};\\n`\r\n                        cod += `${LR1}:\\n`\r\n                        cod += `stacX[(int)sx] = 0;\\n`\r\n                        cod += `sx = sx + 1;\\n;`\r\n                        cod += `stacX[(int)sx] = -2;\\n`\r\n                        cod += `${LR4}:\\n`\r\n                        cod += `${TR1} = ${TR1} + 1;\\n`\r\n                        cod += `goto ${LR2};\\n`\r\n                        cod += `${LR3}:\\n`\r\n                        \r\n                        var TP = C3D.newTemp(); var TQ = C3D.newTemp(); var TR = C3D.newTemp(); \r\n                        \r\n                        var LW = C3D.newLbl(); var Lx = C3D.newLbl()\r\n                        //Reemplazar el StackConsulta por el StackX\r\n                        cod += `${TP} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n                        cod += `${TQ} = stacX[(int)${TP}]; \\n`\r\n                        cod += `${LW}: \\n`\r\n                        cod += `if (${TQ} == -2) goto ${Lx}; \\n`      //si el stackX ya se termino vamos a LD\r\n                        cod += `${TR} = ${TC1} + ${TP}; \\n`              //posicion contador del stackConsulta\r\n                        cod += `stackConsulta[(int)${TR}] = ${TQ};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n                        cod += `${TP} = ${TP} + 1; \\n`                //aumentamos el contador de stackX\r\n                        cod += `${TQ} = stacX[(int)${TP}];\\n`           //capturamos lo que hay en stackX en esa nueva posicion\r\n                        cod += `goto ${LW}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n\r\n                        //se acabo el stackX, no hay mas para guardar\r\n                        cod += `${Lx}: \\n`   \r\n                        cod += `${TR} = ${TC1} + ${TP};\\n` \r\n                        cod += `stackConsulta[(int)${TR}] = -2;\\n`\r\n                        cod += `sx = 0; \\n`\r\n                        cod += `stacX[(int)sx] = -2; \\n`\r\n                    }\r\n                    break;\r\n                \r\n                case Tipo.INTEGER:\r\n                case Tipo.DECIMAL: {\r\n                    var TR0 = C3D.newTemp(); var TR1 = C3D.newTemp(); var TR2 = C3D.newTemp(); var TR3 = C3D.newTemp(); var TR4 = C3D.newTemp();\r\n                    var TR5 = C3D.newTemp(); var TR6 = C3D.newTemp(); \r\n\r\n                    var LR3 = C3D.newLbl(); var LR1 = C3D.newLbl(); var LR4 = C3D.newLbl(); var LR2 = C3D.newLbl();\r\n\r\n                    cod += `${TR0} = ${retDer.valor};\\n`\r\n                    cod += `${TR1} = ${TC1};\\n`\r\n                    cod += `${LR2}:\\n`\r\n                    cod += `${TR2} = stackConsulta[(int)${TR1}];\\n`\r\n                    cod += `if(${TR2}==-2) goto ${LR3};\\n`\r\n                    cod += `${TR3} = ${TR2} + 3;\\n`\r\n                    cod += `${TR4} = Indexes[(int)${TR3}];\\n`\r\n\r\n                    cod += `${TR5} = sp + 1;\\n`\r\n                    cod += `stack[(int)${TR5}] = ${TR4};\\n`\r\n                    C3D.funcBoleanas[C3D.funcIndices.CASTNUM] = true\r\n                    cod += `CastNum();\\n`\r\n                    cod += `${TR6} = stack[(int)sp];\\n`\r\n                    cod += `sp = sp - 1;\\n`\r\n\r\n                    switch(this.op)\r\n                    {\r\n                        case \"=\":\r\n                            cod += `if (${TR6} != ${TR0}) goto ${LR1};\\n`\r\n                            break;\r\n                        case \"!=\":\r\n                            cod += `if (${TR6} == ${TR0}) goto ${LR1};\\n`\r\n                            break;\r\n                        case \"<\":\r\n                            cod += `if (${TR6} >= ${TR0}) goto ${LR1};\\n`\r\n                            break;\r\n                        case \"<=\":\r\n                            cod += `if (${TR6} > ${TR0}) goto ${LR1};\\n`\r\n                            break;\r\n                        case \">\":\r\n                            cod += `if (${TR6} <= ${TR0}) goto ${LR1};\\n`\r\n                            break;\r\n                        case \">=\":\r\n                            cod += `if (${TR6} < ${TR0}) goto ${LR1};\\n`\r\n                            break;\r\n                    }\r\n                    cod += `stacX[(int)sx] = 1;\\n`\r\n                    cod += `sx = sx + 1;\\n;`\r\n                    cod += `stacX[(int)sx] = -2;\\n`\r\n                    cod += `goto ${LR4};\\n`\r\n                    cod += `${LR1}:\\n`\r\n                    cod += `stacX[(int)sx] = 0;\\n`\r\n                    cod += `sx = sx + 1;\\n;`\r\n                    cod += `stacX[(int)sx] = -2;\\n`\r\n                    cod += `${LR4}:\\n`\r\n                    cod += `${TR1} = ${TR1} + 1;\\n`\r\n                    cod += `goto ${LR2};\\n`\r\n                    cod += `${LR3}:\\n`\r\n                    \r\n                    var TP = C3D.newTemp(); var TQ = C3D.newTemp(); var TR = C3D.newTemp(); \r\n                    \r\n                    var LW = C3D.newLbl(); var Lx = C3D.newLbl()\r\n                    //Reemplazar el StackConsulta por el StackX\r\n                    cod += `${TP} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n                    cod += `${TQ} = stacX[(int)${TP}]; \\n`\r\n                    cod += `${LW}: \\n`\r\n                    cod += `if (${TQ} == -2) goto ${Lx}; \\n`      //si el stackX ya se termino vamos a LD\r\n                    cod += `${TR} = ${TC1} + ${TP}; \\n`              //posicion contador del stackConsulta\r\n                    cod += `stackConsulta[(int)${TR}] = ${TQ};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n                    cod += `${TP} = ${TP} + 1; \\n`                //aumentamos el contador de stackX\r\n                    cod += `${TQ} = stacX[(int)${TP}];\\n`           //capturamos lo que hay en stackX en esa nueva posicion\r\n                    cod += `goto ${LW}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n\r\n                    //se acabo el stackX, no hay mas para guardar\r\n                    cod += `${Lx}: \\n`   \r\n                    cod += `${TR} = ${TC1} + ${TP};\\n` \r\n                    cod += `stackConsulta[(int)${TR}] = -2;\\n`\r\n                    cod += `sx = 0; \\n`\r\n                    cod += `stacX[(int)sx] = -2; \\n`\r\n                }\r\n                break;\r\n\r\n                case Tipo.NODO:\r\n                case Tipo.ATRIB:\r\n            }\r\n            //cod += `${TC3} = ${retIzq.valor};\\n` \r\n        }\r\n        else if(retIzq.tipo == Tipo.ATRIB){\r\n            TCretorno = TC1;\r\n            switch(retDer.tipo)\r\n            {\r\n                case Tipo.STRING:\r\n                    {\r\n                        var TR0 = C3D.newTemp(); var TR1 = C3D.newTemp(); var TR2 = C3D.newTemp(); var TR3 = C3D.newTemp(); var TR4 = C3D.newTemp();\r\n                        var TR5 = C3D.newTemp(); var TR6 = C3D.newTemp(); var TR7 = C3D.newTemp(); \r\n\r\n                        var LR3 = C3D.newLbl(); var LR1 = C3D.newLbl(); var LR4 = C3D.newLbl(); var LR2 = C3D.newLbl();\r\n\r\n                        cod += `${TR0} = ${retDer.valor};\\n`\r\n                        cod += `${TR1} = ${TC1};\\n`\r\n                        cod += `${LR2}:\\n`\r\n                        cod += `${TR2} = stackConsulta[(int)${TR1}];\\n`\r\n                        cod += `if(${TR2}==-2) goto ${LR3};\\n`\r\n                        cod += `${TR3} = ${TR2} + 1;\\n`\r\n                        cod += `${TR4} = stackAtributos[(int)${TR3}];\\n`\r\n                        cod += `sp = sp + 1;\\n`\r\n                        cod += `${TR5} = sp + 1;\\n`\r\n                        cod += `stack[(int)${TR5}] = ${TR4};\\n`\r\n                        cod += `${TR6} = sp + 2;\\n`\r\n                        cod += `stack[(int)${TR6}] = ${TR0};\\n`\r\n                        cod += `CompararAscii();\\n`\r\n                        cod += `${TR7} = stack[(int)sp];\\n`\r\n                        cod += `sp = sp - 1;\\n`\r\n                        switch(this.op)\r\n                        {\r\n                            case \"=\":\r\n                                cod += `if (${TR7} != 0) goto ${LR1};\\n`\r\n                                break;\r\n                            case \"!=\":\r\n                                cod += `if (${TR7} == 0) goto ${LR1};\\n`\r\n                                break;\r\n                            case \"<\":\r\n                                cod += `if (${TR7} >= 0) goto ${LR1};\\n`\r\n                                break;\r\n                            case \"<=\":\r\n                                cod += `if (${TR7} > 0) goto ${LR1};\\n`\r\n                                break;\r\n                            case \">\":\r\n                                cod += `if (${TR7} <= 0) goto ${LR1};\\n`\r\n                                break;\r\n                            case \">=\":\r\n                                cod += `if (${TR7} < 0) goto ${LR1};\\n`\r\n                                break;\r\n                        }\r\n                        cod += `stacX[(int)sx] = 1;\\n`\r\n                        cod += `sx = sx + 1;\\n;`\r\n                        cod += `stacX[(int)sx] = -2;\\n`\r\n                        cod += `goto ${LR4};\\n`\r\n                        cod += `${LR1}:\\n`\r\n                        cod += `stacX[(int)sx] = 0;\\n`\r\n                        cod += `sx = sx + 1;\\n;`\r\n                        cod += `stacX[(int)sx] = -2;\\n`\r\n                        cod += `${LR4}:\\n`\r\n                        cod += `${TR1} = ${TR1} + 1;\\n`\r\n                        cod += `goto ${LR2};\\n`\r\n                        cod += `${LR3}:\\n`\r\n                        \r\n                        var TP = C3D.newTemp(); var TQ = C3D.newTemp(); var TR = C3D.newTemp(); \r\n                        \r\n                        var LW = C3D.newLbl(); var Lx = C3D.newLbl()\r\n                        //Reemplazar el StackConsulta por el StackX\r\n                        cod += `${TP} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n                        cod += `${TQ} = stacX[(int)${TP}]; \\n`\r\n                        cod += `${LW}: \\n`\r\n                        cod += `if (${TQ} == -2) goto ${Lx}; \\n`      //si el stackX ya se termino vamos a LD\r\n                        cod += `${TR} = ${TC1} + ${TP}; \\n`              //posicion contador del stackConsulta\r\n                        cod += `stackConsulta[(int)${TR}] = ${TQ};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n                        cod += `${TP} = ${TP} + 1; \\n`                //aumentamos el contador de stackX\r\n                        cod += `${TQ} = stacX[(int)${TP}];\\n`           //capturamos lo que hay en stackX en esa nueva posicion\r\n                        cod += `goto ${LW}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n\r\n                        //se acabo el stackX, no hay mas para guardar\r\n                        cod += `${Lx}: \\n`   \r\n                        cod += `${TR} = ${TC1} + ${TP};\\n` \r\n                        cod += `stackConsulta[(int)${TR}] = -2;\\n`\r\n                        cod += `sx = 0; \\n`\r\n                        cod += `stacX[(int)sx] = -2; \\n`\r\n                    }\r\n                    break;\r\n                \r\n                case Tipo.INTEGER:\r\n                case Tipo.DECIMAL:\r\n                    {\r\n                        var TR0 = C3D.newTemp(); var TR1 = C3D.newTemp(); var TR2 = C3D.newTemp(); var TR3 = C3D.newTemp(); var TR4 = C3D.newTemp();\r\n                        var TR5 = C3D.newTemp();  var TR7 = C3D.newTemp(); \r\n\r\n                        var LR3 = C3D.newLbl(); var LR1 = C3D.newLbl(); var LR4 = C3D.newLbl(); var LR2 = C3D.newLbl();\r\n\r\n                        cod += `${TR0} = ${retDer.valor};\\n`\r\n                        cod += `${TR1} = ${TC1};\\n`\r\n                        cod += `${LR2}:\\n`\r\n                        cod += `${TR2} = stackConsulta[(int)${TR1}];\\n`\r\n                        cod += `if(${TR2}==-2) goto ${LR3};\\n`\r\n                        cod += `${TR3} = ${TR2} + 1;\\n`\r\n                        cod += `${TR4} = stackAtributos[(int)${TR3}];\\n`\r\n\r\n                        cod += `sp = sp + 1;\\n`\r\n                        cod += `${TR5} = sp + 1;\\n`\r\n                        cod += `stack[(int)${TR5}] = ${TR4};\\n`\r\n                        C3D.funcBoleanas[C3D.funcIndices.CASTNUM] = true\r\n                        cod += `CastNum();\\n`\r\n                        cod += `${TR7} = stack[(int)sp];\\n`\r\n                        cod += `sp = sp - 1;\\n`\r\n                        switch(this.op)\r\n                        {\r\n                            case \"=\":\r\n                                cod += `if (${TR7} != ${TR0}) goto ${LR1};\\n`\r\n                                break;\r\n                            case \"!=\":\r\n                                cod += `if (${TR7} == ${TR0}) goto ${LR1};\\n`\r\n                                break;\r\n                            case \"<\":\r\n                                cod += `if (${TR7} >= ${TR0}) goto ${LR1};\\n`\r\n                                break;\r\n                            case \"<=\":\r\n                                cod += `if (${TR7} > ${TR0}) goto ${LR1};\\n`\r\n                                break;\r\n                            case \">\":\r\n                                cod += `if (${TR7} <= ${TR0}) goto ${LR1};\\n`\r\n                                break;\r\n                            case \">=\":\r\n                                cod += `if (${TR7} < ${TR0}) goto ${LR1};\\n`\r\n                                break;\r\n                        }\r\n                        cod += `stacX[(int)sx] = 1;\\n`\r\n                        cod += `sx = sx + 1;\\n;`\r\n                        cod += `stacX[(int)sx] = -2;\\n`\r\n                        cod += `goto ${LR4};\\n`\r\n                        cod += `${LR1}:\\n`\r\n                        cod += `stacX[(int)sx] = 0;\\n`\r\n                        cod += `sx = sx + 1;\\n;`\r\n                        cod += `stacX[(int)sx] = -2;\\n`\r\n                        cod += `${LR4}:\\n`\r\n                        cod += `${TR1} = ${TR1} + 1;\\n`\r\n                        cod += `goto ${LR2};\\n`\r\n                        cod += `${LR3}:\\n`\r\n                        \r\n                        var TP = C3D.newTemp(); var TQ = C3D.newTemp(); var TR = C3D.newTemp(); \r\n                        \r\n                        var LW = C3D.newLbl(); var Lx = C3D.newLbl()\r\n                        //Reemplazar el StackConsulta por el StackX\r\n                        cod += `${TP} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n                        cod += `${TQ} = stacX[(int)${TP}]; \\n`\r\n                        cod += `${LW}: \\n`\r\n                        cod += `if (${TQ} == -2) goto ${Lx}; \\n`      //si el stackX ya se termino vamos a LD\r\n                        cod += `${TR} = ${TC1} + ${TP}; \\n`              //posicion contador del stackConsulta\r\n                        cod += `stackConsulta[(int)${TR}] = ${TQ};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n                        cod += `${TP} = ${TP} + 1; \\n`                //aumentamos el contador de stackX\r\n                        cod += `${TQ} = stacX[(int)${TP}];\\n`           //capturamos lo que hay en stackX en esa nueva posicion\r\n                        cod += `goto ${LW}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n\r\n                        //se acabo el stackX, no hay mas para guardar\r\n                        cod += `${Lx}: \\n`   \r\n                        cod += `${TR} = ${TC1} + ${TP};\\n` \r\n                        cod += `stackConsulta[(int)${TR}] = -2;\\n`\r\n                        cod += `sx = 0; \\n`\r\n                        cod += `stacX[(int)sx] = -2; \\n`\r\n                    }\r\n                    break;\r\n                \r\n                    \r\n                case Tipo.NODO:\r\n                case Tipo.ATRIB:\r\n            }\r\n        }\r\n        else if (retIzq.tipo == Tipo.DECIMAL){\r\n            switch (retDer.tipo) {\r\n                case Tipo.DECIMAL:\r\n                    {\r\n                        var TR0 = C3D.newTemp(); var TR1 = C3D.newTemp(); var Tcont = C3D.newTemp(); \r\n                        var TR2 = C3D.newTemp(); var Treal = C3D.newTemp(); var TR3 = C3D.newTemp();\r\n                        var Tinicio = C3D.newTemp(); var Tcont1 = C3D.newTemp();\r\n                        var LR2 = C3D.newLbl(); var LR3 = C3D.newLbl(); var La = C3D.newLbl(); var Lb = C3D.newLbl(); var Lc = C3D.newLbl();\r\n                        \r\n                        cod += `${TR0} = ${retIzq.valor};\\n`\r\n                        cod += `${TR1} = ${retDer.valor};\\n`\r\n                        //recorremos el stackConsulta hasta -2\r\n                        cod += `${Treal} = spc; \\n`\r\n                        cod += `${TR2} = spc;\\n`\r\n                        cod += `${Tcont} = 0; \\n`\r\n                        cod += `${LR2}:\\n`\r\n                        cod += `${TR3} = stackConsulta[(int)${TR2}];\\n`\r\n                        cod += `if(${TR3} == -2) goto ${LR3};\\n`\r\n                        cod += `${TR2} = ${TR2} + 1; \\n`\r\n                        cod += `${Tcont} = ${Tcont} + 1; \\n`\r\n                        cod += `goto ${LR2}; \\n`\r\n\r\n                        cod += `${LR3}: \\n`\r\n\r\n                        //cambio de entorno\r\n                        cod += `spc = ${TR2} + 1; \\n`\r\n                        cod += `${Tinicio} = spc; \\n`\r\n                        cod += `${Tcont1} = spc; \\n`\r\n\r\n                        switch(this.op)\r\n                            {       //verificar a que etiqueta me voy si es verdadero o falso\r\n                                case \"=\":\r\n                                    cod += `if (${TR0} != ${TR1}) goto ${Lc};\\n`\r\n                                    break;\r\n                                case \"!=\":\r\n                                    cod += `if (${TR0} == ${TR1}) goto ${Lc};\\n`\r\n                                    break;\r\n                                case \"<\":\r\n                                    cod += `if (${TR0} >= ${TR1}) goto ${Lc};\\n`\r\n                                    break;\r\n                                case \"<=\":\r\n                                    cod += `if (${TR0} > ${TR1}) goto ${Lc};\\n`\r\n                                    break;\r\n                                case \">\":\r\n                                    cod += `if (${TR0} <= ${TR1}) goto ${Lc};\\n`\r\n                                    break;\r\n                                case \">=\":\r\n                                    cod += `if (${TR0} < ${TR1}) goto ${Lc};\\n`\r\n                                    break;\r\n                            }\r\n                        \r\n                        cod += `${La}: \\n`  //si los numero son iguales -> true\r\n                        cod += `if (${Tcont} <= 0) goto ${Lb}; \\n`\r\n                        cod += `stackConsulta[(int)${Tcont1}] = 1; \\n`\r\n                        cod += `${Tcont1} = ${Tcont1} + 1; \\n`\r\n                        cod += `${Tcont} = ${Tcont} - 1; \\n`\r\n                        cod += `goto ${La}; \\n`\r\n                        \r\n                        //si los numeros son diferentes -> false\r\n                        cod += `${Lc}: \\n`\r\n                        cod += `if (${Tcont} <= 0) goto ${Lb}; \\n`\r\n                        cod += `stackConsulta[(int)${Tcont1}] = 0; \\n`\r\n                        cod += `${Tcont1} = ${Tcont1} + 1; \\n`\r\n                        cod += `${Tcont} = ${Tcont} - 1; \\n`\r\n                        cod += `goto ${Lc}; \\n` \r\n\r\n                        cod += `${Lb}: \\n`  //terminamos de guardar los stackConsulta\r\n                        cod += `stackConsulta[(int)${Tcont1}] = -2; \\n`\r\n                        cod += `spc = ${Treal}; \\n`\r\n                        \r\n                        TCretorno = Tinicio\r\n                    }\r\n                    break;\r\n                case Tipo.STRING:\r\n                    /* Aqui devuelve falso */\r\n                    break;\r\n            }\r\n        }\r\n        else if (retIzq.tipo == Tipo.STRING ){\r\n            switch (retDer.tipo) {\r\n                case Tipo.DECIMAL:\r\n                    /* Aqui devuelve falso */\r\n                    break;\r\n                case Tipo.STRING:\r\n                    {\r\n                        var TR0 = C3D.newTemp(); var TR1 = C3D.newTemp(); var TR2 = C3D.newTemp(); var Tcont = C3D.newTemp();\r\n                        var Tinicio = C3D.newTemp(); var Tcont1 = C3D.newTemp(); var Treal = C3D.newTemp();\r\n                        var TR3 = C3D.newTemp(); var TR5 = C3D.newTemp(); var TR6 = C3D.newTemp(); var TR7 = C3D.newTemp();\r\n                        var LR2 = C3D.newLbl(); var LR3 = C3D.newLbl(); var La = C3D.newLbl(); var Lb = C3D.newLbl();\r\n                        var Lc = C3D.newLbl(); \r\n                        /* Aqui hacemos una comparacion */\r\n                        cod += `${TR0} = ${retIzq.valor};\\n`    \r\n                        cod += `${TR1} = ${retDer.valor};\\n`\r\n                        \r\n                        //recorremos el stackConsulta hasta -2\r\n                        cod += `${Treal} = spc; \\n`\r\n                        cod += `${TR2} = spc;\\n`\r\n                        cod += `${Tcont} = 0; \\n`\r\n                        cod += `${LR2}:\\n`\r\n                        cod += `${TR3} = stackConsulta[(int)${TR2}];\\n`\r\n                        cod += `if(${TR3}==-2) goto ${LR3};\\n`\r\n                        cod += `${TR2} = ${TR2} + 1; \\n`\r\n                        cod += `${Tcont} = ${Tcont} + 1; \\n`\r\n                        cod += `goto ${LR2}; \\n`\r\n\r\n                        \r\n\r\n                        /* Hacemos la comparacion como tal */\r\n                        cod += `${LR3}: \\n`\r\n\r\n                        //cambio de entorno\r\n                        cod += `spc = ${TR2} + 1; \\n`\r\n                        cod += `${Tinicio} = spc; \\n`\r\n                        cod += `${Tcont1} = spc; \\n`\r\n\r\n                        cod += `sp = sp + 1;\\n`\r\n                        cod += `${TR5} = sp + 1;\\n`\r\n                        cod += `stack[(int)${TR5}] = ${TR0};\\n`\r\n                        cod += `${TR6} = sp + 2;\\n`\r\n                        cod += `stack[(int)${TR6}] = ${TR1};\\n`\r\n                        cod += `CompararAscii();\\n`\r\n                        cod += `${TR7} = stack[(int)sp];\\n`\r\n                        cod += `sp = sp - 1;\\n`\r\n                        switch(this.op)\r\n                        {\r\n                            case \"=\":\r\n                                cod += `if (${TR7} != 0) goto ${Lc};\\n`\r\n                                break;\r\n                            case \"!=\":\r\n                                cod += `if (${TR7} == 0) goto ${Lc};\\n`\r\n                                break;\r\n                            case \"<\":\r\n                                cod += `if (${TR7} >= 0) goto ${Lc};\\n`\r\n                                break;\r\n                            case \"<=\":\r\n                                cod += `if (${TR7} > 0) goto ${Lc};\\n`\r\n                                break;\r\n                            case \">\":\r\n                                cod += `if (${TR7} <= 0) goto ${Lc};\\n`\r\n                                break;\r\n                            case \">=\":\r\n                                cod += `if (${TR7} < 0) goto ${Lc};\\n`\r\n                                break;\r\n                        }\r\n                        //si los numeros son diferentes -> false\r\n                        cod += `${La}: \\n`  //si los numero son iguales -> true\r\n                        cod += `if (${Tcont} <= 0) goto ${Lb}; \\n`\r\n                        cod += `stackConsulta[(int)${Tcont1}] = 1; \\n`\r\n                        cod += `${Tcont1} = ${Tcont1} + 1; \\n`\r\n                        cod += `${Tcont} = ${Tcont} - 1; \\n`\r\n                        cod += `goto ${La}; \\n`\r\n                        \r\n                        cod += `${Lc}: \\n`\r\n                        cod += `if (${Tcont} <= 0) goto ${Lb}; \\n`\r\n                        cod += `stackConsulta[(int)${Tcont1}] = 0; \\n`\r\n                        cod += `${Tcont1} = ${Tcont1} + 1; \\n`\r\n                        cod += `${Tcont} = ${Tcont} - 1; \\n`\r\n                        cod += `goto ${Lc}; \\n`            \r\n                        \r\n                        cod += `${Lb}: \\n`  //terminamos de guardar los stackConsulta\r\n                        cod += `stackConsulta[(int)${Tcont1}] = -2; \\n`\r\n                        cod += `spc = ${Treal}; \\n`\r\n                        \r\n                        TCretorno = Tinicio\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        /* Comparaciones del hijo derecho */\r\n        else if(retDer.tipo == Tipo.NODO)\r\n        {\r\n            TCretorno = TC2;\r\n            switch(retIzq.tipo)\r\n            {\r\n                case Tipo.STRING: {\r\n                        var TR0 = C3D.newTemp(); var TR1 = C3D.newTemp(); var TR2 = C3D.newTemp(); var TR3 = C3D.newTemp(); var TR4 = C3D.newTemp();\r\n                        var TR5 = C3D.newTemp(); var TR6 = C3D.newTemp(); var TR7 = C3D.newTemp(); \r\n\r\n                        var LR3 = C3D.newLbl(); var LR1 = C3D.newLbl(); var LR4 = C3D.newLbl(); var LR2 = C3D.newLbl();\r\n\r\n                        cod += `${TR0} = ${retIzq.valor};\\n`\r\n                        cod += `${TR1} = ${TC2};\\n`\r\n                        cod += `${LR2}:\\n`\r\n                        cod += `${TR2} = stackConsulta[(int)${TR1}];\\n`\r\n                        cod += `if(${TR2}==-2) goto ${LR3};\\n`\r\n                        cod += `${TR3} = ${TR2} + 3;\\n`\r\n                        cod += `${TR4} = Indexes[(int)${TR3}];\\n`\r\n                        cod += `sp = sp + 1;\\n`\r\n                        cod += `${TR5} = sp + 1;\\n`\r\n                        cod += `stack[(int)${TR5}] = ${TR0};\\n`\r\n                        cod += `${TR6} = sp + 2;\\n`\r\n                        cod += `stack[(int)${TR6}] = ${TR4};\\n`\r\n                        cod += `CompararAscii();\\n`\r\n                        cod += `${TR7} = stack[(int)sp];\\n`\r\n                        cod += `sp = sp - 1;\\n`\r\n                        switch(this.op)\r\n                        {\r\n                            case \"=\":\r\n                                cod += `if (${TR7} != 0) goto ${LR1};\\n`\r\n                                break;\r\n                            case \"!=\":\r\n                                cod += `if (${TR7} == 0) goto ${LR1};\\n`\r\n                                break;\r\n                            case \"<\":\r\n                                cod += `if (${TR7} >= 0) goto ${LR1};\\n`\r\n                                break;\r\n                            case \"<=\":\r\n                                cod += `if (${TR7} > 0) goto ${LR1};\\n`\r\n                                break;\r\n                            case \">\":\r\n                                cod += `if (${TR7} <= 0) goto ${LR1};\\n`\r\n                                break;\r\n                            case \">=\":\r\n                                cod += `if (${TR7} < 0) goto ${LR1};\\n`\r\n                                break;\r\n                        }\r\n                        cod += `stacX[(int)sx] = 1;\\n`\r\n                        cod += `sx = sx + 1;\\n;`\r\n                        cod += `stacX[(int)sx] = -2;\\n`\r\n                        cod += `goto ${LR4};\\n`\r\n                        cod += `${LR1}:\\n`\r\n                        cod += `stacX[(int)sx] = 0;\\n`\r\n                        cod += `sx = sx + 1;\\n;`\r\n                        cod += `stacX[(int)sx] = -2;\\n`\r\n                        cod += `${LR4}:\\n`\r\n                        cod += `${TR1} = ${TR1} + 1;\\n`\r\n                        cod += `goto ${LR2};\\n`\r\n                        cod += `${LR3}:\\n`\r\n                        \r\n                        var TP = C3D.newTemp(); var TQ = C3D.newTemp(); var TR = C3D.newTemp(); \r\n                        \r\n                        var LW = C3D.newLbl(); var Lx = C3D.newLbl()\r\n                        //Reemplazar el StackConsulta por el StackX\r\n                        cod += `${TP} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n                        cod += `${TQ} = stacX[(int)${TP}]; \\n`\r\n                        cod += `${LW}: \\n`\r\n                        cod += `if (${TQ} == -2) goto ${Lx}; \\n`      //si el stackX ya se termino vamos a LD\r\n                        cod += `${TR} = ${TC2} + ${TP}; \\n`              //posicion contador del stackConsulta\r\n                        cod += `stackConsulta[(int)${TR}] = ${TQ};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n                        cod += `${TP} = ${TP} + 1; \\n`                //aumentamos el contador de stackX\r\n                        cod += `${TQ} = stacX[(int)${TP}];\\n`           //capturamos lo que hay en stackX en esa nueva posicion\r\n                        cod += `goto ${LW}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n\r\n                        //se acabo el stackX, no hay mas para guardar\r\n                        cod += `${Lx}: \\n`   \r\n                        cod += `${TR} = ${TC2} + ${TP};\\n` \r\n                        cod += `stackConsulta[(int)${TR}] = -2;\\n`\r\n                        cod += `sx = 0; \\n`\r\n                        cod += `stacX[(int)sx] = -2; \\n`\r\n                    }\r\n                    break;\r\n                \r\n                case Tipo.INTEGER:\r\n                case Tipo.DECIMAL: {\r\n                    var TR0 = C3D.newTemp(); var TR1 = C3D.newTemp(); var TR2 = C3D.newTemp(); var TR3 = C3D.newTemp(); var TR4 = C3D.newTemp();\r\n                    var TR5 = C3D.newTemp(); var TR6 = C3D.newTemp(); \r\n\r\n                    var LR3 = C3D.newLbl(); var LR1 = C3D.newLbl(); var LR4 = C3D.newLbl(); var LR2 = C3D.newLbl();\r\n\r\n                    cod += `${TR0} = ${retIzq.valor};\\n`\r\n                    cod += `${TR1} = ${TC2};\\n`\r\n                    cod += `${LR2}:\\n`\r\n                    cod += `${TR2} = stackConsulta[(int)${TR1}];\\n`\r\n                    cod += `if(${TR2}==-2) goto ${LR3};\\n`\r\n                    cod += `${TR3} = ${TR2} + 3;\\n`\r\n                    cod += `${TR4} = Indexes[(int)${TR3}];\\n`\r\n\r\n                    cod += `${TR5} = sp + 1;\\n`\r\n                    cod += `stack[(int)${TR5}] = ${TR4};\\n`\r\n                    C3D.funcBoleanas[C3D.funcIndices.CASTNUM] = true\r\n                    cod += `CastNum();\\n`\r\n                    cod += `${TR6} = stack[(int)sp];\\n`\r\n                    cod += `sp = sp - 1;\\n`\r\n\r\n                    switch(this.op)\r\n                    {\r\n                        case \"=\":\r\n                            cod += `if (${TR0} != ${TR6}) goto ${LR1};\\n`\r\n                            break;\r\n                        case \"!=\":\r\n                            cod += `if (${TR0} == ${TR6}) goto ${LR1};\\n`\r\n                            break;\r\n                        case \"<\":\r\n                            cod += `if (${TR0} >= ${TR6}) goto ${LR1};\\n`\r\n                            break;\r\n                        case \"<=\":\r\n                            cod += `if (${TR0} > ${TR6}) goto ${LR1};\\n`\r\n                            break;\r\n                        case \">\":\r\n                            cod += `if (${TR0} <= ${TR6}) goto ${LR1};\\n`\r\n                            break;\r\n                        case \">=\":\r\n                            cod += `if (${TR0} < ${TR6}) goto ${LR1};\\n`\r\n                            break;\r\n                    }\r\n                    cod += `stacX[(int)sx] = 1;\\n`\r\n                    cod += `sx = sx + 1;\\n;`\r\n                    cod += `stacX[(int)sx] = -2;\\n`\r\n                    cod += `goto ${LR4};\\n`\r\n                    cod += `${LR1}:\\n`\r\n                    cod += `stacX[(int)sx] = 0;\\n`\r\n                    cod += `sx = sx + 1;\\n;`\r\n                    cod += `stacX[(int)sx] = -2;\\n`\r\n                    cod += `${LR4}:\\n`\r\n                    cod += `${TR1} = ${TR1} + 1;\\n`\r\n                    cod += `goto ${LR2};\\n`\r\n                    cod += `${LR3}:\\n`\r\n                    \r\n                    var TP = C3D.newTemp(); var TQ = C3D.newTemp(); var TR = C3D.newTemp(); \r\n                    \r\n                    var LW = C3D.newLbl(); var Lx = C3D.newLbl()\r\n                    //Reemplazar el StackConsulta por el StackX\r\n                    cod += `${TP} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n                    cod += `${TQ} = stacX[(int)${TP}]; \\n`\r\n                    cod += `${LW}: \\n`\r\n                    cod += `if (${TQ} == -2) goto ${Lx}; \\n`      //si el stackX ya se termino vamos a LD\r\n                    cod += `${TR} = ${TC2} + ${TP}; \\n`              //posicion contador del stackConsulta\r\n                    cod += `stackConsulta[(int)${TR}] = ${TQ};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n                    cod += `${TP} = ${TP} + 1; \\n`                //aumentamos el contador de stackX\r\n                    cod += `${TQ} = stacX[(int)${TP}];\\n`           //capturamos lo que hay en stackX en esa nueva posicion\r\n                    cod += `goto ${LW}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n\r\n                    //se acabo el stackX, no hay mas para guardar\r\n                    cod += `${Lx}: \\n`   \r\n                    cod += `${TR} = ${TC2} + ${TP};\\n` \r\n                    cod += `stackConsulta[(int)${TR}] = -2;\\n`\r\n                    cod += `sx = 0; \\n`\r\n                    cod += `stacX[(int)sx] = -2; \\n`\r\n                }\r\n                break;\r\n\r\n                case Tipo.NODO:\r\n                case Tipo.ATRIB:\r\n            }\r\n        }\r\n        else if(retDer.tipo == Tipo.ATRIB){\r\n            TCretorno = TC2;\r\n            switch(retIzq.tipo)\r\n            {\r\n                case Tipo.STRING:\r\n                    {\r\n                        var TR0 = C3D.newTemp(); var TR1 = C3D.newTemp(); var TR2 = C3D.newTemp(); var TR3 = C3D.newTemp(); var TR4 = C3D.newTemp();\r\n                        var TR5 = C3D.newTemp(); var TR6 = C3D.newTemp(); var TR7 = C3D.newTemp(); \r\n\r\n                        var LR3 = C3D.newLbl(); var LR1 = C3D.newLbl(); var LR4 = C3D.newLbl(); var LR2 = C3D.newLbl();\r\n\r\n                        cod += `${TR0} = ${retIzq.valor};\\n`\r\n                        cod += `${TR1} = ${TC2};\\n`\r\n                        cod += `${LR2}:\\n`\r\n                        cod += `${TR2} = stackConsulta[(int)${TR1}];\\n`\r\n                        cod += `if(${TR2}==-2) goto ${LR3};\\n`\r\n                        cod += `${TR3} = ${TR2} + 1;\\n`\r\n                        cod += `${TR4} = stackAtributos[(int)${TR3}];\\n`\r\n                        cod += `sp = sp + 1;\\n`\r\n                        cod += `${TR5} = sp + 1;\\n`\r\n                        cod += `stack[(int)${TR5}] = ${TR0};\\n`\r\n                        cod += `${TR6} = sp + 2;\\n`\r\n                        cod += `stack[(int)${TR6}] = ${TR4};\\n`\r\n                        cod += `CompararAscii();\\n`\r\n                        cod += `${TR7} = stack[(int)sp];\\n`\r\n                        cod += `sp = sp - 1;\\n`\r\n                        switch(this.op)\r\n                        {\r\n                            case \"=\":\r\n                                cod += `if (${TR7} != 0) goto ${LR1};\\n`\r\n                                break;\r\n                            case \"!=\":\r\n                                cod += `if (${TR7} == 0) goto ${LR1};\\n`\r\n                                break;\r\n                            case \"<\":\r\n                                cod += `if (${TR7} >= 0) goto ${LR1};\\n`\r\n                                break;\r\n                            case \"<=\":\r\n                                cod += `if (${TR7} > 0) goto ${LR1};\\n`\r\n                                break;\r\n                            case \">\":\r\n                                cod += `if (${TR7} <= 0) goto ${LR1};\\n`\r\n                                break;\r\n                            case \">=\":\r\n                                cod += `if (${TR7} < 0) goto ${LR1};\\n`\r\n                                break;\r\n                        }\r\n                        cod += `stacX[(int)sx] = 1;\\n`\r\n                        cod += `sx = sx + 1;\\n;`\r\n                        cod += `stacX[(int)sx] = -2;\\n`\r\n                        cod += `goto ${LR4};\\n`\r\n                        cod += `${LR1}:\\n`\r\n                        cod += `stacX[(int)sx] = 0;\\n`\r\n                        cod += `sx = sx + 1;\\n;`\r\n                        cod += `stacX[(int)sx] = -2;\\n`\r\n                        cod += `${LR4}:\\n`\r\n                        cod += `${TR1} = ${TR1} + 1;\\n`\r\n                        cod += `goto ${LR2};\\n`\r\n                        cod += `${LR3}:\\n`\r\n                        \r\n                        var TP = C3D.newTemp(); var TQ = C3D.newTemp(); var TR = C3D.newTemp(); \r\n                        \r\n                        var LW = C3D.newLbl(); var Lx = C3D.newLbl()\r\n                        //Reemplazar el StackConsulta por el StackX\r\n                        cod += `${TP} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n                        cod += `${TQ} = stacX[(int)${TP}]; \\n`\r\n                        cod += `${LW}: \\n`\r\n                        cod += `if (${TQ} == -2) goto ${Lx}; \\n`      //si el stackX ya se termino vamos a LD\r\n                        cod += `${TR} = ${TC2} + ${TP}; \\n`              //posicion contador del stackConsulta\r\n                        cod += `stackConsulta[(int)${TR}] = ${TQ};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n                        cod += `${TP} = ${TP} + 1; \\n`                //aumentamos el contador de stackX\r\n                        cod += `${TQ} = stacX[(int)${TP}];\\n`           //capturamos lo que hay en stackX en esa nueva posicion\r\n                        cod += `goto ${LW}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n\r\n                        //se acabo el stackX, no hay mas para guardar\r\n                        cod += `${Lx}: \\n`   \r\n                        cod += `${TR} = ${TC2} + ${TP};\\n` \r\n                        cod += `stackConsulta[(int)${TR}] = -2;\\n`\r\n                        cod += `sx = 0; \\n`\r\n                        cod += `stacX[(int)sx] = -2; \\n`\r\n                    }\r\n                    break;\r\n                \r\n                case Tipo.INTEGER:\r\n                case Tipo.DECIMAL:\r\n                    {\r\n                        var TR0 = C3D.newTemp(); var TR1 = C3D.newTemp(); var TR2 = C3D.newTemp(); var TR3 = C3D.newTemp(); var TR4 = C3D.newTemp();\r\n                        var TR5 = C3D.newTemp();  var TR7 = C3D.newTemp(); \r\n\r\n                        var LR3 = C3D.newLbl(); var LR1 = C3D.newLbl(); var LR4 = C3D.newLbl(); var LR2 = C3D.newLbl();\r\n\r\n                        cod += `${TR0} = ${retIzq.valor};\\n`\r\n                        cod += `${TR1} = ${TC2};\\n`\r\n                        cod += `${LR2}:\\n`\r\n                        cod += `${TR2} = stackConsulta[(int)${TR1}];\\n`\r\n                        cod += `if(${TR2}==-2) goto ${LR3};\\n`\r\n                        cod += `${TR3} = ${TR2} + 1;\\n`\r\n                        cod += `${TR4} = stackAtributos[(int)${TR3}];\\n`\r\n\r\n                        cod += `sp = sp + 1;\\n`\r\n                        cod += `${TR5} = sp + 1;\\n`\r\n                        cod += `stack[(int)${TR5}] = ${TR4};\\n`\r\n                        C3D.funcBoleanas[C3D.funcIndices.CASTNUM] = true\r\n                        cod += `CastNum();\\n`\r\n                        cod += `${TR7} = stack[(int)sp];\\n`\r\n                        cod += `sp = sp - 1;\\n`\r\n                        switch(this.op)\r\n                        {\r\n                            case \"=\":\r\n                                cod += `if (${TR0} != ${TR7}) goto ${LR1};\\n`\r\n                                break;\r\n                            case \"!=\":\r\n                                cod += `if (${TR0} == ${TR7}) goto ${LR1};\\n`\r\n                                break;\r\n                            case \"<\":\r\n                                cod += `if (${TR0} >= ${TR7}) goto ${LR1};\\n`\r\n                                break;\r\n                            case \"<=\":\r\n                                cod += `if (${TR0} > ${TR7}) goto ${LR1};\\n`\r\n                                break;\r\n                            case \">\":\r\n                                cod += `if (${TR0} <= ${TR7}) goto ${LR1};\\n`\r\n                                break;\r\n                            case \">=\":\r\n                                cod += `if (${TR0} < ${TR7}) goto ${LR1};\\n`\r\n                                break;\r\n                        }\r\n                        cod += `stacX[(int)sx] = 1;\\n`\r\n                        cod += `sx = sx + 1;\\n;`\r\n                        cod += `stacX[(int)sx] = -2;\\n`\r\n                        cod += `goto ${LR4};\\n`\r\n                        cod += `${LR1}:\\n`\r\n                        cod += `stacX[(int)sx] = 0;\\n`\r\n                        cod += `sx = sx + 1;\\n;`\r\n                        cod += `stacX[(int)sx] = -2;\\n`\r\n                        cod += `${LR4}:\\n`\r\n                        cod += `${TR1} = ${TR1} + 1;\\n`\r\n                        cod += `goto ${LR2};\\n`\r\n                        cod += `${LR3}:\\n`\r\n                        \r\n                        var TP = C3D.newTemp(); var TQ = C3D.newTemp(); var TR = C3D.newTemp(); \r\n                        \r\n                        var LW = C3D.newLbl(); var Lx = C3D.newLbl()\r\n                        //Reemplazar el StackConsulta por el StackX\r\n                        cod += `${TP} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n                        cod += `${TQ} = stacX[(int)${TP}]; \\n`\r\n                        cod += `${LW}: \\n`\r\n                        cod += `if (${TQ} == -2) goto ${Lx}; \\n`      //si el stackX ya se termino vamos a LD\r\n                        cod += `${TR} = ${TC2} + ${TP}; \\n`              //posicion contador del stackConsulta\r\n                        cod += `stackConsulta[(int)${TR}] = ${TQ};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n                        cod += `${TP} = ${TP} + 1; \\n`                //aumentamos el contador de stackX\r\n                        cod += `${TQ} = stacX[(int)${TP}];\\n`           //capturamos lo que hay en stackX en esa nueva posicion\r\n                        cod += `goto ${LW}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n\r\n                        //se acabo el stackX, no hay mas para guardar\r\n                        cod += `${Lx}: \\n`   \r\n                        cod += `${TR} = ${TC2} + ${TP};\\n` \r\n                        cod += `stackConsulta[(int)${TR}] = -2;\\n`\r\n                        cod += `sx = 0; \\n`\r\n                        cod += `stacX[(int)sx] = -2; \\n`\r\n                    }\r\n                    break;\r\n                \r\n                    \r\n                case Tipo.NODO:\r\n                case Tipo.ATRIB:\r\n            }\r\n        }\r\n        else if (retDer.tipo == Tipo.DECIMAL){\r\n            switch (retIzq.tipo) {\r\n                case Tipo.DECIMAL:\r\n                    {\r\n                        var TR0 = C3D.newTemp(); var TR1 = C3D.newTemp(); var Tcont = C3D.newTemp(); \r\n                        var TR2 = C3D.newTemp(); var Treal = C3D.newTemp(); var TR3 = C3D.newTemp();\r\n                        var Tinicio = C3D.newTemp(); var Tcont1 = C3D.newTemp();\r\n                        var LR2 = C3D.newLbl(); var LR3 = C3D.newLbl(); var La = C3D.newLbl(); var Lb = C3D.newLbl(); var Lc = C3D.newLbl();\r\n                        \r\n                        cod += `${TR0} = ${retDer.valor};\\n`\r\n                        cod += `${TR1} = ${retIzq.valor};\\n`\r\n                        //recorremos el stackConsulta hasta -2\r\n                        cod += `${Treal} = spc; \\n`\r\n                        cod += `${TR2} = spc;\\n`\r\n                        cod += `${Tcont} = 0; \\n`\r\n                        cod += `${LR2}:\\n`\r\n                        cod += `${TR3} = stackConsulta[(int)${TR2}];\\n`\r\n                        cod += `if(${TR3} == -2) goto ${LR3};\\n`\r\n                        cod += `${TR2} = ${TR2} + 1; \\n`\r\n                        cod += `${Tcont} = ${Tcont} + 1; \\n`\r\n                        cod += `goto ${LR2}; \\n`\r\n\r\n                        cod += `${LR3}: \\n`\r\n\r\n                        //cambio de entorno\r\n                        cod += `spc = ${TR2} + 1; \\n`\r\n                        cod += `${Tinicio} = spc; \\n`\r\n                        cod += `${Tcont1} = spc; \\n`\r\n\r\n                        switch(this.op)\r\n                            {       //verificar a que etiqueta me voy si es verdadero o falso\r\n                                case \"=\":\r\n                                    cod += `if (${TR0} != ${TR1}) goto ${Lc};\\n`\r\n                                    break;\r\n                                case \"!=\":\r\n                                    cod += `if (${TR0} == ${TR1}) goto ${Lc};\\n`\r\n                                    break;\r\n                                case \"<\":\r\n                                    cod += `if (${TR0} >= ${TR1}) goto ${Lc};\\n`\r\n                                    break;\r\n                                case \"<=\":\r\n                                    cod += `if (${TR0} > ${TR1}) goto ${Lc};\\n`\r\n                                    break;\r\n                                case \">\":\r\n                                    cod += `if (${TR0} <= ${TR1}) goto ${Lc};\\n`\r\n                                    break;\r\n                                case \">=\":\r\n                                    cod += `if (${TR0} < ${TR1}) goto ${Lc};\\n`\r\n                                    break;\r\n                            }\r\n                        \r\n                        cod += `${La}: \\n`  //si los numero son iguales -> true\r\n                        cod += `if (${Tcont} <= 0) goto ${Lb}; \\n`\r\n                        cod += `stackConsulta[(int)${Tcont1}] = 1; \\n`\r\n                        cod += `${Tcont1} = ${Tcont1} + 1; \\n`\r\n                        cod += `${Tcont} = ${Tcont} - 1; \\n`\r\n                        cod += `goto ${La}; \\n`\r\n                        \r\n                        //si los numeros son diferentes -> false\r\n                        cod += `${Lc}: \\n`\r\n                        cod += `if (${Tcont} <= 0) goto ${Lb}; \\n`\r\n                        cod += `stackConsulta[(int)${Tcont1}] = 0; \\n`\r\n                        cod += `${Tcont1} = ${Tcont1} + 1; \\n`\r\n                        cod += `${Tcont} = ${Tcont} - 1; \\n`\r\n                        cod += `goto ${Lc}; \\n` \r\n\r\n                        cod += `${Lb}: \\n`  //terminamos de guardar los stackConsulta\r\n                        cod += `stackConsulta[(int)${Tcont1}] = -2; \\n`\r\n                        cod += `spc = ${Treal}; \\n`\r\n                        \r\n                        TCretorno = Tinicio\r\n                    }\r\n                    break;\r\n                case Tipo.STRING:\r\n                    /* Aqui devuelve falso */\r\n                    break;\r\n            }\r\n        }\r\n        else if (retDer.tipo == Tipo.STRING ){\r\n            switch (retIzq.tipo) {\r\n                case Tipo.DECIMAL:\r\n                    /* Aqui devuelve falso */\r\n                    break;\r\n                case Tipo.STRING:\r\n                    {\r\n                        var TR0 = C3D.newTemp(); var TR1 = C3D.newTemp(); var TR2 = C3D.newTemp(); var Tcont = C3D.newTemp();\r\n                        var Tinicio = C3D.newTemp(); var Tcont1 = C3D.newTemp(); var Treal = C3D.newTemp();\r\n                        var TR3 = C3D.newTemp(); var TR5 = C3D.newTemp(); var TR6 = C3D.newTemp(); var TR7 = C3D.newTemp();\r\n                        var LR2 = C3D.newLbl(); var LR3 = C3D.newLbl(); var La = C3D.newLbl(); var Lb = C3D.newLbl();\r\n                        var Lc = C3D.newLbl(); \r\n                        /* Aqui hacemos una comparacion */\r\n                        cod += `${TR0} = ${retDer.valor};\\n`    \r\n                        cod += `${TR1} = ${retIzq.valor};\\n`\r\n                        \r\n                        //recorremos el stackConsulta hasta -2\r\n                        cod += `${Treal} = spc; \\n`\r\n                        cod += `${TR2} = spc;\\n`\r\n                        cod += `${Tcont} = 0; \\n`\r\n                        cod += `${LR2}:\\n`\r\n                        cod += `${TR3} = stackConsulta[(int)${TR2}];\\n`\r\n                        cod += `if(${TR3}==-2) goto ${LR3};\\n`\r\n                        cod += `${TR2} = ${TR2} + 1; \\n`\r\n                        cod += `${Tcont} = ${Tcont} + 1; \\n`\r\n                        cod += `goto ${LR2}; \\n`\r\n\r\n\r\n                        /* Hacemos la comparacion como tal */\r\n                        cod += `${LR3}: \\n`\r\n\r\n                        //cambio de entorno\r\n                        cod += `spc = ${TR2} + 1; \\n`\r\n                        cod += `${Tinicio} = spc; \\n`\r\n                        cod += `${Tcont1} = spc; \\n`\r\n\r\n                        cod += `sp = sp + 1;\\n`\r\n                        cod += `${TR5} = sp + 1;\\n`\r\n                        cod += `stack[(int)${TR5}] = ${TR0};\\n`\r\n                        cod += `${TR6} = sp + 2;\\n`\r\n                        cod += `stack[(int)${TR6}] = ${TR1};\\n`\r\n                        cod += `CompararAscii();\\n`\r\n                        cod += `${TR7} = stack[(int)sp];\\n`\r\n                        cod += `sp = sp - 1;\\n`\r\n                        switch(this.op)\r\n                        {\r\n                            case \"=\":\r\n                                cod += `if (${TR7} != 0) goto ${Lc};\\n`\r\n                                break;\r\n                            case \"!=\":\r\n                                cod += `if (${TR7} == 0) goto ${Lc};\\n`\r\n                                break;\r\n                            case \"<\":\r\n                                cod += `if (${TR7} >= 0) goto ${Lc};\\n`\r\n                                break;\r\n                            case \"<=\":\r\n                                cod += `if (${TR7} > 0) goto ${Lc};\\n`\r\n                                break;\r\n                            case \">\":\r\n                                cod += `if (${TR7} <= 0) goto ${Lc};\\n`\r\n                                break;\r\n                            case \">=\":\r\n                                cod += `if (${TR7} < 0) goto ${Lc};\\n`\r\n                                break;\r\n                        }\r\n                        //si los numeros son diferentes -> false\r\n                        cod += `${La}: \\n`  //si los numero son iguales -> true\r\n                        cod += `if (${Tcont} <= 0) goto ${Lb}; \\n`\r\n                        cod += `stackConsulta[(int)${Tcont1}] = 1; \\n`\r\n                        cod += `${Tcont1} = ${Tcont1} + 1; \\n`\r\n                        cod += `${Tcont} = ${Tcont} - 1; \\n`\r\n                        cod += `goto ${La}; \\n`\r\n                        \r\n                        cod += `${Lc}: \\n`\r\n                        cod += `if (${Tcont} <= 0) goto ${Lb}; \\n`\r\n                        cod += `stackConsulta[(int)${Tcont1}] = 0; \\n`\r\n                        cod += `${Tcont1} = ${Tcont1} + 1; \\n`\r\n                        cod += `${Tcont} = ${Tcont} - 1; \\n`\r\n                        cod += `goto ${Lc}; \\n`            \r\n                        \r\n                        cod += `${Lb}: \\n`  //terminamos de guardar los stackConsulta\r\n                        cod += `stackConsulta[(int)${Tcont1}] = -2; \\n`\r\n                        cod += `spc = ${Treal}; \\n`\r\n                        \r\n                        TCretorno = Tinicio\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        \r\n        if(retIzq.tipo == Tipo.NODO || retIzq.tipo == Tipo.ATRIB || retDer.tipo == Tipo.NODO || retDer.tipo == Tipo.ATRIB )\r\n        {\r\n            cod += `spc = ${TC0};\\n`\r\n        }\r\n        return {cod:cod,tipo:Tipo.BOOLEAN,valor:TCretorno}   \r\n    }\r\n}\r\n\r\nfunction comparison(izq, op, der) {\r\n    if(!Colision[izq.tipo][der.tipo])\r\n    {\r\n        ErroresGlobal.push({Error:`No se pudieron operar los tipos ${getTipoById(izq.tipo)} - ${getTipoById(der.tipo)}`,tipo:\"Semantico\",Linea:0,columna:0})\r\n        return false\r\n    }\r\n    switch(op)\r\n    {\r\n        case \"=\":\r\n            return izq.valor == der.valor\r\n        case \"!=\":\r\n            return izq.valor != der.valor\r\n        case \"<\":\r\n            return izq.valor <= der.valor\r\n        case \"<=\":\r\n            return izq.valor <= der.valor\r\n        case \">\":\r\n            return izq.valor > der.valor\r\n        case \">=\":\r\n            return izq.valor >= der.valor\r\n    }\r\n    return false\r\n}\r\n\r\n/*\r\n    /biblioteca/libro[titulo > 5]\r\n    /biblioteca[libro/titulo > 5]\r\n*/","import { concat, lowerCase, pad, truncate, upperCase } from \"lodash\"\r\nimport { Tipo, TipoPath, Predicado } from \"../AST/Entorno\"\r\nimport { Camino } from \"./axes\"\r\nimport { Literal, Nodo } from \"./Expresiones\"\r\nimport { retonarGlobal } from \"../AST/Global\"\r\nconst { ErroresGlobal } = require('../AST/Global')\r\nconst C3D = require('../../C3D')\r\n\r\n\r\nclass PostFix\r\n{\r\n  constructor(predicado,tipo)\r\n  {\r\n    this.predicado=predicado\r\n    this.tipo=tipo\r\n  }\r\n}\r\n// TEXTO\r\nexport class Texto extends PostFix {\r\n\r\n  constructor (predicado, tipo) {\r\n    super(predicado, tipo)\r\n  }\r\n\r\n  getValor(Objetos)\r\n  {\r\n    var retorno = []\r\n    \r\n    // recorrer todos los ojetos para concatener el texto\r\n    for (var obj of Objetos ){\r\n      // si no es de tipo nodo, omite el objeto\r\n      if (obj.tipo == Tipo.NODO) {\r\n        // concatenar el texto de los hijos\r\n        if (this.tipo == TipoPath.ABS){\r\n          // no concatenar vacíos\r\n          if (obj.valor != '') retorno.push(new Literal(Tipo.STRING,obj.valor))\r\n        } else {\r\n          // obtiene el texto de manera recursiva\r\n          retorno = obj.entorno.getTextoRelativo()\r\n        }\r\n      }\r\n    }\r\n    return retorno\r\n  }\r\n\r\n  getC3D()\r\n  {\r\n    C3D.funcBoleanas[C3D.funcIndices.TEXT] = true\r\n    var TT1 = C3D.newTemp();\r\n    var cod = \"\"\r\n    cod += `sp = sp + 1;\\n`\r\n    cod += `Text();\\n`\r\n    cod += `${TT1} = stack[(int)sp];\\n`\r\n    cod += `sp = sp - 1;`\r\n\r\n    return {cod:cod,tipo:Tipo.STRING,valor:TT1}\r\n  }\r\n}\r\n// CONTEXT\r\nexport class ContextItemExpr extends PostFix\r\n{\r\n  constructor(predicado,tipo)\r\n  {\r\n    super(predicado,tipo)\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    var retornos = []\r\n    var retorno = []\r\n    for (const nodo of nodos) {\r\n      retorno.push(nodo)  \r\n      if(this.tipo==TipoPath.REL) //Verifica si es de tipo Relativo para buscar el contexto actual de los hijos\r\n      {\r\n        var hijos=GenerarNodosHijos(nodo.entorno)\r\n        var retornos = retornos.concat(new ContextItemExpr(this.predicado,this.tipo).getValor(hijos))\r\n      } \r\n    }\r\n    retorno = Predicado(this.predicado,retorno)\r\n    retornos = concat(retorno,retornos)\r\n    return retornos\r\n  }\r\n\r\n  Graficar(ListaNodes,ListaEdges,contador)\r\n  {\r\n    var NodosActuales = []\r\n    var nodoTipo = {id:contador.num,label:this.tipo==TipoPath.ABS ? \"/\" : \"//\"}\r\n    NodosActuales.push(nodoTipo);ListaNodes.push(nodoTipo);contador.num++\r\n    var nodoNombre = {id:contador.num,label:\".\"}\r\n    NodosActuales.push(nodoNombre);ListaNodes.push(nodoNombre);contador.num++\r\n    for (const predicado of this.predicado) \r\n    {\r\n      var nodoCorcheteA = {id:contador.num,label:\"[\"}\r\n      NodosActuales.push(nodoCorcheteA);ListaNodes.push(nodoCorcheteA);contador.num++\r\n      var nodoActual= {id:contador.num,label:\"Path\"}\r\n      NodosActuales.push(nodoActual);ListaNodes.push(nodoActual);contador.num++\r\n      var nodos = predicado.Graficar(ListaNodes,ListaEdges,contador)\r\n      for (const nodo of nodos) {\r\n        ListaEdges.push({from:nodoActual.id,to:nodo.id})\r\n      }\r\n      var nodoCorcheteC = {id:contador.num,label:\"]\"}\r\n      NodosActuales.push(nodoCorcheteC);ListaNodes.push(nodoCorcheteC);contador.num++\r\n    }\r\n    return NodosActuales\r\n  }\r\n\r\n  getC3D(){   \r\n\r\n    C3D.funcBoleanas[C3D.funcIndices.SELF] = true\r\n    var cod = ''\r\n\r\n    /* Añadiendo en el Main la llamada y los parametros a la funcion CaminoABS */\r\n    cod += (`\\n/* Guardando la ruta del atributo ${this.nombre} */ \\n`);\r\n\r\n    //guardamos en el heapConsulta el camino que nos dieron /* esto solo viene una vez */\r\n    var TC0 = C3D.newTemp();\r\n    cod += (`${TC0} = hpc; \\n`);  //guardamos donde inicia la consulta\r\n\r\n    for (const letra of \"*\") {\r\n      var ascci = letra.charCodeAt(0);\r\n      cod += (`heapConsulta[(int)hpc] = ${ascci}; \\n`);\r\n      cod += (`hpc = hpc + 1; \\n`);\r\n    } \r\n    cod += (`heapConsulta[(int)hpc] = -1; \\n`);\r\n    cod += (`hpc = hpc + 1; \\n`);\r\n\r\n    cod += (`\\n/* Cambiando de entorno */\\n`);\r\n    cod += (`sp = sp + 1; \\n`);\r\n    var TC3 = C3D.newTemp();\r\n    cod += (`${TC3} = sp + 1; \\n`); //le sumamos uno para dejar espacio para el return\r\n    cod += (`stack[(int)${TC3}] = ${TC0}; \\n`);  //guardamos el inicio de heapConsulta\r\n    cod += (`Self(); \\n`); //manda a llamar a la funcion atributo\r\n    cod += (`sp = sp - 1; \\n`);\r\n\r\n    if(this.predicado.length > 0)\r\n    {\r\n      var tempCod\r\n      for (const predicado of this.predicado) {\r\n        tempCod = predicado.getC3D()\r\n        if(tempCod.tipo == Tipo.DECIMAL || tempCod.tipo == Tipo.INTEGER)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADODECIMAL] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoDecimal();\\n`\r\n          cod += `sp = sp -1;\\n`\r\n        }\r\n        if(tempCod.tipo == Tipo.STRING)\r\n        {\r\n          cod += tempCod.cod;\r\n        }\r\n        if(tempCod.tipo == Tipo.BOOLEAN)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADONODO] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoNodo();\\n`\r\n          cod += `sp = sp - 1;\\n`\r\n        }\r\n      }\r\n    }\r\n\r\n    return {cod: cod, tipo: Tipo.NODO}\r\n\r\n  }\r\n}\r\n\r\nfunction GenerarNodosHijos(padre)\r\n{\r\n  var hijos = []\r\n  for (const hijo of padre.hijos) {\r\n    var nuevaPila = Object.assign([],padre.pila)\r\n    nuevaPila.push(padre)\r\n    hijos.push(new Nodo(Tipo.NODO,hijo,nuevaPila,hijo.valor))\r\n  }\r\n  return hijos;\r\n}\r\n//CALLFUNCTION\r\nexport class CallFunction extends PostFix \r\n{\r\n  constructor(predicado,tipo,nombre,argumentos)\r\n  {\r\n    super(predicado,tipo)\r\n    this.nombre=nombre\r\n    this.argumentos = argumentos\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    let expArgumentos = []\r\n    for (const argumento of this.argumentos) {\r\n        expArgumentos = expArgumentos.concat(argumento.getValor(nodos))\r\n    }\r\n    var retorno = []\r\n    switch(this.nombre)\r\n    {\r\n      case 'text':\r\n        if(expArgumentos.length==0){\r\n          retorno = new Texto(this.predicado,this.tipo).getValor(nodos)\r\n          break\r\n        }\r\n        ErroresGlobal.push({Error:`La funcion text no recive argumentos`,tipo:\"Semantico\",Linea:0,columna:0})\r\n        break;\r\n      case 'last':\r\n        if(expArgumentos.length==0){\r\n          retorno = new Last(this.predicado,this.tipo).getValor(nodos)  \r\n          break;    \r\n        }\r\n        ErroresGlobal.push({Error:`La funcion text no recive argumentos`,tipo:\"Semantico\",Linea:0,columna:0})\r\n        break;\r\n      case 'node':\r\n        if(expArgumentos.length==0){\r\n          retorno = new Node(this.predicado,this.tipo).getValor(nodos)\r\n          break;\r\n        }\r\n        ErroresGlobal.push({Error:`La funcion text no recive argumentos`,tipo:\"Semantico\",Linea:0,columna:0})\r\n        break;\r\n      case 'position':\r\n        if(expArgumentos.length==0){\r\n          retorno = new Position(this.predicado,this.tipo).getValor(nodos)\r\n          break;\r\n        }\r\n        ErroresGlobal.push({Error:`La funcion text no recive argumentos`,tipo:\"Semantico\",Linea:0,columna:0})\r\n        break;\r\n      case 'upper-case':\r\n        if(expArgumentos.length==1){\r\n          retorno = new Mayusculas(this.predicado,this.tipo).getValor(expArgumentos)\r\n          break\r\n        }\r\n        ErroresGlobal.push({Error:`La funcion uppercase necesita un argumento string`,tipo:\"Semantico\",Linea:0,columna:0})\r\n        break;\r\n      case 'lower-case':\r\n        if(expArgumentos.length==1){\r\n          retorno = new Minusculas(this.predicado,this.tipo).getValor(expArgumentos)\r\n          break\r\n        }\r\n        ErroresGlobal.push({Error:`La funcion uppercase necesita un argumento string`,tipo:\"Semantico\",Linea:0,columna:0})\r\n        break;\r\n      case 'string':\r\n        if(expArgumentos.length==1)\r\n        {\r\n          retorno = new toString(this.predicado,this.tipo).getValor(expArgumentos)\r\n          break \r\n        }\r\n        ErroresGlobal.push({Error:`La funcion string necesita un argumento item`,tipo:\"Semantico\",Linea:0,columna:0})\r\n        break;\r\n      case 'number':\r\n        if(expArgumentos.length==1)\r\n        {\r\n          retorno = new toNumber(this.predicado,this.tipo).getValor(expArgumentos)\r\n          break\r\n        }\r\n        ErroresGlobal.push({Error:`La funcion string necesita un argumento item`,tipo:\"Semantico\",Linea:0,columna:0})\r\n        break;\r\n      case 'substring':\r\n        if(expArgumentos.length==2 || expArgumentos.length==3)\r\n        {\r\n          retorno = new subString(this.predicado,this.tipo).getValor(expArgumentos)\r\n          break\r\n        }\r\n        ErroresGlobal.push({Error:`La funcion subString Recive un string, Number o un String, Number, Number`,tipo:\"Semantico\",Linea:0,columna:0})\r\n        break;\r\n      default:\r\n        ErroresGlobal.push({Error:`No existe la funcion ${this.nombre}`,tipo:\"Semantico\",Linea:0,columna:0})\r\n        retorno.push(new Literal(Tipo.ERROR,\"@Error@\"))\r\n        break;\r\n    }\r\n    retorno = Predicado(this.predicado,retorno)\r\n    return retorno\r\n  }\r\n\r\n  Graficar(ListaNodes,ListaEdges,contador)\r\n  {\r\n    var NodosActuales = []\r\n    var nodoTipo = {id:contador.num,label:this.tipo==TipoPath.ABS ? \"/\" : \"//\"}\r\n    NodosActuales.push(nodoTipo);ListaNodes.push(nodoTipo);contador.num++\r\n    var nodoNombre = {id:contador.num,label:this.nombre+\"(\"+\")\"}\r\n    NodosActuales.push(nodoNombre);ListaNodes.push(nodoNombre);contador.num++\r\n    for (const predicado of this.predicado) \r\n    {\r\n      var nodoCorcheteA = {id:contador.num,label:\"[\"}\r\n      NodosActuales.push(nodoCorcheteA);ListaNodes.push(nodoCorcheteA);contador.num++\r\n      var nodoActual= {id:contador.num,label:\"Path\"}\r\n      NodosActuales.push(nodoActual);ListaNodes.push(nodoActual);contador.num++\r\n      var nodos = predicado.Graficar(ListaNodes,ListaEdges,contador)\r\n      for (const nodo of nodos) {\r\n        ListaEdges.push({from:nodoActual.id,to:nodo.id})\r\n      }\r\n      var nodoCorcheteC = {id:contador.num,label:\"]\"}\r\n      NodosActuales.push(nodoCorcheteC);ListaNodes.push(nodoCorcheteC);contador.num++\r\n    }\r\n    return NodosActuales\r\n  }\r\n\r\n  \r\n  getC3D()\r\n  {\r\n    var retornos = []\r\n    for (const iterator of this.argumentos) {\r\n      retornos.push(iterator.getC3D()) \r\n    }\r\n    var retorno\r\n    switch(this.nombre)\r\n    {\r\n      case 'text':\r\n        retorno = new Texto(this.predicado,this.tipo)\r\n        return retorno.getC3D();\r\n      case 'last':\r\n        retorno = new Last(this.predicado,this.tipo)\r\n        return retorno.getC3D();\r\n      case 'node':\r\n        retorno = new Node(this.predicado,this.tipo)\r\n        return retorno.getC3D();\r\n      case 'position':\r\n        retorno = new Position(this.predicado,this.tipo)\r\n        break;\r\n      case 'upper-case':\r\n        retorno = new Mayusculas(this.predicado,this.tipo)\r\n        return retorno.getC3D(retornos[0]);\r\n      case 'lower-case':\r\n        retorno = new Minusculas(this.predicado,this.tipo)\r\n        return retorno.getC3D(retornos[0]);\r\n      case 'string':\r\n        retorno = new toString(this.predicado,this.tipo)\r\n        return retorno.getC3D(retornos[0]);\r\n      case 'number':\r\n        retorno = new toNumber(this.predicado,this.tipo)\r\n        return retorno.getC3D(retornos[0]);\r\n      case 'substring':\r\n        retorno = new subString(this.predicado,this.tipo)\r\n        return retorno.getC3D(retornos)\r\n        break;\r\n    }\r\n  }\r\n}\r\n//CALLFUNCTIONPREFIX\r\nexport class CallFunctionPrefix extends PostFix\r\n{\r\n  constructor(predicado,tipo,prefix,nombre,argumentos)\r\n  {\r\n    super(predicado,tipo)\r\n    this.prefix = prefix\r\n    this.nombre = nombre\r\n    this.argumentos = argumentos\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    if(this.prefix == \"fn\")\r\n    {\r\n      return new CallFunction(this.predicado,this.tipo,this.nombre,this.argumentos).getValor(nodos)\r\n    }\r\n    else if(this.prefix == \"local\")\r\n    {\r\n      var retornos= []\r\n      var funciones = retonarGlobal()\r\n      for (const funcion of funciones) {\r\n        if(funcion.nombre == this.nombre)\r\n        {\r\n          var nuevoEntorno = [...nodos]\r\n          var ArgumentosRealizados = []\r\n          for (const argumento of this.argumentos) {\r\n            ArgumentosRealizados.push(argumento.getValor(nuevoEntorno))\r\n          }\r\n          if(ArgumentosRealizados.length != funcion.declaraciones.length)\r\n          {\r\n            ErroresGlobal.push({Error:`Error en los argumentos de la funcion`,tipo:\"Semantico\",Linea:0,columna:0})\r\n            return []\r\n          }\r\n          for (let i = 0; i < ArgumentosRealizados.length; i++) {\r\n            \r\n            if(this.transformTipo(ArgumentosRealizados,i,funcion.declaraciones[i].type))\r\n            {\r\n              var Entorno =\r\n              {\r\n                tipo : funcion.declaraciones[i].nombre,\r\n                atributos : [],\r\n                hijos:ArgumentosRealizados[i],\r\n                texto:'',\r\n                posTipo : 0,\r\n                posTexto : 0,\r\n              }\r\n              if(!this.contains(nuevoEntorno,Entorno,funcion.declaraciones[i].nombre))\r\n              {\r\n                nuevoEntorno.push(new Nodo(Tipo.NODO,Entorno,[],'',1))\r\n              }\r\n            }else\r\n            {\r\n              ErroresGlobal.push({Error:`Error en los argumentos de la funcion`,tipo:\"Semantico\",Linea:0,columna:0})\r\n              return []\r\n            }\r\n          }\r\n          for (const ejectuar of funcion.body) {\r\n            retornos = retornos.concat(ejectuar.getValor(nuevoEntorno))\r\n          }\r\n            if(!(funcion.tipo == null || retornos[0].tipo == funcion.tipo))\r\n          {\r\n            ErroresGlobal.push({Error:`Error en el retorno de la funcion`,tipo:\"Semantico\",Linea:0,columna:0})\r\n            return []\r\n          }\r\n          break\r\n        }\r\n      }\r\n      return retornos\r\n    }\r\n  }\r\n  contains(nodos,Entorno,nombre)\r\n    {\r\n      for (let i = 0; i < nodos.length; i++) {\r\n        if(nodos[i].entorno.tipo == nombre)\r\n        {\r\n          nodos[i] = new Nodo(Tipo.NODO,Entorno,[],'',1)\r\n          return true\r\n        }\r\n      }\r\n      return false\r\n  }\r\n  transformTipo(ArgumentosRealizados,i,tipo)\r\n  {\r\n    let expresion = /[0-9]+(\\.[0-9]+)?/i;\r\n    switch(tipo)\r\n    {\r\n      case null:\r\n        return true\r\n      case Tipo.DECIMAL:\r\n        switch(ArgumentosRealizados[i][0].tipo)\r\n        {\r\n          case Tipo.NODO:\r\n          case Tipo.ATRIB:\r\n            if(ArgumentosRealizados[i][0].valor.match(expresion))\r\n            {\r\n              ArgumentosRealizados[i][0] = new Literal(Tipo.DECIMAL,Number(ArgumentosRealizados[i][0].valor))\r\n              return true\r\n            }\r\n            return false\r\n          case Tipo.DECIMAL:\r\n          case Tipo.INTEGER:\r\n            return true\r\n          default:\r\n            return false\r\n        }\r\n      case Tipo.INTEGER:\r\n        switch(ArgumentosRealizados[i][0].tipo)\r\n        {\r\n          case Tipo.NODO:\r\n          case Tipo.ATRIB:\r\n            if(ArgumentosRealizados[i][0].valor.match(expresion))\r\n            {\r\n              ArgumentosRealizados[i][0] = new Literal(Tipo.DECIMAL,parseInt(ArgumentosRealizados[i][0].valor,10))\r\n              return true\r\n            }\r\n            return false\r\n          case Tipo.DECIMAL:\r\n          case Tipo.INTEGER:\r\n            return true\r\n          default:\r\n            return false\r\n        }\r\n      case Tipo.STRING:\r\n        switch(ArgumentosRealizados[i][0].tipo)\r\n        {\r\n          case Tipo.NODO:\r\n          case Tipo.ATRIB:\r\n            this.ArgumentosRealizados[i][0] = new Literal(Tipo.STRING,ArgumentosRealizados[i][0].valor)\r\n            return true\r\n          case Tipo.STRING:\r\n            return true\r\n          default:\r\n            return false\r\n        }\r\n      case Tipo.NODO:\r\n      case Tipo.ATRIB:\r\n        if(ArgumentosRealizados[i][0].tipo == tipo) return true\r\n        return false\r\n    }\r\n  }\r\n\r\n  getC3D()\r\n  {\r\n    if(this.prefix == \"fn\")\r\n    {\r\n      return new CallFunction(this.predicado,this.tipo,this.nombre,this.argumentos).getC3D()\r\n    }\r\n  }\r\n}\r\n// GET LAST\r\nexport class Last extends PostFix \r\n{\r\n\r\n  constructor (predicado, tipo) {\r\n    super(predicado, tipo)\r\n  }\r\n\r\n  getValor(Objetos)\r\n  {\r\n    var retorno = []\r\n    var lastIndex = Objetos.length \r\n    retorno.push(new Literal(Tipo.INTEGER, lastIndex))\r\n    return retorno\r\n  }\r\n\r\n  getC3D()\r\n  {\r\n    C3D.funcBoleanas[C3D.funcIndices.LAST] = true\r\n    var TT1 = C3D.newTemp();\r\n    var cod = \"\"\r\n    cod += `sp = sp + 1;\\n`\r\n    cod += `Last();\\n`\r\n    cod += `${TT1} = stack[(int)sp];\\n`\r\n    cod += `sp = sp - 1;`\r\n\r\n    return {cod:cod,tipo:Tipo.DECIMAL,valor:TT1}\r\n  }\r\n}\r\n\r\nexport class Position extends PostFix \r\n{\r\n  constructor (predicado, tipo) {\r\n    super(predicado, tipo)\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    var posiciones = []\r\n    for (const nodo of nodos) {\r\n      var posicion=nodo.posicion\r\n      while((posicion)>Math.trunc(posicion)+0.09)\r\n      {\r\n        var temp = Math.trunc(posicion)\r\n        temp*=10\r\n        posicion*=10.0;\r\n        posicion-=temp\r\n      }\r\n      posiciones.push(new Literal(Tipo.INTEGER,Math.trunc(posicion)))\r\n    }\r\n    return posiciones\r\n  }\r\n}\r\n\r\nexport class Node extends PostFix\r\n{\r\n  constructor (predicado, tipo) {\r\n    super(predicado, tipo)\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    var posiciones = []\r\n    for (const nodo of nodos) {\r\n      if(nodo.valor!=\"\")\r\n      {\r\n        posiciones.push(new Literal(Tipo.STRING,nodo.valor))\r\n      }\r\n      posiciones = posiciones.concat(new Camino(\"*\",[],this.tipo).getValor([nodo]))\r\n    }\r\n    return posiciones\r\n  }\r\n\r\n  getC3D()\r\n  {\r\n    C3D.funcBoleanas[C3D.funcIndices.CAMINO] = true\r\n    var cod = ''\r\n\r\n    /* Añadiendo en el Main la llamada y los parametros a la funcion CaminoABS */\r\n    cod += (`\\n/* Guardando la ruta ${this.nombre} */ \\n`);\r\n    //guardamos en el heapConsulta el camino que nos dieron /* esto es recursivo */\r\n    var TC0 = C3D.newTemp();\r\n    cod += (`${TC0} = hpc; \\n`);  //guardamos donde inicia la consulta\r\n\r\n    for (const letra of \"*\") {\r\n      var ascci = letra.charCodeAt(0);\r\n      cod += (`heapConsulta[(int)hpc] = ${ascci}; \\n`);\r\n      cod += (`hpc = hpc + 1; \\n`);\r\n    } \r\n    cod += (`heapConsulta[(int)hpc] = -1; \\n`);\r\n    cod += (`hpc = hpc + 1; \\n`);\r\n\r\n    cod += (`\\n/* Cambiando de entorno */\\n`);\r\n    cod += (`sp = sp + 1; \\n`);\r\n    var TC3 = C3D.newTemp();\r\n    cod += (`${TC3} = sp + 1; \\n`); //le sumamos uno para dejar espacio para el return\r\n    cod += (`stack[(int)${TC3}] = ${TC0}; \\n`);  //guardamos el inicio de heapConsulta\r\n    cod += (`Camino(); \\n`); //manda a llamar a la funcion camino\r\n    cod += (`sp = sp - 1; \\n`);\r\n\r\n    return {cod:cod,tipo:Tipo.NODO}\r\n  }\r\n}\r\n\r\nexport class Mayusculas extends PostFix\r\n{\r\n  constructor (predicado, tipo) {\r\n    super(predicado, tipo)\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    var retornos = []\r\n    for (const nodo of nodos) {\r\n      if(nodo.tipo==Tipo.STRING)\r\n      {\r\n        var nuevo = new Literal(Tipo.STRING,upperCase(nodo.valor))\r\n        retornos.push(nuevo)\r\n      }\r\n      else if (nodo.tipo == Tipo.NODO || nodo.tipo == Tipo.ATRIB)\r\n      {\r\n        retornos.push(new Literal(Tipo.STRING,upperCase(nodo.valor)))\r\n      }\r\n      else\r\n      {\r\n        ErroresGlobal.push({Error:`La funcion upper-case recive argumentos de tipo string`,tipo:\"Semantico\",Linea:0,columna:0})\r\n      }\r\n    }\r\n    return retornos\r\n  }\r\n\r\n  getC3D(argumento)\r\n  {\r\n    var cod = \"\"\r\n    cod += argumento.cod;\r\n    C3D.funcBoleanas[C3D.funcIndices.UPPERCASE] = true\r\n    if(argumento.tipo == Tipo.STRING)\r\n    {\r\n      var TT1 = C3D.newTemp(); var TT2 = C3D.newTemp();\r\n      cod += `sp = sp + 1;\\n`\r\n      cod += `${TT1} = sp + 1;\\n`\r\n      cod += `stack[(int)${TT1}] = ${argumento.valor};\\n`\r\n      cod += `UpperCase();\\n`\r\n      cod += `${TT2} = stack[(int)sp];\\n`\r\n      cod += `sp = sp - 1;\\n`\r\n      return {cod:cod,tipo:Tipo.STRING,valor:TT2}\r\n    }\r\n    if(argumento.tipo == Tipo.NODO)\r\n    {\r\n      var TT1 = C3D.newTemp(); var TT2 = C3D.newTemp(); var TT3 = C3D.newTemp(); var TT4 = C3D.newTemp();\r\n      var TT5 = C3D.newTemp();\r\n      cod += `${TT1} = spc;\\n`\r\n      cod += `${TT2} = stackConsulta[(int)${TT1}];\\n`\r\n      cod += `${TT2} = ${TT2} + 3;\\n`\r\n      cod += `${TT3} = Indexes[(int)${TT2}];\\n`\r\n      cod += `sp = sp + 1;\\n`\r\n      cod += `${TT4} = sp + 1;\\n`\r\n      cod += `stack[(int)${TT4}] = ${TT3};\\n`\r\n      cod += `UpperCase();\\n`\r\n      cod += `${TT5} = stack[(int)sp];\\n`\r\n      cod += `sp = sp - 1;\\n`\r\n      return {cod:cod,tipo:Tipo.STRING,valor:TT5}\r\n    }\r\n    if(argumento.tipo == Tipo.ATRIB)\r\n    {\r\n      var TT1 = C3D.newTemp(); var TT2 = C3D.newTemp(); var TT3 = C3D.newTemp(); var TT4 = C3D.newTemp();\r\n      var TT5 = C3D.newTemp();\r\n      cod += `${TT1} = spc;\\n`\r\n      cod += `${TT2} = stackConsulta[(int)${TT1}];\\n`\r\n      cod += `${TT2} = ${TT2} + 1;\\n`\r\n      cod += `${TT3} = stackAtributos[(int)${TT2}];\\n`\r\n      cod += `sp = sp + 1;\\n`\r\n      cod += `${TT4} = sp + 1;\\n`\r\n      cod += `stack[(int)${TT4}] = ${TT3};\\n`\r\n      cod += `UpperCase();\\n`\r\n      cod += `${TT5} = stack[(int)sp];\\n`\r\n      cod += `sp = sp - 1;\\n`\r\n      return {cod:cod,tipo:Tipo.STRING,valor:TT5}\r\n    }\r\n  }\r\n}\r\n\r\nexport class Minusculas extends PostFix\r\n{\r\n  constructor (predicado, tipo) {\r\n    super(predicado, tipo)\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    var retornos = []\r\n    for (const nodo of nodos) {\r\n      if(nodo.tipo==Tipo.STRING || nodo.tipo == Tipo.NODO || nodo.tipo == Tipo.ATRIB)\r\n      {\r\n        var nuevo = new Literal(Tipo.STRING,lowerCase(nodo.valor))\r\n        retornos.push(nuevo)\r\n      }\r\n      else if (nodo.tipo == Tipo.NODO || nodo.tipo == Tipo.ATRIB)\r\n      {\r\n        retornos.push(new Literal(Tipo.STRING,lowerCase(nodo.valor)))\r\n      }\r\n      else\r\n      {\r\n        ErroresGlobal.push({Error:`La funcion lower-case recive argumentos de tipo string`,tipo:\"Semantico\",Linea:0,columna:0})\r\n      }\r\n    }\r\n    return retornos\r\n  }\r\n\r\n  getC3D(argumento)\r\n  {\r\n    var cod = \"\"\r\n    cod += argumento.cod;\r\n    C3D.funcBoleanas[C3D.funcIndices.UPPERCASE] = true\r\n    if(argumento.tipo == Tipo.STRING)\r\n    {\r\n      var TT1 = C3D.newTemp(); var TT2 = C3D.newTemp();\r\n      cod += `sp = sp + 1;\\n`\r\n      cod += `${TT1} = sp + 1;\\n`\r\n      cod += `stack[(int)${TT1}] = ${argumento.valor};\\n`\r\n      cod += `LowerCase();\\n`\r\n      cod += `${TT2} = stack[(int)sp];\\n`\r\n      cod += `sp = sp - 1;\\n`\r\n      return {cod:cod,tipo:Tipo.STRING,valor:TT2}\r\n    }\r\n    if(argumento.tipo == Tipo.NODO)\r\n    {\r\n      var TT1 = C3D.newTemp(); var TT2 = C3D.newTemp(); var TT3 = C3D.newTemp(); var TT4 = C3D.newTemp();\r\n      var TT5 = C3D.newTemp();\r\n      cod += `${TT1} = spc;\\n`\r\n      cod += `${TT2} = stackConsulta[(int)${TT1}];\\n`\r\n      cod += `${TT2} = ${TT2} + 3;\\n`\r\n      cod += `${TT3} = Indexes[(int)${TT2}];\\n`\r\n      cod += `sp = sp + 1;\\n`\r\n      cod += `${TT4} = sp + 1;\\n`\r\n      cod += `stack[(int)${TT4}] = ${TT3};\\n`\r\n      cod += `LowerCase();\\n`\r\n      cod += `${TT5} = stack[(int)sp];\\n`\r\n      cod += `sp = sp - 1;\\n`\r\n      return {cod:cod,tipo:Tipo.STRING,valor:TT5}\r\n    }\r\n    if(argumento.tipo == Tipo.ATRIB)\r\n    {\r\n      var TT1 = C3D.newTemp(); var TT2 = C3D.newTemp(); var TT3 = C3D.newTemp(); var TT4 = C3D.newTemp();\r\n      var TT5 = C3D.newTemp();\r\n      cod += `${TT1} = spc;\\n`\r\n      cod += `${TT2} = stackConsulta[(int)${TT1}];\\n`\r\n      cod += `${TT2} = ${TT2} + 1;\\n`\r\n      cod += `${TT3} = stackAtributos[(int)${TT2}];\\n`\r\n      cod += `sp = sp + 1;\\n`\r\n      cod += `${TT4} = sp + 1;\\n`\r\n      cod += `stack[(int)${TT4}] = ${TT3};\\n`\r\n      cod += `LowerCase();\\n`\r\n      cod += `${TT5} = stack[(int)sp];\\n`\r\n      cod += `sp = sp - 1;\\n`\r\n      return {cod:cod,tipo:Tipo.STRING,valor:TT5}\r\n    }\r\n  }\r\n}\r\n\r\nexport class toString extends PostFix\r\n{\r\n  constructor (predicado, tipo) {\r\n    super(predicado, tipo)\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    var retornos = []\r\n    for (const nodo of nodos) {\r\n      var newNodo = new Literal(Tipo.STRING,nodo.valor.toString())\r\n      retornos.push(newNodo)\r\n    }\r\n    return retornos\r\n  }\r\n\r\n  getC3D(argumento){\r\n    C3D.funcBoleanas[C3D.funcIndices.TOSTRING] = true\r\n    var cod = ''\r\n    if(argumento.tipo == Tipo.NODO){\r\n      var T0 = C3D.newTemp(); var T1 = C3D.newTemp(); var T2 = C3D.newTemp();\r\n      cod += argumento.cod\r\n      //enviamos la posicion en el indexes\r\n      cod += `sp = sp + 1; \\n`\r\n      cod += `${T0} = spc; \\n`\r\n      cod += `${T1} = stackConsulta[(int)${T0}]; \\n`\r\n      cod += `${T1} = ${T1} + 1; \\n`\r\n      cod += `${T2} = Indexes[(int)${T1}]; \\n`\r\n      cod += `stack[(int)sp] = ${T2}; \\n`\r\n      cod += `NumberToString(); \\n`\r\n      cod += `${T0} = stack[(int)sp]; \\n`\r\n      cod += `sp = sp - 1; \\n`\r\n      return {cod:cod,tipo:Tipo.STRING,valor:T0}\r\n    }\r\n    else if (argumento.tipo == Tipo.ATRIB){\r\n      cod += argumento.cod\r\n      var T0 = C3D.newTemp(); var T1 = C3D.newTemp(); var T2 = C3D.newTemp();\r\n      var T3 = C3D.newTemp();\r\n      //enviamos referencia a stackAtributos\r\n      cod += `sp = sp + 1; \\n`\r\n      cod += `${T0} = spc; \\n`\r\n      cod += `${T1} = stackConsulta[(int)spc]; \\n`\r\n      cod += `${T1} = ${T1} + 1;\\n` //posicion de atributos\r\n      cod += `${T2} = Indexes[(int)${T1}]; \\n`\r\n      cod += `${T3} = stackAtributos[(int)${T2}]; \\n`\r\n      cod += `stack[(int)sp] = ${T3}; \\n`\r\n      cod += `NumberToString(); \\n`\r\n      cod += `${T0} = stack[(int)sp]; \\n`\r\n      cod += `sp = sp - 1; \\n`\r\n      return {cod:cod,tipo:Tipo.STRING,valor:T0}\r\n    }\r\n    else if(argumento.tipo == Tipo.DECIMAL || argumento.tipo == Tipo.INTEGER){\r\n      cod += argumento.cod\r\n      var T0 = C3D.newTemp();\r\n      //enviamos el valor (valor o temporal)\r\n      cod += `sp = sp + 1; \\n`\r\n      cod += `stack[(int)sp] = ${argumento.valor}; \\n`\r\n      cod += `NumberToString(); \\n`\r\n      cod += `${T0} = stack[(int)sp]; \\n`\r\n      cod += `sp = sp - 1; \\n`\r\n      return {cod:cod,tipo:Tipo.STRING,valor:T0}\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport class toNumber extends PostFix\r\n{\r\n  constructor (predicado, tipo) {\r\n    super(predicado, tipo)\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    var retornos = []\r\n    for (const nodo of nodos) {\r\n      var temp = Number(nodo.valor)\r\n      if(nodo.valor)\r\n      {\r\n        retornos.push(new Literal(Tipo.DECIMAL,temp))\r\n      }\r\n      else\r\n      {\r\n        ErroresGlobal.push({Error:`La funcion Number no se pudo realizar`,tipo:\"Semantico\",Linea:0,columna:0})\r\n      }\r\n    }\r\n    return retornos\r\n  }\r\n  \r\n  getC3D(argumento){\r\n    C3D.funcBoleanas[C3D.funcIndices.CASTNUM] = true\r\n    var cod = ''\r\n    if(argumento.tipo == Tipo.NODO){\r\n      var T0 = C3D.newTemp(); var T1 = C3D.newTemp(); var T2 = C3D.newTemp(); var T3 = C3D.newTemp();\r\n      cod += argumento.cod\r\n      //enviamos la posicion en el indexes\r\n      cod += `sp = sp + 1; \\n`\r\n      cod += `${T0} = spc; \\n`\r\n      cod += `${T1} = stackConsulta[(int)${T0}]; \\n`\r\n      cod += `${T1} = ${T1} + 3; \\n`\r\n      cod += `${T2} = Indexes[(int)${T1}]; \\n`\r\n      cod += `${T3} = sp + 1; \\n`\r\n      cod += `stack[(int)${T3}] = ${T2}; \\n`\r\n      cod += `CastNum(); \\n`\r\n      cod += `${T0} = stack[(int)sp]; \\n`\r\n      cod += `sp = sp - 1; \\n`\r\n      return {cod:cod,tipo:Tipo.DECIMAL,valor:T0}\r\n    }\r\n    else if (argumento.tipo == Tipo.ATRIB){\r\n      cod += argumento.cod\r\n      var T0 = C3D.newTemp(); var T1 = C3D.newTemp(); var T2 = C3D.newTemp();\r\n      var T3 = C3D.newTemp();\r\n      //enviamos referencia a stackAtributos\r\n      cod += `sp = sp + 1; \\n`\r\n      cod += `${T0} = spc; \\n`\r\n      cod += `${T1} = stackConsulta[(int)spc]; \\n`\r\n      cod += `${T1} = ${T1} + 1;\\n` //posicion de atributos\r\n      cod += `${T2} = stackAtributos[(int)${T1}]; \\n`\r\n      cod += `${T3} = sp + 1; \\n`\r\n      cod += `stack[(int)${T3}] = ${T2}; \\n`\r\n      cod += `CastNum(); \\n`\r\n      cod += `${T0} = stack[(int)sp]; \\n`\r\n      cod += `sp = sp - 1; \\n`\r\n      return {cod:cod,tipo:Tipo.DECIMAL,valor:T0}\r\n    }\r\n    else if(argumento.tipo == Tipo.STRING){\r\n      cod += argumento.cod\r\n      var T0 = C3D.newTemp(); var T1 = C3D.newTemp();\r\n      //enviamos el valor (valor o temporal)\r\n      cod += `sp = sp + 1; \\n`\r\n      cod += `${T1} = sp + 1; \\n`\r\n      cod += `stack[(int)${T1}] = ${argumento.valor}; \\n`\r\n      cod += `CastNum(); \\n`\r\n      cod += `${T0} = stack[(int)sp]; \\n`\r\n      cod += `sp = sp - 1; \\n`\r\n      return {cod:cod,tipo:Tipo.DECIMAL,valor:T0}\r\n    }\r\n  }\r\n}\r\n\r\nexport class subString extends PostFix\r\n{\r\n  constructor (predicado, tipo) {\r\n    super(predicado, tipo)\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    if(nodos.length==2)\r\n    {\r\n      if ((nodos[0].tipo == Tipo.STRING || nodos[0].tipo == Tipo.NODO || nodos[0].tipo == Tipo.ATRIB) \r\n      && (nodos[1].tipo==Tipo.DECIMAL || nodos[1].tipo==Tipo.INTEGER)) {\r\n        let minimo = Number(nodos[1].valor) < 1 ? 0 : (Number(nodos[1].valor) - 1 )  \r\n        var nuevo = new Literal(Tipo.STRING,nodos[0].valor.toString().substring(minimo))\r\n        return [nuevo]\r\n      }\r\n    }\r\n    else\r\n    {\r\n      if ((nodos[0].tipo == Tipo.STRING || nodos[0].tipo == Tipo.NODO || nodos[0].tipo == Tipo.ATRIB)   \r\n        && (nodos[1].tipo==Tipo.DECIMAL || nodos[1].tipo==Tipo.INTEGER)\r\n        && (nodos[2].tipo==Tipo.DECIMAL || nodos[2].tipo==Tipo.INTEGER) ) {\r\n        let minimo = Number(nodos[1].valor) < 1 ? 0 : (Number(nodos[1].valor) - 1)\r\n        var nuevo = new Literal(Tipo.STRING,nodos[0].valor.toString().substring(minimo,minimo + Number(nodos[2].valor)))\r\n        return [nuevo]\r\n      }\r\n    }\r\n  }\r\n\r\n  getC3D(argumentos)\r\n  {\r\n    var cod = \"\"\r\n    if(argumentos.length == 2)\r\n    {\r\n      cod += argumentos[0].cod;\r\n      cod += argumentos[1].cod;\r\n      C3D.funcBoleanas[C3D.funcIndices.SUBSTR1] = true\r\n      if(argumentos[0].tipo == Tipo.STRING)\r\n      {\r\n        var TT1 = C3D.newTemp(); var TT2 = C3D.newTemp(); var TT3 = C3D.newTemp();\r\n        cod += `sp = sp + 1;\\n`\r\n        cod += `${TT1} = sp + 1;\\n`\r\n        cod += `stack[(int)${TT1}] = ${argumentos[0].valor};\\n`\r\n        cod += `${TT2} = sp + 2;\\n`\r\n        cod += `stack[(int)${TT2}] = ${argumentos[1].valor};\\n`\r\n        cod += `SubString_int();\\n`\r\n        cod += `${TT3} = stack[(int)sp];\\n`\r\n        cod += `sp = sp - 1;\\n`\r\n        return {cod:cod,tipo:Tipo.STRING,valor:TT3}\r\n      }\r\n      else if(argumentos[0].tipo == Tipo.NODO)\r\n      {\r\n        var TT1 = C3D.newTemp(); var TT2 = C3D.newTemp(); var TT3 = C3D.newTemp(); var TT4 = C3D.newTemp();\r\n        var TT5 = C3D.newTemp(); var TT6 = C3D.newTemp();\r\n        cod += `${TT1} = spc;\\n`\r\n        cod += `${TT2} = stackConsulta[(int)${TT1}];\\n`\r\n        cod += `${TT2} = ${TT2} + 3;\\n`\r\n        cod += `${TT3} = Indexes[(int)${TT2}];\\n`\r\n        cod += `sp = sp + 1;\\n`\r\n        cod += `${TT4} = sp + 1;\\n`\r\n        cod += `stack[(int)${TT4}] = ${TT3};\\n`\r\n        cod += `${TT5} = sp + 2;\\n`\r\n        cod += `stack[(int)${TT5}] = ${argumentos[1].valor};\\n`\r\n        cod += `SubString_int();\\n`\r\n        cod += `${TT6} = stack[(int)sp];\\n`\r\n        cod += `sp = sp - 1;\\n`\r\n        return {cod:cod,tipo:Tipo.STRING,valor:TT6}\r\n      }\r\n      else if(argumentos[0].tipo == Tipo.ATRIB)\r\n      {\r\n        var TT1 = C3D.newTemp(); var TT2 = C3D.newTemp(); var TT3 = C3D.newTemp(); var TT4 = C3D.newTemp();\r\n        var TT5 = C3D.newTemp(); var TT6 = C3D.newTemp();\r\n        cod += `${TT1} = spc;\\n`\r\n        cod += `${TT2} = stackConsulta[(int)${TT1}];\\n`\r\n        cod += `${TT2} = ${TT2} + 1;\\n`\r\n        cod += `${TT3} = stackAtributos[(int)${TT2}];\\n`\r\n        cod += `sp = sp + 1;\\n`\r\n        cod += `${TT4} = sp + 1;\\n`\r\n        cod += `stack[(int)${TT4}] = ${TT3};\\n`\r\n        cod += `${TT5} = sp + 2;\\n`\r\n        cod += `stack[(int)${TT5}] = ${argumentos[1].valor};\\n`\r\n        cod += `SubString_int();\\n`\r\n        cod += `${TT6} = stack[(int)sp];\\n`\r\n        cod += `sp = sp - 1;\\n`\r\n        return {cod:cod,tipo:Tipo.STRING,valor:TT6}\r\n      }\r\n    }\r\n    else\r\n    {\r\n      cod += argumentos[0].cod;\r\n      cod += argumentos[1].cod;\r\n      cod += argumentos[2].cod;\r\n      C3D.funcBoleanas[C3D.funcIndices.SUBSTR2] = true\r\n      if(argumentos[0].tipo == Tipo.STRING)\r\n      {\r\n        var TT1 = C3D.newTemp(); var TT2 = C3D.newTemp(); var TT3 = C3D.newTemp(); var TT4 = C3D.newTemp();\r\n        cod += `sp = sp + 1;\\n`\r\n        cod += `${TT1} = sp + 1;\\n`\r\n        cod += `stack[(int)${TT1}] = ${argumentos[0].valor};\\n`\r\n        cod += `${TT2} = sp + 2;\\n`\r\n        cod += `stack[(int)${TT2}] = ${argumentos[1].valor};\\n`\r\n        cod += `${TT3} = sp + 3;\\n`\r\n        cod += `stack[(int)${TT3}] = ${argumentos[2].valor};\\n`\r\n        cod += `SubString_int_int();\\n`\r\n        cod += `${TT4} = stack[(int)sp];\\n`\r\n        cod += `sp = sp - 1;\\n`\r\n        return {cod:cod,tipo:Tipo.STRING,valor:TT4}\r\n      }\r\n      else if(argumentos[0].tipo == Tipo.NODO)\r\n      {\r\n        var TT1 = C3D.newTemp(); var TT2 = C3D.newTemp(); var TT3 = C3D.newTemp(); var TT4 = C3D.newTemp();\r\n        var TT5 = C3D.newTemp(); var TT6 = C3D.newTemp(); var TT7 = C3D.newTemp();\r\n        cod += `${TT1} = spc;\\n`\r\n        cod += `${TT2} = stackConsulta[(int)${TT1}];\\n`\r\n        cod += `${TT2} = ${TT2} + 3;\\n`\r\n        cod += `${TT3} = Indexes[(int)${TT2}];\\n`\r\n        cod += `sp = sp + 1;\\n`\r\n        cod += `${TT4} = sp + 1;\\n`\r\n        cod += `stack[(int)${TT4}] = ${TT3};\\n`\r\n        cod += `${TT5} = sp + 2;\\n`\r\n        cod += `stack[(int)${TT5}] = ${argumentos[1].valor};\\n`\r\n        cod += `${TT6} = sp + 3;\\n`\r\n        cod += `stack[(int)${TT6}] = ${argumentos[2].valor};\\n`\r\n        cod += `SubString_int_int();\\n`\r\n        cod += `${TT7} = stack[(int)sp];\\n`\r\n        cod += `sp = sp - 1;\\n`\r\n        return {cod:cod,tipo:Tipo.STRING,valor:TT7}\r\n      }\r\n      else if(argumentos[0].tipo == Tipo.ATRIB)\r\n      {\r\n        var TT1 = C3D.newTemp(); var TT2 = C3D.newTemp(); var TT3 = C3D.newTemp(); var TT4 = C3D.newTemp();\r\n        var TT5 = C3D.newTemp(); var TT6 = C3D.newTemp(); var TT7 = C3D.newTemp();\r\n        cod += `${TT1} = spc;\\n`\r\n        cod += `${TT2} = stackConsulta[(int)${TT1}];\\n`\r\n        cod += `${TT2} = ${TT2} + 1;\\n`\r\n        cod += `${TT3} = stackAtributos[(int)${TT2}];\\n`\r\n        cod += `sp = sp + 1;\\n`\r\n        cod += `${TT4} = sp + 1;\\n`\r\n        cod += `stack[(int)${TT4}] = ${TT3};\\n`\r\n        cod += `${TT5} = sp + 2;\\n`\r\n        cod += `stack[(int)${TT5}] = ${argumentos[1].valor};\\n`\r\n        cod += `${TT6} = sp + 3;\\n`\r\n        cod += `stack[(int)${TT6}] = ${argumentos[2].valor};\\n`\r\n        cod += `SubString_int_int();\\n`\r\n        cod += `${TT7} = stack[(int)sp];\\n`\r\n        cod += `sp = sp - 1;\\n`\r\n        return {cod:cod,tipo:Tipo.STRING,valor:TT7}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n","export class Nodo {\r\n\r\n}\r\n\r\nexport class Instruccion extends Nodo {\r\n    linea = 1\r\n    columna = 1\r\n    constructor(){\r\n        super()\r\n        //this.tieneLabel = false // indica si existen labels en una instrucción\r\n        this.esFuncional  = true // cuando ésta variable es false, no se retorna código tres direcciones\r\n        this.etiquetasInternas  = []\r\n        this.esSaltoConstante = false\r\n    }\r\n}\r\n\r\nexport class Expresion extends Nodo {\r\n    constructor(){\r\n        super()\r\n        this.esCero = false\r\n        this.esSiempreTrue = false\r\n        this.esSiempreFalse = false\r\n    }\r\n}\r\n\r\nexport class CTipo {\r\n    constructor(tipo, esArray ){\r\n        this.tipo = tipo\r\n        this.esArray = esArray\r\n    }\r\n}\r\n\r\nexport const Tipo = {\r\n    \"INTEGER\" : 0,\r\n    \"DECIMAL\" : 1,\r\n    \"STRING\"  : 2,\r\n    \"ID\"      : 3,\r\n    \"BOOLEAN\" : 4,\r\n    \"ATRIB\"   : 5,\r\n    \"ERROR\"   : 6,\r\n    \"SIBLING\" : 7\r\n} ","import { Instruccion } from \"../modelos\";\r\n\r\nexport class Si extends Instruccion{\r\n    constructor(condicion, ira){\r\n        super()\r\n        this.condicion = condicion\r\n        this.ira = ira\r\n        this.iraFalso = false\r\n    }\r\n\r\n    optimizar(){\r\n\r\n        var cond = this.condicion.optimizar()\r\n\r\n        // condición es siempre true\r\n        // condición es siempre false\r\n        // regla 4\r\n        // regla 5\r\n        this.esSaltoConstante = cond.esSiempreTrue | cond.esSiempreFalse\r\n        \r\n        return this   \r\n    }\r\n\r\n    optimizar2(){\r\n\r\n        var cond = this.condicion.optimizar()\r\n\r\n        // condición es siempre true\r\n        // condición es siempre false\r\n        // regla 4\r\n        // regla 5\r\n        this.esSaltoConstante = cond.esSiempreTrue | cond.esSiempreFalse\r\n        \r\n        var retorno = this\r\n        if (cond.esSiempreTrue && this.ira){\r\n            retorno = new Ira(this.ira.etiqueta)\r\n        }else if (cond.esSiempreFalse && this.iraFalso){\r\n            retorno = new Ira(this.iraFalso.etiqueta)\r\n        }\r\n\r\n        return retorno\r\n    }\r\n\r\n    intercambiarEtiquetas(){\r\n        var cond = this.condicion.obtenerNegativa()\r\n        //var iraAux = this.ira\r\n        this.condicion = cond\r\n        this.ira = this.iraFalso\r\n        this.iraFalso = false\r\n        return this\r\n    }\r\n\r\n    tresd(){\r\n        var tcond = this.condicion.tresd()\r\n        var tira = this.ira.tresd()\r\n        var retorno = `if (${tcond}) ${tira}`\r\n        if (this.iraFalso){\r\n            retorno += this.iraFalso.tresd()\r\n        }\r\n        return retorno\r\n    }\r\n}\r\n\r\nexport class Ira extends Instruccion{\r\n    constructor(etiqueta){\r\n        super()\r\n        this.etiqueta = etiqueta\r\n    }\r\n\r\n    optimizar(){\r\n        return this   \r\n    }\r\n\r\n    tresd(){\r\n        return `goto ${this.etiqueta}; \\n`\r\n    }\r\n}\r\n\r\nexport class Etiqueta extends Instruccion{\r\n    constructor(etiqueta){\r\n        super()\r\n        this.etiqueta = etiqueta\r\n    }\r\n\r\n    optimizar(){\r\n        return this   \r\n    }\r\n\r\n    tresd(){\r\n\r\n        return `${this.etiqueta}: \\n`\r\n    }\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XPath = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,11],$V1=[1,49],$V2=[1,51],$V3=[1,52],$V4=[1,19],$V5=[1,20],$V6=[1,14],$V7=[1,26],$V8=[1,27],$V9=[1,69],$Va=[1,28],$Vb=[1,29],$Vc=[1,59],$Vd=[1,61],$Ve=[1,62],$Vf=[1,63],$Vg=[1,64],$Vh=[1,65],$Vi=[1,66],$Vj=[1,67],$Vk=[1,68],$Vl=[1,53],$Vm=[1,54],$Vn=[1,55],$Vo=[1,56],$Vp=[1,57],$Vq=[1,58],$Vr=[1,46],$Vs=[1,47],$Vt=[1,48],$Vu=[1,50],$Vv=[1,72],$Vw=[1,73],$Vx=[1,10,11,23,28],$Vy=[2,12,19,21,26,41,46,63,83,84,86,91,93,104,105,107,108,109,110,111,112,113,117,118,119,120,121,122,131,132,133,135],$Vz=[1,10,11,23,28,39,41,46,49,50,57,60,61,62,65,125],$VA=[1,10,11,23,28,39,41,46,49,50,57,60,61,62,65,67,125],$VB=[1,81],$VC=[1,88],$VD=[1,90],$VE=[1,91],$VF=[1,85],$VG=[1,10,11,23,28,39,41,46,49,50,57,60,61,62,65,67,69,125],$VH=[39,41,46,49,50,62],$VI=[1,96],$VJ=[1,104],$VK=[1,106],$VL=[1,10,11,23,28,39,41,46,49,50,57,60,61,62,65,67,69,72,73,74,75,76,77,79,125],$VM=[1,108],$VN=[1,109],$VO=[1,10,11,23,28,39,41,46,49,50,57,60,61,62,65,67,69,72,73,74,75,76,77,79,81,83,84,125],$VP=[1,110],$VQ=[1,111],$VR=[1,112],$VS=[1,113],$VT=[1,10,11,23,28,39,41,46,49,50,57,60,61,62,65,67,69,72,73,74,75,76,77,79,81,83,84,86,87,88,89,125],$VU=[1,118],$VV=[1,119],$VW=[1,10,11,23,28,39,41,46,49,50,57,60,61,62,65,67,69,72,73,74,75,76,77,79,81,83,84,86,87,88,89,91,93,125],$VX=[1,122],$VY=[1,10,11,23,28,39,41,46,49,50,57,60,61,62,65,67,69,72,73,74,75,76,77,79,81,83,84,86,87,88,89,91,93,124,125],$VZ=[1,126],$V_=[2,118],$V$=[1,132],$V01=[2,19,21,26,41,46,63,83,84,86,91,93,104,105,107,108,109,110,111,112,113,117,118,119,120,121,122,131,132,133,135],$V11=[19,21,26,83,84,86,91,93,104,105,107,108,109,110,111,112,113,117,118,119,120,121,122,131,132,133,135],$V21=[11,39,41,46,49,50,62],$V31=[19,86],$V41=[1,194],$V51=[11,23],$V61=[1,203],$V71=[11,39,41,46,49,50,57,62],$V81=[1,224],$V91=[1,230],$Va1=[1,231];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"XPath\":3,\"Modulo\":4,\"Expr\":5,\"Prolog\":6,\"AnnotatedDecl\":7,\"ExprSingle\":8,\"Separador\":9,\"PIPE\":10,\"COMA\":11,\"RDECLARE\":12,\"FunctionDecl\":13,\"PUNTOCOMA\":14,\"TypeDeclaration\":15,\"RAS\":16,\"RXS\":17,\"DOSPUNTOS\":18,\"NOMBRE\":19,\"RFUNCTION\":20,\"PARENTESISA\":21,\"ParamList\":22,\"PARENTESISC\":23,\"FunctionBody\":24,\"Param\":25,\"DOLAR\":26,\"LLAVEA\":27,\"LLAVEC\":28,\"OrExpr\":29,\"FLWORExpr\":30,\"IfExpr\":31,\"InitialClause\":32,\"IntermediateClauseR\":33,\"ReturnClause\":34,\"IntermediateClause\":35,\"ForClause\":36,\"LetClause\":37,\"WhereClause\":38,\"GroupByClause\":39,\"OrderByClause\":40,\"RFOR\":41,\"ForBinding\":42,\"PositionalVar\":43,\"RIN\":44,\"RAT\":45,\"RLET\":46,\"LetBinding\":47,\"DOSPUNTOSIGUAL\":48,\"RWHERE\":49,\"RORDER\":50,\"RBY\":51,\"OrderSpecList\":52,\"OrderSpec\":53,\"OrderModifier\":54,\"OrderOrder\":55,\"OrderEmpty\":56,\"REMPTY\":57,\"RGREATEST\":58,\"RLEAST\":59,\"RASCENDING\":60,\"RDESCENDING\":61,\"RRETURN\":62,\"RIF\":63,\"RTHEN\":64,\"RELSE\":65,\"AndExpr\":66,\"ROR\":67,\"ComparisonExpr\":68,\"RAND\":69,\"StringConcatExpr\":70,\"GeneralComp\":71,\"IGUAL\":72,\"DIFERENTE\":73,\"MENOR\":74,\"MENORIG\":75,\"MAYOR\":76,\"MAYORIG\":77,\"RangeExpr\":78,\"CONCAT\":79,\"AdditiveExpr\":80,\"RTO\":81,\"MultiplicativeExpr\":82,\"MAS\":83,\"MENOS\":84,\"UnaryExpr\":85,\"POR\":86,\"DIV\":87,\"IDIV\":88,\"MOD\":89,\"PathExpr\":90,\"BARRA\":91,\"RelativePathExpr\":92,\"DOBLEBARRA\":93,\"StepExpr\":94,\"PostfixExpr\":95,\"AxisStep\":96,\"ReverseStep\":97,\"ForwardStep\":98,\"PredicateList\":99,\"Predicate\":100,\"AbbrevForwardStep\":101,\"ForwardAxis\":102,\"NameTest\":103,\"ARROBA\":104,\"RCHILD\":105,\"DOBLEDOSPUNTOS\":106,\"RDESCENDANT\":107,\"RATTRIBUTE\":108,\"RSELF\":109,\"RDESSELF\":110,\"RFOLLOWSIBLING\":111,\"RFOLLOW\":112,\"RNAMESPACE\":113,\"NodeTest\":114,\"AbbrevReverseStep\":115,\"ReverseAxis\":116,\"DOBLEPUNTO\":117,\"RPARENT\":118,\"RANCESTOR\":119,\"RPRECEDSIBLING\":120,\"RPRECED\":121,\"RANCESTORORSELF\":122,\"PrimaryExpr\":123,\"CORA\":124,\"CORB\":125,\"Literal\":126,\"FunctionCall\":127,\"ContextItemExpr\":128,\"ParenthesizedExpr\":129,\"Variable\":130,\"INTEGER\":131,\"DECIMAL\":132,\"CADENA\":133,\"ArgumentList\":134,\"PUNTO\":135,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",10:\"PIPE\",11:\"COMA\",12:\"RDECLARE\",14:\"PUNTOCOMA\",16:\"RAS\",17:\"RXS\",18:\"DOSPUNTOS\",19:\"NOMBRE\",20:\"RFUNCTION\",21:\"PARENTESISA\",23:\"PARENTESISC\",26:\"DOLAR\",27:\"LLAVEA\",28:\"LLAVEC\",39:\"GroupByClause\",41:\"RFOR\",44:\"RIN\",45:\"RAT\",46:\"RLET\",48:\"DOSPUNTOSIGUAL\",49:\"RWHERE\",50:\"RORDER\",51:\"RBY\",57:\"REMPTY\",58:\"RGREATEST\",59:\"RLEAST\",60:\"RASCENDING\",61:\"RDESCENDING\",62:\"RRETURN\",63:\"RIF\",64:\"RTHEN\",65:\"RELSE\",67:\"ROR\",69:\"RAND\",72:\"IGUAL\",73:\"DIFERENTE\",74:\"MENOR\",75:\"MENORIG\",76:\"MAYOR\",77:\"MAYORIG\",79:\"CONCAT\",81:\"RTO\",83:\"MAS\",84:\"MENOS\",86:\"POR\",87:\"DIV\",88:\"IDIV\",89:\"MOD\",91:\"BARRA\",93:\"DOBLEBARRA\",104:\"ARROBA\",105:\"RCHILD\",106:\"DOBLEDOSPUNTOS\",107:\"RDESCENDANT\",108:\"RATTRIBUTE\",109:\"RSELF\",110:\"RDESSELF\",111:\"RFOLLOWSIBLING\",112:\"RFOLLOW\",113:\"RNAMESPACE\",117:\"DOBLEPUNTO\",118:\"RPARENT\",119:\"RANCESTOR\",120:\"RPRECEDSIBLING\",121:\"RPRECED\",122:\"RANCESTORORSELF\",124:\"CORA\",125:\"CORB\",131:\"INTEGER\",132:\"DECIMAL\",133:\"CADENA\",135:\"PUNTO\"},\r\nproductions_: [0,[3,1],[3,1],[4,1],[4,2],[6,1],[6,2],[6,2],[6,2],[5,1],[5,3],[5,3],[5,3],[9,1],[9,1],[7,3],[15,4],[13,9],[13,8],[13,8],[13,7],[22,3],[22,1],[25,3],[25,2],[24,3],[24,2],[8,1],[8,1],[8,1],[30,3],[30,2],[33,1],[33,2],[32,1],[32,1],[35,1],[35,1],[35,1],[35,1],[36,2],[36,3],[42,5],[42,4],[43,3],[37,2],[37,3],[47,4],[38,2],[40,3],[52,3],[52,1],[53,2],[53,1],[54,2],[54,1],[54,1],[56,2],[56,2],[55,1],[55,1],[34,2],[31,8],[29,1],[29,3],[66,1],[66,3],[68,1],[68,3],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[70,1],[70,3],[78,1],[78,3],[80,1],[80,3],[80,3],[82,1],[82,3],[82,3],[82,3],[82,3],[85,1],[85,2],[85,2],[90,2],[90,2],[90,1],[90,1],[92,1],[92,3],[92,3],[94,1],[94,1],[96,1],[96,1],[96,2],[96,2],[99,1],[99,2],[98,1],[98,2],[101,2],[101,1],[102,2],[102,2],[102,2],[102,2],[102,2],[102,2],[102,2],[102,2],[114,1],[103,1],[103,1],[97,1],[97,2],[115,1],[116,2],[116,2],[116,2],[116,2],[116,2],[95,1],[95,2],[100,3],[123,1],[123,1],[123,1],[123,1],[123,1],[130,2],[126,1],[126,1],[126,1],[127,3],[127,4],[127,5],[127,6],[134,1],[134,3],[128,1],[129,2],[129,3]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n \r\n    grafo.generarPadre(1,\"Modulo\")\r\n    grafo.generarHijos(\"Modulo\")\r\n    grafo.generarTexto(\"Xpath.valor = Modulo.valor\") \r\n    grafo.generarPadre(1,\"Xpath\") \r\n    grafo.generarHijos(\"Xpath\") \r\n    var retornoErrores = Object.assign([], ListaErrores);\r\n    ListaErrores = [];\r\n    var retornoGrafo = Object.assign({}, grafo);\r\n    grafo = new grafoCST();\r\n    this.$=new Comando($$[$0].prologo,$$[$0].expr,retornoGrafo.pilaNodos,retornoGrafo.PilaEdges,retornoGrafo.GrahpvizNodo+retornoGrafo.GrahpvizEdges,retornoErrores,retornoGrafo.TablaGramatica);\r\n    return this.$ \r\nbreak;\r\ncase 2:\r\n  \r\n    setLineaColumna(this._$.first_line,this._$.first_column)\r\n    //ListaErrores.push({Error:\"Error sintactico :\"+yytext,tipo:\"Sintactico\",Linea:this._$.first_line,columna:this._$.first_column});\r\n    var retornoErrores = Object.assign([], ListaErrores);\r\n    ListaErrores = [];\r\n    grafo = new grafoCST(); \r\n    this.$=new Comando([],[],[],[],\"\",retornoErrores,[]) \r\n    return this.$ \r\nbreak;\r\ncase 3:\r\n \r\n    this.$ = {prologo:[],expr:$$[$0]}\r\n    grafo.generarPadre(1, \"Expr\");\r\n    grafo.generarHijos(\"Expr\");\r\n    grafo.generarTexto(\"Modulo.valor = Expr.valor\") \r\nbreak;\r\ncase 4:\r\n\r\n    this.$ = {prologo:$$[$0-1],expr:$$[$0]}\r\n    grafo.generarPadre(2, \"Expr\");\r\n    grafo.generarPadre(1, \"Prolog\")\r\n    grafo.generarHijos(\"Prolog\",\"Expr\");\r\n    grafo.generarTexto(\"Modulo.valor = Expr.valor,Modulo.funciones = Prolog.valor\") \r\nbreak;\r\ncase 5:\r\n \r\n    this.$=[$$[$0]] \r\n    grafo.generarPadre(1,\"AnnotatedDecl\")\r\n    grafo.generarHijos(\"AnnotatedDecl\")\r\n    grafo.generarTexto(`Prolog.valor = AnnotatedDecl.valor`) \r\nbreak;\r\ncase 6:\r\n \r\n    this.$=$$[$0-1];\r\n    this.$.push($$[$0]) \r\n    grafo.generarPadre(2,\"AnnotatedDecl\")\r\n    grafo.generarPadre(1,\"Prolog\")\r\n    grafo.generarHijos(\"Prolog\",\"AnnotatedDecl\")\r\n    grafo.generarTexto(`Prolog.valor = Prolog1.valor; Prolog.valor.push(AnnotatedDecl.valor)`) \r\nbreak;\r\ncase 7:\r\n \r\n    this.$=$$[$0-1] \r\n    grafo.generarPadre(1,\"Prolog\");\r\n    grafo.generarHijos(\"Prolog\",\"error\")\r\n    setLineaColumna(this._$.first_line,this._$.first_column)\r\n    grafo.generarTexto(`Prolog.valor = Prolog1.valor;new Error();`) \r\nbreak;\r\ncase 8:\r\n \r\n    this.$=[$$[$0]] \r\n    grafo.generarPadre(2,\"AnnotatedDecl\")\r\n    grafo.generarHijos(\"error\",\"AnnotatedDecl\")\r\n    setLineaColumna(this._$.first_line,this._$.first_column)\r\n    grafo.generarTexto(`Prolog.valor = [AnnotatedDecl.valor];new Error();`) \r\nbreak;\r\ncase 9:\r\n \r\n    this.$=[];this.$.push($$[$0]); \r\n    grafo.generarPadre(1, \"ExprSingle\");\r\n    grafo.generarHijos(\"ExprSingle\");\r\n    grafo.generarTexto(`expr = []; expr.push(ExprSingle.valor);`); \r\nbreak;\r\ncase 10:\r\n \r\n    this.$=$$[$0-2];this.$.push($$[$0]);\r\n    grafo.generarPadre(3, \"ExprSingle\");\r\n    grafo.generarPadre(1, \"Expr\");\r\n    grafo.generarHijos(\"Expr\",$$[$0-1],\"ExprSingle\");\r\n    grafo.generarTexto(`expr.push(ExprSingle.valor);`); \r\nbreak;\r\ncase 11:\r\n \r\n    this.$=$$[$0-2];\r\n    grafo.generarPadre(1, \"Expr\");\r\n    //ListaErrores.push({Error:\"Error sintactico se recupero en:\"+yytext,tipo:\"Sintactico\",Linea:this._$.first_line,columna:this._$.first_column}); \r\n    grafo.generarHijos(\"Expt\",$$[$0-1],\"error\");\r\n    setLineaColumna(this._$.first_line,this._$.first_column)\r\n    grafo.generarTexto(`return expr; new Error();`); \r\nbreak;\r\ncase 12:\r\n \r\n    this.$=[];this.$.push($$[$0]); \r\n    grafo.generarPadre(3, \"ExprSingle\");\r\n    grafo.generarHijos(\"error\",$$[$0-1],\"ExprSingle\");\r\n    setLineaColumna(this._$.first_line,this._$.first_column)\r\n    //ListaErrores.push({Error:\"Error sintactico se recupero en:\"+yytext,tipo:\"Sintactico\",Linea:this._$.first_line,columna:this._$.first_column}); \r\n    grafo.generarPadre(1, \"error\"); grafo.generarHijos(\"error\",$$[$0-1]);\r\n    grafo.generarTexto(`expr = []; new Error();`); \r\nbreak;\r\ncase 13: case 14:\r\n\r\n    this.$=$$[$0]\r\nbreak;\r\ncase 15:\r\n \r\n    this.$=$$[$0-1] \r\n    grafo.generarPadre(2,\"FunctionDecl\")\r\n    grafo.generarHijos($$[$0-2],\"FunctionDecl\",$$[$0])\r\n    grafo.generarTexto(`AnnotatedDecl.valor = FunctionDecl.valor`) \r\nbreak;\r\ncase 16:\r\n \r\n    switch($$[$0])\r\n    {\r\n      case 'decimal':\r\n        this.$=Tipo.DECIMAL;\r\n        break;\r\n      case 'integer':\r\n        this.$=Tipo.INTEGER;\r\n        break;\r\n      case 'string':\r\n        this.$=Tipo.STRING;\r\n        break;\r\n      case 'attribute':\r\n        this.$=Tipo.ATRIB;\r\n        break;\r\n      case 'element':\r\n        this.$=Tipo.NODO;\r\n        break;\r\n      default:\r\n        this.$=Tipo.ERROR;\r\n        break\r\n    }\r\n    grafo.generarHijos($$[$0-3],$$[$0-2],$$[$0-1],$$[$0])\r\n    grafo.generarTexto(`TypeDeclaration.tipo = Decimal`) \r\nbreak;\r\ncase 17:\r\n \r\n    this.$=CrearFuncion($$[$0-5],$$[$0-3],$$[$0-1],$$[$0])\r\n    grafo.generarPadre(9,\"FunctionBody\")\r\n    grafo.generarPadre(8,\"TypeDeclaration\") \r\n    grafo.generarPadre(6,\"ParamList\")\r\n    grafo.generarHijos($$[$0-8],$$[$0-7],$$[$0-6],$$[$0-5],$$[$0-4],\"ParamList\",$$[$0-2],\"TypeDeclaration\",\"FunctionBody\") \r\n    grafo.generarTexto(`FunctionDecl.valor = new Function(${$$[$0-5]},ParamList.valor,TypeDeclaration.tipo,FunctionBody.valor)`) \r\nbreak;\r\ncase 18:\r\n \r\n    this.$=CrearFuncion($$[$0-4],[],$$[$0-1],$$[$0])\r\n    grafo.generarPadre(8,\"FunctionBody\")\r\n    grafo.generarPadre(7,\"TypeDeclaration\")\r\n    grafo.generarHijos($$[$0-7],$$[$0-6],$$[$0-5],$$[$0-4],$$[$0-3],$$[$0-2],\"TypeDeclaration\",\"FunctionBody\")\r\n    grafo.generarTexto(`FunctionDecl.valor = new Function(${$$[$0-4]},[],TypeDeclaration.tipo,FunctionBody.valor)`) \r\nbreak;\r\ncase 19:\r\n \r\n    this.$=CrearFuncion($$[$0-4],$$[$0-2],null,$$[$0])\r\n    grafo.generarPadre(8,\"FunctionBody\")\r\n    grafo.generarPadre(6,\"ParamList\")\r\n    grafo.generarHijos($$[$0-7],$$[$0-6],$$[$0-5],$$[$0-4],$$[$0-3],\"ParamList\",$$[$0-1],\"FunctionBody\")\r\n    grafo.generarTexto(`FunctionDecl.valor = new Function(${$$[$0-4]},ParamList.valor,null,FunctionBody.valor)`) \r\nbreak;\r\ncase 20:\r\n \r\n    this.$=CrearFuncion($$[$0-3],[],null,$$[$0])\r\n    grafo.generarPadre(7,\"FunctionBody\")\r\n    grafo.generarHijos($$[$0-6],$$[$0-5],$$[$0-4],$$[$0-3],$$[$0-2],$$[$0-1],\"FunctionBody\")\r\n    grafo.generarTexto(`FunctionDecl.valor = new Function(${$$[$0-3]},[],null,FunctionBody.valor)`) \r\nbreak;\r\ncase 21:\r\n \r\n    this.$=$$[$0-2];\r\n    this.$.push($$[$0])\r\n    grafo.generarPadre(3,\"Param\")\r\n    grafo.generarPadre(1,\"ParamList\")\r\n    grafo.generarHijos(\"ParamList\",$$[$0-2],\"Param\")\r\n    grafo.generarTexto(`ParamList.valor = ParamList1.valor; ParamList.valor.push(Param.valor)`) \r\nbreak;\r\ncase 22:\r\n \r\n    this.$=[$$[$0]]\r\n    grafo.generarPadre(1,\"Param\")\r\n    grafo.generarHijos(\"Param\")\r\n    grafo.generarTexto(`ParamList.valor = [Param.valor];`)  \r\nbreak;\r\ncase 23:\r\n \r\n    this.$={nombre:$$[$0-2]+$$[$0-1], type:$$[$0]}\r\n    grafo.generarPadre(3,\"TypeDeclaration\")\r\n    grafo.generarHijos($$[$0-2],$$[$0-1],\"TypeDeclaration\")\r\n    grafo.generarTexto(`Param.Valor = new Declaracion(${$$[$0-2]},TypeDeclaration.tipo`) \r\nbreak;\r\ncase 24:\r\n \r\n    this.$={nombre:$$[$0-1]+$$[$0], type:null} \r\n    grafo.generarHijos($$[$0-1],$$[$0])\r\n    grafo.generarTexto(`Param.Valor = new Declaracion(${$$[$0-1]},null`) \r\nbreak;\r\ncase 25:\r\n \r\n    this.$=$$[$0-1] \r\n    grafo.generarPadre(2,\"Expr\")\r\n    grafo.generarHijos($$[$0-2],\"Expr\",$$[$0]) \r\n    grafo.generarTexto(`FunctionBody.valor = Expr.valor`) \r\nbreak;\r\ncase 26:\r\n \r\n    this.$=[]\r\n    grafo.generarHijos($$[$0-1],$$[$0]) \r\n    grafo.generarTexto(`FunctionBody.valor = []`) \r\nbreak;\r\ncase 27:\r\n \r\n    this.$=$$[$0]; \r\n    grafo.generarPadre(1, \"OrExpr\");\r\n    grafo.generarHijos(\"OrExpr\");\r\n    grafo.generarTexto(`ExprSingle.valor = OrExpr.valor`); \r\nbreak;\r\ncase 28:\r\n \r\n      this.$=$$[$0];\r\n      grafo.generarPadre(1,\"FLWORExpr\");\r\n      grafo.generarHijos(\"FLWORExpr\");\r\n      grafo.generarTexto(`ExprSingle.valor=FLWORExpr.valor`) \r\n    \r\nbreak;\r\ncase 29:\r\n\r\n    this.$=$$[$0];\r\n    grafo.generarPadre(1,\"IfExpr\")\r\n    grafo.generarHijos(\"IfExpr\")\r\n    grafo.generarTexto(`ExprSingle.valor=IfExpr.valor`)\r\nbreak;\r\ncase 30:\r\n\r\n    // this.$=$$[$0-2].exp;\r\n    // this.$.expReturn=$$[$0];\r\n    // this.$.intermediate=$$[$0-1];\r\n    this.$ = new Flower(concat($$[$0-2],$$[$0-1]),$$[$0])\r\n    grafo.generarPadre(3,\"ReturnClause\")\r\n    grafo.generarPadre(2,\"IntermediateClauseR\")\r\n    grafo.generarPadre(1,\"InitialClause\")\r\n    grafo.generarHijos(\"InitialClause\",\"IntermediateClauseR\",\"ReturnClause\");\r\n    grafo.generarTexto(`FLWORExpr.valor=InitialClause.valor;FLWORExpr.retorno=ReturnClause.valor;FLWORExpr.intermediate=IntermediateClauseR.valor`) \r\nbreak;\r\ncase 31:\r\n\r\n    // this.$=$$[$0-1].exp;\r\n    // this.$.expReturn=$$[$0];\r\n    this.$ = new Flower([$$[$0-1]],$$[$0])\r\n    grafo.generarPadre(2,\"ReturnClause\");\r\n    grafo.generarPadre(1,\"InitialClause\");\r\n    grafo.generarHijos(\"InitialClause\",\"ReturnClause\");\r\n    grafo.generarTexto(`FLWORExpr.valor=InitialClause.valor;FLWORExpr.retorno=ReturnClause.valor`) \r\nbreak;\r\ncase 32:\r\n \r\n    this.$=[$$[$0]]\r\n    grafo.generarPadre(1,\"IntermediateClause\");\r\n    grafo.generarHijos(\"IntermediateClause\");\r\n    grafo.generarTexto(\"IntermediateClauseR.valor = [IntermediateClause.valor]\") \r\nbreak;\r\ncase 33:\r\n \r\n    this.$=$$[$0-1]; \r\n    this.$.push($$[$0]);\r\n    grafo.generarPadre(2,\"IntermediateClause\")\r\n    grafo.generarPadre(1,\"IntermediateClauseR\")\r\n    grafo.generarHijos(\"IntermediateClauseR.valor=IntermediateClauseR1.valor;IntermediateClauseR.valor.push(IntermediateClause.valor)\")\r\n    grafo.generarTexto(\"IntermediateClauseR.valor = IntermediateClauseR1.valor; IntermediateClauseR.valor.push(IntermediateClause.valor)\") \r\nbreak;\r\ncase 34:\r\n  \r\n    this.$=$$[$0]\r\n    grafo.generarPadre(1,\"ForClause\")\r\n    grafo.generarHijos(\"ForClause\")\r\n    grafo.generarTexto(`InitialClouse.valor=ForClause.valor`) \r\nbreak;\r\ncase 35:\r\n \r\n    this.$=$$[$0];\r\n    grafo.generarPadre(1,\"LetClause\");\r\n    grafo.generarHijos(\"LetClause\");\r\n    grafo.generarTexto(`InitialClouse.valor=LetClause.valor`) \r\nbreak;\r\ncase 36:\r\n\r\n    this.$=$$[$0];\r\n    grafo.generarPadre(1,\"InitialClause\");\r\n    grafo.generarHijos(\"InitialClause\")\r\n    grafo.generarTexto(\"IntermediateClause.valor=InitialClause.valor\") \r\nbreak;\r\ncase 37:\r\n\r\n    this.$=$$[$0];\r\n    grafo.generarPadre(1,\"WhereClause\");\r\n    grafo.generarHijos(\"WhereClause\")\r\n    grafo.generarTexto(\"IntermediateClause.valor=WhereClause.valor\") \r\nbreak;\r\ncase 38:\r\n\r\n    this.$=$$[$0];\r\n    grafo.generarPadre(1,\"GroupByClause\");\r\n    grafo.generarHijos(\"GroupByClause\")\r\n    grafo.generarTexto(\"IntermediateClause.valor=GroupByClause.valor\") \r\nbreak;\r\ncase 39:\r\n\r\n    this.$=$$[$0];\r\n    grafo.generarPadre(1,\"OrderByClause\");\r\n    grafo.generarHijos(\"OrderByClause\")\r\n    grafo.generarTexto(\"IntermediateClause.valor=OrderByClause.valor\") \r\nbreak;\r\ncase 40:\r\n\r\n    this.$={name:'For',exp:[$$[$0]] }\r\n    grafo.generarPadre(2,\"ForBinding\")\r\n    grafo.generarHijos($$[$0-1],\"ForBinding\")\r\n    grafo.generarTexto(`ForClause.valor = new For();ForClouse.valor.declaraciones.push(ForBinding.valor)`) \r\nbreak;\r\ncase 41:\r\n\r\n    this.$ = $$[$0-2]\r\n    this.$.exp.push($$[$0])\r\n    grafo.generarPadre(3,\"ForBinding\")\r\n    grafo.generarPadre(1,\"ForClouse\")\r\n    grafo.generarHijos(\"ForClause\",$$[$0-1],\"ForBinding\")\r\n    grafo.generarTexto(\"ForClause.valor.declaraciones.push(ForBiding.valor)\") \r\nbreak;\r\ncase 42:\r\n\r\n    this.$={name:$$[$0-4]+$$[$0-3],posicion:$$[$0-2],exp:$$[$0]};\r\n    grafo.generarPadre(5,\"ExprSingle\")\r\n    grafo.generarPadre(3,\"PositionalVar\")\r\n    grafo.generarHijos($$[$0-4],$$[$0-3],\"PositionalVar\",$$[$0-1],\"ExprSingle\")\r\n    grafo.generarTexto(`ForBinding.valor = new Declaracion(${$$[$0-4]+$$[$0-3],$$[$0-2],$$[$0]})`)\r\nbreak;\r\ncase 43:\r\n\r\n    this.$={name:$$[$0-3]+$$[$0-2],posicion:'',exp:$$[$0]};\r\n    grafo.generarPadre(4,\"ExprSingle\")\r\n    grafo.generarHijos($$[$0-3],$$[$0-2],$$[$0-1],\"ExprSingle\")\r\n    grafo.generarTexto(`ForBinding.valor = new Declaracion(${$$[$0-3]+$$[$0-2],'',$$[$0]})`)\r\nbreak;\r\ncase 44:\r\n\r\n    this.$ = ($$[$0-1]+$$[$0]);\r\n    grafo.generarHijos($$[$0-2],$$[$0-1],$$[$0]);\r\n    grafo.generarTexto(`PositionalVar.varlor=$+NOMBRE.val`)\r\nbreak;\r\ncase 45:\r\n \r\n    this.$={ name:'Let', exp:[$$[$0]] };\r\n    grafo.generarPadre(2,\"LetBinding\");\r\n    grafo.generarHijos($$[$0-1],\"LetBinding\");\r\n    grafo.generarTexto(`LetClouse.valor=[];LetClouse.valor.push(LetBinding.valor)`) \r\nbreak;\r\ncase 46:\r\n \r\n    this.$=$$[$0-2];\r\n    this.$.exp.push($$[$0]);\r\n    grafo.generarPadre(3,\"LetBinding\");\r\n    grafo.generarPadre(1,\"LetClause\");\r\n    grafo.generarHijos(\"LetClause\",$$[$0-1],\"LetBinding\");\r\n    grafo.generarTexto(`LetClause1.valor.push(LetBinding.valor);LetClouse.valor=LetClause1.valor`) \r\nbreak;\r\ncase 47:\r\n \r\n    this.$={name:$$[$0-3]+$$[$0-2],exp:$$[$0]};\r\n    grafo.generarPadre(4,\"ExprSingle\");\r\n    grafo.generarHijos($$[$0-3],$$[$0-2],$$[$0-1],\"ExprSingle\");\r\n    grafo.generarTexto(`LetBinding.nombre=${$$[$0-3]};LetBinding.valor=ExptrSingle.valor`); \r\nbreak;\r\ncase 48:\r\n \r\n    this.$={name:'Where',exp:$$[$0]} \r\n    grafo.generarPadre(2,\"ExprSingle\")\r\n    grafo.generarHijos($$[$0-1],\"ExprSingle\")\r\n    grafo.generarTexto(`WhereClause.valor = ExprSingle.valor`)\r\nbreak;\r\ncase 49:\r\n \r\n    this.$={name:'Order',exp:$$[$0]} \r\n    grafo.generarPadre(3,\"OrderSpecList\")\r\n    grafo.generarHijos($$[$0-2],$$[$0-1],\"OrderSpecList\") \r\n    grafo.generarTexto(`OrderByClause.valor = OrderSpecList.valor`)\r\nbreak;\r\ncase 50:\r\n\r\n    this.$=$$[$0-2];this.$.push($$[$0])\r\n    grafo.generarPadre(3,\"OrderSpec\")\r\n    grafo.generarPadre(1,\"OrderSpecList\")\r\n    grafo.generarHijos(\"OrderSpecList\",$$[$0-2],\"OrderSpec\")\r\n    grafo.generarTexto(\"OrderSpecList.valor=OrderSpecList1.valor;OrderSpecList.valor.push(OrderSpec.valor)\")\r\nbreak;\r\ncase 51:\r\n\r\n    this.$=[$$[$0]]\r\n    grafo.generarPadre(1,\"OrderSpec\")\r\n    grafo.generarHijos(\"OrderSpec\")\r\n    grafo.generarTexto(\"OrderSpecList.valor=[OrderSpec.valor];\")\r\nbreak;\r\ncase 52:\r\n \r\n    this.$={exp:$$[$0-1],mode:$$[$0]} \r\n    grafo.generarPadre(2,\"OrderModifier\")\r\n    grafo.generarPadre(1,\"ExprSingle\")\r\n    grafo.generarHijos(\"ExprSingle\",\"OrderModifier\")\r\n    grafo.generarTexto(\"OrderSpec.valor=OrderModifier.valor;\")\r\nbreak;\r\ncase 53:\r\n \r\n    this.$={exp:$$[$0],mode:{order:'asc',empty:'g'}} \r\n    grafo.generarPadre(1,\"ExprSingle\")\r\n    grafo.generarHijos(\"ExprSingle\")\r\n    grafo.generarTexto(\"OrderSpec.valor = ExprSingle.valor;\")\r\nbreak;\r\ncase 54:\r\n \r\n    this.$={order:$$[$0-1].order,empty:$$[$0].empty} \r\n    grafo.generarPadre(2,\"OrderEmpty\")\r\n    grafo.generarPadre(1,\"OrderOrder\")\r\n    grafo.generarHijos(\"OrderOrder\",\"OrderEmpty\")\r\n    grafo.generarTexto(\"OrderModifier.order=OrderOrder.valor;OrderModifier.empty=OrderEmpty.valor;\") \r\nbreak;\r\ncase 55:\r\n \r\n    this.$=$$[$0]\r\n    grafo.generarPadre(1,\"OrderEmpty\")\r\n    grafo.generarHijos(\"OrderEmpty\")\r\n    grafo.generarTexto(\"OrderModifier.order='asc';OrderModifier.empty=OrderEmpty.valor;\") \r\nbreak;\r\ncase 56:\r\n \r\n    this.$=$$[$0]\r\n    grafo.generarPadre(1,\"OrderOrder\")\r\n    grafo.generarHijos(\"OrderOrder\")\r\n    grafo.generarTexto(\"OrderModifier.order=OrderOrder.valor;OrderModifier.empty='g';\") \r\nbreak;\r\ncase 57:\r\n \r\n    this.$={order:'asc',empty:'g'}\r\n    grafo.generarHijos($$[$0-1],$$[$0]) \r\n    grafo.generarTexto(`OrderEmpty.empty=${$$[$0]}`)\r\nbreak;\r\ncase 58:\r\n \r\n    this.$={order:'asc',empty:'l'} \r\n    grafo.generarHijos($$[$0-1],$$[$0]) \r\n    grafo.generarTexto(`OrderEmpty.empty=${$$[$0]}`)\r\nbreak;\r\ncase 59:\r\n \r\n    this.$={order:'asc',empty:'g'}\r\n    grafo.generarHijos($$[$0])\r\n    grafo.generarTexto(`OrderOrder.order = ${$$[$0]}`) \r\nbreak;\r\ncase 60:\r\n \r\n    this.$={order:'desc',empty:'g'} \r\n    grafo.generarHijos($$[$0])\r\n    grafo.generarTexto(`OrderOrder.order = ${$$[$0]}`) \r\nbreak;\r\ncase 61:\r\n \r\n    this.$=$$[$0]; \r\n    grafo.generarPadre(2,\"ExprSingle\")\r\n    grafo.generarHijos($$[$0-1],\"ExprSingle\")\r\n    grafo.generarTexto(\"ReturnClause.valor=ExprSingle.valor\")\r\nbreak;\r\ncase 62:\r\n\r\n    this.$=new IfThenElse($$[$0-5],$$[$0-2],$$[$0]) \r\n    grafo.generarPadre(8,\"ExprSingle\")\r\n    grafo.generarPadre(6,\"ExprSingle\")\r\n    grafo.generarPadre(3,\"Expr\")\r\n    grafo.generarHijos($$[$0-7],$$[$0-6],\"Expr\",$$[$0-4],$$[$0-3],\"ExprSingle\",$$[$0-1],\"ExprSingle\")\r\n    grafo.generarTexto(`IfExpr.valor = new IF(Expr.valor,ExprSingle1.valor,ExprSingle2.valor)`)\r\nbreak;\r\ncase 63:\r\n \r\n    this.$ = $$[$0]; grafo.generarPadre(1,\"AndExpr\");\r\n    grafo.generarHijos(\"AndExpr\");\r\n    grafo.generarTexto(`OrExpr.valor = AndExpr.valor`); \r\nbreak;\r\ncase 64:\r\n \r\n    this.$ = new Logical($$[$0-2],$$[$0-1],$$[$0]); grafo.generarPadre(3, \"AndExpr\");\r\n    grafo.generarPadre(1, \"OrExpr\");\r\n    grafo.generarHijos(\"OrExpr\",$$[$0-1],\"AndExpr\");\r\n    grafo.generarTexto(`OrExpr.valor = new Logical(OrExpr.valor,${$$[$0-1]},AndExpr.valor);`); \r\nbreak;\r\ncase 65:\r\n \r\n    this.$ = $$[$0]; grafo.generarPadre(1, \"ComparisonExpr\");\r\n    grafo.generarHijos(\"ComparisonExpr\");\r\n    grafo.generarTexto(`AndExpr.valor = ComparisonExpr.valor`); \r\nbreak;\r\ncase 66:\r\n \r\n    this.$ = new Logical($$[$0-2],$$[$0-1],$$[$0]); grafo.generarPadre(3, \"ComparisonExpr\");\r\n    grafo.generarPadre(1, \"AndExpr\");\r\n    grafo.generarHijos(\"AndExpr\",$$[$0-1],\"ComparisonExpr\");\r\n    grafo.generarTexto(`AndExpr.valor = new Logical(AndExpr.valor,${$$[$0-1]},ComparisonExpr.valor);`); \r\nbreak;\r\ncase 67:\r\n \r\n    this.$=$$[$0]; \r\n    grafo.generarPadre(1, \"StringConcatExpr\");\r\n    grafo.generarHijos(\"StringConcatExpr\");\r\n    grafo.generarTexto(`ComparisonExpr.valor = StringConcatExpr.valor`); \r\nbreak;\r\ncase 68:\r\n \r\n    this.$ = new ComparisonExp($$[$0-2],$$[$0-1],$$[$0]); \r\n    grafo.generarPadre(3, \"StringConcatExpr\");\r\n    grafo.generarPadre(2, \"GeneralComp\");\r\n    grafo.generarPadre(1, \"StringConcatExpr\");\r\n    grafo.generarHijos(\"StringConcatExpr\",\"GeneralComp\",\"StringConcatExpr\");\r\n    grafo.generarTexto(`ComparisonExpr.valor = new ComparisonExp(StringConcatExpr.valor, GeneralComp.valor, StringConcatExpr.valor)`); \r\nbreak;\r\ncase 69: case 70: case 71: case 72: case 73: case 74:\r\n \r\n    this.$ = $$[$0]; \r\n    grafo.generarHijos($$[$0]); \r\n    grafo.generarTexto(`GeneralComp.valor = ${$$[$0]}`); \r\nbreak;\r\ncase 75:\r\n\r\n    this.$=$$[$0];\r\n    grafo.generarPadre(1, \"RangeExpr\");\r\n    grafo.generarHijos(\"RangeExpr\");\r\n    grafo.generarTexto(`StringConcatExpr.valor = RangeExpr.valor`); \r\nbreak;\r\ncase 76:\r\n\r\n    this.$=new Concat($$[$0-2],$$[$0]);\r\n    grafo.generarPadre(3,\"RangeExpr\")\r\n    grafo.generarPadre(1,\"StringConcatExpr\")\r\n    grafo.generarHijos(\"StringConcatExpr\",$$[$0-2],\"RangeExpr\")\r\n    grafo.generarTexto(`StringConcatExpr.Valor = new CONCAT(StringConcatExpr1.valor,RangeExpr.valor`) \r\nbreak;\r\ncase 77:\r\n \r\n    this.$=$$[$0]; \r\n    grafo.generarPadre(1, \"AdditiveExpr\");\r\n    grafo.generarHijos(\"AdditiveExpr\");\r\n    grafo.generarTexto(`ComparisonExpr.valor = AdditiveExpr.valor`);\r\n    \r\nbreak;\r\ncase 78:\r\n\r\n    this.$=new RangeExp($$[$0-2],$$[$0]);\r\n    grafo.generarPadre(3,\"AdditiveExpr\")\r\n    grafo.generarPadre(1,\"AdditiveExpr\")\r\n    grafo.generarHijos(\"AdditiveExpr\",$$[$0-2],\"AdditiveExpr\")\r\n    grafo.generarTexto(`RangeExp.Valor = new Range(AdditiveExpr.valor,AdditiveExpr1.valor`)\r\nbreak;\r\ncase 79:\r\n \r\n    this.$=$$[$0]; grafo.generarPadre(1, \"MultiplicativeExpr\"); grafo.generarHijos(\"MultiplicativeExpr\");\r\n    grafo.generarTexto(`AdditiveExpr.valor = MultiplicativeExpr.valor`); \r\nbreak;\r\ncase 80: case 81:\r\n \r\n    this.$= new Arithmetic($$[$0-2],$$[$0-1],$$[$0]); grafo.generarPadre(3, \"MultiplicativeExpr\");\r\n    grafo.generarPadre(1, \"AdditiveExpr\");\r\n    grafo.generarHijos(\"AdditiveExpr\",$$[$0-1],\"MultiplicativeExpr\");\r\n    grafo.generarTexto(`AdditiveExpr.valor = new Arithmetic(AdditiveExpr.valor, ${$$[$0-1]}, MultiplicativeExpr.valor);`); \r\nbreak;\r\ncase 82:\r\n \r\n    this.$=$$[$0]; \r\n    grafo.generarPadre(1, \"UnaryExpr\");\r\n    grafo.generarHijos(\"UnaryExpr\");\r\n    grafo.generarTexto(`MultiplicativeExpr.valor = UnaryExpr.valor;`); \r\nbreak;\r\ncase 83:\r\n \r\n    this.$= new Arithmetic($$[$0-2],$$[$0-1],$$[$0]);\r\n    grafo.generarPadre(3, \"UnaryExpr\");\r\n    grafo.generarPadre(1, \"MultiplicativeExpr\");\r\n    grafo.generarHijos(\"MultiplicativeExpr\",$$[$0-1],\"UnaryExpr\");\r\n    grafo.generarTexto(`MultiplicativeExpr.valor = new Arithmetic(MultiplicativeExpr.valor,${$$[$0-1]},UnaryExpr.valor);`); \r\nbreak;\r\ncase 84: case 85: case 86:\r\n \r\n    this.$= new Arithmetic($$[$0-2],$$[$0-1],$$[$0]); \r\n    grafo.generarPadre(3, \"UnaryExpr\");\r\n    grafo.generarPadre(1, \"MultiplicativeExpr\");\r\n    grafo.generarHijos(\"MultiplicativeExpr\",$$[$0-1],\"UnaryExpr\");\r\n    grafo.generarTexto(`MultiplicativeExpr.valor = new Arithmetic(MultiplicativeExpr.valor,${$$[$0-1]},UnaryExpr.valor);`); \r\nbreak;\r\ncase 87:\r\n \r\n    this.$=$$[$0]; grafo.generarPadre(1, \"PathExpr\");\r\n    grafo.generarHijos(\"PathExpr\");\r\n    grafo.generarTexto(`UnaryExpr.valor = PathExpr.valor;`); \r\nbreak;\r\ncase 88:\r\n \r\n    this.$=new Unary($$[$0-1], $$[$0]); grafo.generarPadre(2, \"UnaryExpr\");\r\n    grafo.generarHijos($$[$0-1],\"UnaryExp\");\r\n    grafo.generarTexto(`UnaryExp.valor = new Unary(${$$[$0-1]},UnaryExpr.valor);`); \r\nbreak;\r\ncase 89:\r\n \r\n    this.$=new Unary($$[$0-1], $$[$0]);\r\n    grafo.generarPadre(2, \"UnaryExpr\");\r\n    grafo.generarHijos($$[$0-1],\"UnaryExp\");\r\n    grafo.generarTexto(`UnaryExp.valor = new Unary(${$$[$0-1]},UnaryExpr.valor);`); \r\nbreak;\r\ncase 90:\r\n \r\n    $$[$0][0].tipo=TipoPath.ABS;\r\n    this.$=new PathExp($$[$0]); \r\n    grafo.generarPadre(2, \"RelativePathExpr\");\r\n    grafo.generarHijos($$[$0-1],\"RelativePathExpr\");\r\n    grafo.generarTexto(`path[0].tipo = Absoluto; PathExpr.valor = new PathExp(path.valor);`); \r\nbreak;\r\ncase 91:\r\n \r\n    $$[$0][0].tipo=TipoPath.REL;\r\n    this.$=new PathExp($$[$0]);\r\n    grafo.generarPadre(2, \"RelativePathExpr\");\r\n    grafo.generarHijos($$[$0-1],\"RelativePathExpr\");\r\n    grafo.generarTexto(`path[0].tipo = Relativo; PathExpr.valor = new PathExp(path.valor);`); \r\nbreak;\r\ncase 92:\r\n \r\n    this.$=new PathExp($$[$0]); \r\n    grafo.generarPadre(1, \"RelativePathExpr\");\r\n    grafo.generarHijos(\"RelativePathExpr\");\r\n    grafo.generarTexto(`PathExpr.valor = new PathExp(path.valor);`); \r\nbreak;\r\ncase 93:\r\n \r\n    this.$=new PathExp([]);\r\n    grafo.generarHijos($$[$0]);\r\n    grafo.generarTexto(`PathExpr.valor = new PathExp();`); \r\nbreak;\r\ncase 94:\r\n \r\n    this.$ = []; this.$.push($$[$0]); grafo.generarPadre(1, \"StepExpr\");\r\n    grafo.generarHijos(\"StepExpr\");\r\n    grafo.generarTexto(`path = []; path.push(StepExpr.valor);`); \r\nbreak;\r\ncase 95:\r\n \r\n    this.$ = $$[$0-2]; $$[$0].tipo=TipoPath.ABS; this.$.push($$[$0]); \r\n    grafo.generarPadre(3, \"StepExpr\");\r\n    grafo.generarPadre(1, \"RelativePathExpr\");\r\n    grafo.generarHijos(\"RelativePathExpr\",$$[$0-1],\"StepExpr\");\r\n    grafo.generarTexto(`StepExpr.tipo = Absoluto; path.push(StepExpr.valor); `); \r\nbreak;\r\ncase 96:\r\n \r\n    this.$ = $$[$0-2]; $$[$0].tipo=TipoPath.REL; this.$.push($$[$0]);\r\n    grafo.generarPadre(3,\"StepExpr\");\r\n    grafo.generarPadre(1, \"RelativePathExpr\");\r\n    grafo.generarHijos(\"RelativePathExpr\",$$[$0-1],\"StepExpr\");\r\n    grafo.generarTexto(`StepExpr.tipo = Relativo; path.push(StepExpr.valor);`); \r\nbreak;\r\ncase 97:\r\n \r\n    this.$=$$[$0]; \r\n    grafo.generarPadre(1, \"PostfixExpr\"); \r\n    grafo.generarHijos(\"PostfixExpr\"); \r\n    grafo.generarTexto(`StepExpr.valor = PostfixExpr.valor;`); \r\nbreak;\r\ncase 98:\r\n \r\n    this.$=$$[$0]; \r\n    grafo.generarPadre(1, \"AxisStep\"); \r\n    grafo.generarHijos(\"AxisStep\"); \r\n    grafo.generarTexto(`StepExpr.valor = AxisStep.valor`);  \r\nbreak;\r\ncase 99:\r\n \r\n    this.$=$$[$0]; \r\n    grafo.generarPadre(1, \"ReverseStep\");\r\n    grafo.generarHijos(\"ReverseStep\"); \r\n    grafo.generarTexto(`AxisStep.valor = ReverseStep.valor;`); \r\nbreak;\r\ncase 100:\r\n \r\n    this.$=$$[$0]; \r\n    grafo.generarPadre(1, \"ForwardStep\");\r\n    grafo.generarHijos(\"ForwardStep\"); \r\n    grafo.generarTexto(`AxisStep.valor = ForwardStep.valor;`);\r\nbreak;\r\ncase 101:\r\n \r\n    this.$=$$[$0-1]; \r\n    this.$.predicado=$$[$0]; \r\n    grafo.generarPadre(2, \"PredicateList\");\r\n    grafo.generarPadre(1, \"ReverseStep\"); \r\n    grafo.generarHijos(\"ReverseStep\",\"PredicateList\");\r\n    grafo.generarTexto(`ReverseStep.predicado = PredicateList.valor; AxisStep.valor = ReverseStep;`); \r\nbreak;\r\ncase 102:\r\n \r\n    this.$=$$[$0-1]; \r\n    this.$.predicado=$$[$0]; \r\n    grafo.generarPadre(2, \"PredicateList\");\r\n    grafo.generarPadre(1, \"ForwardStep\"); \r\n    grafo.generarHijos(\"ForwardStep\",\"PredicateList\");\r\n    grafo.generarTexto(`ForwardStep.predicado = PredicateList.valor; AxisStep.valor = ForwardStep;`); \r\nbreak;\r\ncase 103:\r\n \r\n    this.$=[];this.$.push($$[$0]);\r\n    grafo.generarPadre(1, \"Predicate\");\r\n    grafo.generarHijos(\"Predicate\");\r\n    grafo.generarTexto(`predicateList = []; predicateList.push(Predicate.valor);`); \r\nbreak;\r\ncase 104:\r\n \r\n    this.$=$$[$0-1];this.$.push($$[$0]); grafo.generarPadre(2, \"Predicate\");\r\n    grafo.generarPadre(1, \"PredicateList\");\r\n    grafo.generarHijos(\"PredicateList\",\"Predicate\");\r\n    grafo.generarTexto(`predicateList.push(Predicate.valor);`); \r\nbreak;\r\ncase 105:\r\n \r\n    this.$=$$[$0]; grafo.generarPadre(1, \"AbbrevForwardStep\");\r\n    grafo.generarHijos(\"AbbrevForwardStep\");\r\n    grafo.generarTexto(`ForwardStep.valor = AbbrevForwardStep.valor`); \r\nbreak;\r\ncase 106:\r\n \r\n    this.$=$$[$0-1]; this.$.nombre=$$[$0]; grafo.generarPadre(2, \"NameTest\");\r\n    grafo.generarPadre(1, \"ForwardAxis\");\r\n    grafo.generarHijos(\"ForwardAxis\",\"NameTest\");\r\n    grafo.generarTexto(`ForwardAxis.nombre = NameTest.valor; ForwardStep.valor = ForwardAxis.valor`); \r\nbreak;\r\ncase 107:\r\n \r\n    this.$=new Atributo($$[$0],[],TipoPath.ABS);\r\n    grafo.generarPadre(2, \"NameTest\");\r\n    grafo.generarHijos($$[$0-1],\"NameTest\");\r\n    grafo.generarTexto(`AbbrevForwardStep.valor = new Atributo(NameTest.valor);`); \r\nbreak;\r\ncase 108:\r\n \r\n    this.$=new Camino($$[$0],[],TipoPath.ABS);\r\n    grafo.generarPadre(1, \"NameTest\");\r\n    grafo.generarHijos(\"NameTest\");\r\n    grafo.generarTexto(`AbbrevForwardStep.valor = new Camino(NameTest.valor);`); \r\nbreak;\r\ncase 109:\r\n \r\n    this.$=new Child(null,[],TipoPath.ABS); \r\n    grafo.generarHijos($$[$0-1],$$[$0]); \r\n    grafo.generarTexto(`ForwardAxis.valor = new Child();`); \r\nbreak;\r\ncase 110:\r\n \r\n    this.$=new Descendant(null,[],TipoPath.ABS); \r\n    grafo.generarHijos($$[$0-1],$$[$0]); \r\n    grafo.generarTexto(`ForwardAxis.valor = new Descendant();`); \r\nbreak;\r\ncase 111:\r\n \r\n    this.$=new Attribute(null,[],TipoPath.ABS); \r\n    grafo.generarHijos($$[$0-1],$$[$0]); \r\n    grafo.generarTexto(`ForwardAxis.valor = new Attribute();`); \r\nbreak;\r\ncase 112:\r\n \r\n    this.$=new Self(null,[],TipoPath.ABS); \r\n    grafo.generarHijos($$[$0-1],$$[$0]); \r\n    grafo.generarTexto(`ForwardAxis.valor = new Self();`); \r\nbreak;\r\ncase 113:\r\n \r\n    this.$=new DescSelf(null,[],TipoPath.ABS); \r\n    grafo.generarHijos($$[$0-1],$$[$0]); \r\n    grafo.generarTexto(`ForwardAxis.valor = new DescSelf();`); \r\nbreak;\r\ncase 114:\r\n \r\n    this.$=new FollowSibling(null,[],TipoPath.ABS); \r\n    grafo.generarHijos($$[$0-1],$$[$0]); \r\n    grafo.generarTexto(`ForwardAxis.valor = new FollowSibling();`); \r\nbreak;\r\ncase 115:\r\n \r\n    this.$=new Follow(null,[],TipoPath.ABS); \r\n    grafo.generarHijos($$[$0-1],$$[$0]); \r\n    grafo.generarTexto(`ForwardAxis.valor = new Follow();`);  \r\nbreak;\r\ncase 117:\r\n \r\n    this.$=$$[$0]; grafo.generarPadre(1, \"NameTest\"); \r\n    grafo.generarHijos(\"NameTest\"); \r\n    grafo.generarTexto(`NodeTest.valor = NameTest.valor;`); \r\nbreak;\r\ncase 118: case 119:\r\n \r\n    this.$=$$[$0]; \r\n    grafo.generarHijos($$[$0]); \r\n    grafo.generarTexto(`NameTest.valor = ${$$[$0]};`); \r\nbreak;\r\ncase 120:\r\n \r\n    this.$=$$[$0]; grafo.generarPadre(1, \"AbbrevReverseStep\");\r\n    grafo.generarHijos(\"AbbrevReverseStep\");\r\n    grafo.generarTexto(`ReverseStep.valor = AbbrevReverseStep.valor`); \r\nbreak;\r\ncase 121:\r\n \r\n    this.$=$$[$0-1]; \r\n    this.$.nombre=$$[$0];\r\n    grafo.generarPadre(2, \"NameTest\");\r\n    grafo.generarPadre(1, \"ReverseAxis\");\r\n    grafo.generarHijos(\"ReverseAxis\",\"NameTest\");\r\n    grafo.generarTexto(`ReverseAxis.nombre = NameTest; ReverseStep.valor = ReverseAxis;`); \r\nbreak;\r\ncase 122:\r\n \r\n    this.$=new CaminoInverso(\"*\",[],TipoPath.ABS); \r\n    grafo.generarHijos($$[$0]); \r\n    grafo.generarTexto(`caminoInverso = new CaminoInverso(); caminoInverso.tipo = Absoluto; AbbrevReverseStep.valor = caminoInverso;`); \r\nbreak;\r\ncase 123:\r\n \r\n    this.$=new Parent(null,[],TipoPath.ABS); \r\n    grafo.generarHijos($$[$0-1],$$[$0]); \r\n    grafo.generarTexto(`parent = new Parent(); parent.tipo = Absoluto; ReverseAxis.valor = parent;`); \r\nbreak;\r\ncase 124:\r\n \r\n    this.$=new Ancestor(null,[],TipoPath.ABS); \r\n    grafo.generarHijos($$[$0-1],$$[$0]); \r\n    grafo.generarTexto(`ancestor = new Ancestor(); ancestor.tipo = Absoluto; ReverseAxis.valor = ancestor;`); \r\nbreak;\r\ncase 125:\r\n \r\n    this.$=new PrecedingSibling(null,[],TipoPath.ABS);\r\n    grafo.generarHijos($$[$0-1],$$[$0]); \r\n    grafo.generarTexto(`precedingS = new PrecedingSibling(); precedingS.tipo = Absoluto; ReverseAxis.valor = precedingS;`); \r\nbreak;\r\ncase 126:\r\n \r\n    this.$=new Preceding(null,[],TipoPath.ABS); \r\n    grafo.generarHijos($$[$0-1],$$[$0]); \r\n    grafo.generarTexto(`preceding = new Preceding(); preceding.tipo = Absoluto; ReverseAxis.valor = preceding;`);\r\nbreak;\r\ncase 127:\r\n \r\n    this.$=new AncestorSelf(null,[],TipoPath.ABS); \r\n    grafo.generarHijos($$[$0-1],$$[$0]); \r\n    grafo.generarTexto(`ancestorS = new AncestorSelf(); ancestorS.tipo = Absoluto; ReverseAxis.valor = ancestorS;`); \r\nbreak;\r\ncase 128:\r\n \r\n    this.$=$$[$0]; grafo.generarPadre(1, \"PrimaryExpr\"); \r\n    grafo.generarHijos(\"PrimaryExpr\");\r\n    grafo.generarTexto(`PostfixExpr.valor = PrimaryExpr.valor;`); \r\nbreak;\r\ncase 129:\r\n \r\n    this.$=$$[$0-1]; \r\n    this.$.predicado = $$[$0]; \r\n    grafo.generarPadre(2, \"PredicateList\");\r\n    grafo.generarPadre(1, \"PrimaryExpr\");\r\n    grafo.generarHijos(\"PrimaryExpr\",\"PostfixExprL\");\r\n    grafo.generarTexto(`PrimaryExpr.predicado = predicateList.valor; PostfixExpr.valor = PrimaryExpr.valor`); \r\nbreak;\r\ncase 130:\r\n \r\n    this.$=$$[$0-1]; grafo.generarPadre(2, \"ExprSingle\");\r\n    grafo.generarHijos($$[$0-2],\"ExprSingle\",$$[$0]);\r\n    grafo.generarTexto(`Predicate.valor = ExprSingle.valor;`); \r\nbreak;\r\ncase 131:\r\n \r\n    this.$=$$[$0]; grafo.generarPadre(1, \"Literal\"); \r\n    grafo.generarHijos(\"Literal\"); \r\n    grafo.generarTexto(\"PrimaryExpr.valor = literal.valor\"); \r\nbreak;\r\ncase 132:\r\n \r\n    this.$=$$[$0]; grafo.generarPadre(1, \"FunctionCall\"); \r\n    grafo.generarHijos(\"FunctionCall\"); \r\n    grafo.generarTexto(\"PrimaryExpr.valor = functionCall.valor\");\r\nbreak;\r\ncase 133:\r\n \r\n    this.$=$$[$0]; grafo.generarPadre(1, \"ContextItemExpr\"); \r\n    grafo.generarHijos(\"ContextItemExpr\"); \r\n    grafo.generarTexto(\"PrimaryExpr.valor = contextItemExpr.valor\");\r\nbreak;\r\ncase 134:\r\n \r\n    this.$=$$[$0]; grafo.generarPadre(1, \"ParenthesizedExpr\"); \r\n    grafo.generarHijos(\"ParenthesizedExpr\"); \r\n    grafo.generarTexto(\"PrimaryExpr.valor = ParenthesizedExpr.valor\"); \r\nbreak;\r\ncase 135:\r\n \r\n    this.$=$$[$0]; grafo.generarPadre(1, \"Variable\"); \r\n    grafo.generarHijos(\"Variable\"); \r\n    grafo.generarTexto(\"PrimaryExpr.valor = Variable.valor\");\r\nbreak;\r\ncase 136:\r\n \r\n    this.$=new Variable(null,$$[$0-1]+$$[$0]); \r\n    grafo.generarHijos($$[$0-1],$$[$0]);\r\n    grafo.generarTexto(`Variable.valor = ${$$[$0-1]+$$[$0]}`) \r\nbreak;\r\ncase 137:\r\n \r\n    this.$=new Literal(Tipo.INTEGER,$$[$0]); \r\n    grafo.generarHijos($$[$0]); \r\n    grafo.generarTexto(`return literal = new Literal(${$$[$0]}); literal.tipo = INTEGER;`); \r\nbreak;\r\ncase 138:\r\n \r\n    this.$=new Literal(Tipo.DECIMAL,$$[$0]); \r\n    grafo.generarHijos($$[$0]); \r\n    grafo.generarTexto(`return literal = new Literal(${$$[$0]}); literal.tipo = DECIMAL;`); \r\nbreak;\r\ncase 139:\r\n \r\n    this.$=new Literal(Tipo.STRING,$$[$0]);  \r\n    grafo.generarHijos($$[$0]); \r\n    grafo.generarTexto(`return literal = new Literal(${$$[$0]}); literal.tipo = STRING;`); \r\nbreak;\r\ncase 140:\r\n\r\n    this.$ = new CallFunction([],TipoPath.ABS,$$[$0-2],[]);\r\n    grafo.generarHijos($$[$0-2],$$[$0-1],$$[$0]);\r\n    grafo.generarTexto(`FunctionCall = new CallFunction(); functionCall.tipo = Absoluto;`); \r\nbreak;\r\ncase 141:\r\n  \r\n    this.$ = new CallFunction([],TipoPath.ABS,$$[$0-3],$$[$0-1]) \r\n    grafo.generarPadre(3,\"ArgumentList\")\r\n    grafo.generarHijos($$[$0-3],$$[$0-2],\"ArgumentList\",$$[$0])\r\n    grafo.generarTexto(`FunctionCall = new CallFunction(ArgumentList.Valor)`)\r\nbreak;\r\ncase 142:\r\n \r\n     this.$ = new CallFunctionPrefix([],TipoPath.ABS,$$[$0-4],$$[$0-2],[]);\r\n    grafo.generarHijos($$[$0-4],$$[$0-3],$$[$0-2],$$[$0-1],$$[$0]);\r\n    grafo.generarTexto(`FunctionCall = new CallFunction(); functionCall.tipo = Absoluto;`); \r\nbreak;\r\ncase 143:\r\n  \r\n    this.$ = new CallFunctionPrefix([],TipoPath.ABS,$$[$0-5],$$[$0-3],$$[$0-1]) \r\n    grafo.generarPadre(5,\"ArgumentList\")\r\n    grafo.generarHijos($$[$0-5],$$[$0-4],$$[$0-3],$$[$0-2],\"ArgumentList\",$$[$0])\r\n    grafo.generarTexto(`FunctionCall = new CallFunction(ArgumentList.Valor)`)\r\nbreak;\r\ncase 144:\r\n \r\n    this.$=[$$[$0]] \r\n    grafo.generarPadre(1,\"ExprSingle\")\r\n    grafo.generarHijos(\"ExprSingle\")\r\n    grafo.generarTexto(\"ArgumentList.valor = [];ArgumentList.valor.push(ExprSingle.valor)\") \r\nbreak;\r\ncase 145:\r\n \r\n    this.$=$$[$0-2];this.$.push($$[$0]) \r\n    grafo.generarPadre(3,\"ExprSingle\")\r\n    grafo.generarPadre(1,\"ArgumentList\")\r\n    grafo.generarHijos(\"ArgumentList\",$$[$0-1],\"ExprSingle\")\r\n    grafo.generarTexto(\"ArgumentList.valor = ArgumentList1.valor;ArgumentList.valor.push(ExprSingle.valor)\") \r\nbreak;\r\ncase 146:\r\n \r\n    this.$=new ContextItemExpr([],TipoPath.ABS); \r\n    grafo.generarHijos($$[$0]); \r\n    grafo.generarTexto(`contextItemExpr =  new ContextItemExpr(); contextItemExpr.tipo = Absoluto;`);\r\nbreak;\r\ncase 147:\r\n \r\n    this.$=new Parentesis([]); \r\n    grafo.generarHijos($$[$0-1],$$[$0]); \r\n    grafo.generarTexto(`ParenthesizedExpr.valor = [];`); \r\nbreak;\r\ncase 148:\r\n \r\n    this.$=new Parentesis($$[$0-1]); \r\n    grafo.generarPadre(2,\"Expr\")\r\n    grafo.generarHijos($$[$0-2],\"Expr\",$$[$0]); \r\n    grafo.generarTexto(`ParenthesizedExpr.valor = ExprSingle.valor;`); \r\nbreak;\r\n}\r\n},\r\ntable: [{2:[1,3],3:1,4:2,5:4,6:5,7:7,8:6,12:$V0,19:$V1,21:$V2,26:$V3,29:8,30:9,31:10,32:13,36:16,37:17,41:$V4,46:$V5,63:$V6,66:12,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{1:[3]},{1:[2,1]},{1:[2,2],7:71,9:70,10:$Vv,11:$Vw,12:$V0},{1:[2,3],9:74,10:$Vv,11:$Vw},{2:[1,77],5:75,7:76,8:6,12:$V0,19:$V1,21:$V2,26:$V3,29:8,30:9,31:10,32:13,36:16,37:17,41:$V4,46:$V5,63:$V6,66:12,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},o($Vx,[2,9]),o($Vy,[2,5]),o($Vz,[2,27],{67:[1,78]}),o($Vz,[2,28]),o($Vz,[2,29]),{13:79,20:[1,80]},o($VA,[2,63],{69:$VB}),{32:86,33:82,34:83,35:84,36:16,37:17,38:87,39:$VC,40:89,41:$V4,46:$V5,49:$VD,50:$VE,62:$VF},{21:[1,92]},o($VG,[2,65]),o($VH,[2,34],{11:[1,93]}),o($VH,[2,35],{11:[1,94]}),o($VG,[2,67],{71:95,72:[1,97],73:[1,98],74:[1,99],75:[1,100],76:[1,101],77:[1,102],79:$VI}),{26:$VJ,42:103},{26:$VK,47:105},o($VL,[2,75]),o($VL,[2,77],{81:[1,107],83:$VM,84:$VN}),o($VO,[2,79],{86:$VP,87:$VQ,88:$VR,89:$VS}),o($VT,[2,82]),o($VT,[2,87]),{19:$V1,21:$V2,26:$V3,83:$V7,84:$V8,85:114,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{19:$V1,21:$V2,26:$V3,83:$V7,84:$V8,85:115,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},o([1,10,11,23,28,39,41,46,49,50,57,60,61,62,65,67,69,72,73,74,75,76,77,79,81,83,84,87,88,89,125],[2,93],{94:31,95:32,96:33,123:34,97:35,98:36,126:37,127:38,128:39,129:40,130:41,115:42,116:43,101:44,102:45,103:60,92:116,19:$V1,21:$V2,26:$V3,86:$V9,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,131:$Vr,132:$Vs,133:$Vt,135:$Vu}),{19:$V1,21:$V2,26:$V3,86:$V9,92:117,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},o($VT,[2,92],{91:$VU,93:$VV}),o($VW,[2,94]),o($VW,[2,97]),o($VW,[2,98]),o($VW,[2,128],{99:120,100:121,124:$VX}),o($VW,[2,99],{100:121,99:123,124:$VX}),o($VW,[2,100],{100:121,99:124,124:$VX}),o($VY,[2,131]),o($VY,[2,132]),o($VY,[2,133]),o($VY,[2,134]),o($VY,[2,135]),o($VY,[2,120]),{19:$VZ,86:$V9,103:125},o($VY,[2,105]),{19:$VZ,86:$V9,103:127},o($VY,[2,137]),o($VY,[2,138]),o($VY,[2,139]),o($VY,$V_,{18:[1,129],21:[1,128]}),o($VY,[2,146]),{2:$V$,5:131,8:6,19:$V1,21:$V2,23:[1,130],26:$V3,29:8,30:9,31:10,32:13,36:16,37:17,41:$V4,46:$V5,63:$V6,66:12,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{19:[1,133]},o($VY,[2,122]),{106:[1,134]},{106:[1,135]},{106:[1,136]},{106:[1,137]},{106:[1,138]},{19:$VZ,86:$V9,103:139},o($VY,[2,108]),{106:[1,140]},{106:[1,141]},{106:[1,142]},{106:[1,143]},{106:[1,144]},{106:[1,145]},{106:[1,146]},{106:[1,147]},o($VY,[2,119]),{8:148,19:$V1,21:$V2,26:$V3,29:8,30:9,31:10,32:13,36:16,37:17,41:$V4,46:$V5,63:$V6,66:12,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},o($Vy,[2,8]),o($V01,[2,13]),o($V01,[2,14]),{2:[1,150],8:149,19:$V1,21:$V2,26:$V3,29:8,30:9,31:10,32:13,36:16,37:17,41:$V4,46:$V5,63:$V6,66:12,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{1:[2,4],9:74,10:$Vv,11:$Vw},o($Vy,[2,6]),o($Vy,[2,7],{9:70,10:$Vv,11:$Vw}),{19:$V1,21:$V2,26:$V3,66:151,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{14:[1,152]},{19:[1,153]},{19:$V1,21:$V2,26:$V3,68:154,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{32:86,34:155,35:156,36:16,37:17,38:87,39:$VC,40:89,41:$V4,46:$V5,49:$VD,50:$VE,62:$VF},o($Vz,[2,31]),o($VH,[2,32]),{8:157,19:$V1,21:$V2,26:$V3,29:8,30:9,31:10,32:13,36:16,37:17,41:$V4,46:$V5,63:$V6,66:12,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},o($VH,[2,36]),o($VH,[2,37]),o($VH,[2,38]),o($VH,[2,39]),{8:158,19:$V1,21:$V2,26:$V3,29:8,30:9,31:10,32:13,36:16,37:17,41:$V4,46:$V5,63:$V6,66:12,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{51:[1,159]},{2:$V$,5:160,8:6,19:$V1,21:$V2,26:$V3,29:8,30:9,31:10,32:13,36:16,37:17,41:$V4,46:$V5,63:$V6,66:12,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{26:$VJ,42:161},{26:$VK,47:162},{19:$V1,21:$V2,26:$V3,70:163,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{19:$V1,21:$V2,26:$V3,78:164,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},o($V11,[2,69]),o($V11,[2,70]),o($V11,[2,71]),o($V11,[2,72]),o($V11,[2,73]),o($V11,[2,74]),o($V21,[2,40]),{19:[1,165]},o($V21,[2,45]),{19:[1,166]},{19:$V1,21:$V2,26:$V3,80:167,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{19:$V1,21:$V2,26:$V3,82:168,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{19:$V1,21:$V2,26:$V3,82:169,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{19:$V1,21:$V2,26:$V3,83:$V7,84:$V8,85:170,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{19:$V1,21:$V2,26:$V3,83:$V7,84:$V8,85:171,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{19:$V1,21:$V2,26:$V3,83:$V7,84:$V8,85:172,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{19:$V1,21:$V2,26:$V3,83:$V7,84:$V8,85:173,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},o($VT,[2,88]),o($VT,[2,89]),o($VT,[2,90],{91:$VU,93:$VV}),o($VT,[2,91],{91:$VU,93:$VV}),{19:$V1,21:$V2,26:$V3,86:$V9,94:174,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{19:$V1,21:$V2,26:$V3,86:$V9,94:175,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},o($VW,[2,129],{100:176,124:$VX}),o($VY,[2,103]),{8:177,19:$V1,21:$V2,26:$V3,29:8,30:9,31:10,32:13,36:16,37:17,41:$V4,46:$V5,63:$V6,66:12,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},o($VW,[2,101],{100:176,124:$VX}),o($VW,[2,102],{100:176,124:$VX}),o($VY,[2,121]),o($VY,$V_),o($VY,[2,106]),{8:180,19:$V1,21:$V2,23:[1,178],26:$V3,29:8,30:9,31:10,32:13,36:16,37:17,41:$V4,46:$V5,63:$V6,66:12,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,134:179,135:$Vu},{19:[1,181]},o($VY,[2,147]),{9:74,10:$Vv,11:$Vw,23:[1,182]},{9:70,10:$Vv,11:$Vw},o($VY,[2,136]),o($V31,[2,123]),o($V31,[2,124]),o($V31,[2,125]),o($V31,[2,126]),o($V31,[2,127]),o($VY,[2,107]),o($V31,[2,109]),o($V31,[2,110]),o($V31,[2,111]),o($V31,[2,112]),o($V31,[2,113]),o($V31,[2,114]),o($V31,[2,115]),o($V31,[2,116]),o($Vx,[2,12]),o($Vx,[2,10]),o($Vx,[2,11]),o($VA,[2,64],{69:$VB}),o($Vy,[2,15]),{18:[1,183]},o($VG,[2,66]),o($Vz,[2,30]),o($VH,[2,33]),o($Vz,[2,61]),o($VH,[2,48]),{8:186,19:$V1,21:$V2,26:$V3,29:8,30:9,31:10,32:13,36:16,37:17,41:$V4,46:$V5,52:184,53:185,63:$V6,66:12,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{9:74,10:$Vv,11:$Vw,23:[1,187]},o($V21,[2,41]),o($V21,[2,46]),o($VG,[2,68],{79:$VI}),o($VL,[2,76]),{43:188,44:[1,189],45:[1,190]},{48:[1,191]},o($VL,[2,78],{83:$VM,84:$VN}),o($VO,[2,80],{86:$VP,87:$VQ,88:$VR,89:$VS}),o($VO,[2,81],{86:$VP,87:$VQ,88:$VR,89:$VS}),o($VT,[2,83]),o($VT,[2,84]),o($VT,[2,85]),o($VT,[2,86]),o($VW,[2,95]),o($VW,[2,96]),o($VY,[2,104]),{125:[1,192]},o($VY,[2,140]),{11:$V41,23:[1,193]},o($V51,[2,144]),{21:[1,195]},o($VY,[2,148]),{19:[1,196]},o($VH,[2,49],{11:[1,197]}),o($V21,[2,51]),o($V21,[2,53],{54:198,55:199,56:200,57:$V61,60:[1,201],61:[1,202]}),{64:[1,204]},{44:[1,205]},{8:206,19:$V1,21:$V2,26:$V3,29:8,30:9,31:10,32:13,36:16,37:17,41:$V4,46:$V5,63:$V6,66:12,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{26:[1,207]},{8:208,19:$V1,21:$V2,26:$V3,29:8,30:9,31:10,32:13,36:16,37:17,41:$V4,46:$V5,63:$V6,66:12,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},o($VY,[2,130]),o($VY,[2,141]),{8:209,19:$V1,21:$V2,26:$V3,29:8,30:9,31:10,32:13,36:16,37:17,41:$V4,46:$V5,63:$V6,66:12,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{8:180,19:$V1,21:$V2,23:[1,210],26:$V3,29:8,30:9,31:10,32:13,36:16,37:17,41:$V4,46:$V5,63:$V6,66:12,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,134:211,135:$Vu},{21:[1,212]},{8:186,19:$V1,21:$V2,26:$V3,29:8,30:9,31:10,32:13,36:16,37:17,41:$V4,46:$V5,53:213,63:$V6,66:12,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},o($V21,[2,52]),o($V21,[2,56],{56:214,57:$V61}),o($V21,[2,55]),o($V71,[2,59]),o($V71,[2,60]),{58:[1,215],59:[1,216]},{8:217,19:$V1,21:$V2,26:$V3,29:8,30:9,31:10,32:13,36:16,37:17,41:$V4,46:$V5,63:$V6,66:12,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{8:218,19:$V1,21:$V2,26:$V3,29:8,30:9,31:10,32:13,36:16,37:17,41:$V4,46:$V5,63:$V6,66:12,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},o($V21,[2,43]),{19:[1,219]},o($V21,[2,47]),o($V51,[2,145]),o($VY,[2,142]),{11:$V41,23:[1,220]},{22:221,23:[1,222],25:223,26:$V81},o($V21,[2,50]),o($V21,[2,54]),o($V21,[2,57]),o($V21,[2,58]),{65:[1,225]},o($V21,[2,42]),{44:[2,44]},o($VY,[2,143]),{11:[1,227],23:[1,226]},{15:228,16:$V91,24:229,27:$Va1},o($V51,[2,22]),{19:[1,232]},{8:233,19:$V1,21:$V2,26:$V3,29:8,30:9,31:10,32:13,36:16,37:17,41:$V4,46:$V5,63:$V6,66:12,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},{15:234,16:$V91,24:235,27:$Va1},{25:236,26:$V81},{24:237,27:$Va1},{14:[2,20]},{17:[1,238]},{2:$V$,5:239,8:6,19:$V1,21:$V2,26:$V3,28:[1,240],29:8,30:9,31:10,32:13,36:16,37:17,41:$V4,46:$V5,63:$V6,66:12,68:15,70:18,78:21,80:22,82:23,83:$V7,84:$V8,85:24,86:$V9,90:25,91:$Va,92:30,93:$Vb,94:31,95:32,96:33,97:35,98:36,101:44,102:45,103:60,104:$Vc,105:$Vd,107:$Ve,108:$Vf,109:$Vg,110:$Vh,111:$Vi,112:$Vj,113:$Vk,115:42,116:43,117:$Vl,118:$Vm,119:$Vn,120:$Vo,121:$Vp,122:$Vq,123:34,126:37,127:38,128:39,129:40,130:41,131:$Vr,132:$Vs,133:$Vt,135:$Vu},o($V51,[2,24],{15:241,16:$V91}),o($Vz,[2,62]),{24:242,27:$Va1},{14:[2,19]},o($V51,[2,21]),{14:[2,18]},{18:[1,243]},{9:74,10:$Vv,11:$Vw,28:[1,244]},{14:[2,26]},o($V51,[2,23]),{14:[2,17]},{19:[1,245]},{14:[2,25]},o([11,23,27],[2,16])],\r\ndefaultActions: {2:[2,1],219:[2,44],229:[2,20],235:[2,19],237:[2,18],240:[2,26],242:[2,17],244:[2,25]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n  const { concat } = require(\"lodash\")\r\n  const { Tipo, TipoPath, Comando } = require(\"./AST/Entorno\");\r\n  const { Logical } = require(\"./Expresion/Logical\");\r\n  const { Arithmetic, Unary, RangeExp, Concat } = require(\"./Expresion/Arithmetics\")\r\n  const { Literal, PathExp, Variable, Parentesis } = require(\"./Expresion/Expresiones\");\r\n  const { ComparisonExp } = require('./Expresion/Comparison')\r\n  const { Atributo, Camino, Child, Descendant, Attribute, Self, DescSelf, FollowSibling, Follow } = require('./Expresion/axes')\r\n  const { CaminoInverso, Parent, Ancestor, PrecedingSibling, AncestorSelf, Preceding } = require('./Expresion/axes')\r\n  const { ContextItemExpr, CallFunction, CallFunctionPrefix } = require('./Expresion/postfix')\r\n  const { Flower,IfThenElse,CrearFuncion } = require('./Instruccion/Xquery')\r\n  const { grafoCST } = require('../CST')\r\n\r\n  var grafo = new grafoCST(); \r\n\r\n  var ListaErrores = []\r\n\r\n  parser.trace = function(err)\r\n  {\r\n    ListaErrores.push({Error:err,Linea:0,columna:0});\r\n  }\r\n\r\n  function setLineaColumna(linea,columna)\r\n  {\r\n    ListaErrores[ListaErrores.length-1].Linea=linea\r\n    ListaErrores[ListaErrores.length-1].Linea=columna\r\n  }\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:return \"ROR\"\r\nbreak;\r\ncase 1:return \"RAND\"\r\nbreak;\r\ncase 2:return \"IDIV\"\r\nbreak;\r\ncase 3:return \"DIV\"\r\nbreak;\r\ncase 4:return \"MOD\"\r\nbreak;\r\ncase 5:return \"RIN\"\r\nbreak;\r\ncase 6:return \"EQ\"\r\nbreak;\r\ncase 7:return \"NE\"\r\nbreak;\r\ncase 8:return \"LT\"\r\nbreak;\r\ncase 9:return \"LE\"\r\nbreak;\r\ncase 10:return \"GT\"\r\nbreak;\r\ncase 11:return \"GE\"\r\nbreak;\r\ncase 12:return \"RCHILD\"\r\nbreak;\r\ncase 13:return \"RDESSELF\"\r\nbreak;\r\ncase 14:return \"RDESCENDANT\"\r\nbreak;\r\ncase 15:return \"RATTRIBUTE\"\r\nbreak;\r\ncase 16:return \"RSELF\"\r\nbreak;\r\ncase 17:return \"RFOLLOWSIBLING\"\r\nbreak;\r\ncase 18:return \"RFOLLOW\"\r\nbreak;\r\ncase 19:return \"RNAMESPACE\"\r\nbreak;\r\ncase 20:return \"RPARENT\"\r\nbreak;\r\ncase 21:return \"RANCESTORORSELF\"\r\nbreak;\r\ncase 22:return \"RANCESTOR\"\r\nbreak;\r\ncase 23:return \"RPRECEDSIBLING\"\r\nbreak;\r\ncase 24:return \"RPRECED\"\r\nbreak;\r\ncase 25:return \"RXS\"\r\nbreak;\r\ncase 26:return \"RRETURN\"\r\nbreak;\r\ncase 27:return \"RFUNCTION\"\r\nbreak;\r\ncase 28:return \"RLET\"\r\nbreak;\r\ncase 29:return \"RDECLARE\"\r\nbreak;\r\ncase 30:return \"RVARIABLE\"\r\nbreak;\r\ncase 31:return \"RDOC\"\r\nbreak;\r\ncase 32:return \"RFOR\"\r\nbreak;\r\ncase 33:return \"RWHERE\"\r\nbreak;\r\ncase 34:return \"RSTABLE\"\r\nbreak;\r\ncase 35:return \"RORDER\"\r\nbreak;\r\ncase 36:return \"RBY\"\r\nbreak;\r\ncase 37:return \"RTO\"\r\nbreak;\r\ncase 38:return \"RAT\"\r\nbreak;\r\ncase 39:return \"LLAVEA\"\r\nbreak;\r\ncase 40:return \"LLAVEC\"\r\nbreak;\r\ncase 41:return \"PERCENTAGE\"\r\nbreak;\r\ncase 42:return \"REXTERNAL\"\r\nbreak;\r\ncase 43:return \"RAS\"\r\nbreak;\r\ncase 44:return \"RASCENDING\"\r\nbreak;\r\ncase 45:return \"RDESCENDING\"\r\nbreak;\r\ncase 46:return \"RIF\"\r\nbreak;\r\ncase 47:return \"RTHEN\"\r\nbreak;\r\ncase 48:return \"RELSE\"\r\nbreak;\r\ncase 49:return \"REMPTY\" \r\nbreak;\r\ncase 50:return \"RGREATEST\"\r\nbreak;\r\ncase 51:return \"RLEAST\"\r\nbreak;\r\ncase 52:return \"DECIMAL\"\r\nbreak;\r\ncase 53:return \"INTEGER\"\r\nbreak;\r\ncase 54: yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return \"CADENA\" \r\nbreak;\r\ncase 55:return \"NOMBRE\"\r\nbreak;\r\ncase 56:return \"DOBLEBARRA\"\r\nbreak;\r\ncase 57:return \"BARRA\"\r\nbreak;\r\ncase 58:return \"ARROBA\"\r\nbreak;\r\ncase 59:return \"CORA\"\r\nbreak;\r\ncase 60:return \"CORB\"\r\nbreak;\r\ncase 61:return \"MAS\"\r\nbreak;\r\ncase 62:return \"MENOS\"\r\nbreak;\r\ncase 63:return \"DobleAsterisco\"\r\nbreak;\r\ncase 64:return \"POR\"\r\nbreak;\r\ncase 65:return \"MAYORIG\"\r\nbreak;\r\ncase 66:return \"MENORIG\"\r\nbreak;\r\ncase 67:return \"DIFERENTE\"\r\nbreak;\r\ncase 68:return \"MENOR\"\r\nbreak;\r\ncase 69:return \"MAYOR\"\r\nbreak;\r\ncase 70:return \"DOSPUNTOSIGUAL\"\r\nbreak;\r\ncase 71:return \"IGUAL\"\r\nbreak;\r\ncase 72:return \"CONCAT\"\r\nbreak;\r\ncase 73:return \"PIPE\"\r\nbreak;\r\ncase 74:return \"COMA\"\r\nbreak;\r\ncase 75:return \"ADMIRACION\"\r\nbreak;\r\ncase 76:return \"ARROBA\"\r\nbreak;\r\ncase 77:return \"DOBLEPUNTO\"\r\nbreak;\r\ncase 78:return \"PARENTESISA\"\r\nbreak;\r\ncase 79:return \"PARENTESISC\"\r\nbreak;\r\ncase 80:return \"INTERROGACIONC\"\r\nbreak;\r\ncase 81:return \"PUNTO\"\r\nbreak;\r\ncase 82:return \"DOBLEDOSPUNTOS\"\r\nbreak;\r\ncase 83:return \"DOSPUNTOS\"\r\nbreak;\r\ncase 84:return \"PUNTOCOMA\"\r\nbreak;\r\ncase 85:return \"DOLAR\"\r\nbreak;\r\ncase 86:\r\nbreak;\r\ncase 87:\r\nbreak;\r\ncase 88: ListaErrores.push({Error:'Este es un error léxico: ' + yy_.yytext,tipo:\"Lexico\", Linea: yy_.yylloc.first_line , columna:yy_.yylloc.first_column}) \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:or\\b)/i,/^(?:and\\b)/i,/^(?:idiv\\b)/i,/^(?:div\\b)/i,/^(?:mod\\b)/i,/^(?:in\\b)/i,/^(?:eq\\b)/i,/^(?:ne\\b)/i,/^(?:lt\\b)/i,/^(?:le\\b)/i,/^(?:gt\\b)/i,/^(?:ge\\b)/i,/^(?:child\\b)/i,/^(?:descendant-or-self\\b)/i,/^(?:descendant\\b)/i,/^(?:attribute\\b)/i,/^(?:self\\b)/i,/^(?:following-sibling\\b)/i,/^(?:following\\b)/i,/^(?:namespace\\b)/i,/^(?:parent\\b)/i,/^(?:ancestor-or-self\\b)/i,/^(?:ancestor\\b)/i,/^(?:preceding-sibling\\b)/i,/^(?:preceding\\b)/i,/^(?:XS\\b)/i,/^(?:return\\b)/i,/^(?:function\\b)/i,/^(?:let\\b)/i,/^(?:declare\\b)/i,/^(?:variable\\b)/i,/^(?:doc\\b)/i,/^(?:for\\b)/i,/^(?:where\\b)/i,/^(?:stable\\b)/i,/^(?:order\\b)/i,/^(?:by\\b)/i,/^(?:to\\b)/i,/^(?:at\\b)/i,/^(?:\\{)/i,/^(?:\\})/i,/^(?:%)/i,/^(?:external\\b)/i,/^(?:as\\b)/i,/^(?:ascending\\b)/i,/^(?:descending\\b)/i,/^(?:if\\b)/i,/^(?:then\\b)/i,/^(?:else\\b)/i,/^(?:empty\\b)/i,/^(?:greatest\\b)/i,/^(?:least\\b)/i,/^(?:(\\.[0-9]+)|([0-9]+\\.[0-9]+))/i,/^(?:[0-9]+)/i,/^(?:(\"[^\"]*\")|('[^']*'))/i,/^(?:([a-zA-ZñÑ_])([a-zA-ZñÑ0-9_-]|\\.)*)/i,/^(?:\\/\\/)/i,/^(?:\\/)/i,/^(?:@)/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*\\*)/i,/^(?:\\*)/i,/^(?:>=)/i,/^(?:<=)/i,/^(?:!=)/i,/^(?:<)/i,/^(?:>)/i,/^(?::=)/i,/^(?:=)/i,/^(?:\\|\\|)/i,/^(?:\\|)/i,/^(?:,)/i,/^(?:!)/i,/^(?:@)/i,/^(?:\\.\\.)/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:\\?)/i,/^(?:\\.)/i,/^(?:::)/i,/^(?::)/i,/^(?:;)/i,/^(?:\\$)/i,/^(?:[ \\r\\t]+)/i,/^(?:\\n)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = XPath;\r\nexports.Parser = XPath.Parser;\r\nexports.parse = function () { return XPath.parse.apply(XPath, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import { concat, map } from \"lodash\";\r\nimport { Tipo } from \"../AST/Entorno\";\r\nimport { Literal, Nodo } from \"../Expresion/Expresiones\";\r\n\r\nexport class Flower\r\n{\r\n  constructor(clauseexp,returnexp)\r\n  {\r\n    this.clauseexp=clauseexp  \r\n    this.returnexp=returnexp\r\n    this.EntornoLocal = [[]]\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    this.EntornoLocal[0] = this.EntornoLocal[0].concat(nodos)\r\n    for (const clause of this.clauseexp) {\r\n      this.EjecutarClouse(clause,nodos)\r\n    }\r\n    return this.EjecutarReturn()\r\n  }\r\n\r\n  EjecutarClouse(clause,nodos)\r\n  {\r\n    switch(clause.name)\r\n    {\r\n      case 'Let':\r\n        for (const exp of clause.exp) {\r\n          this.DeclararLet(exp.name,exp.exp)\r\n        }\r\n        break;\r\n      case 'For':\r\n        for (const exp of clause.exp) {\r\n          this.DeclararFor(exp.name,exp.posicion,exp.exp)\r\n        }\r\n        break;\r\n      case 'Where':\r\n        this.EjecutarWhere(clause.exp,nodos)\r\n        break;\r\n      case 'Order':\r\n        for (const exp of clause.exp) { \r\n          this.EjecutarOrder(exp.exp,exp.mode.order,exp.mode.empty)\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  DeclararLet(nombre,exp)\r\n  {\r\n    for (const entorno of this.EntornoLocal) {\r\n      var retornos = exp.getValor(entorno) \r\n      if(retornos[0] && retornos[0].tipo==Tipo.ERROR) return \r\n      if(this.contains(entorno,retornos,nombre)) return\r\n      var Entorno =\r\n      {\r\n        tipo : nombre,\r\n        atributos : [],\r\n        hijos:retornos,\r\n        texto:'',\r\n        posTipo : 0,\r\n        posTexto : 0,\r\n      }\r\n      entorno.push(new Nodo(Tipo.NODO,Entorno,[],'',1))\r\n    } \r\n  }\r\n\r\n  DeclararFor(nombre,posicion,exp)\r\n  {\r\n    var NuevoEntornoLocal = []\r\n    for (const entorno of this.EntornoLocal) {\r\n      var retornos = exp.getValor(entorno)\r\n      if(retornos[0] && retornos[0].tipo==Tipo.ERROR) return \r\n      var index = 1;\r\n      for (const retorno of retornos) {\r\n        var nuevoEntorno = [...entorno]\r\n        if(this.contains(nuevoEntorno,[retorno],nombre)) continue\r\n        var Entorno =\r\n        {\r\n          tipo : nombre,\r\n          atributos : [],\r\n          hijos: [retorno],\r\n          texto: '',\r\n          posTipo : 0,\r\n          posTexto : 0,\r\n        }\r\n        nuevoEntorno.push(new Nodo(Tipo.NODO,Entorno,[],'',1))\r\n        if(posicion!='')\r\n        {\r\n          var posicionEntorno =\r\n          {\r\n            tipo: posicion,\r\n            atributos: [],\r\n            hijos: [new Literal(Tipo.INTEGER,index)],\r\n            posTipo: 0,\r\n            posTexto: 0,\r\n          }\r\n          nuevoEntorno.push(new Nodo(Tipo.NODO,posicionEntorno,[],'',1))\r\n        }\r\n        NuevoEntornoLocal.push(nuevoEntorno)\r\n        index++\r\n      }\r\n    }\r\n    this.EntornoLocal=NuevoEntornoLocal\r\n  }\r\n\r\n  contains(nodos,nuevoValor,nombre)\r\n  {\r\n    for (const nodo of nodos) {\r\n      if(nodo.entorno.tipo==nombre){\r\n        nodo.entorno.hijos = nuevoValor\r\n        return true\r\n      } \r\n    }\r\n    return false\r\n  }\r\n\r\n  EjecutarWhere(exp)\r\n  {\r\n    var EntornoFiltrado = []\r\n    for (const entorno of this.EntornoLocal) {\r\n      var retorno = exp.getValor(entorno)\r\n      if(retorno.length>0)\r\n      {\r\n        EntornoFiltrado.push(entorno)\r\n      }\r\n    }\r\n    this.EntornoLocal=EntornoFiltrado\r\n  }\r\n\r\n  EjecutarOrder(exp,order,empty)\r\n  { \r\n    var mapa = []\r\n    for (const entorno of this.EntornoLocal) {\r\n      var retorno = exp.getValor(entorno)\r\n      mapa = this.insertarOrden({valor:retorno[0].tipo!=Tipo.ERROR ? retorno[0].valor : undefined ,nodo:entorno},mapa,order,empty)\r\n    }\r\n    var LocalEnOrden = []\r\n    for (const valor of mapa) {\r\n      LocalEnOrden.push(valor.nodo)\r\n    }\r\n    this.EntornoLocal=LocalEnOrden\r\n  }\r\n\r\n  insertarOrden(nodo,mapa,order,empty)\r\n  {\r\n    var tempmapa = []\r\n    let bandera = false\r\n    let i = 0\r\n    for (; i < mapa.length; i++) {\r\n      if(this.comparacion(nodo.valor,mapa[i].valor,order,empty))\r\n      {\r\n        tempmapa.push(nodo)\r\n        bandera=true\r\n        break\r\n      }\r\n      tempmapa.push(mapa[i])   \r\n    } \r\n    for (; i < mapa.length; i++) {\r\n      tempmapa.push(mapa[i])   \r\n    }\r\n    if(!bandera)\r\n    {\r\n      tempmapa.push(nodo)\r\n    }\r\n   return tempmapa\r\n  }\r\n  //Valor 1 es el valor entrante\r\n  comparacion(valor1,valor2,order,empty)\r\n  {\r\n    switch(empty)\r\n    {\r\n      case 'g':\r\n        switch(order)\r\n        {\r\n          case 'asc':\r\n            if(!valor1) return false\r\n            if(!valor2) return true\r\n            if(valor1<valor2) return true\r\n            return false\r\n          case 'desc':\r\n            if(!valor1 && !valor2) return false\r\n            if(!valor1) return true\r\n            if(valor1>valor2) return true\r\n            return false\r\n        }\r\n        break;\r\n      case 'l':\r\n        switch(order)\r\n        {\r\n          case 'asc':\r\n            if(!valor1 && !valor2) return false\r\n            if(!valor1) return true\r\n            if(valor1<valor2) return true\r\n            return false\r\n          case 'desc':\r\n            if(!valor1) return false\r\n            if(!valor2) return true\r\n            if(valor1>valor2) return true\r\n            return false\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  EjecutarReturn()\r\n  {\r\n    var retornos = []\r\n    for (const entorno of this.EntornoLocal) {\r\n      retornos = retornos.concat(this.returnexp.getValor(entorno))\r\n    }\r\n    return retornos\r\n  }\r\n  \r\n}\r\n\r\nexport class IfThenElse\r\n{\r\n  constructor( condiciones, bloqueverdadero,bloquefalso )\r\n  {\r\n    this.condiciones=condiciones\r\n    this.bloqueverdadero=bloqueverdadero\r\n    this.bloquefalso=bloquefalso\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    var retorno = []\r\n    if(this.condiciones.length > 1) return retorno\r\n    var rescondicion = this.condiciones[0].getValor(nodos)\r\n    if(rescondicion.length>0)\r\n    {\r\n      retorno = retorno.concat(this.bloqueverdadero.getValor(nodos))\r\n    }\r\n    else\r\n    {\r\n      retorno = retorno.concat(this.bloquefalso.getValor(nodos))\r\n    }\r\n    return retorno\r\n  }\r\n}\r\n\r\nexport function CrearFuncion(nombre,declaraciones,tipo,body )\r\n{\r\n  return {\r\n    nombre:nombre,\r\n    declaraciones:declaraciones,\r\n    tipo:tipo,\r\n    body:body,\r\n  }\r\n}\r\n","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XpathDesc = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,12],$V1=[1,13],$V2=[1,53],$V3=[1,14],$V4=[1,15],$V5=[1,37],$V6=[1,39],$V7=[1,40],$V8=[1,41],$V9=[1,42],$Va=[1,43],$Vb=[1,44],$Vc=[1,45],$Vd=[1,46],$Ve=[1,34],$Vf=[1,47],$Vg=[1,48],$Vh=[1,49],$Vi=[1,50],$Vj=[1,51],$Vk=[1,52],$Vl=[1,31],$Vm=[1,32],$Vn=[1,33],$Vo=[1,36],$Vp=[1,35],$Vq=[2,6],$Vr=[1,56],$Vs=[1,2,7,74,83],$Vt=[2,11],$Vu=[1,58],$Vv=[1,2,7,11,74,83],$Vw=[2,14],$Vx=[1,60],$Vy=[1,2,7,11,14,74,83],$Vz=[1,2,7,11,14,18,19,20,21,22,23,74,83],$VA=[2,27],$VB=[1,70],$VC=[1,71],$VD=[1,2,7,11,14,18,19,20,21,22,23,26,27,74,83],$VE=[2,33],$VF=[1,73],$VG=[1,74],$VH=[1,75],$VI=[1,76],$VJ=[1,2,7,11,14,18,19,20,21,22,23,26,27,30,31,32,33,74,83],$VK=[2,45],$VL=[1,83],$VM=[1,84],$VN=[1,2,7,11,14,18,19,20,21,22,23,26,27,30,31,32,33,35,37,74,83],$VO=[2,51],$VP=[1,88],$VQ=[1,2,7,11,14,18,19,20,21,22,23,26,27,30,31,32,33,35,37,73,74,83],$VR=[1,92],$VS=[2,68],$VT=[26,27,30,35,37,52,53,55,56,57,58,59,60,61,63,66,67,68,69,70,71,79,80,81,82,84],$VU=[2,54],$VV=[30,63];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"XPath\":3,\"Expr\":4,\"ExprSingle\":5,\"P_Expr\":6,\"PIPE\":7,\"OrExpr\":8,\"AndExpr\":9,\"P_OrExpr\":10,\"ROR\":11,\"ComparisonExpr\":12,\"P_AndExpr\":13,\"RAND\":14,\"AdditiveExpr\":15,\"SUB_AdditiveExpr\":16,\"GeneralComp\":17,\"IGUAL\":18,\"DIFERENTE\":19,\"MENOR\":20,\"MENORIG\":21,\"MAYOR\":22,\"MAYORIG\":23,\"MultiplicativeExpr\":24,\"P_AdditiveExpr\":25,\"MAS\":26,\"MENOS\":27,\"UnaryExpr\":28,\"P_MultiplicativeExpr\":29,\"POR\":30,\"DIV\":31,\"IDIV\":32,\"MOD\":33,\"PathExpr\":34,\"BARRA\":35,\"SUB_BARRA\":36,\"DOBLEBARRA\":37,\"RelativePathExpr\":38,\"StepExpr\":39,\"P_RelativePathExpr\":40,\"PostfixExpr\":41,\"AxisStep\":42,\"ForwardStep\":43,\"SUB_PredicateList\":44,\"ReverseStep\":45,\"PredicateList\":46,\"Predicate\":47,\"P_PredicateList\":48,\"AbbrevForwardStep\":49,\"ForwardAxis\":50,\"NameTest\":51,\"ARROBA\":52,\"RCHILD\":53,\"DOBLEDOSPUNTOS\":54,\"RDESCENDANT\":55,\"RATTRIBUTE\":56,\"RSELF\":57,\"RDESSELF\":58,\"RFOLLOWSIBLING\":59,\"RFOLLOW\":60,\"RNAMESPACE\":61,\"NodeTest\":62,\"NOMBRE\":63,\"AbbrevReverseStep\":64,\"ReverseAxis\":65,\"DOBLEPUNTO\":66,\"RPARENT\":67,\"RANCESTOR\":68,\"RPRECEDSIBLING\":69,\"RPRECED\":70,\"RANCESTORORSELF\":71,\"PrimaryExpr\":72,\"CORA\":73,\"CORB\":74,\"Literal\":75,\"FunctionCall\":76,\"ContextItemExpr\":77,\"ParenthesizedExpr\":78,\"INTEGER\":79,\"DECIMAL\":80,\"CADENA\":81,\"PARENTESISA\":82,\"PARENTESISC\":83,\"PUNTO\":84,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",7:\"PIPE\",11:\"ROR\",14:\"RAND\",18:\"IGUAL\",19:\"DIFERENTE\",20:\"MENOR\",21:\"MENORIG\",22:\"MAYOR\",23:\"MAYORIG\",26:\"MAS\",27:\"MENOS\",30:\"POR\",31:\"DIV\",32:\"IDIV\",33:\"MOD\",35:\"BARRA\",37:\"DOBLEBARRA\",52:\"ARROBA\",53:\"RCHILD\",54:\"DOBLEDOSPUNTOS\",55:\"RDESCENDANT\",56:\"RATTRIBUTE\",57:\"RSELF\",58:\"RDESSELF\",59:\"RFOLLOWSIBLING\",60:\"RFOLLOW\",61:\"RNAMESPACE\",63:\"NOMBRE\",66:\"DOBLEPUNTO\",67:\"RPARENT\",68:\"RANCESTOR\",69:\"RPRECEDSIBLING\",70:\"RPRECED\",71:\"RANCESTORORSELF\",73:\"CORA\",74:\"CORB\",79:\"INTEGER\",80:\"DECIMAL\",81:\"CADENA\",82:\"PARENTESISA\",83:\"PARENTESISC\",84:\"PUNTO\"},\r\nproductions_: [0,[3,1],[3,1],[4,2],[4,2],[6,3],[6,0],[6,3],[5,1],[8,2],[10,3],[10,0],[9,2],[13,3],[13,0],[12,2],[16,2],[16,0],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[15,2],[25,3],[25,3],[25,0],[24,2],[29,3],[29,3],[29,3],[29,3],[29,0],[28,1],[28,2],[28,2],[34,2],[34,2],[34,1],[36,1],[36,0],[38,2],[40,3],[40,3],[40,0],[39,1],[39,1],[42,2],[42,2],[44,1],[44,0],[46,2],[48,2],[48,0],[43,1],[43,2],[49,2],[49,1],[50,2],[50,2],[50,2],[50,2],[50,2],[50,2],[50,2],[50,2],[62,1],[51,1],[51,1],[45,1],[45,2],[64,1],[65,2],[65,2],[65,2],[65,2],[65,2],[41,2],[47,3],[72,1],[72,1],[72,1],[72,1],[75,1],[75,1],[75,1],[76,3],[77,1],[78,2],[78,3]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n      grafo.generarPadre(1, \"INICIO\");grafo.generarHijos(\"Expr\");\r\n      var retornoErrores = Object.assign([], ListaErrores);\r\n      ListaErrores = [];\r\n      var retornoGrafo = Object.assign({}, grafo);\r\n      grafo = new grafoCST();\r\n      this.$=new Comando($$[$0],retornoGrafo.pilaNodos,retornoGrafo.PilaEdges,retornoGrafo.GrahpvizNodo+retornoGrafo.GrahpvizEdges,retornoErrores,retornoGrafo.TablaGramatica);\r\n      return this.$ \r\n   \r\nbreak;\r\ncase 2:\r\n  \r\n      ListaErrores.push({Error:\"Error sintactico :\"+yytext,tipo:\"Sintactico\",Linea:this._$.first_line,columna:this._$.first_column});\r\n      var retornoErrores = Object.assign([], ListaErrores);\r\n      ListaErrores = [];\r\n      grafo = new grafoCST(); \r\n      return new Comando([],[],[],\"\",retornoErrores,[])\r\n    \r\nbreak;\r\ncase 3:\r\n \r\n      this.$ = $$[$0]; this.$.push($$[$0-1]);\r\n      grafo.generarPadre(2, \"P_Expr\");\r\n      grafo.generarPadre(1, \"ExprSingle\");\r\n      grafo.generarHijos(\"ExprSingle\", \"P_Expr\");\r\n      grafo.generarTexto(`P_Expr.push(ExprSingle.valor);`);\r\n    \r\nbreak;\r\ncase 4:\r\n \r\n        this.$=[];this.$.push($$[$0-1]);\r\n        grafo.generarPadre(1,\"ExprSingle\");\r\n        grafo.generarHijos(\"ExprSingle\",\"error\") \r\n        grafo.generarTexto(`Expr.push(ExprSingle.valor); Expr.valor = []; new Error();`); \r\n        ListaErrores.push({Error:\"Error sintactico se recupero en:\"+yytext,tipo:\"Sintactico\",Linea:this._$.first_line,columna:this._$.first_column}); \r\n      \r\nbreak;\r\ncase 5:\r\n \r\n      this.$ = $$[$0]; this.$.push($$[$0-1]); \r\n      grafo.generarPadre(3,\"P_Expr\"); \r\n      grafo.generarPadre(2,\"ExprSingle\"); \r\n      grafo.generarHijos($$[$0-2],\"ExprSingle\",\"P_Expr\");\r\n      grafo.generarTexto(`P_Expr.push(ExprSingle.valor); P_Expr.valor = P_Expr.valor;`);\r\n    \r\nbreak;\r\ncase 6:\r\n \r\n      this.$ = []; grafo.generarHijos(\"ε\");\r\n      grafo.generarTexto(`P_Expr.valor = [];`);\r\n    \r\nbreak;\r\ncase 7:\r\n \r\n      this.$=[];this.$.push($$[$0-1]);\r\n      grafo.generarPadre(2,\"ExprSingle\");\r\n      grafo.generarHijos($$[$0-2],\"ExprSingle\",\"error\") \r\n      grafo.generarTexto(`P_Expr.valor = []; P_Expr.push(ExprSingle.valor); new Error();`);\r\n      ListaErrores.push({Error:\"Error sintactico se recupero en:\"+yytext,tipo:\"Sintactico\",Linea:this._$.first_line,columna:this._$.first_column}); \r\n    \r\nbreak;\r\ncase 8:\r\n \r\n    this.$ = $$[$0]; grafo.generarPadre(1,\"OrExpr\");\r\n    grafo.generarHijos(\"OrExpr\");\r\n    grafo.generarTexto(`ExprSingle.valor = OrExpr.valor;`);\r\n  \r\nbreak;\r\ncase 9:\r\n \r\n      if($$[$0]==null){this.$=$$[$0-1];}else{this.$=new Logical($$[$0-1],\"or\",$$[$0]);};\r\n      grafo.generarPadre(2,\"P_OrExpr\"); \r\n      grafo.generarPadre(1,\"AndExpr\"); \r\n      grafo.generarHijos(\"AndExpr\", \"P_OrExpr\");\r\n      grafo.generarTexto(`if(P_OrExpr.valor == null){OrExpr.valor = AndExpr}else{OrExpr.valor = new Logical(AndExpr,\"or\",P_OrExpr);}`);\r\n    \r\nbreak;\r\ncase 10:\r\n \r\n      if($$[$0]==null){this.$=$$[$0-1];}else{this.$=new Logical($$[$0-1],\"or\",$$[$0]);}\r\n      grafo.generarPadre(3, \"P_OrExpr\"); \r\n      grafo.generarPadre(2, \"AndExpr\"); \r\n      grafo.generarHijos($$[$0-2], \"AndExpr\", \"P_OrExpr\");\r\n      grafo.generarTexto(`if(P_OrExpr.valor == null){P_OrExpr.valor = AndExpr;}else{P_OrExpr.valor = new Logical(AndExpr,\"or\",P_OrExpr);}`);\r\n    \r\nbreak;\r\ncase 11:\r\n \r\n      this.$ = null; grafo.generarHijos(\"ε\"); \r\n      grafo.generarTexto(`P_OrExpr.valor = null;`);\r\n    \r\nbreak;\r\ncase 12:\r\n \r\n      if($$[$0]==null){this.$=$$[$0-1];}else{this.$=new Logical($$[$0-1],\"and\",$$[$0]);};\r\n      grafo.generarPadre(2, \"P_AndExpr\"); \r\n      grafo.generarPadre(1, \"ComparisonExpr\"); \r\n      grafo.generarHijos(\"ComparisonExpr\", \"P_AndExpr\");\r\n      grafo.generarTexto(`if(P_AndExpr.valor == null){AndExpr.valor = ComparisonExpr;}else{AndExpr.valor = new Logical(ComparisonExpr,\"and\",P_AndExpr);}`);\r\n    \r\nbreak;\r\ncase 13:\r\n \r\n      if($$[$0]==null){this.$=$$[$0-1];}else{this.$=new Logical($$[$0-1],\"and\",$$[$0]);}; \r\n      grafo.generarPadre(3, \"P_AndExpr\"); \r\n      grafo.generarPadre(2, \"ComparisonExpr\"); \r\n      grafo.generarHijos($$[$0-2], \"ComparisonExpr\", \"P_AndExpr\");\r\n      grafo.generarTexto(`if(P_AndExpr.valor == null){P_AndExpr.valor = ComparisonExpr;}else{P_AndExpr.valor = new Logical(ComparisonExpr,\"and\",P_AndExpr);}`);\r\n    \r\nbreak;\r\ncase 14:\r\n \r\n      this.$ = null; grafo.generarHijos(\"ε\");\r\n      grafo.generarTexto(`P_AndExpr.valor = null;`);\r\n    \r\nbreak;\r\ncase 15:\r\n \r\n      if($$[$0]==null){this.$=$$[$0-1];}else{this.$=$$[$0]; this.$.izquierdo = $$[$0-1];} \r\n      grafo.generarPadre(2, \"SUB_AdditiveExpr\"); \r\n      grafo.generarPadre(1, \"AdditiveExpr\"); \r\n      grafo.generarHijos(\"AdditiveExpr\",\"SUB_AdditiveExpr\");\r\n      grafo.generarTexto(`if(SUB_AdditiveExpr.valor == null){ComparisonExpr.valor = AdditiveExpr.valor;}else{SUB_AdditiveExpr.izq = AdditiveExpr.valor}`);\r\n    \r\nbreak;\r\ncase 16:\r\n \r\n      this.$ = new ComparisonExp(null,$$[$0-1],$$[$0]);\r\n      grafo.generarPadre(2, \"AdditiveExpr\");\r\n      grafo.generarPadre(1, \"GeneralComp\");\r\n      grafo.generarHijos(\"GeneralComp\",\"AdditiveExpr\");\r\n      grafo.generarTexto(`SUB_AdditiveExpr.valor = new ComparisonExp(GeneralComp.valor, AdditiveExpr.valor);`);\r\n    \r\nbreak;\r\ncase 17:\r\n \r\n      this.$ = null; grafo.generarHijos(\"ε\");\r\n      grafo.generarTexto(`SUB_AdditiveExpr.valor = null;`);\r\n    \r\nbreak;\r\ncase 18: case 19: case 20: case 21: case 22: case 23:\r\n this.$ = $$[$0]; grafo.generarHijos($$[$0]); grafo.generarTexto(`GeneralComp.valor = ${$$[$0]}`); \r\nbreak;\r\ncase 24:\r\n \r\n      if($$[$0]==null){this.$=$$[$0-1];}else{this.$=$$[$0]; this.$.izquierdo = $$[$0-1];}; \r\n      grafo.generarPadre(2,\"P_AdditiveExpr\");\r\n      grafo.generarPadre(1,\"MultiplicativeExpr\"); \r\n      grafo.generarHijos(\"MultiplicativeExpr\", \"P_AdditiveExpr\");\r\n      grafo.generarTexto(`if(P_AdditiveExpr == null){AdditiveExpr.valor = MultiExpr.valor}else{P_AdditiveExpr.izq = P_MultiExpr}`);\r\n    \r\nbreak;\r\ncase 25:\r\n \r\n      if($$[$0]==null){this.$=new Arithmetic(null,$$[$0-2],$$[$0-1]);}else{this.$ = $$[$0]; this.$.izquierdo = $$[$0-1];} \r\n      grafo.generarPadre(3,\"P_AdditiveExpr\");\r\n      grafo.generarPadre(2, \"MultiplicativeExpr\"); \r\n      grafo.generarHijos($$[$0-2], \"MultiplicativeExpr\", \"P_AdditiveExpr\");\r\n      grafo.generarTexto(`if(P_AdditiveExpr == null){P_AdditiveExpr.valor = new Arithmetic(${$$[$0-2]},MultiExpr.valor);}else{P_AdditiveExpr.izq = P_MultiExpr}`);\r\n    \r\nbreak;\r\ncase 26:\r\n \r\n      if($$[$0]==null){this.$=new Arithmetic(null,$$[$0-2],$$[$0-1]);}else{this.$ = $$[$0]; this.$.izquierdo = $$[$0-1];} \r\n      grafo.generarPadre(3,\"P_AdditiveExpr\");\r\n      grafo.generarPadre(2,\"MultiplicativeExpr\"); \r\n      grafo.generarHijos($$[$0-2], \"MultiplicativeExpr\", \"P_AdditiveExpr\");\r\n      grafo.generarTexto(`if(P_AdditiveExpr == null){P_AdditiveExpr.valor = new Arithmetic(${$$[$0-2]},MultiExpr.valor);}else{P_AdditiveExpr.izq = P_MultiExpr}`);\r\n    \r\nbreak;\r\ncase 27:\r\n \r\n      this.$ = null; grafo.generarHijos(\"ε\");\r\n      grafo.generarTexto(`P_AdditiveExpr.valor = null;`);\r\n    \r\nbreak;\r\ncase 28:\r\n \r\n      if($$[$0]==null){this.$=$$[$0-1];}else{this.$=$$[$0]; this.$.izquierdo = $$[$0-1];}; \r\n      grafo.generarPadre(2,\"P_MultiplicativeExpr\");\r\n      grafo.generarPadre(1,\"UnaryExpr\"); \r\n      grafo.generarHijos(\"UnaryExpr\", \"P_MultiplicativeExpr\");\r\n      grafo.generarTexto(`if(P_MultiExpr == null){MultiExpr.valor = UnaryExpr}else{P_MultiExpr.izq = UnaryExpr};`);\r\n    \r\nbreak;\r\ncase 29:\r\n \r\n      if($$[$0]==null){this.$=new Arithmetic(null,$$[$0-2],$$[$0-1]);}else{this.$ = $$[$0]; this.$.izquierdo = $$[$0-1]; };\r\n      grafo.generarPadre(3,\"P_MultiplicativeExpr\");\r\n      grafo.generarPadre(2,\"UnaryExpr\"); \r\n      grafo.generarHijos($$[$0-2], \"UnaryExpr\", \"P_MultiplicativeExpr\");\r\n      grafo.generarTexto(`if(P_MultiExpr.valor == null){P_MultiExpr.valor = new Arithmetic(${$$[$0-2]}, UnaryExpr);}else{P_MultiExpr.izq = UnaryExpr}`);\r\n    \r\nbreak;\r\ncase 30:\r\n \r\n      if($$[$0]==null){this.$=new Arithmetic(null,$$[$0-2],$$[$0-1]);}else{this.$ = $$[$0]; this.$.izquierdo = $$[$0-1]; };\r\n      grafo.generarPadre(3,\"P_MultiplicativeExpr\");\r\n      grafo.generarPadre(2,\"UnaryExpr\");  \r\n      grafo.generarHijos($$[$0-2], \"UnaryExpr\", \"P_MultiplicativeExpr\");\r\n      grafo.generarTexto(`if(P_MultiExpr.valor == null){P_MultiExpr.valor = new Arithmetic(${$$[$0-2]}, UnaryExpr);}else{P_MultiExpr.izq = UnaryExpr}`);\r\n    \r\nbreak;\r\ncase 31:\r\n \r\n      if($$[$0]==null){this.$=new Arithmetic(null,$$[$0-2],$$[$0-1]);}else{this.$ = $$[$0]; this.$.izquierdo = $$[$0-1]; }; \r\n      grafo.generarPadre(3, \"P_MultiplicativeExpr\");\r\n      grafo.generarPadre(2, \"UnaryExpr\");\r\n      grafo.generarHijos($$[$0-2], \"UnaryExpr\", \"P_MultiplicativeExpr\");\r\n      grafo.generarTexto(`if(P_MultiExpr.valor == null){P_MultiExpr.valor = new Arithmetic(${$$[$0-2]}, UnaryExpr);}else{P_MultiExpr.izq = UnaryExpr}`);\r\n    \r\nbreak;\r\ncase 32:\r\n \r\n      if($$[$0]==null){this.$=new Arithmetic(null,$$[$0-2],$$[$0-1]);}else{this.$ = $$[$0]; this.$.izquierdo = $$[$0-1]; }; \r\n      grafo.generarPadre(3, \"P_MultiplicativeExpr\");\r\n      grafo.generarPadre(2, \"UnaryExpr\"); \r\n      grafo.generarHijos($$[$0-2], \"UnaryExpr\", \"P_MultiplicativeExpr\");\r\n      grafo.generarTexto(`if(P_MultiExpr.valor == null){P_MultiExpr.valor = new Arithmetic(${$$[$0-2]}, UnaryExpr);}else{P_MultiExpr.izq = UnaryExpr}`);\r\n    \r\nbreak;\r\ncase 33:\r\n \r\n      this.$ = null; grafo.generarHijos(\"ε\");\r\n      grafo.generarTexto(`P_MultiplicativeExpr.valor = null;`);\r\n    \r\nbreak;\r\ncase 34:\r\n \r\n      this.$ = $$[$0]; grafo.generarPadre(1, \"PathExpr\");\r\n      grafo.generarHijos(\"PathExpr\");\r\n      grafo.generarTexto(`UnaryExpr.valor = PathExpr.valor;`);\r\n    \r\nbreak;\r\ncase 35:\r\n \r\n      this.$=new Unary($$[$0-1], $$[$0]); grafo.generarPadre(2, \"UnaryExpr\");\r\n      grafo.generarHijos($$[$0-1],\"UnaryExp\");\r\n      grafo.generarTexto(`UnaryExpr.valor = new Unary(${$$[$0-1]}, UnaryExpr.valor);`);\r\n    \r\nbreak;\r\ncase 36:\r\n \r\n      this.$=new Unary($$[$0-1], $$[$0]); \r\n      grafo.generarPadre(2, \"UnaryExpr\");\r\n      grafo.generarHijos($$[$0-1],\"UnaryExp\");\r\n      grafo.generarTexto(`UnaryExpr.valor = new Unary(${$$[$0-1]}, UnaryExpr.valor);`);\r\n    \r\nbreak;\r\ncase 37:\r\n \r\n      this.$ = $$[$0]; grafo.generarPadre(2, \"SUB_BARRA\");\r\n      grafo.generarHijos($$[$0-1], \"SUB_BARRA\");\r\n      grafo.generarTexto(`PathExpr.valor = SUB_BARRA.valor`);\r\n    \r\nbreak;\r\ncase 38:\r\n \r\n      $$[$0][0].tipo=TipoPath.REL;this.$=new PathExp($$[$0]);\r\n      grafo.generarPadre(2, \"RelativePathExpr\");\r\n      grafo.generarHijos($$[$0-1], \"RelativePathExpr\");\r\n      grafo.generarTexto(`RelativePathExpr[0].tipo = Relativo; PathExpr.valor = new PathExp(RelativePathExpr.valor);`);\r\n    \r\nbreak;\r\ncase 39:\r\n \r\n      this.$=new PathExp($$[$0]); grafo.generarPadre(1, \"RelativePathExpr\");\r\n      grafo.generarHijos(\"RelativePathExpr\");\r\n      grafo.generarTexto(`PathExpr.valor = new PathExp(RelativePathExpr.valor);`);\r\n    \r\nbreak;\r\ncase 40:\r\n \r\n      $$[$0][0].tipo=TipoPath.ABS;this.$=new PathExp($$[$0]);\r\n      grafo.generarPadre(1, \"RelativePathExpr\");\r\n      grafo.generarHijos(\"RelativePathExpr\");\r\n      grafo.generarTexto(`RelativePathExpr[0].tipo = Absoluto; SUB_BARRA.valor = new PathExp(RelativePathExpr.valor);`);\r\n    \r\nbreak;\r\ncase 41:\r\n \r\n      this.$=new PathExp([]); grafo.generarHijos(\"ε\");\r\n      grafo.generarTexto(`SUB_BARRA.valor = new Path(new Array[]);`);\r\n    \r\nbreak;\r\ncase 42:\r\n \r\n      $$[$0].push($$[$0-1]); $$[$0].reverse(); this.$ = $$[$0];\r\n      grafo.generarPadre(2, \"P_RelativePathExpr\");\r\n      grafo.generarPadre(1, \"StepExpr\"); \r\n      grafo.generarHijos(\"StepExpr\", \"P_RelativePathExpr\");\r\n      grafo.generarTexto(`P_RelativePathExpr.push(StepExpr.valor); RelativePathExpr.valor = P_RelativePathExpr.valor;`);\r\n    \r\nbreak;\r\ncase 43:\r\n \r\n      this.$ = $$[$0]; $$[$0-1].tipo = TipoPath.ABS; this.$.push($$[$0-1]);\r\n      grafo.generarPadre(3, \"P_RelativePathExpr\");\r\n      grafo.generarPadre(2, \"StepExpr\");\r\n      grafo.generarHijos($$[$0-2], \"StepExpr\", \"P_RelativePathExpr\");\r\n      grafo.generarTexto(`StepExpr.tipo = Absoluto; P_RelativePathExpr.push(StepExpr.valor);`);\r\n    \r\nbreak;\r\ncase 44:\r\n \r\n      this.$ = $$[$0]; $$[$0-1].tipo = TipoPath.REL; this.$.push($$[$0-1]);\r\n      grafo.generarPadre(3, \"P_RelativePathExpr\");\r\n      grafo.generarPadre(2, \"StepExpr\");\r\n      grafo.generarHijos($$[$0-2], \"StepExpr\", \"P_RelativePathExpr\");\r\n      grafo.generarTexto(`StepExpr.tipo = Relativo; P_RelativePathExpr.push(StepExpr.valor);`);\r\n    \r\nbreak;\r\ncase 45:\r\n \r\n      this.$ = []; grafo.generarHijos(\"ε\");\r\n      grafo.generarTexto(`P_RelativePathExpr = [];`);\r\n    \r\nbreak;\r\ncase 46:\r\n \r\n      this.$ = $$[$0]; grafo.generarPadre(1, \"PostfixExpr\");\r\n      grafo.generarHijos(\"PostfixExpr\");\r\n      grafo.generarTexto(`StepExpr.valor = PostfixExpr.valor`);\r\n    \r\nbreak;\r\ncase 47:\r\n \r\n      this.$ = $$[$0]; grafo.generarPadre(1, \"AxisStep\");\r\n      grafo.generarHijos(\"AxisStep\");\r\n      grafo.generarTexto(`StepExpr.valor = AxisStep.valor`);\r\n    \r\nbreak;\r\ncase 48:\r\n \r\n      this.$ = $$[$0-1]; this.$.predicado = $$[$0]; \r\n      grafo.generarPadre(2, \"SUB_PredicateList\");\r\n      grafo.generarPadre(1, \"ForwardStep\");\r\n      grafo.generarHijos(\"ForwardStep\", \"SUB_PredicateList\");\r\n      grafo.generarTexto(`ForwardStep.predicado = SUB_PredicateList.valor; AxisStep.valor = ForwardStep.valor;`);\r\n    \r\nbreak;\r\ncase 49:\r\n \r\n      this.$ = $$[$0-1]; this.$.predicado = $$[$0]; grafo.generarPadre(2, \"SUB_PredicateList\");\r\n      grafo.generarPadre(1, \"ReverseStep\");\r\n      grafo.generarHijos(\"ReverseStep\", \"SUB_PredicateList\");\r\n      grafo.generarTexto(`ReverseStep.predicado = SUB_PredicateList.valor; AxisStep.valor = ReverseStep.valor;`);\r\n    \r\nbreak;\r\ncase 50:\r\n \r\n      this.$ = $$[$0]; grafo.generarPadre(1,\"PredicateList\");\r\n      grafo.generarHijos(\"PredicateList\");\r\n      grafo.generarTexto(`SUB_PredicateList.valor = PredicateList.valor`);\r\n    \r\nbreak;\r\ncase 51:\r\n \r\n      this.$ = []; grafo.generarHijos(\"ε\");\r\n      grafo.generarTexto(`SUB_PredicateList.valor = [];`);\r\n    \r\nbreak;\r\ncase 52:\r\n \r\n      this.$ = $$[$0]; this.$.push($$[$0-1]); this.$.reverse(); \r\n      grafo.generarPadre(2, \"P_PredicateList\");\r\n      grafo.generarPadre(1, \"Predicate\");\r\n      grafo.generarHijos(\"Predicate\", \"P_PredicateList\");\r\n      grafo.generarTexto(`P_PredicateList.push(Predicate); PredicateList.valor = P_PredicateList.valor`);\r\n    \r\nbreak;\r\ncase 53:\r\n \r\n      this.$ = $$[$0]; this.$.push($$[$0-1]);\r\n      grafo.generarPadre(2, \"P_PredicateList\");\r\n      grafo.generarPadre(1, \"Predicate\");\r\n      grafo.generarHijos(\"Predicate\", \"P_PredicateList\");\r\n      grafo.generarTexto(`P_PredicateList.push(Predicate);`);\r\n    \r\nbreak;\r\ncase 54:\r\n \r\n      this.$ = []; grafo.generarHijos(\"ε\");\r\n      grafo.generarTexto(`P_PredicateList = [];`);\r\n    \r\nbreak;\r\ncase 55:\r\n \r\n    this.$=$$[$0]; \r\n    grafo.generarPadre(1, \"AbbrevForwardStep\");\r\n    grafo.generarHijos(\"AbbrevForwardStep\");\r\n    grafo.generarTexto(`ForwardStep.valor = AbbrevForwardStep.valor`);\r\n  \r\nbreak;\r\ncase 56:\r\n \r\n    this.$=$$[$0-1]; this.$.nombre=$$[$0]; \r\n    grafo.generarPadre(2, \"NameTest\");\r\n    grafo.generarPadre(1, \"ForwardAxis\");\r\n    grafo.generarHijos(\"ForwardAxis\", \"NameTest\");\r\n    grafo.generarTexto(`ForwardAxis.nombre = NameTest.valor; ForwardStep.valor = ForwardAxis.valor`);\r\n  \r\nbreak;\r\ncase 57:\r\n \r\n    this.$=new Atributo($$[$0],[],TipoPath.ABS);\r\n    grafo.generarPadre(2, \"NameTest\");\r\n    grafo.generarHijos($$[$0-1], \"NameTest\");\r\n    grafo.generarTexto(`AbbrevForwardStep.valor = new Atributo(NameTest.valor);`);\r\n  \r\nbreak;\r\ncase 58:\r\n \r\n    this.$=new Camino($$[$0],[],TipoPath.ABS);\r\n    grafo.generarPadre(1, \"NameTest\");\r\n    grafo.generarHijos(\"NameTest\");\r\n    grafo.generarTexto(`AbbrevForwardStep.valor = new Camino(NameTest.valor);`);\r\n  \r\nbreak;\r\ncase 59:\r\n this.$=new Child(null,[],TipoPath.ABS); grafo.generarHijos($$[$0-1],$$[$0]); grafo.generarTexto(`ForwardAxis.valor = new Child();`); \r\nbreak;\r\ncase 60:\r\n this.$=new Descendant(null,[],TipoPath.ABS); grafo.generarHijos($$[$0-1],$$[$0]); grafo.generarTexto(`ForwardAxis.valor = new Descendant();`); \r\nbreak;\r\ncase 61:\r\n this.$=new Attribute(null,[],TipoPath.ABS); grafo.generarHijos($$[$0-1],$$[$0]); grafo.generarTexto(`ForwardAxis.valor = new Attribute();`); \r\nbreak;\r\ncase 62:\r\n this.$=new Self(null,[],TipoPath.ABS); grafo.generarHijos($$[$0-1],$$[$0]); grafo.generarTexto(`ForwardAxis.valor = new Self();`); \r\nbreak;\r\ncase 63:\r\n this.$=new DescSelf(null,[],TipoPath.ABS); grafo.generarHijos($$[$0-1],$$[$0]); grafo.generarTexto(`ForwardAxis.valor = new DescSelf();`); \r\nbreak;\r\ncase 64:\r\n this.$=new FollowSibling(null,[],TipoPath.ABS); grafo.generarHijos($$[$0-1],$$[$0]); grafo.generarTexto(`ForwardAxis.valor = new FollowSibling();`); \r\nbreak;\r\ncase 65:\r\n this.$=new Follow(null,[],TipoPath.ABS); grafo.generarHijos($$[$0-1],$$[$0]); grafo.generarTexto(`ForwardAxis.valor = new Follow();`); \r\nbreak;\r\ncase 66:\r\n  \r\nbreak;\r\ncase 67:\r\n \r\n    this.$ = $$[$0]; grafo.generarPadre(1, \"NameTest\");\r\n    grafo.generarHijos(\"NameTest\");\r\n    grafo.generarTexto(`NodeTest.valor = NameTest.valor;`);\r\n  \r\nbreak;\r\ncase 68: case 69:\r\n this.$ = $$[$0]; grafo.generarHijos($$[$0]); grafo.generarTexto(`NameTest.valor = ${$$[$0]};`); \r\nbreak;\r\ncase 70:\r\n \r\n    this.$=$$[$0]; grafo.generarPadre(1, \"AbbrevReverseStep\");\r\n    grafo.generarHijos(\"AbbrevReverseStep\");\r\n    grafo.generarTexto(`ReverseStep.valor = AbbrevReverseStep.valor`);\r\n  \r\nbreak;\r\ncase 71:\r\n \r\n    this.$=$$[$0-1]; this.$.nombre=$$[$0]; \r\n    grafo.generarPadre(2, \"NameTest\");\r\n    grafo.generarPadre(1, \"ReverseAxis\");\r\n    grafo.generarHijos(\"ReverseAxis\",\"NameTest\");\r\n    grafo.generarTexto(`ReverseAxis.nombre = NameTest; ReverseStep.valor = ReverseAxis;`);\r\n  \r\nbreak;\r\ncase 72:\r\n this.$=new CaminoInverso(\"*\",[],TipoPath.ABS); grafo.generarHijos($$[$0]); grafo.generarTexto(`caminoInverso = new CaminoInverso(); caminoInverso.tipo = Absoluto; AbbrevReverseStep.valor = caminoInverso;`); \r\nbreak;\r\ncase 73:\r\n this.$=new Parent(null,[],TipoPath.ABS); grafo.generarHijos($$[$0-1],$$[$0]); grafo.generarTexto(`parent = new Parent(); parent.tipo = Absoluto; ReverseAxis.valor = parent;`); \r\nbreak;\r\ncase 74:\r\n this.$=new Ancestor(null,[],TipoPath.ABS); grafo.generarHijos($$[$0-1],$$[$0]); grafo.generarTexto(`ancestor = new Ancestor(); ancestor.tipo = Absoluto; ReverseAxis.valor = ancestor;`); \r\nbreak;\r\ncase 75:\r\n this.$=new PrecedingSibling(null,[],TipoPath.ABS); grafo.generarHijos($$[$0-1],$$[$0]); grafo.generarTexto(`precedingS = new PrecedingSibling(); precedingS.tipo = Absoluto; ReverseAxis.valor = precedingS;`); \r\nbreak;\r\ncase 76:\r\n this.$=new Preceding(null,[],TipoPath.ABS); grafo.generarHijos($$[$0-1],$$[$0]); grafo.generarTexto(`preceding = new Preceding(); preceding.tipo = Absoluto; ReverseAxis.valor = preceding;`); \r\nbreak;\r\ncase 77:\r\n this.$=new AncestorSelf(null,[],TipoPath.ABS); grafo.generarHijos($$[$0-1],$$[$0]); grafo.generarTexto(`ancestorS = new AncestorSelf(); ancestorS.tipo = Absoluto; ReverseAxis.valor = ancestorS;`); \r\nbreak;\r\ncase 78:\r\n \r\n    this.$ = $$[$0-1]; this.$.predicado = $$[$0]; \r\n    grafo.generarPadre(2, \"SUB_PredicateList\");\r\n    grafo.generarPadre(1, \"PrimaryExpr\");\r\n    grafo.generarHijos(\"PrimaryExpr\",\"SUB_PredicateList\");\r\n    grafo.generarTexto(`PrimaryExpr.predicado = SUB_PredicateList.valor; PostfixExpr.valor = PrimaryExpr.valor`);\r\n  \r\nbreak;\r\ncase 79:\r\n this.$ = $$[$0-1]; grafo.generarPadre(2, \"ExprSingle\"); grafo.generarHijos($$[$0-2],\"ExprSingle\",$$[$0]); grafo.generarTexto(`Predicate.valor = ExprSingle.valor;`); \r\nbreak;\r\ncase 80:\r\n this.$ = $$[$0]; grafo.generarPadre(1, \"Literal\");grafo.generarHijos(\"Literal\"); grafo.generarTexto(\"PrimaryExpr.valor = literal.valor\"); \r\nbreak;\r\ncase 81:\r\n this.$ = $$[$0]; grafo.generarPadre(1, \"FunctionCall\");grafo.generarHijos(\"FunctionCall\"); grafo.generarTexto(\"PrimaryExpr.valor = functionCall.valor\"); \r\nbreak;\r\ncase 82:\r\n this.$ = $$[$0]; grafo.generarPadre(1, \"ContextItemExpr\");grafo.generarHijos(\"ContextItemExpr\"); grafo.generarTexto(\"PrimaryExpr.valor = contextItemExpr.valor\"); \r\nbreak;\r\ncase 83:\r\n this.$ = $$[$0]; grafo.generarPadre(1, \"ParenthesizedExpr\");grafo.generarHijos(\"ParenthesizedExpr\"); grafo.generarTexto(\"PrimaryExpr.valor = ParenthesizedExpr.valor\"); \r\nbreak;\r\ncase 84:\r\n this.$=new Literal(Tipo.INTEGER,Number($$[$0])); grafo.generarHijos($$[$0]); grafo.generarTexto(`return literal = new Literal(${$$[$0]}); literal.tipo = INTEGER;`); \r\nbreak;\r\ncase 85:\r\n this.$=new Literal(Tipo.DECIMAL,Number($$[$0])); grafo.generarHijos($$[$0]); grafo.generarTexto(`return literal = new Literal(${$$[$0]}); literal.tipo = DECIMAL;`); \r\nbreak;\r\ncase 86:\r\n this.$=new Literal(Tipo.STRING,$$[$0]); grafo.generarHijos($$[$0]); grafo.generarTexto(`return literal = new Literal(${$$[$0]}); literal.tipo = STRING;`); \r\nbreak;\r\ncase 87:\r\n this.$ = new CallFunction([],TipoPath.ABS,$$[$0-2]); grafo.generarHijos($$[$0-2],$$[$0-1],$$[$0]); grafo.generarTexto(`functionCall = new CallFunction(); functionCall.tipo = Absoluto;`);\r\nbreak;\r\ncase 88:\r\n this.$=new ContextItemExpr([],TipoPath.ABS); grafo.generarHijos($$[$0]); grafo.generarTexto(`contextItemExpr =  new ContextItemExpr(); contextItemExpr.tipo = Absoluto;`); \r\nbreak;\r\ncase 89:\r\n this.$=[]; grafo.generarHijos($$[$0-1],$$[$0]); grafo.generarTexto(`ParenthesizedExpr.valor = [];`); \r\nbreak;\r\ncase 90:\r\n this.$=$$[$0-1]; grafo.generarHijos($$[$0-2],$$[$0-1],$$[$0]); grafo.generarTexto(`ParenthesizedExpr.valor = ExprSingle.valor;`); \r\nbreak;\r\n}\r\n},\r\ntable: [{2:[1,3],3:1,4:2,5:4,8:5,9:6,12:7,15:8,24:9,26:$V0,27:$V1,28:10,30:$V2,34:11,35:$V3,37:$V4,38:16,39:17,41:18,42:19,43:21,45:22,49:27,50:28,51:38,52:$V5,53:$V6,55:$V7,56:$V8,57:$V9,58:$Va,59:$Vb,60:$Vc,61:$Vd,63:$Ve,64:29,65:30,66:$Vf,67:$Vg,68:$Vh,69:$Vi,70:$Vj,71:$Vk,72:20,75:23,76:24,77:25,78:26,79:$Vl,80:$Vm,81:$Vn,82:$Vo,84:$Vp},{1:[3]},{1:[2,1]},{1:[2,2]},{1:$Vq,2:[1,55],6:54,7:$Vr},o($Vs,[2,8]),o($Vs,$Vt,{10:57,11:$Vu}),o($Vv,$Vw,{13:59,14:$Vx}),o($Vy,[2,17],{16:61,17:62,18:[1,63],19:[1,64],20:[1,65],21:[1,66],22:[1,67],23:[1,68]}),o($Vz,$VA,{25:69,26:$VB,27:$VC}),o($VD,$VE,{29:72,30:$VF,31:$VG,32:$VH,33:$VI}),o($VJ,[2,34]),{26:$V0,27:$V1,28:77,30:$V2,34:11,35:$V3,37:$V4,38:16,39:17,41:18,42:19,43:21,45:22,49:27,50:28,51:38,52:$V5,53:$V6,55:$V7,56:$V8,57:$V9,58:$Va,59:$Vb,60:$Vc,61:$Vd,63:$Ve,64:29,65:30,66:$Vf,67:$Vg,68:$Vh,69:$Vi,70:$Vj,71:$Vk,72:20,75:23,76:24,77:25,78:26,79:$Vl,80:$Vm,81:$Vn,82:$Vo,84:$Vp},{26:$V0,27:$V1,28:78,30:$V2,34:11,35:$V3,37:$V4,38:16,39:17,41:18,42:19,43:21,45:22,49:27,50:28,51:38,52:$V5,53:$V6,55:$V7,56:$V8,57:$V9,58:$Va,59:$Vb,60:$Vc,61:$Vd,63:$Ve,64:29,65:30,66:$Vf,67:$Vg,68:$Vh,69:$Vi,70:$Vj,71:$Vk,72:20,75:23,76:24,77:25,78:26,79:$Vl,80:$Vm,81:$Vn,82:$Vo,84:$Vp},o([1,2,7,11,14,18,19,20,21,22,23,26,27,31,32,33,74,83],[2,41],{39:17,41:18,42:19,72:20,43:21,45:22,75:23,76:24,77:25,78:26,49:27,50:28,64:29,65:30,51:38,36:79,38:80,30:$V2,52:$V5,53:$V6,55:$V7,56:$V8,57:$V9,58:$Va,59:$Vb,60:$Vc,61:$Vd,63:$Ve,66:$Vf,67:$Vg,68:$Vh,69:$Vi,70:$Vj,71:$Vk,79:$Vl,80:$Vm,81:$Vn,82:$Vo,84:$Vp}),{30:$V2,38:81,39:17,41:18,42:19,43:21,45:22,49:27,50:28,51:38,52:$V5,53:$V6,55:$V7,56:$V8,57:$V9,58:$Va,59:$Vb,60:$Vc,61:$Vd,63:$Ve,64:29,65:30,66:$Vf,67:$Vg,68:$Vh,69:$Vi,70:$Vj,71:$Vk,72:20,75:23,76:24,77:25,78:26,79:$Vl,80:$Vm,81:$Vn,82:$Vo,84:$Vp},o($VJ,[2,39]),o($VJ,$VK,{40:82,35:$VL,37:$VM}),o($VN,[2,46]),o($VN,[2,47]),o($VN,$VO,{44:85,46:86,47:87,73:$VP}),o($VN,$VO,{46:86,47:87,44:89,73:$VP}),o($VN,$VO,{46:86,47:87,44:90,73:$VP}),o($VQ,[2,80]),o($VQ,[2,81]),o($VQ,[2,82]),o($VQ,[2,83]),o($VQ,[2,55]),{30:$V2,51:91,63:$VR},o($VQ,[2,70]),{30:$V2,51:93,63:$VR},o($VQ,[2,84]),o($VQ,[2,85]),o($VQ,[2,86]),o($VQ,$VS,{82:[1,94]}),o($VQ,[2,88]),{5:96,8:5,9:6,12:7,15:8,24:9,26:$V0,27:$V1,28:10,30:$V2,34:11,35:$V3,37:$V4,38:16,39:17,41:18,42:19,43:21,45:22,49:27,50:28,51:38,52:$V5,53:$V6,55:$V7,56:$V8,57:$V9,58:$Va,59:$Vb,60:$Vc,61:$Vd,63:$Ve,64:29,65:30,66:$Vf,67:$Vg,68:$Vh,69:$Vi,70:$Vj,71:$Vk,72:20,75:23,76:24,77:25,78:26,79:$Vl,80:$Vm,81:$Vn,82:$Vo,83:[1,95],84:$Vp},{30:$V2,51:97,63:$VR},o($VQ,[2,58]),{54:[1,98]},{54:[1,99]},{54:[1,100]},{54:[1,101]},{54:[1,102]},{54:[1,103]},{54:[1,104]},{54:[1,105]},o($VQ,[2,72]),{54:[1,106]},{54:[1,107]},{54:[1,108]},{54:[1,109]},{54:[1,110]},o($VQ,[2,69]),{1:[2,3]},{1:[2,4]},{5:111,8:5,9:6,12:7,15:8,24:9,26:$V0,27:$V1,28:10,30:$V2,34:11,35:$V3,37:$V4,38:16,39:17,41:18,42:19,43:21,45:22,49:27,50:28,51:38,52:$V5,53:$V6,55:$V7,56:$V8,57:$V9,58:$Va,59:$Vb,60:$Vc,61:$Vd,63:$Ve,64:29,65:30,66:$Vf,67:$Vg,68:$Vh,69:$Vi,70:$Vj,71:$Vk,72:20,75:23,76:24,77:25,78:26,79:$Vl,80:$Vm,81:$Vn,82:$Vo,84:$Vp},o($Vs,[2,9]),{9:112,12:7,15:8,24:9,26:$V0,27:$V1,28:10,30:$V2,34:11,35:$V3,37:$V4,38:16,39:17,41:18,42:19,43:21,45:22,49:27,50:28,51:38,52:$V5,53:$V6,55:$V7,56:$V8,57:$V9,58:$Va,59:$Vb,60:$Vc,61:$Vd,63:$Ve,64:29,65:30,66:$Vf,67:$Vg,68:$Vh,69:$Vi,70:$Vj,71:$Vk,72:20,75:23,76:24,77:25,78:26,79:$Vl,80:$Vm,81:$Vn,82:$Vo,84:$Vp},o($Vv,[2,12]),{12:113,15:8,24:9,26:$V0,27:$V1,28:10,30:$V2,34:11,35:$V3,37:$V4,38:16,39:17,41:18,42:19,43:21,45:22,49:27,50:28,51:38,52:$V5,53:$V6,55:$V7,56:$V8,57:$V9,58:$Va,59:$Vb,60:$Vc,61:$Vd,63:$Ve,64:29,65:30,66:$Vf,67:$Vg,68:$Vh,69:$Vi,70:$Vj,71:$Vk,72:20,75:23,76:24,77:25,78:26,79:$Vl,80:$Vm,81:$Vn,82:$Vo,84:$Vp},o($Vy,[2,15]),{15:114,24:9,26:$V0,27:$V1,28:10,30:$V2,34:11,35:$V3,37:$V4,38:16,39:17,41:18,42:19,43:21,45:22,49:27,50:28,51:38,52:$V5,53:$V6,55:$V7,56:$V8,57:$V9,58:$Va,59:$Vb,60:$Vc,61:$Vd,63:$Ve,64:29,65:30,66:$Vf,67:$Vg,68:$Vh,69:$Vi,70:$Vj,71:$Vk,72:20,75:23,76:24,77:25,78:26,79:$Vl,80:$Vm,81:$Vn,82:$Vo,84:$Vp},o($VT,[2,18]),o($VT,[2,19]),o($VT,[2,20]),o($VT,[2,21]),o($VT,[2,22]),o($VT,[2,23]),o($Vz,[2,24]),{24:115,26:$V0,27:$V1,28:10,30:$V2,34:11,35:$V3,37:$V4,38:16,39:17,41:18,42:19,43:21,45:22,49:27,50:28,51:38,52:$V5,53:$V6,55:$V7,56:$V8,57:$V9,58:$Va,59:$Vb,60:$Vc,61:$Vd,63:$Ve,64:29,65:30,66:$Vf,67:$Vg,68:$Vh,69:$Vi,70:$Vj,71:$Vk,72:20,75:23,76:24,77:25,78:26,79:$Vl,80:$Vm,81:$Vn,82:$Vo,84:$Vp},{24:116,26:$V0,27:$V1,28:10,30:$V2,34:11,35:$V3,37:$V4,38:16,39:17,41:18,42:19,43:21,45:22,49:27,50:28,51:38,52:$V5,53:$V6,55:$V7,56:$V8,57:$V9,58:$Va,59:$Vb,60:$Vc,61:$Vd,63:$Ve,64:29,65:30,66:$Vf,67:$Vg,68:$Vh,69:$Vi,70:$Vj,71:$Vk,72:20,75:23,76:24,77:25,78:26,79:$Vl,80:$Vm,81:$Vn,82:$Vo,84:$Vp},o($VD,[2,28]),{26:$V0,27:$V1,28:117,30:$V2,34:11,35:$V3,37:$V4,38:16,39:17,41:18,42:19,43:21,45:22,49:27,50:28,51:38,52:$V5,53:$V6,55:$V7,56:$V8,57:$V9,58:$Va,59:$Vb,60:$Vc,61:$Vd,63:$Ve,64:29,65:30,66:$Vf,67:$Vg,68:$Vh,69:$Vi,70:$Vj,71:$Vk,72:20,75:23,76:24,77:25,78:26,79:$Vl,80:$Vm,81:$Vn,82:$Vo,84:$Vp},{26:$V0,27:$V1,28:118,30:$V2,34:11,35:$V3,37:$V4,38:16,39:17,41:18,42:19,43:21,45:22,49:27,50:28,51:38,52:$V5,53:$V6,55:$V7,56:$V8,57:$V9,58:$Va,59:$Vb,60:$Vc,61:$Vd,63:$Ve,64:29,65:30,66:$Vf,67:$Vg,68:$Vh,69:$Vi,70:$Vj,71:$Vk,72:20,75:23,76:24,77:25,78:26,79:$Vl,80:$Vm,81:$Vn,82:$Vo,84:$Vp},{26:$V0,27:$V1,28:119,30:$V2,34:11,35:$V3,37:$V4,38:16,39:17,41:18,42:19,43:21,45:22,49:27,50:28,51:38,52:$V5,53:$V6,55:$V7,56:$V8,57:$V9,58:$Va,59:$Vb,60:$Vc,61:$Vd,63:$Ve,64:29,65:30,66:$Vf,67:$Vg,68:$Vh,69:$Vi,70:$Vj,71:$Vk,72:20,75:23,76:24,77:25,78:26,79:$Vl,80:$Vm,81:$Vn,82:$Vo,84:$Vp},{26:$V0,27:$V1,28:120,30:$V2,34:11,35:$V3,37:$V4,38:16,39:17,41:18,42:19,43:21,45:22,49:27,50:28,51:38,52:$V5,53:$V6,55:$V7,56:$V8,57:$V9,58:$Va,59:$Vb,60:$Vc,61:$Vd,63:$Ve,64:29,65:30,66:$Vf,67:$Vg,68:$Vh,69:$Vi,70:$Vj,71:$Vk,72:20,75:23,76:24,77:25,78:26,79:$Vl,80:$Vm,81:$Vn,82:$Vo,84:$Vp},o($VJ,[2,35]),o($VJ,[2,36]),o($VJ,[2,37]),o($VJ,[2,40]),o($VJ,[2,38]),o($VJ,[2,42]),{30:$V2,39:121,41:18,42:19,43:21,45:22,49:27,50:28,51:38,52:$V5,53:$V6,55:$V7,56:$V8,57:$V9,58:$Va,59:$Vb,60:$Vc,61:$Vd,63:$Ve,64:29,65:30,66:$Vf,67:$Vg,68:$Vh,69:$Vi,70:$Vj,71:$Vk,72:20,75:23,76:24,77:25,78:26,79:$Vl,80:$Vm,81:$Vn,82:$Vo,84:$Vp},{30:$V2,39:122,41:18,42:19,43:21,45:22,49:27,50:28,51:38,52:$V5,53:$V6,55:$V7,56:$V8,57:$V9,58:$Va,59:$Vb,60:$Vc,61:$Vd,63:$Ve,64:29,65:30,66:$Vf,67:$Vg,68:$Vh,69:$Vi,70:$Vj,71:$Vk,72:20,75:23,76:24,77:25,78:26,79:$Vl,80:$Vm,81:$Vn,82:$Vo,84:$Vp},o($VN,[2,78]),o($VN,[2,50]),o($VN,$VU,{48:123,47:124,73:$VP}),{5:125,8:5,9:6,12:7,15:8,24:9,26:$V0,27:$V1,28:10,30:$V2,34:11,35:$V3,37:$V4,38:16,39:17,41:18,42:19,43:21,45:22,49:27,50:28,51:38,52:$V5,53:$V6,55:$V7,56:$V8,57:$V9,58:$Va,59:$Vb,60:$Vc,61:$Vd,63:$Ve,64:29,65:30,66:$Vf,67:$Vg,68:$Vh,69:$Vi,70:$Vj,71:$Vk,72:20,75:23,76:24,77:25,78:26,79:$Vl,80:$Vm,81:$Vn,82:$Vo,84:$Vp},o($VN,[2,48]),o($VN,[2,49]),o($VQ,[2,56]),o($VQ,$VS),o($VQ,[2,71]),{83:[1,126]},o($VQ,[2,89]),{83:[1,127]},o($VQ,[2,57]),o($VV,[2,59]),o($VV,[2,60]),o($VV,[2,61]),o($VV,[2,62]),o($VV,[2,63]),o($VV,[2,64]),o($VV,[2,65]),o($VV,[2,66]),o($VV,[2,73]),o($VV,[2,74]),o($VV,[2,75]),o($VV,[2,76]),o($VV,[2,77]),{1:$Vq,2:[1,129],6:128,7:$Vr},o($Vs,$Vt,{10:130,11:$Vu}),o($Vv,$Vw,{13:131,14:$Vx}),o($Vy,[2,16]),o($Vz,$VA,{25:132,26:$VB,27:$VC}),o($Vz,$VA,{25:133,26:$VB,27:$VC}),o($VD,$VE,{29:134,30:$VF,31:$VG,32:$VH,33:$VI}),o($VD,$VE,{29:135,30:$VF,31:$VG,32:$VH,33:$VI}),o($VD,$VE,{29:136,30:$VF,31:$VG,32:$VH,33:$VI}),o($VD,$VE,{29:137,30:$VF,31:$VG,32:$VH,33:$VI}),o($VJ,$VK,{40:138,35:$VL,37:$VM}),o($VJ,$VK,{40:139,35:$VL,37:$VM}),o($VN,[2,52]),o($VN,$VU,{47:124,48:140,73:$VP}),{74:[1,141]},o($VQ,[2,87]),o($VQ,[2,90]),{1:[2,5]},{1:[2,7]},o($Vs,[2,10]),o($Vv,[2,13]),o($Vz,[2,25]),o($Vz,[2,26]),o($VD,[2,29]),o($VD,[2,30]),o($VD,[2,31]),o($VD,[2,32]),o($VJ,[2,43]),o($VJ,[2,44]),o($VN,[2,53]),o($VQ,[2,79])],\r\ndefaultActions: {2:[2,1],3:[2,2],54:[2,3],55:[2,4],128:[2,5],129:[2,7]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n  const {Tipo,TipoPath,Comando} = require(\"./AST/Entorno\");\r\n  const {Logical} = require(\"./Expresion/Logical\");\r\n  const {Arithmetic, Unary} = require(\"./Expresion/Arithmetics\")\r\n  const {Literal,PathExp} = require(\"./Expresion/Expresiones\");\r\n  const { ComparisonExp } = require('./Expresion/Comparison')\r\n  const { Atributo,Camino,Child,Descendant,Attribute,Self,DescSelf,FollowSibling,Follow } = require('./Expresion/axes')\r\n  const { CaminoInverso,Parent,Ancestor,PrecedingSibling,AncestorSelf,Preceding } = require('./Expresion/axes')\r\n  const { ContextItemExpr,CallFunction } = require('./Expresion/postfix')\r\n  const { grafoCST } = require('../CST')\r\n  \r\n  var grafo = new grafoCST(); \r\n\r\n  var ListaErrores = []\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:return \"ROR\"\r\nbreak;\r\ncase 1:return \"RAND\"\r\nbreak;\r\ncase 2:return \"DIV\"\r\nbreak;\r\ncase 3:return \"IDIV\"\r\nbreak;\r\ncase 4:return \"MOD\"\r\nbreak;\r\ncase 5:return \"RRETURN\"\r\nbreak;\r\ncase 6:return \"RFOR\"\r\nbreak;\r\ncase 7:return \"RIN\"\r\nbreak;\r\ncase 8:return \"RTO\"\r\nbreak;\r\ncase 9:return \"EQ\"\r\nbreak;\r\ncase 10:return \"NE\"\r\nbreak;\r\ncase 11:return \"LT\"\r\nbreak;\r\ncase 12:return \"LE\"\r\nbreak;\r\ncase 13:return \"GT\"\r\nbreak;\r\ncase 14:return \"GE\"\r\nbreak;\r\ncase 15:return \"RCHILD\"\r\nbreak;\r\ncase 16:return \"RDESSELF\"\r\nbreak;\r\ncase 17:return \"RDESCENDANT\"\r\nbreak;\r\ncase 18:return \"RATTRIBUTE\"\r\nbreak;\r\ncase 19:return \"RSELF\"\r\nbreak;\r\ncase 20:return \"RFOLLOWSIBLING\"\r\nbreak;\r\ncase 21:return \"RFOLLOW\"\r\nbreak;\r\ncase 22:return \"RNAMESPACE\"\r\nbreak;\r\ncase 23:return \"RPARENT\"\r\nbreak;\r\ncase 24:return \"RANCESTORORSELF\"\r\nbreak;\r\ncase 25:return \"RANCESTOR\"\r\nbreak;\r\ncase 26:return \"RPRECEDSIBLING\"\r\nbreak;\r\ncase 27:return \"RPRECED\"\r\nbreak;\r\ncase 28:return \"DECIMAL\"\r\nbreak;\r\ncase 29:return \"INTEGER\"\r\nbreak;\r\ncase 30: yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return \"CADENA\" \r\nbreak;\r\ncase 31:return \"NOMBRE\"\r\nbreak;\r\ncase 32:return \"DOBLEBARRA\"\r\nbreak;\r\ncase 33:return \"BARRA\"\r\nbreak;\r\ncase 34:return \"ARROBA\"\r\nbreak;\r\ncase 35:return \"CORA\"\r\nbreak;\r\ncase 36:return \"CORB\"\r\nbreak;\r\ncase 37:return \"MAS\"\r\nbreak;\r\ncase 38:return \"MENOS\"\r\nbreak;\r\ncase 39:return \"POR\"\r\nbreak;\r\ncase 40:return \"MAYORIG\"\r\nbreak;\r\ncase 41:return \"MENORIG\"\r\nbreak;\r\ncase 42:return \"DIFERENTE\"\r\nbreak;\r\ncase 43:return \"MENOR\"\r\nbreak;\r\ncase 44:return \"MAYOR\"\r\nbreak;\r\ncase 45:return \"IGUAL\"\r\nbreak;\r\ncase 46:return \"PIPE\"\r\nbreak;\r\ncase 47:return \"COMA\"\r\nbreak;\r\ncase 48:return \"DOLAR\"\r\nbreak;\r\ncase 49:return \"ADMIRACION\"\r\nbreak;\r\ncase 50:return \"ARROBA\"\r\nbreak;\r\ncase 51:return \"DOBLEPUNTO\"\r\nbreak;\r\ncase 52:return \"PARENTESISA\"\r\nbreak;\r\ncase 53:return \"PARENTESISC\"\r\nbreak;\r\ncase 54:return \"INTERROGACIONC\"\r\nbreak;\r\ncase 55:return \"PUNTO\"\r\nbreak;\r\ncase 56:return \"DOBLEDOSPUNTOS\"\r\nbreak;\r\ncase 57:return \"DOSPUNTOS\"\r\nbreak;\r\ncase 58:\r\nbreak;\r\ncase 59:\r\nbreak;\r\ncase 60: ListaErrores.push({Error:'Este es un error léxico: ' + yy_.yytext,tipo:\"Lexico\", Linea: yy_.yylloc.first_line , columna:yy_.yylloc.first_column}) \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:or\\b)/i,/^(?:and\\b)/i,/^(?:div\\b)/i,/^(?:idiv\\b)/i,/^(?:mod\\b)/i,/^(?:return\\b)/i,/^(?:for\\b)/i,/^(?:in\\b)/i,/^(?:to\\b)/i,/^(?:eq\\b)/i,/^(?:ne\\b)/i,/^(?:lt\\b)/i,/^(?:le\\b)/i,/^(?:gt\\b)/i,/^(?:ge\\b)/i,/^(?:child\\b)/i,/^(?:descendant-or-self\\b)/i,/^(?:descendant\\b)/i,/^(?:attribute\\b)/i,/^(?:self\\b)/i,/^(?:following-sibling\\b)/i,/^(?:following\\b)/i,/^(?:namespace\\b)/i,/^(?:parent\\b)/i,/^(?:ancestor-or-self\\b)/i,/^(?:ancestor\\b)/i,/^(?:preceding-sibling\\b)/i,/^(?:preceding\\b)/i,/^(?:(\\.[0-9]+)|([0-9]+\\.[0-9]+))/i,/^(?:[0-9]+)/i,/^(?:(\"[^\"]*\")|('[^']*'))/i,/^(?:([a-zA-ZñÑ_])([a-zA-ZñÑ0-9_-]|\\.)*)/i,/^(?:\\/\\/)/i,/^(?:\\/)/i,/^(?:@)/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:>=)/i,/^(?:<=)/i,/^(?:!=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:=)/i,/^(?:\\|)/i,/^(?:,)/i,/^(?:\\$)/i,/^(?:!)/i,/^(?:@)/i,/^(?:\\.\\.)/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:\\?)/i,/^(?:\\.)/i,/^(?:::)/i,/^(?::)/i,/^(?:[ \\r\\t]+)/i,/^(?:\\n)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = XpathDesc;\r\nexports.Parser = XpathDesc.Parser;\r\nexports.parse = function () { return XpathDesc.parse.apply(XpathDesc, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar grammar = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,10],$V1=[1,12],$V2=[6,11,21,24],$V3=[1,20],$V4=[1,23],$V5=[1,29],$V6=[11,21],$V7=[2,16,18],$V8=[11,21,24],$V9=[2,22,26,28];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"ini\":3,\"CUERPO\":4,\"LISTA_OBJETO\":5,\"EOF\":6,\"ETIQUETACONFIGURACION\":7,\"OBJETO\":8,\"OBJETODOBLE\":9,\"OBJETOSIMPLE\":10,\"Texto\":11,\"ETIQUETAABRE\":12,\"ETIQUETACIERRE\":13,\"InicioEtiquetaConf\":14,\"LISTA_ATRIBUTOSCONF\":15,\"CierreEtiquetaConf\":16,\"ATRIBUTOCONF\":17,\"AtributoConf\":18,\"IgualAtributoConf\":19,\"ValorAtributoConf\":20,\"InicioEtiquetaI\":21,\"CierreEtiquetaI\":22,\"LISTA_ATRIBUTOS\":23,\"InicioEtiquetaC\":24,\"CierreEtiquetaC\":25,\"FinEtiquetaI\":26,\"ATRIBUTO\":27,\"AtributoEtiqueta\":28,\"IgualAtributo\":29,\"ValorAtributo\":30,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",6:\"EOF\",11:\"Texto\",14:\"InicioEtiquetaConf\",16:\"CierreEtiquetaConf\",18:\"AtributoConf\",19:\"IgualAtributoConf\",20:\"ValorAtributoConf\",21:\"InicioEtiquetaI\",22:\"CierreEtiquetaI\",24:\"InicioEtiquetaC\",25:\"CierreEtiquetaC\",26:\"FinEtiquetaI\",28:\"AtributoEtiqueta\",29:\"IgualAtributo\",30:\"ValorAtributo\"},\r\nproductions_: [0,[3,1],[3,1],[4,2],[4,3],[5,2],[5,1],[8,1],[8,1],[8,1],[9,2],[9,3],[7,3],[7,2],[7,3],[15,2],[15,1],[15,2],[17,3],[12,2],[12,3],[12,3],[13,2],[10,2],[10,3],[10,3],[23,2],[23,1],[23,2],[27,3]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n      this.$=$$[$0]; grafo.generarPadre(1,\"INICIO\");\r\n      grafo.generarHijos(\"INICIO\");\r\n      var retornoErrores = Object.assign([], ListaErrores);\r\n      ListaErrores = [];\r\n      var retornoGrafo = Object.assign({}, grafo);\r\n      grafo = new grafoCST();\r\n      var c3d = C3D.getFullC3D();\r\n      C3D.SetearXML();\r\n      return{\r\n        datos:this.$,\r\n        nodes:retornoGrafo.pilaNodos,\r\n        edges:retornoGrafo.PilaEdges,\r\n        tabla:retornoGrafo.TablaGramatica,\r\n        errores:retornoErrores,\r\n        c3d:c3d\r\n      }\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n      ListaErrores.push({Error:'Error sintactico irrecuperable',tipo:\"Semantico\", Linea: this._$.first_line , columna: this._$.first_column}) \r\n      var retornoErrores = Object.assign([], ListaErrores);\r\n      ListaErrores = [];\r\n      var retornoGrafo = Object.assign({}, grafo);\r\n      grafo = new grafoCST();\r\n      return {datos:[],edges:[],nodes:[], tabla:[], errores:retornoErrores}\r\n    \r\nbreak;\r\ncase 3:\r\n \r\n      this.$ = new helpers.ObjetoPrincipal(\"/\",[],$$[$0-1],this._$.first_line, this._$.first_column);  \r\n\t\t\tgrafo.generarPadre(1,\"LISTA_OBJETO\");\r\n      grafo.generarHijos(\"LISTA_OBJETO\")\r\n      grafo.generarTexto(\"Cuerpo.entorno = ListaObjeto.entorno\")\r\n\t\t\r\nbreak;\r\ncase 4:\r\n \r\n      this.$ = new helpers.ObjetoPrincipal(\"/\",$$[$0-2],$$[$0-1],this._$.first_line, this._$.first_column); \r\n\t\t\tgrafo.generarPadre(2,\"LISTA_OBJETO\");\r\n      grafo.generarPadre(1,\"ETIQUETACONFIGURACION\");\r\n      grafo.generarHijos(\"ETIQUETACONFIGURACION\",\"LISTA_OBJETO\");\r\n      grafo.generarTexto(\"Cuerpo.entorno = ListaObjeto.entorno; Cuerpo.configs = EtiquetaConfigs.configs\")\r\n\t\t\r\nbreak;\r\ncase 5:\r\n \r\n    this.$ = $$[$0-1]; this.$.push($$[$0].texto); \r\n    grafo.generarPadre(2,\"OBJETO\");\r\n    grafo.generarPadre(1,\"LISTA_OBJETO\");\r\n    grafo.generarHijos(\"LISTA_OBJETO\",\"OBJETO\")\r\n    grafo.generarTexto('ListaObjeto.entorno = ListaObjeto_1.entorno; LostaObjeto.entorno.set(Objeto.val)')\r\n  \r\nbreak;\r\ncase 6:\r\n \r\n    this.$ = $$[$0].esTexto ? $$[$0].texto: new Array($$[$0].texto); \r\n    grafo.generarPadre(1,\"OBJETO\");\r\n    grafo.generarHijos(\"OBJETO\") \r\n    grafo.generarTexto(`ListaObjeto.entorno = new Entorno(); LostaObjeto.entorno.set(Objeto.val)`)\r\n  \r\nbreak;\r\ncase 7:\r\n \r\n    this.$ = { texto:$$[$0], esTexto:false}; \r\n    grafo.generarPadre(1,\"OBJETODOBLE\");\r\n    grafo.generarHijos(\"OBJETODOBLE\")\r\n    grafo.generarTexto(\"Objeto.val = ObjetoDoble.val\")\r\n  \r\nbreak;\r\ncase 8:\r\n \r\n    this.$ = { texto:$$[$0], esTexto:false}; \r\n    grafo.generarPadre(1,\"OBJETOSIMPLE\");\r\n    grafo.generarHijos(\"OBJETOSIMPLE\")\r\n    grafo.generarTexto(\"Objeto.val = ObjetoSimple.val\")\r\n  \r\nbreak;\r\ncase 9:\r\n \r\n    this.$ = { texto:helpers.CambiarCodificacion($$[$0],tipoCodificacion), esTexto:true}; \r\n    grafo.generarHijos(\"texto\")\r\n    grafo.generarTexto(\"Texto.val=texto\")\r\n  \r\nbreak;\r\ncase 10:\r\n\r\n\t\t\tthis.$ = objetoCorrecto($$[$0-1].tipo, $$[$0],this._$.first_line,this._$.first_column) ? new helpers.Objeto($$[$0-1].tipo, $$[$0-1].atributos, [], this._$.first_line, this._$.first_column) : null;\r\n\t\t\tgrafo.generarPadre(2,\"ETIQUETACIERRE\");\r\n      grafo.generarPadre(1,\"ETIQUETAABRE\");\r\n      grafo.generarHijos(\"ETIQUETAABRE\",\"ETIQUETACIERRE\")\r\n      grafo.generarTexto(`if(EtiquetaAbre.nombre==EtiquetaCierra.nombre){ ObjetoDoble.val = new Etiqueta(EtiquetaAbre.nombre) } else { new Error() }`)\r\n\t\t\r\nbreak;\r\ncase 11:\r\n \r\n\t\t\tthis.$ = objetoCorrecto($$[$0-2].tipo, $$[$0]) ? new helpers.Objeto($$[$0-2].tipo, $$[$0-2].atributos, $$[$0-1], this._$.first_line, this._$.first_column) : null;\r\n\t\t\tgrafo.generarPadre(3,\"ETIQUETACIERRE\");\r\n      grafo.generarPadre(2,\"LISTA_OBJETO\");\r\n      grafo.generarPadre(1,\"ETIQUETAABRE\");\r\n      grafo.generarHijos(\"ETIQUETAABRE\",\"LISTA_OBJETO\",\"ETIQUETACIERRE\")\r\n      grafo.generarTexto(`if(EtiquetaAbre.nombre==EtiquetaCierra.nombre){ ObjetoDoble.val = new Etiqueta(EtiquetaAbre.nombre,Lista_Objetos.entorno); } else { new Error() }`)\r\n\t\t\r\nbreak;\r\ncase 12:\r\n \r\n    this.$ = $$[$0-1]; grafo.generarPadre(2,\"LISTA_ATRIBUTOSCONF\");\r\n    grafo.generarHijos($$[$0-2],\"LISTA_ATRIBUTOSCONF\",$$[$0]) \r\n    grafo.generarTexto(`EtiquetaConfiguracion.configuraciones=Lista_AtributosConf.configuraciones; `)\r\n  \r\nbreak;\r\ncase 13:\r\n \r\n    this.$ = []; \r\n    grafo.generarHijos($$[$0-1],$$[$0])\r\n    grafo.generarTexto(`EtiquetaConfiguracion.configuraciones=[]`)\r\n  \r\nbreak;\r\ncase 14:\r\n \r\n    ListaErrores.push({Error:'Este es un error Sintactico: ' + $$[$0-1] ,tipo:\"Semantico\", Linea: this._$.first_line , columna: this._$.first_column})\r\n    this.$= {tipo:$$[$0-2],atributos:[]}\r\n    this.$=[];grafo.generarHijos($$[$0-2],\"error\",$$[$0-1])\r\n    grafo.generarTexto(`EtiquetaConfiguracion.configuraciones=[]; new Error()`)\r\n  \r\nbreak;\r\ncase 15:\r\n \r\n      this.$ = $$[$0-1]; this.$.push($$[$0]); \r\n      grafo.generarPadre(2,\"ATRIBUTOCONF\");\r\n      grafo.generarPadre(1,\"LISTA_ATRIBUTOSCONF\");\r\n      grafo.generarHijos(\"LISTA_ATRIBUTOSCONF\",\"ATRIBUTOCONF\")  \r\n      grafo.generarTexto(`Lista_AtributoConf.configuraciones=Lista_AtributoConf.configuraciones; Lista_AtributoConf.configuraciones.push(AtributoConf.configuracion)`)\r\n    \r\nbreak;\r\ncase 16:\r\n \r\n      this.$ = []; \r\n      this.$.push($$[$0]); \r\n      grafo.generarPadre(1,\"ATRIBUTOCONF\");\r\n      grafo.generarHijos(\"ATRIBUTOCONF\") \r\n      grafo.generarTexto(`Lista_AtributoConf.configuraciones= []; Lista_AtributoConf.configuraciones.push(AtributoConf.configuracion)`)\r\n    \r\nbreak;\r\ncase 17:\r\n \r\n      this.$=$$[$0-1]; grafo.generarPadre(1,\"LISTA_ATRIBUTOSCONF\"); grafo.generarHijos(\"ATRIBUTO\",\"error\") \r\n      ListaErrores.push({Error:'Error sintactico se recupero en ' + $$[$0] ,tipo:\"Semantico\", Linea: this._$.first_line , columna: this._$.first_column})  \r\n      grafo.generarTexto(`Lista_AtributoConf.configuraciones=Lista_AtributoConf.configuraciones; new Error()`)\r\n    \r\nbreak;\r\ncase 18:\r\n \r\n      this.$ = new helpers.Atributo($$[$0-2],$$[$0],this._$.first_line, this._$.first_column); \r\n      grafo.generarHijos($$[$0-2],$$[$0-1],$$[$0]);\r\n      if ($$[$0-2] == 'encoding') tipoCodificacion =  $$[$0]\r\n      grafo.generarTexto(`AtributoConf.configuracion = new Configuracion(${$$[$0-2]},${$$[$0]},${this._$.first_line},${this._$.first_column})`)\r\n    \r\nbreak;\r\ncase 19:\r\n \r\n      this.$ = {tipo:$$[$0-1], atributos:[]}; \r\n      grafo.generarHijos($$[$0-1],$$[$0]) \r\n      grafo.generarTexto(`EtiquetaAbre.nombre = ${$$[$0-1].replace(\"<\",\"\")}`)\r\n    \r\nbreak;\r\ncase 20:\r\n \r\n      this.$ = {tipo:$$[$0-2], atributos:$$[$0-1]}; grafo.generarPadre(2,\"LISTA_ATRIBUTOS\");\r\n      grafo.generarHijos($$[$0-2],\"LISTA_ATRIBUTOS\",$$[$0])  \r\n      grafo.generarTexto(`EtiquetaAbre.nombre = ${$$[$0-2].replace(\"<\",\"\")}; EtiquetaAbre.entorno = Lista_Atributos.entorno`)\r\n    \r\nbreak;\r\ncase 21:\r\n \r\n      ListaErrores.push({Error:'Error sintactico se recupero en ' + $$[$0-1] ,tipo:\"Semantico\", Linea: this._$.first_line , columna: this._$.first_column})\r\n      this.$= {tipo:$$[$0-2],atributos:[]}\r\n      grafo.generarHijos($$[$0-2],\"error\",$$[$0])\r\n      grafo.generarTexto(`EtiquetaAbre.nombre = ${$$[$0-2].replace(\"<\",\"\")};new Error()`)\r\n    \r\nbreak;\r\ncase 22:\r\n \r\n      this.$ = $$[$0-1]; \r\n      grafo.generarHijos($$[$0-1],$$[$0]) \r\n      grafo.generarTexto(`EtiquetaCierre.nombre = ${$$[$0-1].replace(\"</\",\"\")}`)\r\n    \r\nbreak;\r\ncase 23:\r\n \r\n      this.$ = new helpers.Objeto($$[$0-1],[],[],this._$.first_line, this._$.first_column); \r\n      grafo.generarHijos($$[$0-1],$$[$0]) \r\n      grafo.generarTexto(`ObjetoSimple.val = new Etiqueta(${$$[$0-1].replace(\"<\",\"\")})`)\r\n    \r\nbreak;\r\ncase 24:\r\n \r\n      this.$ = new helpers.Objeto($$[$0-2],$$[$0-1],[],this._$.first_line, this._$.first_column); \r\n      grafo.generarPadre(2,\"LISTA_ATRIBUTOS\");\r\n      grafo.generarHijos($$[$0-2],\"LISTA_ATRIBUTOS\",$$[$0]) \r\n      grafo.generarTexto(`ObjetoSimple.val = new Etiqueta(${$$[$0-2].replace(\"<\",\"\")},Lista_Astributos)`)\r\n    \r\nbreak;\r\ncase 25:\r\n \r\n      ListaErrores.push({Error:'Error sintactico se recupero en ' + $$[$0-1] ,tipo:\"Semantico\", Linea: this._$.first_line , columna: this._$.first_column})\r\n      this.$= {tipo:$$[$0-2],atributos:[]}\r\n      grafo.generarHijos($$[$0-2],\"error\",$$[$0])\r\n      grafo.generarTexto(`ObjetoSimple.val = new Etiqueta(${$$[$0-2].replace(\"<\",\"\")});new Error()`)\r\n    \r\nbreak;\r\ncase 26:\r\n \r\n      this.$ = $$[$0-1]; this.$.push($$[$0]); \r\n      grafo.generarPadre(2,\"ATRIBUTO\");\r\n      grafo.generarPadre(1,\"LISTA_ATRIBUTOS\");\r\n      grafo.generarHijos(\"LISTA_ATRIBUTOS\",\"ATRIBUTO\") \r\n      grafo.generarTexto(`Lista_Atributos.entorno = Lista_Atributos_1.entorno;  Lista_Atributos.set(Atributo.valor)`)\r\n    \r\nbreak;\r\ncase 27:\r\n \r\n      this.$ = []; \r\n      this.$.push($$[$0]); \r\n      grafo.generarPadre(1,\"ATRIBUTO\");\r\n      grafo.generarHijos(\"ATRIBUTO\")\r\n      grafo.generarTexto(`Lista_Atributos.entorno = new Entorno(\"Atributos\"); Lista_Atributos.entorno.set(Atributo.valor)`)\r\n    \r\nbreak;\r\ncase 28:\r\n \r\n      this.$=$$[$0-1]; grafo.\r\n      generarPadre(1,\"LISTA_ATRIBUTOS\");\r\n      grafo.generarHijos(\"ATRIBUTO\",\"error\");\r\n      grafo.generarTexto(`Lista_Atributos.entorno=Lista_Atributos_1.entorno new Error()`)\r\n      ListaErrores.push({Error:'Error sintactico se recupero en ' + $$[$0] ,tipo:\"Semantico\", Linea: this._$.first_line , columna: this._$.first_column})\r\n    \r\nbreak;\r\ncase 29:\r\n\r\n    this.$ = new helpers.Atributo($$[$0-2],$$[$0],this._$.first_line, this._$.first_column); \r\n    grafo.generarHijos($$[$0-2],$$[$0-1],$$[$0]);\r\n    grafo.generarTexto(`Atributo.valor = new Atributo(${$$[$0-2]},${$$[$0]},${this._$.first_line},${this._$.first_column})`)\r\n  \r\nbreak;\r\n}\r\n},\r\ntable: [{2:[1,3],3:1,4:2,5:4,7:5,8:6,9:8,10:9,11:$V0,12:11,14:[1,7],21:$V1},{1:[3]},{1:[2,1]},{1:[2,2]},{6:[1,13],8:14,9:8,10:9,11:$V0,12:11,21:$V1},{5:15,8:6,9:8,10:9,11:$V0,12:11,21:$V1},o($V2,[2,6]),{2:[1,18],15:16,16:[1,17],17:19,18:$V3},o($V2,[2,7]),o($V2,[2,8]),o($V2,[2,9]),{5:22,8:6,9:8,10:9,11:$V0,12:11,13:21,21:$V1,24:$V4},{2:[1,26],22:[1,27],23:25,26:[1,24],27:28,28:$V5},{1:[2,3]},o($V2,[2,5]),{6:[1,30],8:14,9:8,10:9,11:$V0,12:11,21:$V1},{2:[1,33],16:[1,31],17:32,18:$V3},o($V6,[2,13]),{16:[1,34]},o($V7,[2,16]),{19:[1,35]},o($V2,[2,10]),{8:14,9:8,10:9,11:$V0,12:11,13:36,21:$V1,24:$V4},{25:[1,37]},o($V2,[2,23]),{2:[1,41],22:[1,39],26:[1,38],27:40,28:$V5},{22:[1,43],26:[1,42]},o($V8,[2,19]),o($V9,[2,27]),{29:[1,44]},{1:[2,4]},o($V6,[2,12]),o($V7,[2,15]),o($V7,[2,17]),o($V6,[2,14]),{20:[1,45]},o($V2,[2,11]),o($V2,[2,22]),o($V2,[2,24]),o($V8,[2,20]),o($V9,[2,26]),o($V9,[2,28]),o($V2,[2,25]),o($V8,[2,21]),{30:[1,46]},o($V7,[2,18]),o($V9,[2,29])],\r\ndefaultActions: {2:[2,1],3:[2,2],13:[2,3],30:[2,4]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n\tvar helpers = require('./helpers')\r\n  var C3D = require('../C3D')\r\n  const {grafoCST} = require('../CST')\r\n  var grafo = new grafoCST; \r\n\tvar atributosRaiz = []\r\n  var tipoCodificacion = \"utf8\"\r\n\r\n\tfunction objetoCorrecto (inicio, fin,linea,columna){\r\n    if(!inicio || !fin)\r\n    {\r\n      return false\r\n    }\r\n\t\tinicio = inicio.replace('<','')\r\n\t\tfin = fin.replace('</','')\r\n\t\tif(inicio === fin)\r\n    {\r\n      return true\r\n    }\r\n    else\r\n    {\r\n      ListaErrores.push({Error:'Este es un error Semantico: Etiquetas no coinciden',tipo:\"Semantico\", Linea: linea , columna:columna})\r\n      return false\r\n    }\r\n\t}\r\n  // Codificación global\r\n\r\n\r\n\r\n  function ReemplazaTexto(texto)\r\n  {\r\n    if(!texto)\r\n    {\r\n      return texto\r\n    }\r\n    var result = texto.split(\"&lt;\").join(\"<\");\r\n    result = result.split(\"&gt;\").join(\">\");\r\n    result = result.split(\"&amp;\").join(\"&\");\r\n    result = result.split(\"&apos;\").join(\"'\");\r\n    result = result.split(\"&quot;\").join(`\"`);\r\n    return result\r\n  }\r\n\r\n  var ListaErrores = []\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:\r\nbreak;\r\ncase 1:\r\nbreak;\r\ncase 2:this.begin(\"Etiquetai\"); return 21\r\nbreak;\r\ncase 3:this.begin(\"EtiquetaComentario\"); \r\nbreak;\r\ncase 4:\r\nbreak;\r\ncase 5:\r\nbreak;\r\ncase 6:this.popState(); \r\nbreak;\r\ncase 7:\r\nbreak;\r\ncase 8:\r\nbreak;\r\ncase 9:\r\nbreak;\r\ncase 10:\r\nbreak;\r\ncase 11:\r\nbreak;\r\ncase 12: return 28\r\nbreak;\r\ncase 13: return 29\r\nbreak;\r\ncase 14: yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 30\r\nbreak;\r\ncase 15: ListaErrores.push({Error:'Este es un error léxico: ' + yy_.yytext,tipo:\"Lexico\", Linea: yy_.yylloc.first_line , columna:yy_.yylloc.first_column}) \r\nbreak;\r\ncase 16: this.popState(); return 22\r\nbreak;\r\ncase 17: this.popState(); return 26\r\nbreak;\r\ncase 18: this.begin(\"Etiquetac\"); return 24\r\nbreak;\r\ncase 19:\r\nbreak;\r\ncase 20:\r\nbreak;\r\ncase 21: ListaErrores.push({Error:'Este es un error léxico: ' + yy_.yytext,tipo:\"Lexico\", Linea: yy_.yylloc.first_line , columna:yy_.yylloc.first_column}) \r\nbreak;\r\ncase 22: this.popState(); return 25\r\nbreak;\r\ncase 23: this.begin(\"EtiquetaConf\"); return 14\r\nbreak;\r\ncase 24: return 18\r\nbreak;\r\ncase 25: return 19\r\nbreak;\r\ncase 26: yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 20\r\nbreak;\r\ncase 27:\r\nbreak;\r\ncase 28: ListaErrores.push({Error:'Este es un error léxico: ' + yy_.yytext,tipo:\"Lexico\", Linea: yy_.yylloc.first_line , columna:yy_.yylloc.first_column}) \r\nbreak;\r\ncase 29: this.popState(); return 16\r\nbreak;\r\ncase 30:return 6;\r\nbreak;\r\ncase 31: yy_.yytext = ReemplazaTexto(yy_.yytext); return 11 \r\nbreak;\r\ncase 32: ListaErrores.push({Error:'Este es un error léxico: ' + yy_.yytext,tipo:\"Lexico\", Linea: yy_.yylloc.first_line , columna:yy_.yylloc.first_column}) \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:[ \\r\\t]+)/i,/^(?:\\n)/i,/^(?:<[A-ZÑa-zñ_][A-ZÑa-zñ0-9_-]*)/i,/^(?:<!--)/i,/^(?:[ \\r\\t]+)/i,/^(?:\\n)/i,/^(?:-->)/i,/^(?:-)/i,/^(?:>)/i,/^(?:[^-->]+)/i,/^(?:[ \\r\\t]+)/i,/^(?:\\n)/i,/^(?:[A-ZÑa-zñ][A-ZÑa-zñ0-9_-]*)/i,/^(?:=)/i,/^(?:\"[^\\n\\\"]*\")/i,/^(?:[^A-ZÑa-zñ_=\">/]+)/i,/^(?:>)/i,/^(?:\\/>)/i,/^(?:<\\/[A-ZÑa-zñ_][A-ZÑa-zñ0-9_-]*)/i,/^(?:[ \\r\\t]+)/i,/^(?:\\n)/i,/^(?:[^>]+)/i,/^(?:>)/i,/^(?:<\\?[A-ZÑa-zñ_][A-ZÑa-zñ0-9_-]*)/i,/^(?:[A-ZÑa-zñ][A-ZÑa-zñ0-9_-]*)/i,/^(?:=)/i,/^(?:\"[^\\n\\\"]*\")/i,/^(?:[ \\r\\t]+)/i,/^(?:[^A-ZÑa-zñ_=\"?>]+)/i,/^(?:\\?>)/i,/^(?:$)/i,/^(?:[^<]+)/i,/^(?:.)/i],\r\nconditions: {\"EtiquetaComentario\":{\"rules\":[4,5,6,7,8,9],\"inclusive\":false},\"EtiquetaConf\":{\"rules\":[24,25,26,27,28,29],\"inclusive\":false},\"Etiquetac\":{\"rules\":[19,20,21,22],\"inclusive\":false},\"Etiquetai\":{\"rules\":[10,11,12,13,14,15,16,17],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,2,3,18,23,30,31,32],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = grammar;\r\nexports.Parser = grammar.Parser;\r\nexports.parse = function () { return grammar.parse.apply(grammar, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar grammarDesc = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,9],$V1=[1,10],$V2=[6,20],$V3=[2,7],$V4=[1,19],$V5=[6,11,12,20],$V6=[1,25],$V7=[1,26],$V8=[1,27],$V9=[11,12],$Va=[2,25],$Vb=[16,19],$Vc=[2,32],$Vd=[2,25,28],$Ve=[2,16,19,33];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"ini\":3,\"CUERPO\":4,\"LISTA_OBJETO\":5,\"EOF\":6,\"ETIQUETACONFIGURACION\":7,\"OBJETO\":8,\"SUB_LISTA_OBJETO\":9,\"OBJETOGENERAL\":10,\"Texto\":11,\"InicioEtiquetaI\":12,\"SUB_OBJETOGENERAL\":13,\"LISTA_ATRIBUTOS\":14,\"CIERRE_ETIQUETAINICIO\":15,\"CierreEtiquetaI\":16,\"LISTA_OBJETO_Epsilon\":17,\"ETIQUETACIERRE\":18,\"FinEtiquetaI\":19,\"InicioEtiquetaC\":20,\"CierreEtiquetaC\":21,\"InicioEtiquetaConf\":22,\"SUB_ETIQUETACONFIG\":23,\"LISTA_ATRIBUTOSCONF\":24,\"CierreEtiquetaConf\":25,\"ATRIBUTOCONF\":26,\"SUB_LISTA_ATRIBUTOSCONF\":27,\"AtributoConf\":28,\"IgualAtributoConf\":29,\"ValorAtributoConf\":30,\"ATRIBUTO\":31,\"SUB_LISTA_ATRIBUTOS\":32,\"AtributoEtiqueta\":33,\"IgualAtributo\":34,\"ValorAtributo\":35,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",6:\"EOF\",11:\"Texto\",12:\"InicioEtiquetaI\",16:\"CierreEtiquetaI\",19:\"FinEtiquetaI\",20:\"InicioEtiquetaC\",21:\"CierreEtiquetaC\",22:\"InicioEtiquetaConf\",25:\"CierreEtiquetaConf\",28:\"AtributoConf\",29:\"IgualAtributoConf\",30:\"ValorAtributoConf\",33:\"AtributoEtiqueta\",34:\"IgualAtributo\",35:\"ValorAtributo\"},\r\nproductions_: [0,[3,1],[3,1],[4,2],[4,3],[5,2],[9,2],[9,0],[8,1],[8,1],[10,2],[13,2],[13,1],[13,2],[15,3],[15,1],[18,2],[17,1],[17,0],[7,2],[23,2],[23,1],[24,2],[24,2],[27,2],[27,0],[27,2],[26,3],[26,2],[14,2],[14,2],[32,2],[32,0],[32,2],[31,3],[31,2]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n    this.$=$$[$0]; grafo.generarPadre(1, \"INICIO\");grafo.generarHijos(\"INICIO\");\r\n    var retornoErrores = Object.assign([], ListaErrores);\r\n    ListaErrores = [];\r\n    var retornoGrafo = Object.assign({}, grafo);\r\n    grafo = new grafoCST();\r\n    return {datos:$$[$0],nodes:retornoGrafo.pilaNodos,edges:retornoGrafo.PilaEdges,tabla:retornoGrafo.TablaGramatica,errores:retornoErrores}\r\n  \r\nbreak;\r\ncase 2:\r\n\r\n      ListaErrores.push({Error:'Error sintactico irrecuperable',tipo:\"Semantico\", Linea: this._$.first_line , columna: this._$.first_column}) \r\n      var retornoErrores = Object.assign([], ListaErrores);\r\n      ListaErrores = [];\r\n      var retornoGrafo = Object.assign({}, grafo);\r\n      grafo = new grafoCST();\r\n      return {datos:[],edges:[],nodes:[], tabla:[], errores:ListaErrores}\r\n    \r\nbreak;\r\ncase 3:\r\n \r\n    this.$ = new helpers.Objeto(\"/\",[],$$[$0-1],this._$.first_line, this._$.first_column);  \r\n    grafo.generarPadre(1, \"LISTA_OBJETO\");\r\n    grafo.generarHijos(\"LISTA_OBJETO\");\r\n    grafo.generarTexto(\"Cuerpo.entorno = ListaObjeto.entorno\")\r\n    \r\nbreak;\r\ncase 4:\r\n this.$ = new helpers.Objeto(\"/\",$$[$0-2],$$[$0-1],this._$.first_line, this._$.first_column); \r\n    grafo.generarPadre(2, \"LISTA_OBJETO\");\r\n    grafo.generarPadre(1, \"ETIQUETACONFIGURACION\");\r\n    grafo.generarHijos(\"ETIQUETACONFIGURACION\",\"LISTA_OBJETO\")\r\n    grafo.generarTexto(\"Cuerpo.configs = EtiquetaConfigs.configs; Cuerpo.entorno = ListaObjeto.entorno\");\r\n  \r\nbreak;\r\ncase 5:\r\n \r\n    if ($$[$0-1].esTexto) { this.$ = $$[$0-1].texto } else { this.$=$$[$0]; this.$.push($$[$0-1].texto); this.$.reverse(); }\r\n    grafo.generarPadre(2, \"SUB_LISTA_OBJETO\");\r\n    grafo.generarPadre(1, \"OBJETO\");\r\n    grafo.generarHijos(\"OBJETO\",\"SUB_LISTA_OBJETO\");\r\n    grafo.generarTexto(`Objeto.entorno.set(Objeto.val)`)\r\n  \r\nbreak;\r\ncase 6:\r\n \r\n      if ($$[$0-1].esTexto) { this.$ = $$[$0-1].texto } else { this.$=$$[$0]; this.$.push($$[$0-1].texto); }\r\n      grafo.generarPadre(2, \"SUB_LISTA_OBJETO\");\r\n      grafo.generarPadre(1, \"OBJETO\");\r\n      grafo.generarHijos(\"OBJETO\",\"SUB_LISTA_OBJETO\");\r\n      grafo.generarTexto(`LostaObjeto.entorno.set(Objeto.val)`)\r\n    \r\nbreak;\r\ncase 7:\r\n \r\n      this.$ = new Array(); \r\n      grafo.generarHijos(\"Ɛ\");\r\n      grafo.generarTexto(`ListaObjeto.entorno = new Entorno();`)\r\n    \r\nbreak;\r\ncase 8:\r\n \r\n    this.$ = { texto:$$[$0], esTexto:false};\r\n    grafo.generarPadre(1, \"OBJETOGENERAL\");\r\n    grafo.generarHijos(\"OBJETOGENERAL\");\r\n    grafo.generarTexto(\"Objeto.val = ObjetoGeneral.val\");\r\n  \r\nbreak;\r\ncase 9:\r\n \r\n    this.$ = { texto:helpers.CambiarCodificacion($$[$0],tipoCodificacion), esTexto:true};\r\n    grafo.generarHijos(\"Texto\");\r\n    grafo.generarTexto(\"Texto.val=texto\")  \r\n  \r\nbreak;\r\ncase 10:\r\n \r\n    $$[$0].linea=this._$.first_line; $$[$0].columna=this._$.first_column;\r\n    this.$ = objetoCorrecto($$[$0-1], $$[$0],this._$.first_line, this._$.first_column)? $$[$0]:null;\r\n    grafo.generarPadre(2, \"SUB_OBJETOGENERAL\");\r\n    grafo.generarHijos($$[$0-1],\"SUB_OBJETOGENERAL\");\r\n    grafo.generarTexto(`OBJETOGENERAL.valor = ${$$[$0-1]} + SUB_OBJETOGENERAL.valor;`);\r\n  \r\nbreak;\r\ncase 11:\r\n \r\n      this.$=$$[$0]; this.$.atributos=$$[$0-1]; grafo.generarPadre(2, \"CIERRE_ETIQUETAINICIO\");\r\n      grafo.generarPadre(1, \"LISTA_ATRIBUTOS\");\r\n      grafo.generarHijos(\"LISTA_ATRIBUTOS\",\"CIERRE_ETIQUETAINICIO\");\r\n      grafo.generarTexto(\"SUB_OBJETOGENERAL.entorno = LISTA_ATRIBUTOS.entorno; SUB_OBJETOGENERAL.valor = CIERRE_ETIQUETAINICIO.valor\");\r\n    \r\nbreak;\r\ncase 12:\r\n \r\n      this.$=$$[$0]; grafo.generarPadre(1, \"CIERRE_ETIQUETAINICIO\");\r\n      grafo.generarHijos(\"CIERRE_ETIQUETAINICIO\");\r\n      grafo.generarTexto(`SUB_OBJETOGENERAL.valor = CIERRE_ETIQUETAINICIO.valor;`);\r\n    \r\nbreak;\r\ncase 13:\r\n \r\n      this.$=$$[$0-1]; \r\n      this.$.atributos=[]; \r\n      grafo.generarPadre(2, \"CIERRE_ETIQUETAINICIO\");\r\n      grafo.generarHijos(\"error\",\"CIERRE_ETIQUETAINICIO\");\r\n      grafo.generarTexto(\"SUB_OBJETOGENERAL.valor = CIERRE_ETIQUETAINICIO.valor; new Error();\");\r\n      ListaErrores.push({Error:'Error sintactico recuperado en ' + yytext ,tipo:\"Sintáctico\", Linea: this._$.first_line , columna: this._$.first_column});\r\n    \r\nbreak;\r\ncase 14:\r\n \r\n    this.$ = new helpers.Objeto(\"\", [], $$[$0-1],0,0);\r\n    this.$.setTipo($$[$0]);\r\n    grafo.generarPadre(3, \"ETIQUETACIERRE\");\r\n    grafo.generarPadre(2, \"LISTA_OBJETO_Epsilon\");\r\n    grafo.generarHijos($$[$0-2],\"LISTA_OBJETO_Epsilon\",\"ETIQUETACIERRE\");\r\n    grafo.generarTexto(`CIERRE_ETIQUETAINICIO.valor = \">\" + LISTA_OBJETO_Epsilon.valor;`);\r\n    \r\nbreak;\r\ncase 15:\r\n \r\n    this.$ = new helpers.Objeto(\"\",[], [],0,0);\r\n    grafo.generarHijos($$[$0]);\r\n    grafo.generarTexto(`CIERRE_ETIQUETAINICIO.valor = \"/>\";`);\r\n  \r\nbreak;\r\ncase 16:\r\n this.$ = $$[$0-1]; grafo.generarHijos($$[$0-1],$$[$0]); grafo.generarTexto(`EtiquetaCierre.nombre = ${$$[$0-1].replace(\"</\",\"\")}`) \r\nbreak;\r\ncase 17:\r\n \r\n    this.$ = $$[$0]; grafo.generarPadre(1, \"LISTA_OBJETO\");\r\n    grafo.generarHijos(\"LISTA_OBJETO\");\r\n    grafo.generarTexto(\"LISTA_OBJETO_Epsilon.valor = LISTA_OBJETO.Objetos\");\r\n  \r\nbreak;\r\ncase 18:\r\n\r\n    this.$ = []; grafo.generarHijos(\"Ɛ\");\r\n    grafo.generarTexto(\"LISTA_OBJETO_Epsilon.valor = [];\");\r\n  \r\nbreak;\r\ncase 19:\r\n \r\n    this.$ = $$[$0]; grafo.generarPadre(2, \"SUB_ETIQUETACONFIG\");\r\n    grafo.generarHijos($$[$0-1],\"SUB_ETIQUETACONFIG\");\r\n    grafo.generarTexto(`EtiquetaConfiguracion.configuraciones= SUB_ETIQUETACONFIG.valor`)\r\n  \r\nbreak;\r\ncase 20:\r\n \r\n    this.$ = $$[$0-1]; grafo.generarPadre(1, \"SUB_ETIQUETACONFIG\");\r\n    grafo.generarHijos(\"LISTA_ATRIBUTOSCONF\",$$[$0]) \r\n    grafo.generarTexto(`SUB_ETIQUETACONFIG.valor = Lista_AtributosConf.configuraciones;`)\r\n  \r\nbreak;\r\ncase 21:\r\n \r\n    this.$ = []; grafo.generarHijos($$[$0]) \r\n    grafo.generarTexto(`SUB_ETIQUETACONFIG.valor = [];`)\r\n  \r\nbreak;\r\ncase 22:\r\n \r\n    this.$=$$[$0]; this.$.push($$[$0-1]);\r\n    grafo.generarPadre(2, \"SUB_LISTA_ATRIBUTOSCONF\");\r\n    grafo.generarPadre(1, \"ATRIBUTOCONF\");\r\n    grafo.generarHijos(\"ATRIBUTOCONF\",\"SUB_LISTA_ATRIBUTOSCONF\") \r\n    grafo.generarTexto(`Lista_AtributoConf.configuraciones.push(AtributoConf.configuracion);`)\r\n    \r\nbreak;\r\ncase 23:\r\n \r\n    this.$=[]; this.$.push($$[$0-1]);\r\n    grafo.generarPadre(1, \"ATRIBUTOCONF\");\r\n    grafo.generarHijos(\"ATRIBUTOCONF\",\"error\");\r\n    grafo.generarTexto(`Lista_AtributoConf.configuraciones.push(AtributoConf.configuracion); new Error();`)\r\n    ListaErrores.push({Error:'Error sintactico recuperado en ' + yytext ,tipo:\"Sintáctico\", Linea: this._$.first_line , columna: this._$.first_column}); \r\n  \r\nbreak;\r\ncase 24:\r\n\r\n    this.$=$$[$0]; this.$.push($$[$0-1]);\r\n    grafo.generarPadre(2, \"SUB_LISTA_ATRIBUTOSCONF\");\r\n    grafo.generarPadre(1, \"ATRIBUTOCONF\");\r\n    grafo.generarHijos(\"ATRIBUTOCONF\",\"SUB_LISTA_ATRIBUTOSCONF\");\r\n    grafo.generarTexto(`Lista_AtributoConf.configuraciones.push(AtributoConf.configuracion);`)\r\n    \r\nbreak;\r\ncase 25:\r\n\r\n    this.$ = []; grafo.generarHijos(\"Ɛ\");\r\n     grafo.generarTexto(`Lista_AtributoConf.configuraciones= [];`)\r\n  \r\nbreak;\r\ncase 26:\r\n \r\n    this.$ = []; this.$.push($$[$0-1]); \r\n    grafo.generarPadre(1, \"ATRIBUTOCONF\");\r\n    grafo.generarHijos(\"ATRIBUTOCONF\",\"error\");\r\n    grafo.generarTexto(`Lista_AtributoConf.configuraciones.push(AtributoConf.configuracion); new Error();`)\r\n    ListaErrores.push({Error:'Error sintactico recuperado en ' + yytext ,tipo:\"Sintáctico\", Linea: this._$.first_line , columna: this._$.first_column}); \r\n  \r\nbreak;\r\ncase 27:\r\n \r\n    this.$ = new helpers.Atributo($$[$0-2],$$[$0],this._$.first_line, this._$.first_column); \r\n    grafo.generarHijos($$[$0-2],$$[$0-1],$$[$0]) \r\n    if ($$[$0-2] == 'encoding') tipoCodificacion = $$[$0]\r\n    grafo.generarTexto(`AtributoConf.configuracion = new Configuracion(${$$[$0-2]},${$$[$0]},${this._$.first_line},${this._$.first_column})`)\r\n  \r\nbreak;\r\ncase 28:\r\n \r\n    this.$ = []; this.$.push($$[$0-1]);\r\n    grafo.generarHijos($$[$0-1],\"error\");\r\n    grafo.generarTexto(`AtributoConf.configuracion = new Configuracion(${$$[$0-1]}); new Error();`)\r\n    ListaErrores.push({Error:'Error sintactico recuperado en ' + yytext ,tipo:\"Sintáctico\", Linea: this._$.first_line , columna: this._$.first_column});   \r\n    \r\nbreak;\r\ncase 29:\r\n \r\n    this.$ = $$[$0]; this.$.push($$[$0-1]);\r\n    grafo.generarPadre(2,\"ATRIBUTO\");\r\n    grafo.generarPadre(1,\"SUB_LISTA_ATRIBUTOS\");\r\n    grafo.generarHijos(\"ATRIBUTO\",\"SUB_LISTA_ATRIBUTOS\");\r\n    grafo.generarTexto(`Lista_Atributos.entorno.set(Atributo.valor);`)\r\n  \r\nbreak;\r\ncase 30:\r\n \r\n    this.$ = []; this.$.push($$[$0-1]);\r\n    grafo.generarPadre(1,\"ATRIBUTO\");\r\n    grafo.generarHijos(\"ATRIBUTO\",\"error\"); \r\n    grafo.generarTexto(`Lista_Atributos.entorno.set(Atributo.valor); new Error();`)\r\n    ListaErrores.push({Error:'Error sintactico recuperado en ' + yytext ,tipo:\"Sintáctico\", Linea: this._$.first_line , columna: this._$.first_column});\r\n  \r\nbreak;\r\ncase 31:\r\n\r\n    this.$ = $$[$0]; this.$.push($$[$0-1]);\r\n    grafo.generarPadre(2, \"SUB_LISTA_ATRIBUTOS\");\r\n    grafo.generarPadre(1, \"ATRIBUTO\");\r\n    grafo.generarHijos(\"ATRIBUTO\",\"SUB_LISTA_ATRIBUTOS\")\r\n    grafo.generarTexto(`Lista_Atributos.entorno.set(Atributo.valor);`)\r\n  \r\nbreak;\r\ncase 32:\r\n \r\n    this.$ = []; grafo.generarHijos(\"Ɛ\");\r\n    grafo.generarTexto(`Lista_Atributos.entorno = new Entorno(\"Atributos\");`)\r\n  \r\nbreak;\r\ncase 33:\r\n \r\n    this.$ = []; this.$.push($$[$0-1]);\r\n    grafo.generarPadre(1, \"ATRIBUTO\");\r\n    grafo.generarHijos(\"ATRIBUTO\",\"error\");\r\n    grafo.generarTexto(`Lista_Atributos.entorno.set(Atributo.valor); new Error();`)\r\n    ListaErrores.push({Error:'Error sintactico recuperado en ' + yytext ,tipo:\"Sintáctico\", Linea: this._$.first_line , columna: this._$.first_column});  \r\n  \r\nbreak;\r\ncase 34:\r\n\r\n    this.$ = new helpers.Atributo($$[$0-2],$$[$0],this._$.first_line, this._$.first_column);\r\n    grafo.generarHijos($$[$0-2],$$[$0-1],$$[$0])\r\n    grafo.generarTexto(`Atributo.valor = new Atributo(${$$[$0-2]},${$$[$0]},${this._$.first_line},${this._$.first_column})`)\r\n  \r\nbreak;\r\ncase 35:\r\n \r\n    this.$ = null; \r\n    grafo.generarHijos($$[$0-1],\"error\"); \r\n    grafo.generarTexto(`new Error()`)\r\n    ListaErrores.push({Error:'Error sintactico recuperado en ' + yytext ,tipo:\"Sintáctico\", Linea: this._$.first_line , columna: this._$.first_column});\r\n  \r\nbreak;\r\n}\r\n},\r\ntable: [{2:[1,3],3:1,4:2,5:4,7:5,8:6,10:8,11:$V0,12:$V1,22:[1,7]},{1:[3]},{1:[2,1]},{1:[2,2]},{6:[1,11]},{5:12,8:6,10:8,11:$V0,12:$V1},o($V2,$V3,{10:8,9:13,8:14,11:$V0,12:$V1}),{23:15,24:16,25:[1,17],26:18,28:$V4},o($V5,[2,8]),o($V5,[2,9]),{2:[1,23],13:20,14:21,15:22,16:$V6,19:$V7,31:24,33:$V8},{1:[2,3]},{6:[1,28]},o($V2,[2,5]),o($V2,$V3,{10:8,8:14,9:29,11:$V0,12:$V1}),o($V9,[2,19]),{25:[1,30]},o($V9,[2,21]),{2:[1,32],25:$Va,26:33,27:31,28:$V4},{2:[1,35],29:[1,34]},o($V5,[2,10]),{15:36,16:$V6,19:$V7},o($V5,[2,12]),{15:37,16:$V6,19:$V7},o($Vb,$Vc,{32:38,31:40,2:[1,39],33:$V8}),{5:42,8:6,10:8,11:$V0,12:$V1,17:41,20:[2,18]},o($V5,[2,15]),{2:[1,44],34:[1,43]},{1:[2,4]},o($V2,[2,6]),o($V9,[2,20]),{25:[2,22]},{25:[2,23]},{2:[1,46],25:$Va,26:33,27:45,28:$V4},{30:[1,47]},o($Vd,[2,28]),o($V5,[2,11]),o($V5,[2,13]),o($Vb,[2,29]),o($Vb,[2,30]),o($Vb,$Vc,{31:40,32:48,2:[1,49],33:$V8}),{18:50,20:[1,51]},{20:[2,17]},{35:[1,52]},o($Ve,[2,35]),{25:[2,24]},{25:[2,26]},o($Vd,[2,27]),o($Vb,[2,31]),o($Vb,[2,33]),o($V5,[2,14]),{21:[1,53]},o($Ve,[2,34]),o($V5,[2,16])],\r\ndefaultActions: {2:[2,1],3:[2,2],11:[2,3],28:[2,4],31:[2,22],32:[2,23],42:[2,17],45:[2,24],46:[2,26]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n\tvar helpers = require('../analizadorXML/helpers')\r\n  const {grafoCST} = require('../CST')\r\n  var grafo = new grafoCST(); \r\n\tvar atributosRaiz = []\r\n\t// Codificación global\r\n  var tipoCodificacion = \"utf8\"\r\n\r\n  function objetoCorrecto (inicio, fin, linea, columna){\r\n    if(!inicio || fin==undefined)\r\n    {\r\n      return undefined\r\n    }\r\n\t\tinicio = inicio.replace('<','')\r\n    if(fin.tipo == \"\"){\r\n      fin.tipo=inicio\r\n      return inicio;\r\n    }\r\n\t\tvar tempfin = fin.tipo.replace('</','')\r\n    if(inicio === tempfin){\r\n      return inicio;\r\n    }\r\n    ListaErrores.push({Error:'Este es un error Semantico: Etiquetas no coinciden',tipo:\"Semantico\", Linea: linea , columna:columna})\r\n\t\treturn undefined;\r\n\t}\r\n\r\n  function ReemplazaTexto(texto)\r\n  {\r\n    if(!texto)\r\n    {\r\n      return texto\r\n    }\r\n    var result = texto.split(\"&lt;\").join(\"<\");\r\n    result = result.split(\"&gt;\").join(\">\");\r\n    result = result.split(\"&amp;\").join(\"&\");\r\n    result = result.split(\"&apos;\").join(\"'\");\r\n    result = result.split(\"&quot;\").join(`\"`);\r\n    return result\r\n  }\r\n\r\n  var ListaErrores = []\r\n\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:\r\nbreak;\r\ncase 1:\r\nbreak;\r\ncase 2:this.begin(\"Etiquetai\"); return 12\r\nbreak;\r\ncase 3:this.begin(\"EtiquetaComentario\"); \r\nbreak;\r\ncase 4:\r\nbreak;\r\ncase 5:\r\nbreak;\r\ncase 6:this.popState(); \r\nbreak;\r\ncase 7:\r\nbreak;\r\ncase 8:\r\nbreak;\r\ncase 9:\r\nbreak;\r\ncase 10:\r\nbreak;\r\ncase 11:\r\nbreak;\r\ncase 12: return 33\r\nbreak;\r\ncase 13: return 34\r\nbreak;\r\ncase 14: yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 35\r\nbreak;\r\ncase 15: ListaErrores.push({Error:'Este es un error léxico: ' + yy_.yytext,tipo:\"Lexico\", Linea: yy_.yylloc.first_line , columna:yy_.yylloc.first_column}) \r\nbreak;\r\ncase 16: this.popState(); return 16\r\nbreak;\r\ncase 17: this.popState(); return 19\r\nbreak;\r\ncase 18: this.begin(\"Etiquetac\"); return 20\r\nbreak;\r\ncase 19:\r\nbreak;\r\ncase 20:\r\nbreak;\r\ncase 21: ListaErrores.push({Error:'Este es un error léxico: ' + yy_.yytext,tipo:\"Lexico\", Linea: yy_.yylloc.first_line , columna:yy_.yylloc.first_column}) \r\nbreak;\r\ncase 22: this.popState(); return 21\r\nbreak;\r\ncase 23: this.begin(\"EtiquetaConf\"); return 22\r\nbreak;\r\ncase 24: return 28\r\nbreak;\r\ncase 25: return 29\r\nbreak;\r\ncase 26: yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 30\r\nbreak;\r\ncase 27:\r\nbreak;\r\ncase 28: ListaErrores.push({Error:'Este es un error léxico: ' + yy_.yytext,tipo:\"Lexico\", Linea: yy_.yylloc.first_line , columna:yy_.yylloc.first_column}) \r\nbreak;\r\ncase 29: this.popState(); return 25\r\nbreak;\r\ncase 30:return 6;\r\nbreak;\r\ncase 31: yy_.yytext = ReemplazaTexto(yy_.yytext); return 11 \r\nbreak;\r\ncase 32: ListaErrores.push({Error:'Este es un error léxico: ' + yy_.yytext,tipo:\"Lexico\", Linea: yy_.yylloc.first_line , columna:yy_.yylloc.first_column}) \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:[ \\r\\t]+)/i,/^(?:\\n)/i,/^(?:<[A-ZÑa-zñ_][A-ZÑa-zñ0-9_-]*)/i,/^(?:<!--)/i,/^(?:[ \\r\\t]+)/i,/^(?:\\n)/i,/^(?:-->)/i,/^(?:-)/i,/^(?:>)/i,/^(?:[^-->]+)/i,/^(?:[ \\r\\t]+)/i,/^(?:\\n)/i,/^(?:[A-ZÑa-zñ][A-ZÑa-zñ0-9_-]*)/i,/^(?:=)/i,/^(?:\"[^\\n\\\"]*\")/i,/^(?:[^A-ZÑa-zñ_=\"/>]+)/i,/^(?:>)/i,/^(?:\\/>)/i,/^(?:<\\/[A-ZÑa-zñ_][A-ZÑa-zñ0-9_-]*)/i,/^(?:[ \\r\\t]+)/i,/^(?:\\n)/i,/^(?:[^>]+)/i,/^(?:>)/i,/^(?:<\\?[A-ZÑa-zñ_][A-ZÑa-zñ0-9_-]*)/i,/^(?:[A-ZÑa-zñ][A-ZÑa-zñ0-9_-]*)/i,/^(?:=)/i,/^(?:\"[^\\n\\\"]*\")/i,/^(?:[ \\r\\t]+)/i,/^(?:[^A-ZÑa-zñ_=\"?>]+)/i,/^(?:\\?>)/i,/^(?:$)/i,/^(?:[^<]+)/i,/^(?:.)/i],\r\nconditions: {\"EtiquetaComentario\":{\"rules\":[4,5,6,7,8,9],\"inclusive\":false},\"EtiquetaConf\":{\"rules\":[24,25,26,27,28,29],\"inclusive\":false},\"Etiquetac\":{\"rules\":[19,20,21,22],\"inclusive\":false},\"Etiquetai\":{\"rules\":[10,11,12,13,14,15,16,17],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,2,3,18,23,30,31,32],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = grammarDesc;\r\nexports.Parser = grammarDesc.Parser;\r\nexports.parse = function () { return grammarDesc.parse.apply(grammarDesc, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","const analizadorC = require('./c')\r\n\r\nexport class Optimizador {\r\n    textoOptimizar = ''\r\n    textoOptimizado = ''\r\n    textoSplit = []\r\n\r\n\r\n    constructor (str){\r\n        this.textoOptimizar = str\r\n    }\r\n\r\n    optimizar(){\r\n        this.textoOptimizado = ''\r\n        \r\n        \r\n        var newInstrucciones = []\r\n        var ResultadoParse = analizadorC.parse(this.textoOptimizar)\r\n        var instrucciones = ResultadoParse.ins\r\n        // antiguas instrucciones\r\n        console.log('vijas instrucciones');\r\n        console.log(instrucciones);\r\n        this.textoOptimizado = ''\r\n        for (var instruccion of instrucciones) {\r\n            newInstrucciones.push(instruccion.optimizar())\r\n        }\r\n\r\n        for (const instruccion of newInstrucciones) {\r\n            this.textoOptimizado += instruccion.tresd()\r\n        }\r\n\r\n        this.textoOptimizado = ResultadoParse.lib + '\\n' + this.textoOptimizado\r\n        // nuevas instrucciones\r\n        console.log('nuevas instrucciones');\r\n        console.log(newInstrucciones);\r\n        console.log('nuevo texto');\r\n        console.log(this.textoOptimizado);\r\n        return this.textoOptimizado\r\n    }\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar c = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,7],$V1=[1,11],$V2=[1,12],$V3=[1,13],$V4=[1,14],$V5=[1,15],$V6=[9,26,27,28,29,30],$V7=[5,26,27,28,29,30],$V8=[12,32],$V9=[20,25],$Va=[1,46],$Vb=[1,45],$Vc=[1,48],$Vd=[1,49],$Ve=[12,35,42,47,49],$Vf=[1,60],$Vg=[1,62],$Vh=[1,63],$Vi=[1,58],$Vj=[1,59],$Vk=[1,61],$Vl=[1,66],$Vm=[11,14,20,23,32,55,56,57,58,59,60,61,62,63],$Vn=[2,59],$Vo=[1,78],$Vp=[2,53],$Vq=[12,22,31,56,65,66];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INI\":3,\"ARCHIVO\":4,\"EOF\":5,\"Librerias\":6,\"DECLARACIONES\":7,\"Libreria\":8,\"almohadita\":9,\"rinclude\":10,\"menor\":11,\"id\":12,\"pt\":13,\"mayor\":14,\"DECLARACION\":15,\"DECLARACIONVARIABLE\":16,\"DECLARACIONFUNCION\":17,\"TIPO\":18,\"LIDS\":19,\"ptcoma\":20,\"corizq\":21,\"entero\":22,\"corder\":23,\"LDECLARACIONVARIABLE\":24,\"coma\":25,\"rint\":26,\"rfloat\":27,\"rdouble\":28,\"rchar\":29,\"rvoid\":30,\"parizq\":31,\"parder\":32,\"BLOQUE\":33,\"llaveizq\":34,\"llaveder\":35,\"LINSTRUCCION\":36,\"INSTRUCCION\":37,\"ASIGNACION\":38,\"SI\":39,\"IRA\":40,\"ETIQUETA\":41,\"rreturn\":42,\"EXPBASICO\":43,\"igual\":44,\"EXPASIGNACION\":45,\"EXPARRAY\":46,\"rif\":47,\"EXPCOMPARACION\":48,\"rgoto\":49,\"dospuntos\":50,\"EXP\":51,\"EXPARITMETICO\":52,\"COMPARADOR\":53,\"ARITMETICO\":54,\"mas\":55,\"menos\":56,\"por\":57,\"div\":58,\"mod\":59,\"mayori\":60,\"menori\":61,\"igualdad\":62,\"diferente\":63,\"EXPBASICONUMERO\":64,\"cadena\":65,\"numero\":66,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",9:\"almohadita\",10:\"rinclude\",11:\"menor\",12:\"id\",13:\"pt\",14:\"mayor\",20:\"ptcoma\",21:\"corizq\",22:\"entero\",23:\"corder\",25:\"coma\",26:\"rint\",27:\"rfloat\",28:\"rdouble\",29:\"rchar\",30:\"rvoid\",31:\"parizq\",32:\"parder\",34:\"llaveizq\",35:\"llaveder\",42:\"rreturn\",44:\"igual\",47:\"rif\",49:\"rgoto\",50:\"dospuntos\",55:\"mas\",56:\"menos\",57:\"por\",58:\"div\",59:\"mod\",60:\"mayori\",61:\"menori\",62:\"igualdad\",63:\"diferente\",65:\"cadena\",66:\"numero\"},\r\nproductions_: [0,[3,2],[4,2],[4,1],[6,2],[6,1],[8,7],[7,2],[7,1],[15,1],[15,1],[16,3],[16,6],[24,3],[24,1],[18,1],[18,1],[18,1],[18,1],[18,1],[17,5],[19,3],[19,1],[33,2],[33,3],[36,2],[36,1],[37,2],[37,2],[37,2],[37,1],[37,3],[38,3],[38,3],[39,5],[40,2],[41,2],[41,3],[45,1],[45,1],[48,3],[52,3],[54,1],[54,1],[54,1],[54,1],[54,1],[53,1],[53,1],[53,1],[53,1],[53,1],[53,1],[51,1],[51,1],[46,4],[43,1],[43,2],[43,1],[64,1],[64,1],[64,1],[64,4]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\nthis.$=$$[$0-1]; return $$[$0-1]\r\nbreak;\r\ncase 2:\r\n this.$={lib:$$[$0-1],ins:$$[$0],} \r\nbreak;\r\ncase 3:\r\n this.$={lib:'',ins:$$[$0] } \r\nbreak;\r\ncase 4:\r\nthis.$=$$[$0-1] + '\\n' + $$[$0]\r\nbreak;\r\ncase 5: case 9: case 10: case 15: case 16: case 17: case 18: case 19: case 30: case 38: case 39: case 42: case 43: case 44: case 45: case 46: case 47: case 48: case 49: case 50: case 51: case 52: case 53: case 54:\r\nthis.$=$$[$0]\r\nbreak;\r\ncase 6:\r\nthis.$=$$[$0-6]+$$[$0-5]+\" \"+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]\r\nbreak;\r\ncase 7:\r\nthis.$=$$[$0-1]; this.$.push($$[$0])\r\nbreak;\r\ncase 8: case 14: case 22:\r\nthis.$=[]; this.$.push($$[$0])\r\nbreak;\r\ncase 11:\r\nthis.$=new cDeclaracion.DeclaracionVariable($$[$0-2], $$[$0-1])\r\nbreak;\r\ncase 12:\r\nthis.$=new cDeclaracion.DeclaracionArray($$[$0-5],$$[$0-4],$$[$0-2]) \r\nbreak;\r\ncase 13:\r\nthis.$=$$[$0-2]; this.$.push($$[$0-1])\r\nbreak;\r\ncase 20:\r\nthis.$=new cDeclaracion.DeclaracionFuncion($$[$0-4],$$[$0-3],[],$$[$0])\r\nbreak;\r\ncase 21:\r\nthis.$=$$[$0-2]; this.$.push($$[$0])\r\nbreak;\r\ncase 23:\r\nthis.$=new cBloque.Bloque([])\r\nbreak;\r\ncase 24:\r\nthis.$=new cBloque.Bloque($$[$0-1])\r\nbreak;\r\ncase 25:\r\nthis.$=$$[$0-1];this.$.push($$[$0])\r\nbreak;\r\ncase 26:\r\nthis.$=[];this.$.push($$[$0])\r\nbreak;\r\ncase 27: case 28: case 29:\r\nthis.$=$$[$0-1]\r\nbreak;\r\ncase 31:\r\nthis.$=new cReturn.Return($$[$0-2],$$[$0-1])\r\nbreak;\r\ncase 32:\r\nthis.$=new cAsignacion.Asignacion($$[$0-2], $$[$0])\r\nbreak;\r\ncase 33:\r\nthis.$=new cAsignacion.AsignacionArray($$[$0-2], $$[$0])\r\nbreak;\r\ncase 34:\r\nthis.$=new cSi.Si($$[$0-2],$$[$0], false)\r\nbreak;\r\ncase 35:\r\nthis.$=new cSi.Ira($$[$0])\r\nbreak;\r\ncase 36:\r\nthis.$=new cSi.Etiqueta($$[$0-1])\r\nbreak;\r\ncase 37:\r\nthis.$=new cSi.Etiqueta($$[$0-2])\r\nbreak;\r\ncase 40:\r\nthis.$=new cExpresion.Comparacion($$[$0-2], $$[$0-1], $$[$0])\r\nbreak;\r\ncase 41:\r\nthis.$=new cExpresion.Aritmetico($$[$0-2],$$[$0-1],$$[$0])\r\nbreak;\r\ncase 55:\r\nthis.$= new cExpresion.Arreglo($$[$0-3],$$[$0-1])\r\nbreak;\r\ncase 56:\r\nthis.$= $$[$0]\r\nbreak;\r\ncase 57:\r\nthis.$= new cExpresion.Unario($$[$0-1], $$[$0])\r\nbreak;\r\ncase 58:\r\nthis.$= new cExpresion.Literal('char',$$[$0])\r\nbreak;\r\ncase 59:\r\nthis.$= new cExpresion.Id($$[$0])\r\nbreak;\r\ncase 60:\r\nthis.$= new cExpresion.Literal('float',$$[$0])\r\nbreak;\r\ncase 61:\r\nthis.$= new cExpresion.Literal('int',$$[$0])\r\nbreak;\r\ncase 62:\r\nthis.$= new cExpresion.Casteo($$[$0-2], $$[$0])\r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,6:3,7:4,8:5,9:$V0,15:6,16:8,17:9,18:10,26:$V1,27:$V2,28:$V3,29:$V4,30:$V5},{1:[3]},{5:[1,16]},{7:17,8:18,9:$V0,15:6,16:8,17:9,18:10,26:$V1,27:$V2,28:$V3,29:$V4,30:$V5},{5:[2,3],15:19,16:8,17:9,18:10,26:$V1,27:$V2,28:$V3,29:$V4,30:$V5},o($V6,[2,5]),o($V7,[2,8]),{10:[1,20]},o($V7,[2,9]),o($V7,[2,10]),{12:[1,22],19:21},o($V8,[2,15]),o($V8,[2,16]),o($V8,[2,17]),o($V8,[2,18]),o($V8,[2,19]),{1:[2,1]},{5:[2,2],15:19,16:8,17:9,18:10,26:$V1,27:$V2,28:$V3,29:$V4,30:$V5},o($V6,[2,4]),o($V7,[2,7]),{11:[1,23]},{20:[1,24],25:[1,25]},o($V9,[2,22],{21:[1,26],31:[1,27]}),{12:[1,28]},o($V7,[2,11]),{12:[1,29]},{22:[1,30]},{32:[1,31]},{13:[1,32]},o($V9,[2,21]),{23:[1,33]},{33:34,34:[1,35]},{12:[1,36]},{20:[1,37]},o($V7,[2,20]),{12:$Va,35:[1,38],36:39,37:40,38:41,39:42,40:43,41:44,42:$Vb,46:47,47:$Vc,49:$Vd},{14:[1,50]},o($V7,[2,12]),o($V7,[2,23]),{12:$Va,35:[1,51],37:52,38:41,39:42,40:43,41:44,42:$Vb,46:47,47:$Vc,49:$Vd},o($Ve,[2,26]),{20:[1,53]},{20:[1,54]},{20:[1,55]},o($Ve,[2,30]),{12:$Vf,22:$Vg,31:$Vh,43:56,56:$Vi,64:57,65:$Vj,66:$Vk},{21:$Vl,44:[1,64],50:[1,65]},{44:[1,67]},{31:[1,68]},{12:[1,69]},o($V6,[2,6]),o($V7,[2,24]),o($Ve,[2,25]),o($Ve,[2,27]),o($Ve,[2,28]),o($Ve,[2,29]),{20:[1,70]},o($Vm,[2,56]),{12:$Vf,22:$Vg,31:$Vh,43:71,56:$Vi,64:57,65:$Vj,66:$Vk},o($Vm,[2,58]),o($Vm,$Vn),o($Vm,[2,60]),o($Vm,[2,61]),{18:72,26:$V1,27:$V2,28:$V3,29:$V4,30:$V5},{12:$Vo,22:$Vg,31:$Vh,43:76,45:73,46:77,51:74,52:75,56:$Vi,64:57,65:$Vj,66:$Vk},o($Ve,[2,36],{20:[1,79]}),{12:$Vf,22:$Vg,31:$Vh,64:80,66:$Vk},{12:$Vf,22:$Vg,31:$Vh,43:81,56:$Vi,64:57,65:$Vj,66:$Vk},{12:$Vf,22:$Vg,31:$Vh,43:83,48:82,56:$Vi,64:57,65:$Vj,66:$Vk},{20:[2,35]},o($Ve,[2,31]),o($Vm,[2,57]),{32:[1,84]},{20:[2,32]},{20:[2,38]},{20:[2,39]},{20:$Vp,54:85,55:[1,86],56:[1,87],57:[1,88],58:[1,89],59:[1,90]},o($Vm,[2,54]),o($Vm,$Vn,{21:$Vl}),o($Ve,[2,37]),{23:[1,91]},{20:[2,33]},{32:[1,92]},{11:[1,95],14:[1,94],53:93,60:[1,96],61:[1,97],62:[1,98],63:[1,99]},{12:$Vo,22:$Vg,31:$Vh,43:101,46:77,51:100,56:$Vi,64:57,65:$Vj,66:$Vk},{12:$Vf,22:$Vg,31:$Vh,43:102,56:$Vi,64:57,65:$Vj,66:$Vk},o($Vq,[2,42]),o($Vq,[2,43]),o($Vq,[2,44]),o($Vq,[2,45]),o($Vq,[2,46]),o([11,14,20,23,32,44,55,56,57,58,59,60,61,62,63],[2,55]),{40:103,49:$Vd},{12:$Vf,22:$Vg,31:$Vh,43:104,56:$Vi,64:57,65:$Vj,66:$Vk},o($Vq,[2,47]),o($Vq,[2,48]),o($Vq,[2,49]),o($Vq,[2,50]),o($Vq,[2,51]),o($Vq,[2,52]),o($Vm,[2,62]),o($Vm,$Vp),{20:[2,41]},{20:[2,34]},{32:[2,40]}],\r\ndefaultActions: {16:[2,1],69:[2,35],73:[2,32],74:[2,38],75:[2,39],81:[2,33],102:[2,41],103:[2,34],104:[2,40]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n    const cDeclaracion  = require('./AST/instrucciones/declaracion') \r\n    const cAsignacion   = require('./AST/instrucciones/asignacion') \r\n    const cSi           = require('./AST/instrucciones/si') \r\n    const cBloque       = require('./AST/instrucciones/bloque') \r\n    const cExpresion    = require('./AST/expresiones/expresion') \r\n    const cReturn       = require('./AST/instrucciones/return')\r\n    \r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:\r\nbreak;\r\ncase 1:\r\nbreak;\r\ncase 2:\r\nbreak;\r\ncase 3:\r\nbreak;\r\ncase 4:return \"rinclude\";\r\nbreak;\r\ncase 5:return \"rprintf\";\r\nbreak;\r\ncase 6:return \"rreturn\";\r\nbreak;\r\ncase 7:return \"rif\"; \r\nbreak;\r\ncase 8:return \"rgoto\"; \r\nbreak;\r\ncase 9:return \"rint\";\r\nbreak;\r\ncase 10:return \"rdouble\";\r\nbreak;\r\ncase 11:return \"rfloat\"\r\nbreak;\r\ncase 12:return \"rchar\";\r\nbreak;\r\ncase 13:return \"rvoid\";\r\nbreak;\r\ncase 14:return 13\r\nbreak;\r\ncase 15:return 20;\r\nbreak;\r\ncase 16:return 50;\r\nbreak;\r\ncase 17:return 25;\r\nbreak;\r\ncase 18:return 31;\r\nbreak;\r\ncase 19:return 32;\r\nbreak;\r\ncase 20:return 21;\r\nbreak;\r\ncase 21:return 23;\r\nbreak;\r\ncase 22:return 34;\r\nbreak;\r\ncase 23:return 35;\r\nbreak;\r\ncase 24:return 9;\r\nbreak;\r\ncase 25:return 60;\r\nbreak;\r\ncase 26:return 61;\r\nbreak;\r\ncase 27:return 62;\r\nbreak;\r\ncase 28:return 63;\r\nbreak;\r\ncase 29:return 44;\r\nbreak;\r\ncase 30:return 55;\r\nbreak;\r\ncase 31:return 56;\r\nbreak;\r\ncase 32:return 57;\r\nbreak;\r\ncase 33:return 58;\r\nbreak;\r\ncase 34:return 59;\r\nbreak;\r\ncase 35:return 14;\r\nbreak;\r\ncase 36:return 11;\r\nbreak;\r\ncase 37:return 'and';\r\nbreak;\r\ncase 38:return 'or';\r\nbreak;\r\ncase 39:return 'not';\r\nbreak;\r\ncase 40:return 12;\r\nbreak;\r\ncase 41:return 66;\r\nbreak;\r\ncase 42:return 22;\r\nbreak;\r\ncase 43: yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 65; \r\nbreak;\r\ncase 44: yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 65; \r\nbreak;\r\ncase 45:return 5;\r\nbreak;\r\ncase 46: console.error('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column); \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\/\\/.*)/i,/^(?:[/][*][^*]*[*]+([^/*][^*]*[*]+)*[/])/i,/^(?:[ \\r\\t]+)/i,/^(?:\\n)/i,/^(?:include\\b)/i,/^(?:printf\\b)/i,/^(?:return\\b)/i,/^(?:if\\b)/i,/^(?:goto\\b)/i,/^(?:int\\b)/i,/^(?:double\\b)/i,/^(?:float\\b)/i,/^(?:char\\b)/i,/^(?:void\\b)/i,/^(?:\\.)/i,/^(?:;)/i,/^(?::)/i,/^(?:,)/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\{)/i,/^(?:\\})/i,/^(?:#)/i,/^(?:>=)/i,/^(?:<=)/i,/^(?:==)/i,/^(?:!=)/i,/^(?:=)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:\\/)/i,/^(?:%)/i,/^(?:>)/i,/^(?:<)/i,/^(?:&&)/i,/^(?:\\|\\|)/i,/^(?:!)/i,/^(?:[a-zA-Z][a-zA-Z0-9_]*)/i,/^(?:[0-9]+(\\.[0-9]+)\\b)/i,/^(?:[0-9]+\\b)/i,/^(?:\"((\\\\\")|[^\\n\\\"])*\")/i,/^(?:'((\\\\')|[^\\n\\'])*')/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = c;\r\nexports.Parser = c.Parser;\r\nexports.parse = function () { return c.parse.apply(c, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","const modelos = require(\"../modelos\");\r\n\r\nexport class DeclaracionVariable extends modelos.Instruccion {\r\n    constructor(tipo, ids){\r\n        super()\r\n        this.tipo = tipo\r\n        this.ids = ids\r\n    }\r\n\r\n    optimizar(){\r\n        return this   \r\n    }\r\n\r\n    tresd(){\r\n        var retorno = `${this.tipo} `\r\n        \r\n        for (let index = 0; index < this.ids.length; index++) {\r\n            if (index == 0){\r\n                retorno += this.ids[index]\r\n            }else{\r\n                retorno += `,${this.ids[index]}`\r\n            }\r\n        }\r\n\r\n        return retorno + ';\\n'\r\n    }\r\n}\r\n\r\nexport class DeclaracionArray extends modelos.Instruccion{\r\n    constructor(tipo, id, tamano){\r\n        super()\r\n        this.tipo = tipo\r\n        this.id = id\r\n        this.tamano = tamano\r\n    }\r\n\r\n    optimizar(){\r\n        return this   \r\n    }\r\n\r\n    tresd(){\r\n        return `${this.tipo} ${this.id}[${this.tamano}];\\n`\r\n    }\r\n}\r\n\r\nexport class DeclaracionFuncion extends modelos.Instruccion {\r\n    constructor(tipo, id, params, bloque){\r\n        super()\r\n        this.tipo = tipo\r\n        this.id = id\r\n        this.params = params\r\n        this.bloque =bloque\r\n    }\r\n\r\n    optimizar(){\r\n        this.bloque = this.bloque.optimizar()\r\n        return this   \r\n    }\r\n\r\n    tresd(){\r\n        var retorno = `${this.tipo} ${this.id}(){\\n`\r\n        var tbloque = this.bloque.tresd()\r\n        retorno += tbloque\r\n        retorno += `}\\n`\r\n        return retorno\r\n    }\r\n}","import { Instruccion } from \"../modelos\"\r\nimport { Asignacion } from \"./asignacion\"\r\nimport { Expresion } from \"../modelos\"\r\nimport { Etiqueta, Ira, Si } from \"./si\"\r\nimport { Id } from \"../expresiones/expresion\"\r\n\r\nexport class Bloque extends Instruccion {\r\n    constructor(instrucciones){\r\n        super()\r\n        this.instrucciones = instrucciones\r\n    }\r\n\r\n    optimizar(){\r\n        var iraActual = ''\r\n        var newInstrucciones = []\r\n        var instruccionAnterior\r\n        for (var instruccion of this.instrucciones) {\r\n            var instruccionActual = instruccion.optimizar()\r\n            var insertar = true\r\n            // regla 1\r\n            // t2 = b;\r\n            // b = t2; -> no insertar\r\n            if (\r\n                instruccionAnterior &&\r\n                instruccionAnterior instanceof Asignacion   &&\r\n                instruccionActual instanceof Asignacion     &&\r\n                instruccionAnterior.expresion instanceof Id &&\r\n                instruccionActual.expresion instanceof Id   &&\r\n                instruccionAnterior.id == instruccionActual.expresion.id &&\r\n                instruccionAnterior.expresion.id == instruccionActual.id\r\n            ) { \r\n                // no insertar la instrucion actual\r\n                insertar = false\r\n            }\r\n\r\n            // si existe un if else\r\n            // if condición goto la; goto lb;\r\n            if (\r\n                instruccionAnterior &&\r\n                instruccionAnterior instanceof Si &&\r\n                instruccionActual instanceof Ira\r\n            ){\r\n                // asignar al if su etiqueta else\r\n                newInstrucciones.pop()\r\n                instruccionAnterior.iraFalso = instruccionActual\r\n\r\n                // validar SI, con etiqueta falso, si es tiene condición constante\r\n                instruccionAnterior = instruccionAnterior.optimizar2()\r\n\r\n                // regla 3\r\n                if ( // no era una condición constante, era un if normal\r\n                    instruccionAnterior instanceof Si\r\n                ){\r\n                    instruccionAnterior = instruccionAnterior.intercambiarEtiquetas()\r\n                }\r\n\r\n                newInstrucciones.push(instruccionAnterior)\r\n                insertar = false\r\n            }\r\n\r\n            // goto LX\r\n            // goto LY -> no insertar\r\n            if (\r\n                instruccionAnterior &&\r\n                instruccionAnterior instanceof Ira &&\r\n                instruccionActual instanceof Ira \r\n            ){\r\n                insertar = false\r\n            }\r\n\r\n            // ptimizar si es condición constante\r\n            if (\r\n                instruccionActual instanceof Si\r\n            ){\r\n                instruccionActual = instruccionActual.optimizar2()\r\n            }\r\n\r\n            // ira\r\n            if (instruccionActual instanceof Ira && insertar){\r\n                iraActual = instruccionActual.etiqueta\r\n            }\r\n\r\n            // regla 2 \r\n            if (\r\n                instruccionActual instanceof Etiqueta &&\r\n                instruccionActual.etiqueta == iraActual\r\n            ){\r\n                // desde aquí hasta atrás, hay que eliminar todo\r\n                do {\r\n                    var cnd = newInstrucciones.pop()\r\n                } while (!(cnd instanceof Ira && cnd.etiqueta == iraActual))\r\n                iraActual = ''\r\n            }else if (instruccionActual instanceof Etiqueta){\r\n                iraActual = ''\r\n            }\r\n\r\n            // regla 6; regla 7\r\n            //goto L1;  -> goto L2\r\n            // \r\n            //L1:\r\n            //goto L2\r\n            if (\r\n                instruccionActual instanceof Ira &&\r\n                instruccionAnterior instanceof Etiqueta &&\r\n                instruccionActual.etiqueta != instruccionAnterior.etiqueta\r\n            ){\r\n                //var tmpIns = []\r\n                for (let i = newInstrucciones.length; i >= 0; i--) {\r\n                    const ins = newInstrucciones[i];\r\n                    if (\r\n                        ins instanceof Ira &&\r\n                        ins.etiqueta == instruccionAnterior.etiqueta\r\n                    ){\r\n                        newInstrucciones[i] = new Ira(instruccionActual.etiqueta)\r\n                    }\r\n\r\n                    if (\r\n                        ins instanceof Si &&\r\n                        ins.ira.etiqueta == instruccionAnterior.etiqueta\r\n                    ){\r\n                        newInstrucciones[i] = new Si(ins.condicion, new Ira(instruccionActual.etiqueta))\r\n                    }\r\n                }\r\n            }\r\n\r\n            \r\n\r\n            if(insertar){\r\n                newInstrucciones.push(instruccionActual)\r\n                instruccionAnterior = instruccionActual\r\n            }\r\n        }\r\n\r\n        this.instrucciones = newInstrucciones\r\n        return this\r\n    }\r\n\r\n    tresd(){\r\n        var retorno = ''\r\n\r\n        for (const instruccion of this.instrucciones) {\r\n            retorno += '\\t'+ instruccion.tresd()\r\n        }\r\n\r\n        return retorno\r\n    }\r\n}","import { Literal } from \"../../../analizadorXPath/Expresion/Expresiones\";\r\nimport { Id } from \"../expresiones/expresion\";\r\nimport { Instruccion } from \"../modelos\";\r\n\r\nexport class Return extends Instruccion{\r\n    constructor(id, expresion){\r\n        super()\r\n        this.id = id\r\n        this.expresion = expresion\r\n    }\r\n\r\n    optimizar(){\r\n        // optimizar expresion\r\n        var exp = this.expresion.optimizar()\r\n        this.expresion = exp\r\n\r\n        this.esFuncional = true\r\n\r\n        return this\r\n    }\r\n\r\n    tresd(){\r\n        var tExp =this.expresion.tresd()\r\n        return this.esFuncional ? `${this.id}=${tExp};\\n`: '\\n'\r\n    }\r\n}","import { Objeto } from \"../../analizadorXML/helpers\"\r\nimport { Tipo, TipoPath, concatenarNodos, concatenarNodosOrden , Predicado } from \"../AST/Entorno\"\r\nimport { Nodo } from \"./Expresiones\"\r\nvar C3D = require('../../C3D')\r\n\r\nexport class Axes \r\n{\r\n  constructor(nombre,predicado,tipo)\r\n  {\r\n    this.nombre=nombre\r\n    this.predicado=predicado\r\n    this.tipo=tipo\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n\r\n  }\r\n\r\n  GraficarAxis(ListaNodes,ListaEdges,contador,Axis=\"\")\r\n  {\r\n    var NodosActuales = []\r\n    var nodoTipo = {id:contador.num,label:this.tipo==TipoPath.ABS ? \"/\" : \"//\"}\r\n    NodosActuales.push(nodoTipo);ListaNodes.push(nodoTipo);contador.num++\r\n    var nodoNombre = {id:contador.num,label:Axis+this.nombre}\r\n    NodosActuales.push(nodoNombre);ListaNodes.push(nodoNombre);contador.num++\r\n    for (const predicado of this.predicado) \r\n    {\r\n      var nodoCorcheteA = {id:contador.num,label:\"[\"}\r\n      NodosActuales.push(nodoCorcheteA);ListaNodes.push(nodoCorcheteA);contador.num++\r\n      var nodoActual= {id:contador.num,label:\"Path\"}\r\n      NodosActuales.push(nodoActual);ListaNodes.push(nodoActual);contador.num++\r\n      var nodos = predicado.Graficar(ListaNodes,ListaEdges,contador)\r\n      for (const nodo of nodos) {\r\n        ListaEdges.push({from:nodoActual.id,to:nodo.id})\r\n      }\r\n      var nodoCorcheteC = {id:contador.num,label:\"]\"}\r\n      NodosActuales.push(nodoCorcheteC);ListaNodes.push(nodoCorcheteC);contador.num++\r\n    }\r\n    return NodosActuales\r\n  }\r\n}\r\n\r\nexport class Camino extends Axes\r\n{\r\n  constructor(nombre,predicado,tipo)\r\n  {\r\n    super(nombre,predicado,tipo)\r\n\r\n  }\r\n\r\n  getValor(nodos,inicio=1)\r\n  {\r\n    var retornos = []                                 //declaramos un array vacio de retornos\r\n    for (const nodo of nodos)                         //para cada nodo de los nodos\r\n    {\r\n      var retorno = []                                //declaramos un array vacio de retornos en cada nodo\r\n      var posicion = inicio;                          //posicion es igual a inicio, posicion = 1\r\n      if(this.tipo==TipoPath.ABS)                     /**** si es de tipo absoluto ****/\r\n      {\r\n          for (const iterator of nodo.entorno.hijos) {    //para cada nodo hijo  de la lista de los hijos\r\n            if(iterator.tipo == this.nombre || this.nombre==\"*\" )   //si nodohijo.tipo = nombre que le mandan o a todos (*)\r\n            {\r\n                var nuevaPila = Object.assign([],nodo.pila)       //clonamos la pila de entornos en una nueva pila\r\n                nuevaPila.push(nodo.entorno)                      //metemos el entorno en la nueva pila\r\n                retorno.push(new Nodo(Tipo.NODO,iterator,nuevaPila,iterator.texto,posicion,posicion))   //metemos el nodo a la lista de retornos del nodo\r\n                posicion++                                      //aumentamos la posicion de cada nodo\r\n            }\r\n          }\r\n          retorno = Predicado(this.predicado,retorno)             //y el retorno pasa por el predicado\r\n      }\r\n      else                                            /*** Si es de tipo relativo ****/\r\n      {\r\n        retorno = RecursivaCamino(nodos,this.nombre,this.predicado,posicion,1)    //el retorno pasa por el RecursivaCamino\r\n        retornos = concatenarNodos(retornos,retorno)                              //la lista de retornos es concatenarNodos\r\n        break\r\n      }\r\n      retornos = concatenarNodos(retornos,retorno)                                //la lista de retornos es concatenarNodos\r\n    }\r\n    return retornos                 //devolvemos la lista de retornos\r\n  }\r\n\r\n  getC3D(){\r\n\r\n    var cod = ''\r\n\r\n    /* Añadiendo en el Main la llamada y los parametros a la funcion CaminoABS */\r\n    cod += (`\\n/* Guardando la ruta ${this.nombre} */ \\n`);\r\n    //guardamos en el heapConsulta el camino que nos dieron /* esto es recursivo */\r\n    var TC0 = C3D.newTemp();\r\n    cod += (`${TC0} = hpc; \\n`);  //guardamos donde inicia la consulta\r\n\r\n    for (const letra of this.nombre) {\r\n      var ascci = letra.charCodeAt(0);\r\n      cod += (`heapConsulta[(int)hpc] = ${ascci}; \\n`);\r\n      cod += (`hpc = hpc + 1; \\n`);\r\n    } \r\n    cod += (`heapConsulta[(int)hpc] = -1; \\n`);\r\n    cod += (`hpc = hpc + 1; \\n`);\r\n\r\n    if(this.tipo == TipoPath.REL)\r\n    {\r\n      C3D.funcBoleanas[C3D.funcIndices.DESCENDANT] = true\r\n      cod += (`\\n/* Cambiando de entorno */\\n`);\r\n      cod += (`sp = sp + 1; \\n`);\r\n      var TC3 = C3D.newTemp();\r\n      cod += (`${TC3} = sp + 1; \\n`); //le sumamos uno para dejar espacio para el return\r\n      cod += (`stack[(int)${TC3}] = ${TC0}; \\n`);  //guardamos el inicio de heapConsulta\r\n      cod += (`Descendant(); \\n`); //manda a llamar a la funcion camino\r\n      cod += (`sp = sp - 1; \\n`);\r\n    }\r\n    else\r\n    {\r\n      C3D.funcBoleanas[C3D.funcIndices.CAMINO] = true\r\n      cod += (`\\n/* Cambiando de entorno */\\n`);\r\n      cod += (`sp = sp + 1; \\n`);\r\n      var TC3 = C3D.newTemp();\r\n      cod += (`${TC3} = sp + 1; \\n`); //le sumamos uno para dejar espacio para el return\r\n      cod += (`stack[(int)${TC3}] = ${TC0}; \\n`);  //guardamos el inicio de heapConsulta\r\n      cod += (`Camino(); \\n`); //manda a llamar a la funcion camino\r\n      cod += (`sp = sp - 1; \\n`);\r\n  \r\n    }\r\n    if(this.predicado.length > 0)\r\n    {\r\n      var tempCod\r\n      for (const predicado of this.predicado) {\r\n        tempCod = predicado.getC3D()\r\n        if(tempCod.tipo == Tipo.DECIMAL || tempCod.tipo == Tipo.INTEGER)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADODECIMAL] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoDecimal();\\n`\r\n          cod += `sp = sp -1;\\n`\r\n        }\r\n        if(tempCod.tipo == Tipo.STRING)\r\n        {\r\n          cod += tempCod.cod;\r\n        }\r\n        if(tempCod.tipo == Tipo.BOOLEAN)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADONODO] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoNodo();\\n`\r\n          cod += `sp = sp - 1;\\n`\r\n        }\r\n      }\r\n    }\r\n    return {cod: cod, tipo: Tipo.NODO}\r\n  }\r\n\r\n  Graficar(ListaNodes,ListaEdges,contador)\r\n  {\r\n    return this.GraficarAxis(ListaNodes,ListaEdges,contador,\"\")\r\n  }\r\n}\r\n\r\nfunction RecursivaCamino(nodos,nombre,predicado,actual,suma) \r\n{\r\n  var retorno = []\r\n  for (const nodo of nodos) \r\n  {\r\n    var subretorno = []\r\n    var posicion = actual;\r\n    for (const iterator of nodo.entorno.hijos) {\r\n      var nuevaPila = Object.assign([],nodo.pila)\r\n      nuevaPila.push(nodo.entorno)\r\n      var hijo = new Nodo(Tipo.NODO,iterator,nuevaPila,iterator.texto,posicion)\r\n      retorno = concatenarNodosOrden(retorno,RecursivaCamino([hijo],nombre,predicado,posicion+(suma/10),suma/10))\r\n      if(iterator.tipo==nombre || nombre==\"*\") { subretorno.push(hijo); posicion+=suma  }\r\n    } \r\n    subretorno = Predicado(predicado,subretorno)\r\n    retorno = concatenarNodosOrden(retorno,subretorno)\r\n    // var index = 0\r\n    // for (const [indexHijo,hijo] of hijos.entries()) {\r\n    //   if(subretorno[index] && subretorno[index].posicion==indexHijo)\r\n    //   {\r\n    //     retorno.push(subretorno[index])\r\n    //     index++\r\n    //   }\r\n    //   retorno = retorno.concat(hijo)\r\n    // }\r\n    //retorno = retorno.concat(subretorno,retornoTemp)\r\n  }\r\n  return retorno\r\n}\r\n\r\nexport class Atributo extends Axes\r\n{\r\n  constructor(nombre,predicado,tipo)\r\n  {\r\n    super(nombre,predicado,tipo)\r\n  }\r\n  getValor(nodos)\r\n  {\r\n    var retornos = []                       \r\n    for (const nodo of nodos) \r\n    {\r\n      var retorno = []\r\n      var posicion = 1;\r\n      if(this.tipo==TipoPath.ABS)\r\n      {\r\n          var nuevaPila = Object.assign([],nodo.pila)\r\n          nuevaPila.push(nodo.entorno)\r\n          for (const iterator of nodo.entorno.atributos) {\r\n              if(iterator.nombre == this.nombre || this.nombre==\"*\" )\r\n              {\r\n                  retorno.push(new Nodo(Tipo.ATRIB,nodo.entorno,nuevaPila,iterator.valor,posicion))\r\n                  posicion++\r\n              }\r\n          }\r\n          retorno = Predicado(this.predicado,retorno)\r\n      }\r\n      else\r\n      {\r\n          retorno = RecursivaAtributo(nodos,this.nombre,this.predicado)\r\n      }\r\n      retornos = retornos.concat(retorno)\r\n    }\r\n    return retornos\r\n  }\r\n\r\n  getC3D(nodos){   \r\n    var cod = ''\r\n\r\n    /* Añadiendo en el Main la llamada y los parametros a la funcion CaminoABS */\r\n    cod += (`\\n/* Guardando la ruta del atributo ${this.nombre} */ \\n`);\r\n\r\n    //guardamos en el heapConsulta el camino que nos dieron /* esto solo viene una vez */\r\n    var TC0 = C3D.newTemp();\r\n    cod += (`${TC0} = hpc; \\n`);  //guardamos donde inicia la consulta\r\n\r\n    for (const letra of this.nombre) {\r\n      var ascci = letra.charCodeAt(0);\r\n      cod += (`heapConsulta[(int)hpc] = ${ascci}; \\n`);\r\n      cod += (`hpc = hpc + 1; \\n`);\r\n    } \r\n    cod += (`heapConsulta[(int)hpc] = -1; \\n`);\r\n    cod += (`hpc = hpc + 1; \\n`);\r\n\r\n    if(this.tipo == TipoPath.REL)\r\n    {\r\n      C3D.funcBoleanas[C3D.funcIndices.RECURSIVAATRIBUTO] = true\r\n      C3D.funcBoleanas[C3D.funcIndices.RRECURSIVAATROBUTO] = true\r\n      cod += (`\\n/* Cambiando de entorno */\\n`);\r\n      cod += (`sp = sp + 1; \\n`);\r\n      var TC3 = C3D.newTemp();\r\n      cod += (`${TC3} = sp + 1; \\n`); //le sumamos uno para dejar espacio para el return\r\n      cod += (`stack[(int)${TC3}] = ${TC0}; \\n`);  //guardamos el inicio de heapConsulta\r\n      cod += (`AtributoDescendant(); \\n`); //manda a llamar a la funcion atributo\r\n      cod += (`sp = sp - 1; \\n`);\r\n    }\r\n    else\r\n    {\r\n      C3D.funcBoleanas[C3D.funcIndices.ATRIBUTO] = true\r\n      cod += (`\\n/* Cambiando de entorno */\\n`);\r\n      cod += (`sp = sp + 1; \\n`);\r\n      var TC3 = C3D.newTemp();\r\n      cod += (`${TC3} = sp + 1; \\n`); //le sumamos uno para dejar espacio para el return\r\n      cod += (`stack[(int)${TC3}] = ${TC0}; \\n`);  //guardamos el inicio de heapConsulta\r\n      cod += (`Atributo(); \\n`); //manda a llamar a la funcion atributo\r\n      cod += (`sp = sp - 1; \\n`);\r\n  \r\n    }\r\n\r\n    if(this.predicado.length > 0)\r\n    {\r\n      var tempCod\r\n      for (const predicado of this.predicado) {\r\n        tempCod = predicado.getC3D()\r\n        if(tempCod.tipo == Tipo.DECIMAL || tempCod.tipo == Tipo.INTEGER)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADODECIMAL] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoDecimal();\\n`\r\n          cod += `sp = sp -1;\\n`\r\n        }\r\n        if(tempCod.tipo == Tipo.STRING)\r\n        {\r\n          cod += tempCod.cod;\r\n        }\r\n        if(tempCod.tipo == Tipo.BOOLEAN)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADONODO] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoNodo();\\n`\r\n          cod += `sp = sp - 1;\\n`\r\n        }\r\n      }\r\n    }\r\n\r\n    return {cod: cod, tipo: Tipo.ATRIB}\r\n\r\n  }\r\n\r\n  Graficar(ListaNodes,ListaEdges,contador)\r\n  {\r\n    return this.GraficarAxis(ListaNodes,ListaEdges,contador,\"@\")\r\n  }\r\n}\r\n\r\nfunction RecursivaAtributo(nodos,nombre,predicado) \r\n{\r\n  var retornos=[]\r\n  for (const nodo of nodos) \r\n  {\r\n    var retorno = []\r\n    var hijos = []\r\n    var posicion=1;\r\n    for (const atributo of nodo.entorno.atributos) {\r\n      if((atributo.nombre == nombre || nombre==\"*\") && nodo.entorno.tipo!=\"/\") {\r\n        var nuevoNodo = Object.assign({},nodo)\r\n        nuevoNodo.tipo=Tipo.ATRIB\r\n        nuevoNodo.posicion=posicion\r\n        nuevoNodo.valor=atributo.valor\r\n        nuevoNodo.pila.push(nodo.entorno)\r\n        retorno.push(nuevoNodo)\r\n        posicion++\r\n      }\r\n    }\r\n    for (const iterator of nodo.entorno.hijos) {\r\n      var nuevaPila = Object.assign([],nodo.pila)\r\n      nuevaPila.push(nodo.entorno)\r\n      var hijo = new Nodo(Tipo.NODO,iterator,nuevaPila,iterator.texto)\r\n      hijos.push(hijo)\r\n    }\r\n    var retornohijos = RecursivaAtributo(hijos,nombre,predicado)\r\n    retorno = Predicado(predicado,retorno)\r\n    retornos = retornos.concat(retorno,retornohijos)\r\n  }\r\n  return retornos\r\n}\r\n\r\nexport class Child extends Axes\r\n{\r\n  constructor(nombre,predicado,tipo)\r\n  {\r\n    super(nombre,predicado,tipo)\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    var hijo = new Camino(this.nombre,this.predicado,this.tipo)\r\n    return hijo.getValor(nodos)\r\n  }\r\n\r\n  getC3D(nodos){\r\n    C3D.funcBoleanas[C3D.funcIndices.CAMINO] = true\r\n    var cod = ''\r\n\r\n    /* Añadiendo en el Main la llamada y los parametros a la funcion CaminoABS */\r\n    cod += (`\\n/* Guardando la ruta ${this.nombre} */ \\n`);\r\n    //guardamos en el heapConsulta el camino que nos dieron /* esto es recursivo */\r\n    var TC0 = C3D.newTemp();\r\n    cod += (`${TC0} = hpc; \\n`);  //guardamos donde inicia la consulta\r\n\r\n    for (const letra of this.nombre) {\r\n      var ascci = letra.charCodeAt(0);\r\n      cod += (`heapConsulta[(int)hpc] = ${ascci}; \\n`);\r\n      cod += (`hpc = hpc + 1; \\n`);\r\n    } \r\n    cod += (`heapConsulta[(int)hpc] = -1; \\n`);\r\n    cod += (`hpc = hpc + 1; \\n`);\r\n\r\n    cod += (`\\n/* Cambiando de entorno */\\n`);\r\n    cod += (`sp = sp + 1; \\n`);\r\n    var TC3 = C3D.newTemp();\r\n    cod += (`${TC3} = sp + 1; \\n`); //le sumamos uno para dejar espacio para el return\r\n    cod += (`stack[(int)${TC3}] = ${TC0}; \\n`);  //guardamos el inicio de heapConsulta\r\n    cod += (`Camino(); \\n`); //manda a llamar a la funcion camino\r\n    cod += (`sp = sp - 1; \\n`);\r\n\r\n    if(this.predicado.length > 0)\r\n    {\r\n      var tempCod\r\n      for (const predicado of this.predicado) {\r\n        tempCod = predicado.getC3D()\r\n        if(tempCod.tipo == Tipo.DECIMAL || tempCod.tipo == Tipo.INTEGER)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADODECIMAL] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoDecimal();\\n`\r\n          cod += `sp = sp -1;\\n`\r\n        }\r\n        if(tempCod.tipo == Tipo.STRING)\r\n        {\r\n          cod += tempCod.cod;\r\n        }\r\n        if(tempCod.tipo == Tipo.BOOLEAN)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADONODO] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoNodo();\\n`\r\n          cod += `sp = sp - 1;\\n`\r\n        }\r\n      }\r\n    }\r\n\r\n    return {cod: cod, tipo: Tipo.NODO}\r\n  }\r\n\r\n  Graficar(ListaNodes,ListaEdges,contador)\r\n  {\r\n    return this.GraficarAxis(ListaNodes,ListaEdges,contador,\"child::\")\r\n  }\r\n}\r\n\r\nexport class Descendant extends Axes\r\n{\r\n  constructor(nombre,predicado,tipo)\r\n  {\r\n    super(nombre,predicado,tipo)\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    var retornos = []\r\n    for (const nodo of nodos) { \r\n      var descendientes = []\r\n      descendientes = new Camino(this.nombre,[],TipoPath.REL).getValor([nodo])\r\n      descendientes = Predicado(this.predicado,descendientes)\r\n      if(this.tipo==TipoPath.REL)\r\n      {\r\n        for (const hijo of nodo.entorno.hijos) {     \r\n          var nuevaPila = Object.assign([],nodo.pila)\r\n          nuevaPila.push(nodo.entorno)\r\n          descendientes = descendientes.concat(new Descendant(this.nombre,this.predicado,this.Tipo).getValor([new Nodo(Tipo.NODO,hijo,nuevaPila,hijo.texto)])) \r\n        }\r\n      }\r\n      retornos = retornos.concat(descendientes)\r\n    }\r\n    return retornos\r\n  }\r\n\r\n  Graficar(ListaNodes,ListaEdges,contador)\r\n  {\r\n    return this.GraficarAxis(ListaNodes,ListaEdges,contador,\"descendant::\")\r\n  }\r\n\r\n  getC3D(nodos)\r\n  {\r\n    C3D.funcBoleanas[C3D.funcIndices.DESCENDANT] = true\r\n    C3D.funcBoleanas[C3D.funcIndices.DESCENDANTRECURSIVA] = true\r\n    var cod = ''\r\n\r\n    /* Añadiendo en el Main la llamada y los parametros a la funcion CaminoABS */\r\n    cod += (`\\n/* Guardando la ruta ${this.nombre} */ \\n`);\r\n    //guardamos en el heapConsulta el camino que nos dieron /* esto es recursivo */\r\n    var TC0 = C3D.newTemp();\r\n    cod += (`${TC0} = hpc; \\n`);  //guardamos donde inicia la consulta\r\n\r\n    for (const letra of this.nombre) {\r\n      var ascci = letra.charCodeAt(0);\r\n      cod += (`heapConsulta[(int)hpc] = ${ascci}; \\n`);\r\n      cod += (`hpc = hpc + 1; \\n`);\r\n    } \r\n    cod += (`heapConsulta[(int)hpc] = -1; \\n`);\r\n    cod += (`hpc = hpc + 1; \\n`);\r\n\r\n    cod += (`\\n/* Cambiando de entorno */\\n`);\r\n    cod += (`sp = sp + 1; \\n`);\r\n    var TC3 = C3D.newTemp();\r\n    cod += (`${TC3} = sp + 1; \\n`); //le sumamos uno para dejar espacio para el return\r\n    cod += (`stack[(int)${TC3}] = ${TC0}; \\n`);  //guardamos el inicio de heapConsulta\r\n    cod += (`Descendant(); \\n`); //manda a llamar a la funcion camino\r\n    cod += (`sp = sp - 1; \\n`);\r\n\r\n    if(this.predicado.length > 0)\r\n    {\r\n      var tempCod\r\n      for (const predicado of this.predicado) {\r\n        tempCod = predicado.getC3D()\r\n        if(tempCod.tipo == Tipo.DECIMAL || tempCod.tipo == Tipo.INTEGER)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADODECIMAL] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoDecimal();\\n`\r\n          cod += `sp = sp -1;\\n`\r\n        }\r\n        if(tempCod.tipo == Tipo.STRING)\r\n        {\r\n          cod += tempCod.cod;\r\n        }\r\n        if(tempCod.tipo == Tipo.BOOLEAN)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADONODO] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoNodo();\\n`\r\n          cod += `sp = sp - 1;\\n`\r\n        }\r\n      }\r\n    }\r\n\r\n    return {cod: cod, tipo: Tipo.NODO}\r\n  }\r\n}\r\n\r\nexport class Attribute extends Axes\r\n{\r\n  constructor(nombre,predicado,tipo)\r\n  {\r\n    super(nombre,predicado,tipo)\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    var atributo = new Atributo(this.nombre,this.predicado,this.tipo)\r\n    return atributo.getValor(nodos)\r\n  }\r\n\r\n  getC3D(nodos){   \r\n    C3D.funcBoleanas[C3D.funcIndices.ATRIBUTO] = true\r\n    var cod = ''\r\n\r\n    /* Añadiendo en el Main la llamada y los parametros a la funcion CaminoABS */\r\n    cod += (`\\n/* Guardando la ruta del atributo ${this.nombre} */ \\n`);\r\n\r\n    //guardamos en el heapConsulta el camino que nos dieron /* esto solo viene una vez */\r\n    var TC0 = C3D.newTemp();\r\n    cod += (`${TC0} = hpc; \\n`);  //guardamos donde inicia la consulta\r\n\r\n    for (const letra of this.nombre) {\r\n      var ascci = letra.charCodeAt(0);\r\n      cod += (`heapConsulta[(int)hpc] = ${ascci}; \\n`);\r\n      cod += (`hpc = hpc + 1; \\n`);\r\n    } \r\n    cod += (`heapConsulta[(int)hpc] = -1; \\n`);\r\n    cod += (`hpc = hpc + 1; \\n`);\r\n\r\n    cod += (`\\n/* Cambiando de entorno */\\n`);\r\n    cod += (`sp = sp + 1; \\n`);\r\n    var TC3 = C3D.newTemp();\r\n    cod += (`${TC3} = sp + 1; \\n`); //le sumamos uno para dejar espacio para el return\r\n    cod += (`stack[(int)${TC3}] = ${TC0}; \\n`);  //guardamos el inicio de heapConsulta\r\n    cod += (`Atributo(); \\n`); //manda a llamar a la funcion atributo\r\n    cod += (`sp = sp - 1; \\n`);\r\n\r\n    if(this.predicado.length > 0)\r\n    {\r\n      var tempCod\r\n      for (const predicado of this.predicado) {\r\n        tempCod = predicado.getC3D()\r\n        if(tempCod.tipo == Tipo.DECIMAL || tempCod.tipo == Tipo.INTEGER)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADODECIMAL] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoDecimal();\\n`\r\n          cod += `sp = sp -1;\\n`\r\n        }\r\n        if(tempCod.tipo == Tipo.STRING)\r\n        {\r\n          cod += tempCod.cod;\r\n        }\r\n        if(tempCod.tipo == Tipo.BOOLEAN)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADONODO] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoNodo();\\n`\r\n          cod += `sp = sp - 1;\\n`\r\n        }\r\n      }\r\n    }\r\n\r\n    return {cod: cod, tipo: Tipo.ATRIB}\r\n\r\n  }\r\n\r\n  Graficar(ListaNodes,ListaEdges,contador)\r\n  {\r\n    return this.GraficarAxis(ListaNodes,ListaEdges,contador,\"attribute::\")\r\n  }\r\n}\r\n\r\nexport class Self extends Axes\r\n{\r\n  constructor(nombre,predicado,tipo)\r\n  {\r\n    super(nombre,predicado,tipo)\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    var retornos=[]\r\n    for (const nodo of nodos) {\r\n      var retorno = []\r\n      var posicion = 1;\r\n      if(nodo.entorno.tipo==this.nombre || this.nombre==\"*\")\r\n      {\r\n        nodo.posicion=posicion;\r\n        retorno.push(nodo)\r\n        retorno = Predicado(this.predicado,retorno)\r\n        posicion++\r\n      }\r\n      if(this.tipo==TipoPath.REL)\r\n      {\r\n        var hijos=new Camino(this.nombre,this.predicado,this.tipo).getValor([nodo])\r\n        retorno = retorno.concat(hijos)\r\n      }\r\n      retornos = retornos.concat(retorno)\r\n    }\r\n    return retornos\r\n  }\r\n\r\n  getC3D(nodos){   \r\n\r\n    C3D.funcBoleanas[C3D.funcIndices.SELF] = true\r\n    var cod = ''\r\n\r\n    /* Añadiendo en el Main la llamada y los parametros a la funcion CaminoABS */\r\n    cod += (`\\n/* Guardando la ruta del atributo ${this.nombre} */ \\n`);\r\n\r\n    //guardamos en el heapConsulta el camino que nos dieron /* esto solo viene una vez */\r\n    var TC0 = C3D.newTemp();\r\n    cod += (`${TC0} = hpc; \\n`);  //guardamos donde inicia la consulta\r\n\r\n    for (const letra of this.nombre) {\r\n      var ascci = letra.charCodeAt(0);\r\n      cod += (`heapConsulta[(int)hpc] = ${ascci}; \\n`);\r\n      cod += (`hpc = hpc + 1; \\n`);\r\n    } \r\n    cod += (`heapConsulta[(int)hpc] = -1; \\n`);\r\n    cod += (`hpc = hpc + 1; \\n`);\r\n\r\n    cod += (`\\n/* Cambiando de entorno */\\n`);\r\n    cod += (`sp = sp + 1; \\n`);\r\n    var TC3 = C3D.newTemp();\r\n    cod += (`${TC3} = sp + 1; \\n`); //le sumamos uno para dejar espacio para el return\r\n    cod += (`stack[(int)${TC3}] = ${TC0}; \\n`);  //guardamos el inicio de heapConsulta\r\n    cod += (`Self(); \\n`); //manda a llamar a la funcion atributo\r\n    cod += (`sp = sp - 1; \\n`);\r\n\r\n    if(this.predicado.length > 0)\r\n    {\r\n      var tempCod\r\n      for (const predicado of this.predicado) {\r\n        tempCod = predicado.getC3D()\r\n        if(tempCod.tipo == Tipo.DECIMAL || tempCod.tipo == Tipo.INTEGER)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADODECIMAL] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoDecimal();\\n`\r\n          cod += `sp = sp -1;\\n`\r\n        }\r\n        if(tempCod.tipo == Tipo.STRING)\r\n        {\r\n          cod += tempCod.cod;\r\n        }\r\n        if(tempCod.tipo == Tipo.BOOLEAN)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADONODO] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoNodo();\\n`\r\n          cod += `sp = sp - 1;\\n`\r\n        }\r\n      }\r\n    }\r\n\r\n    return {cod: cod, tipo: Tipo.NODO}\r\n\r\n  }\r\n\r\n  Graficar(ListaNodes,ListaEdges,contador)\r\n  {\r\n    return this.GraficarAxis(ListaNodes,ListaEdges,contador,\"self::\")\r\n  }\r\n}\r\n\r\nexport class DescSelf extends Axes\r\n{\r\n  constructor(nombre,predicado,tipo)\r\n  {\r\n    super(nombre,predicado,tipo)\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    var retornos = []\r\n    for (const nodo of nodos) {\r\n      var retorno=[]\r\n      if(nodo.entorno.tipo==this.nombre)\r\n      {\r\n        nodos.posicion=1\r\n        retorno.push(nodo) \r\n      }\r\n      retorno = retorno.concat(new Camino(this.nombre,[],TipoPath.REL).getValor([nodo]))\r\n      retorno = Predicado(this.predicado,retorno)\r\n      retornos = retornos.concat(retorno)\r\n      if(this.tipo==TipoPath.REL)\r\n      {\r\n        for (const hijo of nodo.entorno.hijos) {     \r\n          var nuevaPila = Object.assign([],nodo.pila)\r\n          nuevaPila.push(nodo.entorno)\r\n          retorno = retorno.concat(new DescSelf(this.nombre,this.predicado,this.Tipo).getValor([new Nodo(Tipo.NODO,hijo,nuevaPila,hijo.texto)])) \r\n        }\r\n        retornos = retornos.concat(retorno)\r\n      }\r\n    }\r\n    return retornos\r\n  }\r\n\r\n  Graficar(ListaNodes,ListaEdges,contador)\r\n  {\r\n    return this.GraficarAxis(ListaNodes,ListaEdges,contador,\"descendant-or-self::\")\r\n  }\r\n\r\n  getC3D(nodos)\r\n  {\r\n    C3D.funcBoleanas[C3D.funcIndices.DESCENDANTSELF] = true\r\n    C3D.funcBoleanas[C3D.funcIndices.DESCENDANTRECURSIVA] = true\r\n    var cod = ''\r\n\r\n    /* Añadiendo en el Main la llamada y los parametros a la funcion CaminoABS */\r\n    cod += (`\\n/* Guardando la ruta ${this.nombre} */ \\n`);\r\n    //guardamos en el heapConsulta el camino que nos dieron /* esto es recursivo */\r\n    var TC0 = C3D.newTemp();\r\n    cod += (`${TC0} = hpc; \\n`);  //guardamos donde inicia la consulta\r\n\r\n    for (const letra of this.nombre) {\r\n      var ascci = letra.charCodeAt(0);\r\n      cod += (`heapConsulta[(int)hpc] = ${ascci}; \\n`);\r\n      cod += (`hpc = hpc + 1; \\n`);\r\n    } \r\n    cod += (`heapConsulta[(int)hpc] = -1; \\n`);\r\n    cod += (`hpc = hpc + 1; \\n`);\r\n\r\n    cod += (`\\n/* Cambiando de entorno */\\n`);\r\n    cod += (`sp = sp + 1; \\n`);\r\n    var TC3 = C3D.newTemp();\r\n    cod += (`${TC3} = sp + 1; \\n`); //le sumamos uno para dejar espacio para el return\r\n    cod += (`stack[(int)${TC3}] = ${TC0}; \\n`);  //guardamos el inicio de heapConsulta\r\n    cod += (`DescendantSelf(); \\n`); //manda a llamar a la funcion camino\r\n    cod += (`sp = sp - 1; \\n`);\r\n\r\n    if(this.predicado.length > 0)\r\n    {\r\n      var tempCod\r\n      for (const predicado of this.predicado) {\r\n        tempCod = predicado.getC3D()\r\n        if(tempCod.tipo == Tipo.DECIMAL || tempCod.tipo == Tipo.INTEGER)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADODECIMAL] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoDecimal();\\n`\r\n          cod += `sp = sp -1;\\n`\r\n        }\r\n        if(tempCod.tipo == Tipo.STRING)\r\n        {\r\n          cod += tempCod.cod;\r\n        }\r\n        if(tempCod.tipo == Tipo.BOOLEAN)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADONODO] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoNodo();\\n`\r\n          cod += `sp = sp - 1;\\n`\r\n        }\r\n      }\r\n    }\r\n\r\n    return {cod: cod, tipo: Tipo.NODO}\r\n  }\r\n}\r\n\r\nexport class FollowSibling extends Axes\r\n{\r\n  constructor(nombre,predicado,tipo)\r\n  {\r\n    super(nombre,predicado,tipo)\r\n  }\r\n\r\n  getValor(nodos,nivel)\r\n  {\r\n    if(!nivel) nivel = 0                    //si no hay nivel, el nivel es 0\r\n    var retornos = new  Map()               //crea una tabla hash para almacenar\r\n    for (const nodo of nodos) {             //para cada nodo desde la raiz\r\n      var retorno = []                      //crea un array par los retornos\r\n      var nuevaPila = Object.assign([],nodo.pila)   //crea una nueva pila de la pila de los hijos\r\n      var entorno = nuevaPila.pop()                 //saca el primero de la pila\r\n      var Padre = [new Nodo(Tipo.NODO,entorno,nuevaPila,\"\")]  \r\n      var hermanos = new Camino(\"*\",[],TipoPath.ABS).getValor(Padre)\r\n      var indice=-1;\r\n      var posicion=1\r\n      for (const [i,v] of hermanos.entries()) {\r\n        if(v.entorno == nodo.entorno)\r\n        { \r\n          indice=i\r\n        }\r\n        if(indice!=-1 && i>indice-nivel && (v.entorno.tipo==this.nombre || v.entorno.tipo==\"*\"))\r\n        {\r\n          v.posicion=posicion\r\n          retorno.push(v)\r\n          posicion++\r\n        }\r\n      }\r\n      retorno = Predicado(this.predicado,retorno)\r\n      if(this.tipo==TipoPath.REL) {\r\n        var subretorno = []\r\n        for (const hijo of nodo.entorno.hijos) { \r\n          var nuevaPila = Object.assign([],nodo.pila)\r\n          nuevaPila.push(nodo.entorno)\r\n          subretorno = subretorno.concat(new FollowSibling(this.nombre,this.predicado,this.tipo).getValor([new Nodo(Tipo.NODO,hijo,nuevaPila,\"\")],1))\r\n        }\r\n        retorno = retorno.concat(subretorno)\r\n      }\r\n      for (const iterator of retorno) {\r\n        retornos.set(iterator.entorno,iterator)\r\n      }\r\n    }\r\n    var realretorno=[]\r\n    var posicion = 1\r\n    for (const valor of retornos.values()) {\r\n      valor.posicion=1\r\n      realretorno.push(valor)\r\n      posicion++\r\n    }\r\n    return realretorno\r\n  }\r\n\r\n  getC3D(nodos){\r\n    /* Todos los hermanos del nodo en cuestion -> Todos los hijos del padre del nodo actual (menos el actual) */\r\n\r\n    C3D.funcBoleanas[C3D.funcIndices.FOLLOWINGSIBLING] = true\r\n    var cod = ''\r\n\r\n    /* Añadiendo en el Main la llamada y los parametros a la funcion FOLLOWING-SIBLING*/\r\n    cod += (`\\n/* Guardando la ruta ${this.nombre} */ \\n`);\r\n    //guardamos en el heapConsulta el camino que nos dieron /* esto es recursivo */\r\n    var TC0 = C3D.newTemp();\r\n    cod += (`${TC0} = hpc; \\n`);  //guardamos donde inicia la consulta\r\n\r\n    for (const letra of this.nombre) {\r\n      var ascci = letra.charCodeAt(0);\r\n      cod += (`heapConsulta[(int)hpc] = ${ascci}; \\n`);\r\n      cod += (`hpc = hpc + 1; \\n`);\r\n    } \r\n    cod += (`heapConsulta[(int)hpc] = -1; \\n`);\r\n    cod += (`hpc = hpc + 1; \\n`);\r\n\r\n    cod += (`\\n/* Cambiando de entorno */\\n`);\r\n    cod += (`sp = sp + 1; \\n`);\r\n    var TC3 = C3D.newTemp();\r\n    cod += (`${TC3} = sp + 1; \\n`); //le sumamos uno para dejar espacio para el return\r\n    cod += (`stack[(int)${TC3}] = ${TC0}; \\n`);  //guardamos el inicio de heapConsulta\r\n    cod += (`FollowingSibling(); \\n`); //manda a llamar a la funcion camino\r\n    cod += (`sp = sp - 1; \\n`);\r\n\r\n    if(this.predicado.length > 0)\r\n    {\r\n      var tempCod\r\n      for (const predicado of this.predicado) {\r\n        tempCod = predicado.getC3D()\r\n        if(tempCod.tipo == Tipo.DECIMAL || tempCod.tipo == Tipo.INTEGER)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADODECIMAL] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoDecimal();\\n`\r\n          cod += `sp = sp -1;\\n`\r\n        }\r\n        if(tempCod.tipo == Tipo.STRING)\r\n        {\r\n          cod += tempCod.cod;\r\n        }\r\n        if(tempCod.tipo == Tipo.BOOLEAN)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADONODO] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoNodo();\\n`\r\n          cod += `sp = sp - 1;\\n`\r\n        }\r\n      }\r\n    }\r\n\r\n    return {cod: cod, tipo: Tipo.NODO}\r\n  }\r\n\r\n  Graficar(ListaNodes,ListaEdges,contador)\r\n  {\r\n    return this.GraficarAxis(ListaNodes,ListaEdges,contador,\"following-sibling::\")\r\n  }\r\n}\r\n\r\nexport class Follow extends Axes\r\n{\r\n  constructor(nombre,predicado,tipo)\r\n  {\r\n    super(nombre,predicado,tipo)\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    var retornos = new Map()\r\n    for (const nodo of nodos) {\r\n      var retorno = []\r\n      var nuevaPila = Object.assign([],nodo.pila)\r\n      var EntornoActual = nuevaPila.pop()\r\n      var posibles = (new Camino(\"*\",[],TipoPath.REL)).getValor([new Nodo(Tipo.NODO,EntornoActual,nuevaPila,\"\")])\r\n      var indice = -1\r\n      var posicion = 1\r\n      for (let index = 0; index < posibles.length; index++) {\r\n        if(posibles[index].entorno == nodo.entorno)\r\n        {\r\n          indice = index\r\n        }\r\n        if(indice!=-1 && index > indice && posibles[index].entorno.tipo==this.nombre)\r\n        {\r\n          posibles[index].posicion=posicion\r\n          retorno.push(posibles[index])\r\n          posicion++ \r\n        }\r\n      }\r\n      retorno = Predicado(this.predicado,retorno)\r\n      for (const v of retorno) {\r\n        retornos.set(v.entorno,v)\r\n      }\r\n      if(this.tipo==TipoPath.REL)\r\n      {\r\n        var subretorno = []\r\n        for (const hijo of nodo.entorno.hijos) { \r\n          var nuevaPila = Object.assign([],nodo.pila)\r\n          nuevaPila.push(nodo.entorno)\r\n          subretorno = subretorno.concat(new Follow(this.nombre,this.predicado,this.tipo).getValor([new Nodo(Tipo.NODO,hijo,nuevaPila,\"\")],1))\r\n        }\r\n        retorno = retorno.concat(subretorno)\r\n      }\r\n      for (const iterator of retorno) {\r\n        retornos.set(iterator.entorno,iterator)\r\n      }\r\n    }\r\n    var temp = []\r\n    for (const val of retornos.values()) {\r\n      temp.push(val)\r\n    }\r\n    return temp\r\n  }\r\n\r\n  Graficar(ListaNodes,ListaEdges,contador)\r\n  {\r\n    return this.GraficarAxis(ListaNodes,ListaEdges,contador,\"following::\")\r\n  }\r\n}\r\n\r\nexport class CaminoInverso extends Axes\r\n{  \r\n  constructor(nombre,predicado,tipo)\r\n  {\r\n    super(nombre,predicado,tipo)\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    var mapa = new Map()                                //iniciamos una tabla hash\r\n    for (const nodo of nodos) {                         //para cada nodo desde la raiz\r\n      var nuevaPila = Object.assign([],nodo.pila)       //copiamos la una nueva pila de la pila del nodo\r\n      var temp = nuevaPila.pop()                        //tomamos el primero de la pila\r\n      var nuevoNodo = new Nodo(Tipo.NODO,temp,nuevaPila,temp.texto,1)   //\r\n      var convertido = Predicado(this.predicado,[nuevoNodo])\r\n      for (const iterator of convertido) {\r\n        mapa.set(temp,iterator) \r\n      }\r\n      if(this.tipo==TipoPath.REL)\r\n      {\r\n        for (const hijo of nodo.entorno.hijos) {     \r\n          var nuevaPila = Object.assign([],nodo.pila)\r\n          nuevaPila.push(nodo.entorno)\r\n          var retorno = new CaminoInverso(this.nombre,this.predicado,this.Tipo).getValor([new Nodo(Tipo.NODO,hijo,nuevaPila,hijo.texto)]) \r\n          for (const iterator of retorno) {\r\n            mapa.set(iterator.entorno,iterator) \r\n          }\r\n        }\r\n      }\r\n    }\r\n    var tempRetorno=[]\r\n    for (const [clave,valor] of mapa  ) {\r\n      tempRetorno.push(valor)\r\n    }\r\n    return tempRetorno\r\n  }\r\n\r\n  getC3D(nodos){\r\n    /* Esta funcion solo captura el primer padre del nodo en cuestion */\r\n    //hacemos el camino con normalidad ::check\r\n    //en este Axes guardamos en el heapConsulta el nombre del padre :: check    \r\n\r\n    C3D.funcBoleanas[C3D.funcIndices.PARENT] = true\r\n    var cod = ''\r\n\r\n    /* Añadiendo en el Main la llamada y los parametros a la funcion CaminoABS */\r\n    cod += (`\\n/* Guardando la ruta ${this.nombre} */ \\n`);\r\n    //guardamos en el heapConsulta el camino que nos dieron /* esto es recursivo */\r\n    var TC0 = C3D.newTemp();\r\n    cod += (`${TC0} = hpc; \\n`);  //guardamos donde inicia la consulta\r\n\r\n    for (const letra of this.nombre) {\r\n      var ascci = letra.charCodeAt(0);\r\n      cod += (`heapConsulta[(int)hpc] = ${ascci}; \\n`);\r\n      cod += (`hpc = hpc + 1; \\n`);\r\n    } \r\n    cod += (`heapConsulta[(int)hpc] = -1; \\n`);\r\n    cod += (`hpc = hpc + 1; \\n`);\r\n\r\n    cod += (`\\n/* Cambiando de entorno */\\n`);\r\n    cod += (`sp = sp + 1; \\n`);\r\n    var TC3 = C3D.newTemp();\r\n    cod += (`${TC3} = sp + 1; \\n`); //le sumamos uno para dejar espacio para el return\r\n    cod += (`stack[(int)${TC3}] = ${TC0}; \\n`);  //guardamos el inicio de heapConsulta\r\n    cod += (`Parent(); \\n`); //manda a llamar a la funcion camino inverso\r\n    cod += (`sp = sp - 1; \\n`);\r\n\r\n    if(this.predicado.length > 0)\r\n    {\r\n      var tempCod\r\n      for (const predicado of this.predicado) {\r\n        tempCod = predicado.getC3D()\r\n        if(tempCod.tipo == Tipo.DECIMAL || tempCod.tipo == Tipo.INTEGER)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADODECIMAL] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoDecimal();\\n`\r\n          cod += `sp = sp -1;\\n`\r\n        }\r\n        if(tempCod.tipo == Tipo.STRING)\r\n        {\r\n          cod += tempCod.cod;\r\n        }\r\n        if(tempCod.tipo == Tipo.BOOLEAN)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADONODO] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoNodo();\\n`\r\n          cod += `sp = sp - 1;\\n`\r\n        }\r\n      }\r\n    }\r\n\r\n    return {cod: cod, tipo: Tipo.NODO}\r\n  }\r\n\r\n  Graficar(ListaNodes,ListaEdges,contador)\r\n  {\r\n    return this.GraficarAxis(ListaNodes,ListaEdges,contador,\"\")\r\n  }\r\n}\r\n\r\nexport class Parent extends Axes\r\n{\r\n  constructor(nombre,predicado,tipo)\r\n  {\r\n    super(nombre,predicado,tipo)\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    var padre = new CaminoInverso(this.nombre,this.predicado,this.tipo)\r\n    var retorno = padre.getValor(nodos)\r\n    return retorno\r\n  }\r\n\r\n  getC3D(nodos){\r\n    /* Esta funcion solo captura el primer padre del nodo en cuestion */\r\n    //hacemos el camino con normalidad ::check\r\n    //en este Axes guardamos en el heapConsulta el nombre del padre :: check    \r\n\r\n    C3D.funcBoleanas[C3D.funcIndices.PARENT] = true\r\n    var cod = ''\r\n\r\n    /* Añadiendo en el Main la llamada y los parametros a la funcion CaminoABS */\r\n    cod += (`\\n/* Guardando la ruta ${this.nombre} */ \\n`);\r\n    //guardamos en el heapConsulta el camino que nos dieron /* esto es recursivo */\r\n    var TC0 = C3D.newTemp();\r\n    cod += (`${TC0} = hpc; \\n`);  //guardamos donde inicia la consulta\r\n\r\n    for (const letra of this.nombre) {\r\n      var ascci = letra.charCodeAt(0);\r\n      cod += (`heapConsulta[(int)hpc] = ${ascci}; \\n`);\r\n      cod += (`hpc = hpc + 1; \\n`);\r\n    } \r\n    cod += (`heapConsulta[(int)hpc] = -1; \\n`);\r\n    cod += (`hpc = hpc + 1; \\n`);\r\n\r\n    cod += (`\\n/* Cambiando de entorno */\\n`);\r\n    cod += (`sp = sp + 1; \\n`);\r\n    var TC3 = C3D.newTemp();\r\n    cod += (`${TC3} = sp + 1; \\n`); //le sumamos uno para dejar espacio para el return\r\n    cod += (`stack[(int)${TC3}] = ${TC0}; \\n`);  //guardamos el inicio de heapConsulta\r\n    cod += (`Parent(); \\n`); //manda a llamar a la funcion camino inverso\r\n    cod += (`sp = sp - 1; \\n`);\r\n\r\n    if(this.predicado.length > 0)\r\n    {\r\n      var tempCod\r\n      for (const predicado of this.predicado) {\r\n        tempCod = predicado.getC3D()\r\n        if(tempCod.tipo == Tipo.DECIMAL || tempCod.tipo == Tipo.INTEGER)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADODECIMAL] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoDecimal();\\n`\r\n          cod += `sp = sp -1;\\n`\r\n        }\r\n        if(tempCod.tipo == Tipo.STRING)\r\n        {\r\n          cod += tempCod.cod;\r\n        }\r\n        if(tempCod.tipo == Tipo.BOOLEAN)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADONODO] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoNodo();\\n`\r\n          cod += `sp = sp - 1;\\n`\r\n        }\r\n      }\r\n    }\r\n\r\n    return {cod: cod, tipo: Tipo.NODO}\r\n  }\r\n\r\n  Graficar(ListaNodes,ListaEdges,contador)\r\n  {\r\n    return this.GraficarAxis(ListaNodes,ListaEdges,contador,\"parent::\")\r\n  }\r\n}\r\n\r\nexport class Ancestor extends Axes\r\n{\r\n  constructor(nombre,predicado,tipo)\r\n  {\r\n    super(nombre,predicado,tipo)\r\n  }\r\n\r\n  getValor(nodos,inicio=1)\r\n  {\r\n    var retornos = new Map()\r\n    for (const nodo of nodos) {\r\n      var nuevaPila = (Object.assign([],nodo.pila))\r\n      var ancestros=[]\r\n      while  (nuevaPila.length>0) {\r\n        var entorno = nuevaPila.pop()\r\n        if(entorno.tipo==this.nombre) ancestros.push(new Nodo(Tipo.NODO,entorno,nuevaPila,entorno.texto))\r\n        nuevaPila = (Object.assign([],nuevaPila))\r\n      }\r\n      ancestros = Predicado(this.predicado,ancestros)\r\n      for (const ancestro of ancestros) {\r\n        retornos.set(ancestro.entorno,ancestro)\r\n      }\r\n      if(this.tipo==TipoPath.REL)\r\n      {\r\n        for (const hijo of nodo.entorno.hijos) {     \r\n          var nuevaPila = Object.assign([],nodo.pila)\r\n          nuevaPila.push(nodo.entorno)\r\n          var retorno = new Ancestor(this.nombre,this.predicado,this.Tipo).getValor([new Nodo(Tipo.NODO,hijo,nuevaPila,hijo.texto)]) \r\n          for (const iterator of retorno) {\r\n            retornos.set(iterator.entorno,iterator) \r\n          }\r\n        }\r\n      }\r\n    }\r\n    var retornoReal = []\r\n    var posicion = inicio;\r\n    for (const valor of retornos.values()) {\r\n      valor.posicion=posicion\r\n      retornoReal.push(valor)\r\n      posicion++\r\n    }\r\n    return retornoReal\r\n  }\r\n  \r\n  Graficar(ListaNodes,ListaEdges,contador)\r\n  {\r\n    return this.GraficarAxis(ListaNodes,ListaEdges,contador,\"ancestor::\")\r\n  }\r\n\r\n  getC3D(nodos){\r\n    /* Esta funcion solo captura el primer padre del nodo en cuestion */\r\n    //hacemos el camino con normalidad ::check\r\n    //en este Axes guardamos en el heapConsulta el nombre del padre :: check    \r\n\r\n    C3D.funcBoleanas[C3D.funcIndices.ANCESTOR] = true\r\n    C3D.funcBoleanas[C3D.funcIndices.ANCESTORRECURSIVA] = true\r\n    var cod = ''\r\n\r\n    /* Añadiendo en el Main la llamada y los parametros a la funcion CaminoABS */\r\n    cod += (`\\n/* Guardando la ruta ${this.nombre} */ \\n`);\r\n    //guardamos en el heapConsulta el camino que nos dieron /* esto es recursivo */\r\n    var TC0 = C3D.newTemp();\r\n    cod += (`${TC0} = hpc; \\n`);  //guardamos donde inicia la consulta\r\n\r\n    for (const letra of this.nombre) {\r\n      var ascci = letra.charCodeAt(0);\r\n      cod += (`heapConsulta[(int)hpc] = ${ascci}; \\n`);\r\n      cod += (`hpc = hpc + 1; \\n`);\r\n    } \r\n    cod += (`heapConsulta[(int)hpc] = -1; \\n`);\r\n    cod += (`hpc = hpc + 1; \\n`);\r\n\r\n    cod += (`\\n/* Cambiando de entorno */\\n`);\r\n    cod += (`sp = sp + 1; \\n`);\r\n    var TC3 = C3D.newTemp();\r\n    cod += (`${TC3} = sp + 1; \\n`); //le sumamos uno para dejar espacio para el return\r\n    cod += (`stack[(int)${TC3}] = ${TC0}; \\n`);  //guardamos el inicio de heapConsulta\r\n    cod += (`Ancestor(); \\n`); //manda a llamar a la funcion camino inverso\r\n    cod += (`sp = sp - 1; \\n`);\r\n\r\n    if(this.predicado.length > 0)\r\n    {\r\n      var tempCod\r\n      for (const predicado of this.predicado) {\r\n        tempCod = predicado.getC3D()\r\n        if(tempCod.tipo == Tipo.DECIMAL || tempCod.tipo == Tipo.INTEGER)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADODECIMAL] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoDecimal();\\n`\r\n          cod += `sp = sp -1;\\n`\r\n        }\r\n        if(tempCod.tipo == Tipo.STRING)\r\n        {\r\n          cod += tempCod.cod;\r\n        }\r\n        if(tempCod.tipo == Tipo.BOOLEAN)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADONODO] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoNodo();\\n`\r\n          cod += `sp = sp - 1;\\n`\r\n        }\r\n      }\r\n    }\r\n\r\n    return {cod: cod, tipo: Tipo.NODO}\r\n  }\r\n}\r\n\r\nexport class AncestorSelf extends Axes\r\n{\r\n  constructor(nombre,predicado,tipo)\r\n  {\r\n    super(nombre,predicado,tipo)\r\n  }\r\n\r\n  getValor(nodos)\r\n  {\r\n    var retornos = new Map()\r\n    for (const nodo of nodos) {\r\n      var retorno = []\r\n      if(nodo.entorno.tipo==this.nombre)\r\n      {\r\n        nodo.posicion=1\r\n        retorno.push(nodo)\r\n      }\r\n      retorno = retorno.concat(new Ancestor(this.nombre,[],this.ABS).getValor([nodo]))\r\n      retorno = Predicado(this.predicado,retorno)\r\n      for (const iterator of retorno) {\r\n        retornos.set(iterator.entorno,iterator) \r\n      }\r\n      if(this.tipo==TipoPath.REL)\r\n      {\r\n        for (const hijo of nodo.entorno.hijos) {     \r\n          var nuevaPila = Object.assign([],nodo.pila)\r\n          nuevaPila.push(nodo.entorno)\r\n          var retorno = new AncestorSelf(this.nombre,this.predicado,this.tipo).getValor([new Nodo(Tipo.NODO,hijo,nuevaPila,hijo.texto)]) \r\n          for (const iterator of retorno) {\r\n            retornos.set(iterator.entorno,iterator) \r\n          }\r\n        }\r\n      }\r\n    }\r\n    var temp = []\r\n    var posicion=1\r\n    for (const valor of retornos.values()) {\r\n      valor.posicion=posicion\r\n      temp.push(valor)\r\n      posicion++\r\n    }\r\n    return temp\r\n  }\r\n\r\n  Graficar(ListaNodes,ListaEdges,contador)\r\n  {\r\n    return this.GraficarAxis(ListaNodes,ListaEdges,contador,\"ancestor-or-sibling::\")\r\n  }\r\n\r\n  getC3D(nodos){\r\n    /* Esta funcion solo captura el primer padre del nodo en cuestion */\r\n    //hacemos el camino con normalidad ::check\r\n    //en este Axes guardamos en el heapConsulta el nombre del padre :: check    \r\n\r\n    C3D.funcBoleanas[C3D.funcIndices.ANCESTORSELF] = true\r\n    C3D.funcBoleanas[C3D.funcIndices.ANCESTORRECURSIVA] = true\r\n    var cod = ''\r\n\r\n    /* Añadiendo en el Main la llamada y los parametros a la funcion CaminoABS */\r\n    cod += (`\\n/* Guardando la ruta ${this.nombre} */ \\n`);\r\n    //guardamos en el heapConsulta el camino que nos dieron /* esto es recursivo */\r\n    var TC0 = C3D.newTemp();\r\n    cod += (`${TC0} = hpc; \\n`);  //guardamos donde inicia la consulta\r\n\r\n    for (const letra of this.nombre) {\r\n      var ascci = letra.charCodeAt(0);\r\n      cod += (`heapConsulta[(int)hpc] = ${ascci}; \\n`);\r\n      cod += (`hpc = hpc + 1; \\n`);\r\n    } \r\n    cod += (`heapConsulta[(int)hpc] = -1; \\n`);\r\n    cod += (`hpc = hpc + 1; \\n`);\r\n\r\n    cod += (`\\n/* Cambiando de entorno */\\n`);\r\n    cod += (`sp = sp + 1; \\n`);\r\n    var TC3 = C3D.newTemp();\r\n    cod += (`${TC3} = sp + 1; \\n`); //le sumamos uno para dejar espacio para el return\r\n    cod += (`stack[(int)${TC3}] = ${TC0}; \\n`);  //guardamos el inicio de heapConsulta\r\n    cod += (`AncestorSelf(); \\n`); //manda a llamar a la funcion camino inverso\r\n    cod += (`sp = sp - 1; \\n`);\r\n\r\n    if(this.predicado.length > 0)\r\n    {\r\n      var tempCod\r\n      for (const predicado of this.predicado) {\r\n        tempCod = predicado.getC3D()\r\n        if(tempCod.tipo == Tipo.DECIMAL || tempCod.tipo == Tipo.INTEGER)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADODECIMAL] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoDecimal();\\n`\r\n          cod += `sp = sp -1;\\n`\r\n        }\r\n        if(tempCod.tipo == Tipo.STRING)\r\n        {\r\n          cod += tempCod.cod;\r\n        }\r\n        if(tempCod.tipo == Tipo.BOOLEAN)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADONODO] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoNodo();\\n`\r\n          cod += `sp = sp - 1;\\n`\r\n        }\r\n      }\r\n    }\r\n\r\n    return {cod: cod, tipo: Tipo.NODO}\r\n  }\r\n}\r\n\r\nexport class PrecedingSibling extends Axes\r\n{\r\n  constructor(nombre,predicado,tipo)\r\n  {\r\n    super(nombre,predicado,tipo)\r\n  }\r\n\r\n  getValor(nodos,nivel)\r\n  {\r\n    if(!nivel) nivel = 0\r\n    var retornos = new  Map()\r\n    for (const nodo of nodos) {\r\n      var retorno = []\r\n      var nuevaPila = Object.assign([],nodo.pila)\r\n      var entorno = nuevaPila.pop()\r\n      var Padre = [new Nodo(Tipo.NODO,entorno,nuevaPila,\"\")]\r\n      var hermanos = new Camino(\"*\",[],TipoPath.ABS).getValor(Padre)\r\n      var indice=-1;\r\n      var posicion=1\r\n      for (const [i,v] of hermanos.entries()) {\r\n        if(v.entorno == nodo.entorno)\r\n        { \r\n          indice=i\r\n        }\r\n        if(indice==-1 && (v.entorno.tipo==this.nombre || v.entorno.tipo==\"*\"))\r\n        {\r\n          v.posicion=posicion\r\n          retorno.push(v)\r\n          posicion++\r\n        }\r\n      }\r\n      retorno = Predicado(this.predicado,retorno)\r\n      if(this.tipo==TipoPath.REL){\r\n        var subretorno = []\r\n        for (const hijo of nodo.entorno.hijos) { \r\n          var nuevaPila = Object.assign([],nodo.pila)\r\n          nuevaPila.push(nodo.entorno)\r\n          subretorno = subretorno.concat(new PrecedingSibling(this.nombre,this.predicado,this.tipo).getValor([new Nodo(Tipo.NODO,hijo,nuevaPila,\"\")],1))\r\n        }\r\n        retorno = retorno.concat(subretorno)\r\n      }\r\n      for (const iterator of retorno) {\r\n        retornos.set(iterator.entorno,iterator)\r\n      }\r\n    }\r\n    var realretorno=[]\r\n    var posicion = 1\r\n    for (const valor of retornos.values()) {\r\n      valor.posicion=1\r\n      realretorno.push(valor)\r\n      posicion++\r\n    }\r\n    return realretorno\r\n  }\r\n\r\n  getC3D(nodos){\r\n    /* Captura todos los hermanos del nodo actual hasta que aparesca el nodo actual */\r\n\r\n    C3D.funcBoleanas[C3D.funcIndices.PRECEDINGSIBLING] = true\r\n    var cod = ''\r\n\r\n    /* Añadiendo en el Main la llamada y los parametros a la funcion CaminoABS */\r\n    cod += (`\\n/* Guardando la ruta ${this.nombre} */ \\n`);\r\n    //guardamos en el heapConsulta el camino que nos dieron /* esto es recursivo */\r\n    var TC0 = C3D.newTemp();\r\n    cod += (`${TC0} = hpc; \\n`);  //guardamos donde inicia la consulta\r\n\r\n    for (const letra of this.nombre) {\r\n      var ascci = letra.charCodeAt(0);\r\n      cod += (`heapConsulta[(int)hpc] = ${ascci}; \\n`);\r\n      cod += (`hpc = hpc + 1; \\n`);\r\n    } \r\n    cod += (`heapConsulta[(int)hpc] = -1; \\n`);\r\n    cod += (`hpc = hpc + 1; \\n`);\r\n\r\n    cod += (`\\n/* Cambiando de entorno */\\n`);\r\n    cod += (`sp = sp + 1; \\n`);\r\n    var TC3 = C3D.newTemp();\r\n    cod += (`${TC3} = sp + 1; \\n`); //le sumamos uno para dejar espacio para el return\r\n    cod += (`stack[(int)${TC3}] = ${TC0}; \\n`);  //guardamos el inicio de heapConsulta\r\n    cod += (`PrecedingSibling(); \\n`); //manda a llamar a la funcion camino inverso\r\n    cod += (`sp = sp - 1; \\n`);\r\n\r\n    if(this.predicado.length > 0)\r\n    {\r\n      var tempCod\r\n      for (const predicado of this.predicado) {\r\n        tempCod = predicado.getC3D()\r\n        if(tempCod.tipo == Tipo.DECIMAL || tempCod.tipo == Tipo.INTEGER)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADODECIMAL] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoDecimal();\\n`\r\n          cod += `sp = sp -1;\\n`\r\n        }\r\n        if(tempCod.tipo == Tipo.STRING)\r\n        {\r\n          cod += tempCod.cod;\r\n        }\r\n        if(tempCod.tipo == Tipo.NODO)\r\n        {\r\n          C3D.funcBoleanas[C3D.funcIndices.PREDICADONODO] = true\r\n          cod += tempCod.cod;\r\n          cod += `sp = sp + 1;\\n`\r\n          cod += `stack[(int)sp] = ${tempCod.valor};\\n`\r\n          cod += `predicadoNodo();\\n`\r\n          cod += `sp = sp - 1;\\n`\r\n        }\r\n      }\r\n    }\r\n\r\n    return {cod: cod, tipo: Tipo.NODO}\r\n  }\r\n\r\n  Graficar(ListaNodes,ListaEdges,contador)\r\n  {\r\n    return this.GraficarAxis(ListaNodes,ListaEdges,contador,\"preceding-sibling::\")\r\n  }\r\n}\r\n\r\nexport class Preceding extends Axes\r\n{\r\n  constructor(nombre,predicado,tipo)\r\n  {\r\n    super(nombre,predicado,tipo)\r\n  }\r\n\r\n  getValor(nodos,nivel)\r\n  {\r\n    if(!nivel) nivel = 0\r\n    var retornos = new  Map()\r\n    for (const nodo of nodos) {\r\n      var retorno = []\r\n      var nuevaPila = Object.assign([],nodo.pila)\r\n      var entorno = nuevaPila.pop()\r\n      var Padre = [new Nodo(Tipo.NODO,entorno,nuevaPila,\"\")]\r\n      var hermanos = new Camino(\"*\",[],TipoPath.REL).getValor(Padre)\r\n      var indice=-1;\r\n      var posicion=1\r\n      for (const [i,v] of hermanos.entries()) {\r\n        if(v.entorno == nodo.entorno)\r\n        { \r\n          indice=i\r\n        }\r\n        if(indice==-1 && v.entorno.tipo==this.nombre)\r\n        {\r\n          v.posicion=posicion\r\n          retorno.push(v)\r\n          posicion++\r\n        }\r\n      }\r\n      retorno = Predicado(this.predicado,retorno)\r\n      if(this.tipo==TipoPath.REL){\r\n        var subretorno = []\r\n        for (const hijo of nodo.entorno.hijos) { \r\n          var nuevaPila = Object.assign([],nodo.pila)\r\n          nuevaPila.push(nodo.entorno)\r\n          subretorno = subretorno.concat(new PrecedingSibling(this.nombre,this.predicado,this.tipo).getValor([new Nodo(Tipo.NODO,hijo,nuevaPila,\"\")],1))\r\n        }\r\n        retorno = retorno.concat(subretorno)\r\n      }\r\n      for (const iterator of retorno) {\r\n        retornos.set(iterator.entorno,iterator)\r\n      }\r\n    }\r\n    var realretorno=[]\r\n    var posicion = 1\r\n    for (const valor of retornos.values()) {\r\n      valor.posicion=1\r\n      realretorno.push(valor)\r\n      posicion++\r\n    }\r\n    return realretorno\r\n  }\r\n\r\n  Graficar(ListaNodes,ListaEdges,contador)\r\n  {\r\n    return this.GraficarAxis(ListaNodes,ListaEdges,contador,\"preceding-sibling::\")\r\n  }\r\n}\r\n","export var ErroresGlobal = []\r\nvar Global = []\r\n\r\nexport function LimpiarErrores()\r\n{\r\n  ErroresGlobal = []\r\n}\r\n\r\nexport function CrearGlobal()\r\n{\r\n  Global=[]\r\n}\r\n\r\nexport function AgregarGlobal(prologo)\r\n{\r\n  Global.push(prologo)\r\n}\r\n\r\nexport function retonarGlobal()\r\n{\r\n  return Global\r\n}","import { Expresion, Instruccion } from \"../modelos\";\r\n\r\nexport class Literal extends Expresion{\r\n    constructor(tipo, valor){\r\n        super()\r\n        this.tipo = tipo\r\n        this.valor = valor\r\n    }\r\n\r\n    optimizar(){\r\n        var retorno = new Literal(this.tipo, this.valor)\r\n        this.esCero = this.valor == '0'\r\n        return retorno\r\n    }\r\n\r\n    tresd(){\r\n        return this.valor\r\n    }\r\n}\r\n\r\nexport class Id extends Expresion{\r\n    constructor(id){\r\n        super()\r\n        this.id = id\r\n    }\r\n\r\n    optimizar(){\r\n        return new Id(this.id)\r\n    }\r\n\r\n    tresd(){\r\n        return this.id\r\n    }\r\n}\r\n\r\nexport class Casteo extends Expresion{\r\n    constructor(tipo, expresion){\r\n        super()\r\n        this.tipo = tipo\r\n        this.expresion = expresion\r\n    }\r\n\r\n    optimizar(){\r\n        var res = this.expresion.optimizar()\r\n        if (res instanceof Literal){\r\n            res.tipo = this.tipo\r\n        }\r\n        return res \r\n    }\r\n\r\n    tresd(){\r\n        var tresdExp = this.expresion.tresd()\r\n        return `(${this.tipo}) ${tresdExp}`\r\n    }\r\n}\r\n\r\nexport class Arreglo extends Expresion{\r\n    constructor(id, posicion){\r\n        super()\r\n        this.id = id\r\n        this.posicion = posicion\r\n    }\r\n\r\n    optimizar(){\r\n        return this\r\n    }\r\n\r\n    tresd(){\r\n        var tresdPos = this.posicion.tresd()\r\n        return `${this.id}[${tresdPos}]`   \r\n    }\r\n}\r\n\r\nexport class Comparacion extends Expresion{\r\n    constructor(izq, op, der){\r\n        super()\r\n        this.izq = izq\r\n        this.op = op\r\n        this.der = der\r\n    }\r\n\r\n    optimizar(){\r\n        var retIzq  = this.izq.optimizar()\r\n        var retDer = this.der.optimizar()\r\n\r\n        if (retIzq instanceof Literal && retDer instanceof Literal){\r\n            // la condición está hecha de constantes\r\n            // podemos identificar si siempre es verdadera o falsa\r\n            var comparado = this.comparar(retIzq, this.op,retDer)\r\n            if (comparado){\r\n                // siempre es verdadero\r\n                this.esSiempreTrue = true\r\n            }else {\r\n                this.esSiempreFalse = true\r\n            }\r\n        }\r\n\r\n        return this\r\n    }\r\n\r\n    comparar(izq, op, der){\r\n        var retorno = false\r\n\r\n        switch(op){\r\n            case '>':\r\n                retorno = izq.valor > der.valor \r\n            break;\r\n            case '>=':\r\n                retorno = izq.valor >= der.valor\r\n            break;\r\n            case '<':\r\n                retorno = izq.valor < der.valor\r\n            break;\r\n            case '<=':\r\n                retorno = izq.valor <= der.valor\r\n            break;\r\n            case '==':\r\n                retorno = izq.valor == der.valor\r\n            break;\r\n            case '!=':\r\n                retorno = izq.valor != der.valor\r\n            break;\r\n        }\r\n\r\n        return retorno\r\n    }\r\n\r\n    obtenerNegativa(){\r\n        var newOp = this.op\r\n        switch(this.op){\r\n            case '>':\r\n                newOp = '<=' \r\n            break;\r\n            case '>=':\r\n                newOp = '<'\r\n            break;\r\n            case '<':\r\n                newOp = '>='\r\n            break;\r\n            case '<=':\r\n                newOp = '>'\r\n            break;\r\n            case '==':\r\n                newOp = '!='\r\n            break;\r\n            case '!=':\r\n                newOp = '=='\r\n            break;\r\n        }\r\n\r\n        this.op = newOp\r\n        var retorno = this.optimizar()\r\n        return retorno\r\n    }\r\n\r\n    tresd(){\r\n        var tizq = this.izq.tresd()\r\n        var tder = this.der.tresd()\r\n        \r\n        return `${tizq}${this.op}${tder}`\r\n    }\r\n}\r\n\r\nexport class Aritmetico extends Expresion{\r\n    constructor(izq, op, der){\r\n        super()\r\n        this.izq = izq\r\n        this.op = op\r\n        this.der = der\r\n    }\r\n\r\n    optimizar(){\r\n        // suma cero\r\n        var retorno = this\r\n        var valIzq = this.izq.optimizar()\r\n        var valDer = this.der.optimizar()\r\n        switch(this.op){\r\n            case '+': // regla 12\r\n            case '-': // regla 13\r\n                if (valIzq.valor == 0 ){\r\n                    // 0 + 5 -> 5\r\n                    if (valDer instanceof Literal){\r\n                        retorno = new Literal(valDer.tipo, valDer.valor)\r\n                    }\r\n\r\n                    // 0 + id\r\n                    if (valDer instanceof Id){\r\n                        retorno = new Id(valDer.id)\r\n                    }\r\n                }else if (valDer.valor == 0){\r\n                    // 5 + 0 -> 5\r\n                    if (valIzq instanceof Literal){\r\n                        retorno = new Literal(valIzq.tipo, valIzq.valor)\r\n                    }\r\n\r\n                    // id + 5\r\n                    if (valIzq instanceof Id){\r\n                        retorno = new Id(valIzq.id)\r\n                    }\r\n                }\r\n            break;\r\n            case '*': // regla 14 ; regla 16 ; regla 17\r\n                \r\n                if (valIzq.valor == 0 || valDer.valor == 0){\r\n                    // 0 * id|5 ; id|5 * 0 -> 0\r\n                    retorno = new Literal('', '0')\r\n                }\r\n            \r\n                if (valIzq.valor == 1 ){\r\n                    // 1 * 5 -> 5\r\n                    if (valDer instanceof Literal){\r\n                        retorno = new Literal(valDer.tipo, valDer.valor)\r\n                    }\r\n\r\n                    // 1 * id\r\n                    if (valDer instanceof Id){\r\n                        retorno = new Id(valDer.id)\r\n                    }\r\n                }else if (valDer.valor == 1){\r\n                    // 5 * 1 -> 5\r\n                    if (valIzq instanceof Literal){\r\n                        retorno = new Literal(valIzq.tipo, valIzq.valor)\r\n                    }\r\n\r\n                    // id *  1\r\n                    if (valIzq instanceof Id){\r\n                        retorno = new Id(valIzq.id)\r\n                    }\r\n                }\r\n\r\n                if (valIzq.valor == 2){\r\n                    // 2 * 5|id -> 5 + 5 | id + id\r\n                    retorno = new Aritmetico(this.der, '+', this.der)\r\n                }else if (valDer.valor == 2){\r\n                    // 5|id * 2 -> 5 + 5 | id + id\r\n                    retorno = new Aritmetico(this.izq, '+', this.izq)\r\n                }\r\n            break;\r\n            case '/': // regla 15 ; regla 18\r\n                if (valIzq.valor == 0){\r\n                    // 0 / 1|id -> 0\r\n                    retorno = new Literal('','0')\r\n                    break\r\n                }\r\n            \r\n                if (valDer.valor == 1){\r\n                    // 5 / 1 -> 5\r\n                    if (valIzq instanceof Literal){\r\n                        retorno = new Literal(valIzq.tipo, valIzq.valor)\r\n                    }\r\n\r\n                    // id /  1 -> id\r\n                    if (valIzq instanceof Id){\r\n                        retorno = new Id(valIzq.id)\r\n                    }\r\n                }\r\n            break;\r\n            \r\n        }\r\n\r\n        return retorno\r\n    }\r\n\r\n    tresd(){\r\n        var tizq = this.izq.tresd()\r\n        var tder = this.der.tresd()\r\n        \r\n        return `${tizq}${this.op}${tder}`\r\n    }\r\n}\r\n\r\nexport class Unario extends Expresion{\r\n    constructor(op, izq){\r\n        super()\r\n        this.op = op\r\n        this.izq = izq\r\n    }\r\n\r\n    optimizar(){\r\n        return this\r\n    }\r\n\r\n    tresd(){\r\n        var tizq = this.izq.tresd()\r\n        \r\n        return `${this.op}${tizq}`\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from '../logo.svg';\r\nimport { Link } from 'react-router-dom'\r\nimport React from 'react';\r\nimport { parse as parseXPath,parser as XPathFunction } from '../code/analizadorXPath/Xpath'\r\nimport {UnControlled as CodeMirror} from 'react-codemirror2'\r\n\r\n\r\nrequire('../../node_modules/codemirror/mode/xquery/xquery')\r\nrequire('../../node_modules/codemirror/mode/xml/xml')\r\nrequire('../../node_modules/codemirror/mode/javascript/javascript')\r\nrequire('../../node_modules/codemirror/mode/clike/clike')\r\n\r\n//const XPath = require('../code/analizadorXPath/Xpath')\r\nconst XPathDesc = require('../code/analizadorXPath/XPathDesc')\r\nconst grammar = require('../code/analizadorXML/grammar')\r\nconst grammarDesc = require('../code/analizadorXMLDesc/grammarDesc')\r\nvar C3D = require('../code/C3D')\r\n\r\nclass Navigation extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            fileDownloadUrl:\"\",\r\n            OutputTextarea: \"\",\r\n            XMLTextarea: \"\",\r\n            InputTextarea: \"\",\r\n            C3DTextarea: \"\",\r\n            XML: {\r\n                tipo : '',\r\n                texto : '',\r\n                atributos : [],\r\n                hijos : []\r\n            },\r\n            datosCST: {\r\n                nodes: [\r\n                    { id: 1, label: 'Node 1' },\r\n                    { id: 2, label: 'Node 2' },\r\n                    { id: 3, label: 'Node 3' },\r\n                    { id: 4, label: 'Node 4' },\r\n                    { id: 5, label: 'Node 5' }\r\n                ],\r\n                edges: [\r\n                    { from: 1, to: 2 },\r\n                    { from: 1, to: 3 },\r\n                    { from: 2, to: 4 },\r\n                    { from: 2, to: 5 }\r\n                ]\r\n            },\r\n            datosCSTXML: {\r\n                nodes: [\r\n                    { id: 1, label: 'Node 1' },\r\n                    { id: 2, label: 'Node 2' },\r\n                    { id: 3, label: 'Node 3' },\r\n                    { id: 4, label: 'Node 4' },\r\n                    { id: 5, label: 'Node 5' }\r\n                ],\r\n                edges: [\r\n                    { from: 1, to: 2 },\r\n                    { from: 1, to: 3 },\r\n                    { from: 2, to: 4 },\r\n                    { from: 2, to: 5 }\r\n                ]\r\n            },\r\n            AST:{\r\n                nodes: [\r\n                    { id: 1, label: 'Node 1' },\r\n                    { id: 2, label: 'Node 2' },\r\n                    { id: 3, label: 'Node 3' },\r\n                    { id: 4, label: 'Node 4' },\r\n                    { id: 5, label: 'Node 5' }\r\n                ],\r\n                edges: [\r\n                    { from: 1, to: 2 },\r\n                    { from: 1, to: 3 },\r\n                    { from: 2, to: 4 },\r\n                    { from: 2, to: 5 }\r\n                ]\r\n            },\r\n            graphvizCST:\"\",\r\n            Mistakes: [],\r\n            MistakesXPath: [],\r\n            TablaGramatical: [],\r\n            TablaGramticalXPath: []\r\n        }\r\n\r\n        this.textostr = localStorage.getItem(\"stateG17\");\r\n        if(this.textostr)\r\n        {\r\n            this.state = JSON.parse(this.textostr)\r\n        }\r\n        this.fileInput = React.createRef();\r\n        this.fileInput2 = React.createRef();\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        if(this.state.XMLTextarea != '')\r\n        {\r\n            C3D.clearC3D()\r\n            var resultado = grammar.parse(this.state.XMLTextarea)\r\n            if(resultado.errores.length>0)\r\n            {\r\n                alert(\"Errores en el analisis del XML\")\r\n            }\r\n            this.setState({XML:resultado.datos})\r\n            this.setState({datosCSTXML:{nodes:resultado.nodes,edges:resultado.edges}})\r\n            this.setState({Mistakes: resultado.errores})\r\n            this.setState({TablaGramatical: resultado.tabla})\r\n            this.setState({C3DTextarea:resultado.c3d})\r\n        }\r\n    }\r\n\r\n    Limpiar()\r\n    {\r\n        this.setState({\r\n            OutputTextarea: \"\"\r\n        })\r\n        this.setState({\r\n            XMLTextarea: \"\"\r\n        })\r\n        this.setState({\r\n            InputTextarea: \"\"\r\n        })\r\n        this.setState({\r\n            C3DTextarea: \"\"\r\n        })\r\n        localStorage.removeItem(\"stateG17\");\r\n    }\r\n\r\n    Optimizar()\r\n    {\r\n        var optimizador = require('../code/analizadorC/optimizador')\r\n        var opt = new optimizador.Optimizador(this.state.C3DTextarea)\r\n        var resultado = opt.optimizar()\r\n        this.setState({\r\n            C3DTextarea:resultado\r\n        })\r\n    }\r\n\r\n    setText(){\r\n        console.log(\"setText Button clicked\");\r\n        let text = this.state.InputTextarea;\r\n        if(text==\"\") return\r\n        var funcion = parseXPath(text);\r\n        if(funcion.errores.length > 0)\r\n        {\r\n            alert(\"Se detectaron errores en la entrada :( Xpath\")\r\n            console.log(funcion.errores)\r\n        }\r\n        var respuesta=funcion.Ejecutar(this.state.XML);\r\n        this.setState({OutputTextarea: respuesta});  \r\n            // ejecutar también c3d\r\n        try {\r\n            var xpathC3D = funcion.EjecutarC3D(this.state.XML);\r\n            this.setState({C3DTextarea: xpathC3D})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        try {\r\n            var AST = funcion.Graficar();\r\n            this.setState({AST:AST})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        funcion.InvertirNodes()\r\n        var datos = {nodes:funcion.Nodos,edges:funcion.Edges}   \r\n        this.setState({datosCST:datos}) \r\n        this.setState({MistakesXPath: funcion.errores})\r\n        this.setState({TablaGramticalXPath: funcion.tablaGramatica});\r\n    }\r\n\r\n    setTextDesc(){\r\n        console.log(\"setTextDesc Button clicked\");\r\n        let text = this.state.InputTextarea;\r\n        if(text==\"\") return\r\n        var funcion = XPathDesc.parse(text);\r\n        if(funcion.errores.length > 0)\r\n        {\r\n            alert(\"Se detectaron errores en la entrada :( Xpath\")\r\n            console.log(funcion.errores)\r\n        }\r\n        var respuesta=funcion.Ejecutar(this.state.XML);\r\n        this.setState({OutputTextarea: respuesta});  \r\n        var AST = funcion.Graficar();\r\n        this.setState({AST:AST})\r\n        funcion.InvertirNodes()\r\n        var datos = {nodes:funcion.Nodos,edges:funcion.Edges}   \r\n        this.setState({datosCST:datos}) \r\n        this.setState({graphvizCST:funcion.graphviz})\r\n        this.setState({MistakesXPath: funcion.errores})\r\n        this.setState({TablaGramticalXPath: funcion.tablaGramatica.reverse()});\r\n    }\r\n\r\n    xmlDesc(){\r\n        var x = this.state.XMLTextarea;\r\n        var resultado = grammarDesc.parse(x);\r\n        if(resultado.errores.length>0)\r\n        {\r\n            alert(\"Errores en el analisis Desc del XML\")\r\n            console.log(resultado.errores);\r\n        }\r\n        console.log(resultado)\r\n        this.setState({XML:resultado.datos})\r\n        this.setState({datosCSTXML:{nodes:resultado.nodes,edges:resultado.edges}})\r\n        this.setState({Mistakes: resultado.errores})\r\n        this.setState({TablaGramatical: resultado.tabla.reverse()})\r\n    }\r\n \r\n    actualizar(){\r\n        var x = this.state.XMLTextarea;\r\n        C3D.clearC3D()\r\n        var resultado = grammar.parse(x)\r\n        if(resultado.errores.length>0)\r\n        {\r\n            alert(\"Errores en el analisis del XML\")\r\n        }\r\n        this.setState({XML:resultado.datos})\r\n        this.setState({datosCSTXML:{nodes:resultado.nodes,edges:resultado.edges}})\r\n        this.setState({Mistakes: resultado.errores})\r\n        this.setState({TablaGramatical: resultado.tabla})\r\n        this.setState({C3DTextarea:resultado.c3d})\r\n    }\r\n\r\n    handleOnChange = e => {\r\n        this.setState({\r\n            InputTextarea: e.getValue()\r\n        })\r\n    } \r\n\r\n    handleOnChangeC3D = e => {\r\n        this.setState({\r\n            C3DTextarea: e.getValue()\r\n        })\r\n    } \r\n\r\n    handleXML = e => {\r\n        this.setState({\r\n            XMLTextarea: e.getValue()\r\n        })\r\n    }\r\n\r\n    descargar()\r\n    {\r\n        if (this.state.XMLTextarea==\"\") return\r\n        const blob = new Blob([this.state.XMLTextarea])\r\n        const fileDownloadUrl = URL.createObjectURL(blob)\r\n        this.setState({fileDownloadUrl:fileDownloadUrl},\r\n            ()=>{\r\n                this.dofileDownload.click();\r\n                URL.revokeObjectURL(fileDownloadUrl);\r\n                this.setState({fileDownloadUrl: \"\"})\r\n            }\r\n        )\r\n    }\r\n\r\n    fileReader;\r\n\r\n    handleSubmit = (event) => {\r\n\r\n        this.fileReader = new FileReader();\r\n        this.fileReader.onloadend =  this.handleFileReader;\r\n        this.fileReader.readAsText(event.target.files[0]);\r\n    }\r\n\r\n    handleFileReader = (e) => {\r\n        const content = this.fileReader.result;\r\n        console.log(content);\r\n        this.setState({XMLTextarea: content});\r\n        if(content==\"\") return\r\n        C3D.clearC3D()\r\n        var resultado = grammar.parse(content)\r\n        console.log(resultado)\r\n        if(resultado.errores.length>0)\r\n        {\r\n            alert(\"Errores en el analisis del XML\")\r\n        }\r\n        this.setState({XML:resultado.datos})\r\n        this.setState({C3DTextarea: resultado.c3d})\r\n        this.setState({datosCSTXML:{nodes:resultado.nodes,edges:resultado.edges}})\r\n        this.setState({Mistakes: resultado.errores})\r\n        this.setState({TablaGramatical: resultado.tabla});\r\n    } \r\n\r\n    fileReader2;\r\n\r\n    handleSubmitPath = (event) => {\r\n        this.fileReader2 = new FileReader();\r\n        this.fileReader2.onloadend =  this.handleFileReaderPath;\r\n        this.fileReader2.readAsText(event.target.files[0]);\r\n    }\r\n\r\n    handleFileReaderPath = (e) => {\r\n        const content = this.fileReader2.result;\r\n        console.log(content);\r\n        this.setState({InputTextarea: content});\r\n    } \r\n\r\n    handleFocus = (e) =>{\r\n        if(e.getValue()==\"\") return\r\n        C3D.clearC3D()\r\n        var resultado = grammar.parse(e.getValue())        \r\n        console.log(resultado)\r\n        if(resultado.errores.length>0)\r\n        {\r\n            alert(\"Errores en el analisis del XML\")\r\n        }\r\n        this.setState({XML:resultado.datos})\r\n        this.setState({datosCSTXML:{nodes:resultado.nodes,edges:resultado.edges}})\r\n        this.setState({Mistakes: resultado.errores})\r\n        this.setState({TablaGramatical: resultado.tabla});\r\n        this.setState({C3DTextarea:resultado.c3d})\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            //tag principal\r\n            <header className=\"App-header\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" \r\n                        onClick={localStorage.setItem(\"stateG17\",JSON.stringify(this.state))}\r\n                        style={ { textDecoration: 'none' } } \r\n                        to= {{ pathname: \"/tytusx/20211SVAC/G17/reporte\", datosCST:this.state.datosCST, datosCSTXML:this.state.datosCSTXML, datosAST:this.state.AST ,graphviz:this.state.graphvizCST }} >\r\n                            Árboles\r\n                        </Link>                    \r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" \r\n                        onClick={localStorage.setItem(\"stateG17\",JSON.stringify(this.state))}\r\n                        style={ { textDecoration: 'none' } }\r\n                        to= {{ pathname: \"/tytusx/20211SVAC/G17/reporteTabla\", XML:this.state.XML }}>\r\n                            Tabla Símbolos\r\n                        </Link>                         \r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" \r\n                        onClick={localStorage.setItem(\"stateG17\",JSON.stringify(this.state))}\r\n                        style={ { textDecoration: 'none' } } \r\n                        to= {{ pathname: \"/tytusx/20211SVAC/G17/reporteGramatical\", TablaGramatical:this.state.TablaGramatical, TablaGramticalXPath: this.state.TablaGramticalXPath }}>\r\n                            Gramaticales\r\n                        </Link>                        \r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" \r\n                        onClick={localStorage.setItem(\"stateG17\",JSON.stringify(this.state))}\r\n                        style={ { textDecoration: 'none' } } \r\n                        to= {{ pathname: \"/tytusx/20211SVAC/G17/reporteErrores\", Mistakes:this.state.Mistakes, MistakesXPath:this.state.MistakesXPath }}>\r\n                            Errores\r\n                        </Link>                        \r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" \r\n                        onClick = {()=>this.Limpiar()}\r\n                        style={ { textDecoration: 'none' } }>\r\n                            Limpiar\r\n                        </Link>                     \r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                Organización de Lenguajes y Compiladores 2\r\n            <p></p>\r\n            \r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <div className=\"custom-file\">\r\n                            <input  multiple={false} accept=\".xml\" id=\"fileinput\" className=\"fileinput\" type=\"file\" ref={this.fileInput} onChange={this.handleSubmit}/>\r\n                            <label htmlFor=\"fileinput\">Subir XML</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <a style={{display: \"none\"}}\r\n                            download={\"archivo.xml\"}\r\n                            href={this.state.fileDownloadUrl}\r\n                            ref={e=>this.dofileDownload = e}\r\n                        >download it</a>\r\n                        <button className=\"btn btn-secondary btn-lg\" onClick={() => this.descargar()}>Descargar XML</button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"custom-file\">\r\n                            <input  multiple={false} accept=\".xml\" id=\"fileinput2\" className=\"fileinput\" type=\"file\" ref={this.fileReader2} onChange={this.handleSubmitPath}/>\r\n                            <label htmlFor=\"fileinput2\">Subir XPath</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <p></p>\r\n                    <p></p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 block\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 block\"> \r\n                                <button type=\"button\" className=\"btn btn-primary btn-lg\" onClick={ () => this.xmlDesc() }>XML Desc</button>\r\n                            </div>\r\n                            <div className=\"col-6 block\">\r\n                                <button type=\"button\" className=\"btn btn-primary btn-lg\" onClick={ () => this.actualizar() }>XML Asc</button> \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row container\">\r\n                            <label className=\"labelClass\">Entrada XML</label>\r\n                            {/* <textarea className=\"Text\" placeholder=\"Bienvenido\" defaultValue={this.state.XMLTextarea} onChange={this.handleXML} onBlur={this.handleFocus} /> */}\r\n                            <CodeMirror\r\n                             className=\"codeMirror\"\r\n                             value={this.state.XMLTextarea}\r\n                             options={{\r\n                                mode: 'xml',\r\n                                theme: 'dracula',\r\n                                lineNumbers: true,\r\n                                styleActiveLine: true,\r\n                                columnNumbers:true,\r\n                                inputStyle:'textarea'\r\n                              }}\r\n                             onBlur={this.handleFocus}\r\n                             onChange={this.handleXML}\r\n                             placeholder=\"Bienvenido\"\r\n                             />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6 block\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 block\"> \r\n                                <button type=\"submit\" className=\"btn btn-primary btn-lg\" onClick={ () => this.setText() }>Ejecutar Asc</button>\r\n                            </div>\r\n                            <div className=\"col-6 block\">\r\n                                <button type=\"submit\" className=\"btn btn-primary btn-lg\" onClick={ () => this.setTextDesc() }>Ejecutar Desc</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row container\">\r\n                            <label className=\"labelClass\">Entrada Xpath</label> \r\n                            <CodeMirror\r\n                             className=\"codeMirror\"\r\n                             value = {this.state.InputTextarea}\r\n                             options={{\r\n                                mode: 'xquery',\r\n                                theme: 'dracula',\r\n                                lineNumbers: true,\r\n                                styleActiveLine: true,\r\n                                lineWrapping: true,\r\n                                columnNumbers:true,\r\n                                foldGutter: true,\r\n                                gutter: true,\r\n                              }}\r\n                             onChange={this.handleOnChange}\r\n                             placeholder=\"Bienvenido\"\r\n                             />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 block\">\r\n                        <div className=\"row\">\r\n                            <label className=\"labelClass\">Salida Querys</label>\r\n                        </div>\r\n                        <div className=\"row container\">\r\n                            <div className=\"text-center\">\r\n                                <CodeMirror\r\n                                    className=\"codeMirror\"\r\n                                    value={this.state.OutputTextarea}\r\n                                    options={{\r\n                                        mode: 'xml',\r\n                                        theme: 'dracula',\r\n                                        lineNumbers: true,\r\n                                        styleActiveLine: true,\r\n                                        lineWrapping: true,\r\n                                        columnNumbers:true,\r\n                                        foldGutter: true,\r\n                                        gutter: true,\r\n                                        readOnly:true,\r\n                                    }}\r\n                                    placeholder=\"Bienvenido\"\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6 text-center\">\r\n                        <div className=\"row centrar\">\r\n                            <div className=\"col-3 text-center\">\r\n                                <label className=\"labelClass\">Salida C3D</label>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <button type=\"button\" className=\"btn btn-primary btn-lg\" onClick = { ()=>this.Optimizar() }>Optimizar</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row container\">\r\n                            <div className=\"text-center\">\r\n                                <CodeMirror\r\n                                    className=\"codeMirror\"\r\n                                    value={this.state.C3DTextarea}\r\n                                    options={{\r\n                                        mode: 'clike',\r\n                                        theme: 'dracula',\r\n                                        lineNumbers: true,\r\n                                        styleActiveLine: true,\r\n                                        lineWrapping: true,\r\n                                        columnNumbers:true,\r\n                                        foldGutter: true,\r\n                                        gutter: true,\r\n                                    }}\r\n                                    onChange={this.handleOnChangeC3D}\r\n                                    placeholder=\"Bienvenido\"\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n            </div>\r\n\r\n            <p></p>\r\n            <p></p>\r\n            <p></p>\r\n\r\n            <div className=\"container\"></div>\r\n\r\n            <footer className=\"bg-dark text-center text-lg-start\">\r\n            <div className=\"text-center p-3 text-light \">\r\n                <font size=\"3\">\r\n                <p>\r\n                Grupo 17 <br/>\r\n                Jorge Ambrocio - Marcelo Marroquín - Viany Juárez<br/>\r\n                Organización de Lenguajes y Compiladores 2<br/>\r\n                Escuela de Vacaciones Junio 2021<br/>                \r\n                </p>\r\n                </font>   \r\n            </div>\r\n            </footer>\r\n\r\n        </header>\r\n        );\r\n    }\r\n        \r\n}\r\n\r\n\r\n\r\nexport default Navigation;","import './InConsole.css';\r\nimport logo from '../logo.svg';\r\nimport { Link } from 'react-router-dom'\r\nimport  Graph  from 'react-graph-vis'\r\nimport React, { Component } from 'react';\r\n\r\n\r\nclass InConsole extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.datos = {nodes:[],edges:[]} \r\n        this.datos = this.props.location.datosCST;\r\n        this.datosXML = this.props.location.datosCSTXML;\r\n        this.datosAST = this.props.location.datosAST\r\n        this.graphviz = \"\"\r\n        this.graphvizCST=this.props.location.graphviz;\r\n        console.log(this.props.location);\r\n    }\r\n\r\n    options = {\r\n        layout: {\r\n            hierarchical: true\r\n        },\r\n        edges: {\r\n            color: '#000000'\r\n        },\r\n        interaction: { hover: true }\r\n    };\r\n     \r\n    events = {\r\n        select: function(event) {\r\n            var { nodes, edges } = event;\r\n        }\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <header className=\"App-header\">\r\n    \r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    Organización de Lenguajes y Compiladores 2\r\n                <p></p>\r\n\r\n                <div className=\"col-2 block\">\r\n                    <div className =\"row\">\r\n                        <Link to= {{ pathname: \"/tytusx/20211SVAC/G17\", datos:this.datos }}>\r\n                            <button type=\"button\" className=\"btn btn-primary btn-lg\">Atrás</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                \r\n                <label>Árbol XPath CST</label>\r\n                <div className = \"container-fluid\">\r\n                    <Graph\r\n                        graph={this.datos}\r\n                        options={this.options}\r\n                        events={this.events}\r\n                        //style={style}\r\n                        getNetwork={this.getNetwork}\r\n                        getEdges={this.getEdges}\r\n                        getNodes={this.getNodes}\r\n                        vis={vis => (this.vis = vis)}\r\n                    />\r\n                </div>\r\n\r\n                <p></p>\r\n                <p></p>\r\n                <p></p>\r\n                <p></p>\r\n\r\n                <label>Árbol XML CST</label>\r\n                <div className = \"container-fluid\">\r\n                    <Graph\r\n                        graph={this.datosXML}\r\n                        options={this.options}\r\n                        events={this.events}\r\n                        //style={style}\r\n                        getNetwork={this.getNetwork}\r\n                        getEdges={this.getEdges}\r\n                        getNodes={this.getNodes}\r\n                        vis={vis => (this.vis = vis)}\r\n                    />\r\n                </div>\r\n\r\n                <p></p>\r\n                <p></p>\r\n                <p></p>\r\n                <p></p>\r\n\r\n                <label>Árbol XPath AST</label>\r\n                <div className = \"container-fluid\">\r\n                    <Graph\r\n                        graph={this.datosAST}\r\n                        options={this.options}\r\n                        events={this.events}\r\n                        //style={style}\r\n                        getNetwork={this.getNetwork}\r\n                        getEdges={this.getEdges}\r\n                        getNodes={this.getNodes}\r\n                        vis={vis => (this.vis = vis)}\r\n                    />\r\n                </div>\r\n\r\n                <p></p>\r\n                <p></p>\r\n                <p></p>\r\n                <p></p>\r\n\r\n            <footer className=\"bg-dark text-center text-lg-start\">\r\n            <div className=\"text-center p-3 text-light \">\r\n                <font size=\"3\">\r\n                <p>\r\n                Grupo 17 <br/>\r\n                Jorge Ambrocio - Marcelo Marroquín - Viany Juárez<br/>\r\n                Organización de Lenguajes y Compiladores 2<br/>\r\n                Escuela de Vacaciones Junio 2021<br/>                \r\n                </p>\r\n                </font>   \r\n            </div>\r\n            </footer>\r\n            </header>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default InConsole;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nexport default class TablaSimbolo extends React.Component {\r\n  constructor(props)\r\n  {\r\n    super(props)\r\n    this.data=new Array()\r\n    if(this.props.data!=undefined)\r\n    {\r\n      this.data = this.props.data\r\n    }\r\n    console.log(this.data)\r\n  }\r\n  render() {\r\n    return (\r\n      <table className=\"table table-dark\"> \r\n        <thead> \r\n          <tr> \r\n            <th>Nombre</th> \r\n            <th>Tipo</th>\r\n            <th>Valor</th>\r\n            <th>Ambito</th> \r\n            <th>Fila</th> \r\n            <th>Columna</th> \r\n          </tr> \r\n        </thead>\r\n        <tbody>\r\n          { this.data.map(function(item){\r\n            return (\r\n              <tr>\r\n                <td>{item.nombre}</td>\r\n                <td>{item.tipo}</td>\r\n                <td>{item.valor}</td>\r\n                <td>{item.ambito}</td>\r\n                <td>{item.fila}</td>\r\n                <td>{item.columna}</td>\r\n              </tr>\r\n            )\r\n          }) }\r\n        </tbody> \r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <TablaSimbolo />,\r\n  document.getElementById('root')\r\n)\r\n\r\n","import logo from '../logo.svg';\r\nimport { Link } from 'react-router-dom'\r\nimport React  from 'react';\r\nimport TablaSimbolo from './TablaSimbolo'\r\n\r\n\r\nclass TablaSimbolos extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.XML = this.props.location.XML;\r\n        console.log(this.XML);\r\n\r\n        this.table = [];\r\n        this.readSimbols(this.XML);\r\n        console.log(this.table);\r\n    }\r\n\r\n    readSimbols(ent){\r\n        \r\n        //Por si es el global\r\n        var entActual = ent.tipo;\r\n        if(entActual == \"/\"){\r\n            entActual = \"global\";\r\n        }\r\n\r\n        //Etiquetas\r\n        this.table.push({nombre: \"NombreEtiqueta\",\r\n        tipo: \"Cadena\",\r\n        valor: entActual,\r\n        ambito: entActual,\r\n        fila: ent.linea,\r\n        columna: ent.columna\r\n        });\r\n        \r\n        //Valor de las etiquetas\r\n        if(ent.texto != \"\"){\r\n            this.table.push({nombre: \"ValorEtiqueta\",\r\n            tipo: \"Cadena\",\r\n            valor: ent.texto,\r\n            ambito: entActual,\r\n            fila: ent.linea,\r\n            columna: ent.columna\r\n            });\r\n        }\r\n        \r\n        //para cada atributo\r\n        for (const atributo of ent.atributos) {\r\n\r\n            this.table.push({\r\n                nombre: atributo.nombre,\r\n                tipo: \"Atributo\",\r\n                valor: atributo.valor,\r\n                ambito: entActual,\r\n                fila: atributo.linea,\r\n                columna: atributo.columna\r\n            });   \r\n        }\r\n\r\n        //para cada hijo\r\n        for (const hijo of ent.hijos) {\r\n\r\n            this.table.push({\r\n                nombre: hijo.tipo,\r\n                tipo: \"Etiqueta\",\r\n                valor: \"Object\",\r\n                ambito: entActual,\r\n                fila: hijo.linea,\r\n                columna: hijo.columna\r\n            });  \r\n            \r\n            this.readSimbols(hijo);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <header className=\"App-header\">\r\n    \r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    Organización de Lenguajes y Compiladores 2\r\n                <p></p>\r\n\r\n                <div className=\"col-2 block\">\r\n                    <div className =\"row\">\r\n                        <Link to= {{ pathname: \"/tytusx/20211SVAC/G17\", XML:this.XML }}>\r\n                            <button type=\"button\" className=\"btn btn-primary btn-lg\">Atrás</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <p></p>\r\n                <p></p>\r\n\r\n                <div className=\"row\">\r\n                    <label> Tabla de Símbolos </label>\r\n                </div>\r\n\r\n                <p></p>\r\n                <p></p>\r\n                <p></p>\r\n                \r\n                <div className = \"container\">\r\n                    <div className=\"row\">\r\n                    <TablaSimbolo data={this.table}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <p></p>\r\n            <p></p>\r\n            <p></p>\r\n\r\n            <footer className=\"bg-dark text-center text-lg-start\">\r\n            <div className=\"text-center p-3 text-light \">\r\n                <font size=\"3\">\r\n                <p>\r\n                Grupo 17 <br/>\r\n                Jorge Ambrocio - Marcelo Marroquín - Viany Juárez<br/>\r\n                Organización de Lenguajes y Compiladores 2<br/>\r\n                Escuela de Vacaciones Junio 2021<br/>                \r\n                </p>\r\n                </font>   \r\n            </div>\r\n            </footer>\r\n            </header>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default TablaSimbolos;","import logo from '../logo.svg';\r\nimport { Link } from 'react-router-dom'\r\nimport React, { Component } from 'react';\r\n\r\n\r\nclass TablaErrores extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.Mistakes = this.props.location.Mistakes;\r\n        this.MistakesXPath = this.props.location.MistakesXPath;\r\n        console.log(\"Aqui estan los errores XML\");\r\n        console.log(this.Mistakes);\r\n        console.log(\"Aqui estan los errores XPath\");\r\n        console.log(this.MistakesXPath);\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <header className=\"App-header\">\r\n    \r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    Organización de Lenguajes y Compiladores 2\r\n                <p></p>\r\n\r\n                <div className=\"col-2 block\">\r\n                    <div className =\"row\">\r\n                        <Link to= {{ pathname: \"/tytusx/20211SVAC/G17\" }}>\r\n                            <button type=\"button\" className=\"btn btn-primary btn-lg\">Atrás</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <p></p>\r\n                <p></p>\r\n\r\n                <div className=\"row\">\r\n                    <label> Tabla de Errores XML </label>\r\n                </div>\r\n                \r\n\r\n                <p></p>\r\n                <p></p>\r\n                <p></p>\r\n                \r\n                <div className = \"container\">\r\n                    <div className=\"row\">\r\n\r\n                    <table className=\"table table-dark\"> \r\n                    <thead> \r\n                    <tr> \r\n                        <th>Descripción</th> \r\n                        <th>Tipo</th>\r\n                        <th>Fila</th>\r\n                        <th>Columna</th>\r\n                    </tr> \r\n                    </thead>\r\n                    <tbody>\r\n                    { \r\n                        this.Mistakes.map(function(item){\r\n                            return (\r\n                            <tr>\r\n                                <td>{item.Error}</td>\r\n                                <td>{item.tipo}</td>\r\n                                <td>{item.Linea}</td>\r\n                                <td>{item.columna}</td>\r\n                            </tr>\r\n                            )\r\n                        }) \r\n                    }\r\n                    </tbody> \r\n                </table>\r\n    \r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <p></p>\r\n                <p></p>\r\n                <p></p>\r\n\r\n                <div className=\"row\">\r\n                    <label> Tabla de Errores XPath </label>\r\n                </div>\r\n                \r\n\r\n                <p></p>\r\n                <p></p>\r\n                <p></p>\r\n                \r\n                <div className = \"container\">\r\n                    <div className=\"row\">\r\n\r\n                    <table className=\"table table-dark\"> \r\n                    <thead> \r\n                    <tr> \r\n                        <th>Descripción</th> \r\n                        <th>Tipo</th>\r\n                        <th>Fila</th>\r\n                        <th>Columna</th>\r\n                    </tr> \r\n                    </thead>\r\n                    <tbody>\r\n                    { \r\n                        this.MistakesXPath.map(function(item){\r\n                            return (\r\n                            <tr>\r\n                                <td>{item.Error}</td>\r\n                                <td>{item.tipo}</td>\r\n                                <td>{item.Linea}</td>\r\n                                <td>{item.columna}</td>\r\n                            </tr>\r\n                            )\r\n                        }) \r\n                    }\r\n                    </tbody> \r\n                </table>\r\n    \r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <p></p>\r\n                <p></p>\r\n                <p></p>\r\n\r\n            <footer className=\"bg-dark text-center text-lg-start\">\r\n            <div className=\"text-center p-3 text-light \">\r\n                <font size=\"3\">\r\n                <p>\r\n                Grupo 17 <br/>\r\n                Jorge Ambrocio - Marcelo Marroquín - Viany Juárez<br/>\r\n                Organización de Lenguajes y Compiladores 2<br/>\r\n                Escuela de Vacaciones Junio 2021<br/>                \r\n                </p>\r\n                </font>   \r\n            </div>\r\n            </footer>\r\n            </header>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default TablaErrores;","import logo from '../logo.svg';\r\nimport { Link } from 'react-router-dom'\r\nimport React, { Component } from 'react';\r\n\r\n\r\nclass Gramatical extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.TablaGramatical = this.props.location.TablaGramatical;\r\n        this.TablaGramticalXPath = this.props.location.TablaGramticalXPath;\r\n        console.log(\"Esto es lo que trae la tabla gramatical\");\r\n        console.log(this.TablaGramatical);\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <header className=\"App-header\">\r\n    \r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    Organización de Lenguajes y Compiladores 2\r\n                <p></p>\r\n\r\n                <div className=\"col-2 block\">\r\n                    <div className =\"row\">\r\n                        <Link to= {{ pathname: \"/tytusx/20211SVAC/G17\" }}>\r\n                            <button type=\"button\" className=\"btn btn-primary btn-lg\">Atrás</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <p></p>\r\n                <p></p>\r\n\r\n                <div className=\"row\">\r\n                    <label> Reporte Gramatical XML </label>\r\n                </div>\r\n                \r\n\r\n                <p></p>\r\n                <p></p>\r\n                <p></p>\r\n                \r\n                <div className = \"container\">\r\n                    <div className=\"row\">\r\n\r\n                    <table className=\"table table-dark\"> \r\n                    <thead> \r\n                    <tr> \r\n                        <th>Producción</th> \r\n                        <th>Acción Semántica</th>                        \r\n                    </tr> \r\n                    </thead>\r\n                    <tbody>\r\n                    { \r\n                        this.TablaGramatical.map(function(item){\r\n                            return (\r\n                            <tr>\r\n                                <td>{item.padre + \" -> \" + item.hijos}</td>\r\n                                <td>{item.produccion}</td>\r\n                            </tr>\r\n                            )\r\n                        }) \r\n                    }\r\n                    </tbody> \r\n                </table>\r\n    \r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <p></p>\r\n                <p></p>\r\n                <p></p>\r\n\r\n                <div className=\"row\">\r\n                    <label> Reporte Gramatical XPath </label>\r\n                </div>\r\n                \r\n\r\n                <p></p>\r\n                <p></p>\r\n                <p></p>\r\n                \r\n                <div className = \"container\">\r\n                    <div className=\"row\">\r\n\r\n                    <table className=\"table table-dark\"> \r\n                    <thead> \r\n                    <tr> \r\n                        <th>Producción</th> \r\n                        <th>Acción Semántica</th>\r\n                    </tr> \r\n                    </thead>\r\n                    <tbody>\r\n                    { \r\n                        this.TablaGramticalXPath.map(function(item){\r\n                            return (\r\n                            <tr>\r\n                                <td>{item.padre + \" -> \" + item.hijos}</td>\r\n                                <td>{item.produccion}</td>\r\n                            </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                    </tbody> \r\n                </table>\r\n    \r\n\r\n\r\n                </div>\r\n                </div>\r\n\r\n                <p></p>\r\n                <p></p>\r\n                <p></p>\r\n\r\n            <footer className=\"bg-dark text-center text-lg-start\">\r\n            <div className=\"text-center p-3 text-light \">\r\n                <font size=\"3\">\r\n                <p>\r\n                Grupo 17 <br/>\r\n                Jorge Ambrocio - Marcelo Marroquín - Viany Juárez<br/>\r\n                Organización de Lenguajes y Compiladores 2<br/>\r\n                Escuela de Vacaciones Junio 2021<br/>                \r\n                </p>\r\n                </font>   \r\n            </div>\r\n            </footer>\r\n            </header>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Gramatical;","import React, { useEffect } from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Navigation from './components/Navigation'\r\nimport Reporte from './components/InConsole'\r\nimport TablaSimbolos from './components/TablaSimbolos'\r\nimport TablaErrores from './components/TablaErrores'\r\nimport Gramatical  from './components/Gramatical'\r\n\r\nconst Routes = () => {\r\n    useEffect(()=>{\r\n        document.title=\"CompiladorX G17\"\r\n    })\r\n    return (\r\n        <Switch>\r\n            <Route exact path = \"/\" component={Navigation}/>\r\n            <Route exact path = \"/tytusx/20211SVAC/G17\" component={Navigation}/>\r\n            <Route exact path = \"/tytusx/20211SVAC/G17/reporte\" component={Reporte}/>\r\n            <Route exact path = \"/tytusx/20211SVAC/G17/reporteTabla\" component={TablaSimbolos}/>\r\n            <Route exact path = \"/tytusx/20211SVAC/G17/reporteErrores\" component={TablaErrores}/>\r\n            <Route exact path = \"/tytusx/20211SVAC/G17/reporteGramatical\" component={Gramatical}/>\r\n            {/* <Route exact path = \"/mywebsite\" component={Navigation}/>\r\n            <Route exact path = \"/mywebsite/reporte\" component={Reporte}/>\r\n            <Route exact path = \"/mywebsite/reporteTabla\" component={TablaSimbolos}/>\r\n            <Route exact path = \"/mywebsite/reporteErrores\" component={TablaErrores}/> */}\r\n        </Switch>\r\n    );\r\n}\r\n\r\n\r\nexport default Routes;\r\n","import './App.css';\r\n\r\n//Componentes\r\nimport Routes from './Routes';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <Routes />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter><App /></BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","\r\nexport class grafoCST {\r\n\r\n  constructor()\r\n  {\r\n    this.pilaHijos = []\r\n    this.GrahpvizNodo = \"\"\r\n    this.pilaNodos= []\r\n    // DAtos { from:idActual, to: idHijos }\r\n    this.PilaEdges= []\r\n    this.GrahpvizEdges = \"\"\r\n    this.contador = 0\r\n    this.texto=[]\r\n    this.TablaGramatica = []\r\n  }\r\n  //Genera los padres en funcion de los ultimos datos en la pila de Hijos\r\n  generarPadre (posicion,padre=\"\")\r\n  {\r\n    posicion--\r\n    var concatenado=\"\"\r\n    var Edges = this.pilaHijos.pop()  \r\n    for(const temp of Edges)\r\n    {\r\n      this.PilaEdges.push({from:this.contador+posicion, to:temp.id})\r\n      this.GrahpvizEdges += `${this.contador+posicion} -> ${temp.id}\\n`\r\n      concatenado+=temp.label+\" \"\r\n    }\r\n    if(this.texto.length>0)\r\n    {\r\n      var textoActual=this.texto.pop()\r\n      this.TablaGramatica.push({padre:padre,hijos:concatenado,produccion:textoActual})\r\n    }\r\n  }\r\n  //Funcion que recive X parametros \r\n  generarHijos()\r\n  {\r\n    var Hijos=[]\r\n    for(var i=0;i < arguments.length; i++)\r\n    {\r\n      var hijo = {id:this.contador,label:arguments[i]}\r\n      Hijos.push(hijo)\r\n      this.pilaNodos.push(hijo)\r\n      this.GrahpvizNodo += `${this.contador}[label=\"${arguments[i]}\"]\\n`\r\n      this.contador++\r\n    }\r\n    this.pilaHijos.push(Hijos)\r\n  }\r\n\r\n  generarTexto(texto)\r\n  {\r\n    this.texto.push(texto)\r\n  }\r\n}\r\n// Datos { id:contador,label:'Nombre' }\r\n","import { Literal } from \"../../../analizadorXPath/Expresion/Expresiones\";\r\nimport { Id } from \"../expresiones/expresion\";\r\nimport { Instruccion } from \"../modelos\";\r\n\r\nexport class Asignacion extends Instruccion{\r\n    constructor(id, expresion){\r\n        super()\r\n        this.id = id\r\n        this.expresion = expresion\r\n    }\r\n\r\n    optimizar(){\r\n        // optimizar expresion\r\n        var exp = this.expresion.optimizar()\r\n        this.expresion = exp\r\n\r\n        // optimizar \r\n        // regla 8\r\n        // regla 9\r\n        // regla 10\r\n        // regla 11\r\n        if (\r\n            this.expresion instanceof Id &&\r\n            this.id == this.expresion.id\r\n        ){\r\n            this.esFuncional = false\r\n        }\r\n\r\n        return this\r\n    }\r\n\r\n    tresd(){\r\n        var tExp =this.expresion.tresd()\r\n        return this.esFuncional ? `${this.id}=${tExp};\\n`: '\\n'\r\n    }\r\n}\r\n\r\nexport class AsignacionArray extends Instruccion{\r\n    constructor(array, expresion){\r\n        super()\r\n        this.array = array\r\n        this.expresion = expresion\r\n    }\r\n\r\n    optimizar(){\r\n        var exp  = this.optimizar()\r\n        this.exppresion = exp\r\n\r\n        return this\r\n    }\r\n\r\n    tresd(){\r\n        var tarray =this.array.tresd()\r\n        var texpresion = this.expresion.tresd()\r\n        return `${tarray}=${texpresion};\\n`\r\n    }\r\n}","import { Tipo } from \"./analizadorXPath/AST/Entorno\";\r\n\r\n// código tres direccciones xml\r\nvar contador = -1;  // contador de temporales\r\nvar contadorXML = -1;\r\nvar cntLbl = 0      // contador de labels\r\nvar cntLblXML = -1; \r\nvar hp = 0;         // apuntador del heap\r\nvar hpXML = 0;\r\nvar sp = 0;         // apuntador base del stack pointer\r\nvar spXML = 0;\r\nvar c3d = '';       // contenido de código tres direcciones\r\nvar c3dXML = '';\r\nvar str3d = '';     //contenido de código tres direcciones XPath\r\nvar concatenado = ''\r\n\r\nexport const funcIndices = {\r\n    \"CAMINO\"                : 0,\r\n    \"PARENT\"                : 1,\r\n    \"ATRIBUTO\"              : 2,\r\n    \"IMPRIMIRCONSULTA\"      : 3,\r\n    \"IMPRIMIRATRIBUTO\"      : 4,\r\n    \"STRING\"                : 5,\r\n    \"DESCENDANTRECURSIVA\"   : 6,\r\n    \"DESCENDANT\"            : 7,\r\n    \"DESCENDANTSELF\"        : 8,\r\n    \"FOLLOWINGSIBLING\"      : 9,\r\n    \"PRECEDINGSIBLING\"      : 10,\r\n    \"ANCESTORRECURSIVA\"     : 11,\r\n    \"ANCESTOR\"              : 12,     \r\n    \"ANCESTORSELF\"          : 13,\r\n    \"SELF\"                  : 14, \r\n    \"CASTNUM\"               : 15,\r\n    \"PREDICADODECIMAL\"      : 16,\r\n    \"PREDICADONODO\"         : 17,\r\n    \"RECURSIVAATRIBUTO\"     : 18,\r\n    \"RRECURSIVAATROBUTO\"    : 19,\r\n    \"TEXT\"                  : 20,\r\n    \"LAST\"                  : 21,\r\n    \"UPPERCASE\"             : 22,\r\n    \"LOWERCASE\"             : 23,\r\n    \"TOSTRING\"              : 24,\r\n    \"SUBSTR1\"               : 25,\r\n    \"SUBSTR2\"               : 26,\r\n}\r\n\r\nexport function SetearXML()\r\n{\r\n    contadorXML = contador;\r\n    cntLblXML = cntLbl;\r\n    c3dXML = c3d;\r\n    hpXML = hp;\r\n    spXML = sp;\r\n}\r\n\r\nexport function castNum(){\r\n    var TC0 = newTemp(); var TC1 = newTemp(); var T0 = newTemp(); var T1 = newTemp(); var T2 = newTemp(); var T3 = newTemp();\r\n    var La = newLbl(); var Lb = newLbl();\r\n    \r\n    var cod = ''\r\n    var tab = '\\t'\r\n\r\n    cod += `void CastNum(){ \\n`\r\n\r\n    //recibimos los parametros del stack\r\n    cod += tab + `${TC0} = sp + 1; \\n`\r\n    cod += tab + `${TC1} = stack[(int)${TC0}]; \\n`\r\n\r\n    cod += tab + `${T0} = 0; \\n`    //el temporal maestro xD\r\n    cod += tab + `${T1} = ${TC1}; \\n`\r\n    cod += tab + `${La}: \\n`\r\n    cod += tab + `${T2} = heap[(int)${T1}]; \\n`\r\n    cod += tab + `if (${T2} == -1) goto ${Lb};\\n`\r\n    cod += tab + `${T3} = ${T2} - 48; \\n`\r\n    cod += tab + `${T0} = ${T0} * 10; \\n`\r\n    cod += tab + `${T0} = ${T0} + ${T3}; \\n`\r\n    cod += tab + `${T1} = ${T1} + 1; \\n`\r\n    cod += tab + `goto ${La}; \\n`\r\n\r\n    cod += tab + `${Lb}: \\n`\r\n    cod += tab + `stack[(int)sp] = ${T0}; \\n` //T0 (?)\r\n\r\n    cod += `\\n}\\n`\r\n    return cod\r\n}\r\nexport var funcBoleanas = []   //almacena funciones\r\nexport function clearConcatenado(){\r\n    concatenado = ''\r\n}\r\nexport function getCima(){\r\n    return sp\r\n}\r\nexport function getNextSP(){\r\n    return sp ++\r\n}\r\nexport function newTemp(){\r\n    contador++\r\n    return 'T'+contador    \r\n}\r\nexport function newLbl(){\r\n    cntLbl ++\r\n    return 'L'+cntLbl\r\n    \r\n}\r\nexport function addCodigo3D(str){\r\n    c3d += str;           \r\n}\r\nexport function clearC3D(){\r\n    cntLbl = 0;\r\n    cntLblXML = 0;\r\n    contador = 0;\r\n    contadorXML = 0;\r\n    c3d = '';\r\n    c3dXML = '';\r\n    str3d = '';\r\n    hp = 0;\r\n    hpXML = 0;\r\n    sp = 0;\r\n    spXML = 0;\r\n}\r\n\r\nexport function returnXMLC3D()\r\n{\r\n    cntLbl = cntLblXML;\r\n    contador = contadorXML;\r\n    c3d = c3dXML;\r\n    hp = hpXML;\r\n    sp = spXML;\r\n    str3d = '';\r\n}\r\n\r\nfunction agregarEncabezado(){\r\n    let encab = \r\n    `#include <stdio.h>\r\n#include <math.h>\r\ndouble heap[30101999];\r\ndouble stack[30101999];\r\ndouble stackHijos[524000];\r\ndouble stackAtributos[524000];\r\ndouble Indexes[524000];\r\ndouble heapConsulta[524000];\r\ndouble stackConsulta[524000];\r\ndouble stacX[524000];\r\ndouble heapConsultaAtributo[50];\r\ndouble hca;\r\ndouble sx;\r\ndouble hp;\r\ndouble sp;\r\ndouble sa;\r\ndouble sh;\r\ndouble si;\r\ndouble hpc;\r\ndouble spc;\r\ndouble T0`\r\n    //Lista de temporales\r\n    for (let index = 1; index <= contador; index++) {\r\n        encab += `, T${index}`        \r\n    }\r\n    encab += `;\\n\\n`\r\n    return encab;\r\n}\r\n\r\nexport function guardarString(posicion, texto){\r\n    \r\n    let nombre = texto\r\n    let Tinicio = newTemp();\r\n    c3d += `${Tinicio} = hp; \\n`\r\n    //para cada letra/caracter un espacio en el heap\r\n    for (const letra of nombre) {\r\n\r\n        var ascci = letra.charCodeAt(0);\r\n        c3d += `heap[(int)hp] = ${ascci}; \\n`\r\n        c3d += `hp = hp + 1; \\n`\r\n    }\r\n    //cuando termine el nombre agregamos el -1\r\n    c3d += `heap[(int)hp] = -1; \\n`\r\n    c3d += `hp = hp + 1; \\n`\r\n\r\n    // al finalizar hacer referencia al stack\r\n    // let Tref =  newTemp();\r\n    // c3d += `${Tref} = sp + ${posicion}; \\n`\r\n    // c3d += `stack[(int)${Tref}] = ${Tinicio}; \\n` // posición en stack donde empieza strig en heap\r\n    // c3d += `\\n`\r\n\r\n    return Tinicio\r\n}\r\n\r\nexport function guardarIndexes(refNombre, refAtri, refHijo, refValor){\r\n    var tempPadre = newTemp();\r\n    c3d += `Indexes[(int)si] = ${refNombre}; \\n`\r\n    c3d += `si = si + 1; \\n`\r\n    c3d += `Indexes[(int)si] = ${refAtri}; \\n`\r\n    c3d += `si = si + 1; \\n`\r\n    c3d += `Indexes[(int)si] = ${refHijo}; \\n`\r\n    c3d += `si = si + 1; \\n`\r\n    c3d += `Indexes[(int)si] = ${refValor}; \\n`\r\n    c3d += `si = si + 1; \\n`\r\n    c3d += `${tempPadre} = si; \\n`\r\n    c3d += `Indexes[(int)si] = -2; \\n`\r\n    c3d += `si = si + 1; \\n`\r\n    return tempPadre\r\n}\r\n\r\nexport function guardarIndexRaiz(refNombre, refAtri, refHijo, refValor){\r\n    c3d += `Indexes[(int)si] = ${refNombre}; \\n`\r\n    c3d += `si = si + 1; \\n`\r\n    c3d += `Indexes[(int)si] = ${refAtri}; \\n`\r\n    c3d += `si = si + 1; \\n`\r\n    c3d += `Indexes[(int)si] = ${refHijo}; \\n`\r\n    c3d += `si = si + 1; \\n`\r\n    c3d += `Indexes[(int)si] = ${refValor}; \\n`\r\n    c3d += `si = si + 1; \\n`\r\n    c3d += `Indexes[(int)si] = -2; \\n`\r\n    c3d += `si = si + 1; \\n`\r\n}\r\n\r\nexport function guardarStackAtri(Tinicio){\r\n    c3d += `stackAtributos[(int)sa] = ${Tinicio}; \\n`\r\n    c3d += `sa = sa + 1; \\n`\r\n}\r\n\r\nexport function guardarStackHijos(Tinicio){\r\n    c3d += `stackHijos[(int)sh] = ${Tinicio}; \\n`\r\n    c3d += `sh = sh + 1; \\n`\r\n}\r\n\r\nexport function getReferencia(indice){\r\n    var Tref = newTemp();\r\n    c3d += `${Tref} = ${indice}; \\n`\r\n    return Tref\r\n}\r\n\r\nexport function agregarComentario(){\r\n    c3d += `\\n/*${arguments[0]}*/ \\n`\r\n}\r\n\r\nexport function getC3D(){\r\n    return c3d\r\n}\r\n\r\nexport function concat(str){\r\n    concatenado += str\r\n}\r\n\r\nexport function getFullC3D(){\r\n    var retorno = ''\r\n    var funciones = addfuncion3d()\r\n\r\n    retorno += agregarEncabezado()\r\n\r\n    retorno += '\\n'+ funciones +'\\n'\r\n\r\n    retorno += '\\n\\nint main() {\\n'\r\n\r\n    retorno += c3d\r\n\r\n\r\n    retorno += '\\n\\treturn 0;\\n\\n'\r\n    retorno += '}'\r\n\r\n    //clearC3D()\r\n    return retorno\r\n}\r\n\r\n// código tres direcciones xpath\r\nexport function addC3D (str){\r\n  str3d += str +'\\n'\r\n}\r\n\r\nexport function getstr3d(){\r\n    var temp = str3d\r\n    str3d = ''\r\n    return temp\r\n}\r\n\r\nexport function addfuncion3d(str){\r\n    \r\n    var funciones3d = '' //contenido de código tres direcciones para funciones generales\r\n    funciones3d += funcComparar()+'\\n'\r\n    funciones3d += funcCompararAscii()+`\\n`\r\n    //funciones3d += leerStack()+'\\n'\r\n    if(funcBoleanas[funcIndices.IMPRIMIRATRIBUTO]){\r\n        funciones3d += ImprimirAtributo()+'\\n'\r\n        funciones3d += ImprimirAtributoR()+'\\n'\r\n    }\r\n    if(funcBoleanas[funcIndices.IMPRIMIRCONSULTA]){\r\n        funciones3d += imprimirConsulta()+'\\n'\r\n        funciones3d += ImprimirConsultaR()+'\\n'\r\n    }\r\n    //recorriendo el arreglo para crear funciones\r\n    if(funcBoleanas[funcIndices.CASTNUM]) funciones3d += castNum() + '\\n'\r\n    if(funcBoleanas[funcIndices.TEXT]) funciones3d += funcText() + '\\n'\r\n    if(funcBoleanas[funcIndices.TOSTRING]) funciones3d += funcNumberToString() + '\\n'\r\n    if(funcBoleanas[funcIndices.LAST]) funciones3d += funcLast() + '\\n'\r\n    if(funcBoleanas[funcIndices.UPPERCASE]) funciones3d += funcUpperCase() + '\\n'\r\n    if(funcBoleanas[funcIndices.LOWERCASE]) funciones3d += funcLowerCase() + '\\n'\r\n    if(funcBoleanas[funcIndices.SUBSTR1]) funciones3d += funcSubStr_int() + `\\n`\r\n    if(funcBoleanas[funcIndices.SUBSTR2]) funciones3d += funcSubStr_int_int() + `\\n`\r\n\r\n    if(funcBoleanas[funcIndices.PREDICADODECIMAL]) funciones3d += predicadoDecimal() + '\\n'\r\n    if(funcBoleanas[funcIndices.PREDICADONODO]) funciones3d += predicadoNodo() + '\\n'\r\n\r\n    if(funcBoleanas[funcIndices.CAMINO]) funciones3d += funcCaminoABS()+'\\n'\r\n    if(funcBoleanas[funcIndices.PARENT]) funciones3d += funcParent()+'\\n'\r\n    if(funcBoleanas[funcIndices.ATRIBUTO]) funciones3d += funcAtributo()+'\\n'\r\n    if(funcBoleanas[funcIndices.RRECURSIVAATROBUTO]) funciones3d += funcAtributoDescendantRecursiva() + '\\n'\r\n    if(funcBoleanas[funcIndices.RECURSIVAATRIBUTO]) funciones3d += funcAtributoDescendant() + '\\n'\r\n    if(funcBoleanas[funcIndices.STRING]) funciones3d += funcImprimirString()+'\\n'\r\n    if(funcBoleanas[funcIndices.FOLLOWINGSIBLING]) funciones3d += funcFollowingSibling()+'\\n'  \r\n    if(funcBoleanas[funcIndices.PRECEDINGSIBLING]) funciones3d += funcPrecedingSibling() + '\\n' \r\n    if(funcBoleanas[funcIndices.DESCENDANTRECURSIVA]) funciones3d += funcDescendantRecursiva() + '\\n'\r\n    if(funcBoleanas[funcIndices.DESCENDANT]) funciones3d += funcDescendant() + '\\n'\r\n    if(funcBoleanas[funcIndices.DESCENDANTSELF]) funciones3d += funcDescendantSelf() + '\\n' \r\n    if(funcBoleanas[funcIndices.ANCESTORRECURSIVA]) funciones3d += funcAncestorRecursiva() + '\\n'\r\n    if(funcBoleanas[funcIndices.ANCESTOR]) funciones3d += funcAncestor() + '\\n'\r\n    if(funcBoleanas[funcIndices.ANCESTORSELF]) funciones3d += funcAncestorSelf() + '\\n'\r\n    if(funcBoleanas[funcIndices.SELF]) funciones3d += funcSelf() + '\\n'\r\n    return funciones3d\r\n}\r\n\r\nexport class Retorno {\r\n    valor = '';\r\n    tipo = 0;\r\n    trueLabel = '';\r\n    falseLabel = '';\r\n    objetos= []\r\n    /* Por si viene una variable \r\n    Variable = '';*/\r\n\r\n    constructor(valor, tipo){\r\n        this.valor = valor;\r\n        this.tipo = tipo;\r\n        this.trueLabel = this.falseLabel = '';\r\n    }\r\n\r\n    setLabels(ltrue, lfalse){\r\n        this.ltrue = ltrue\r\n        this.lfalse = lfalse\r\n    }\r\n\r\n    getC3D(){\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport function funcImprimirString(){\r\n    var cod = ''\r\n    var tab = '\\t'\r\n\r\n    var T0 = newTemp(); var T1 = newTemp();\r\n    var La = newLbl(); var Lb = newLbl();\r\n\r\n    cod += `void imprimirString(){ \\n`\r\n    cod += tab + `${T0} = stack[(int)sp]; \\n`\r\n    cod += tab + `${La}: \\n`    \r\n    cod += tab + `${T1} = heap[(int)${T0}]; \\n`\r\n    cod += tab + `if (${T1} == -1) goto ${Lb}; \\n`\r\n    cod += tab + `printf(\"%c\", (int)${T1}); \\n`\r\n    cod += tab + `${T0} = ${T0} + 1; \\n`\r\n    cod += tab + `goto ${La}; \\n`\r\n    cod += tab + `${Lb}:;\\n`\r\n\r\n    //the end\r\n    cod += `\\n}\\n`\r\n    return cod \r\n}\r\n\r\n\r\n\r\n/* Inicio de funciones Axes */\r\n\r\n\r\n\r\nexport function funcCaminoABS(){\r\n    var cod = ''\r\n    var tab = `\\t`\r\n    cod += `void Camino(){ \\n\\n`\r\n\r\n    var TA = newTemp(); var TB = newTemp(); var TD = newTemp(); var TE = newTemp(); var TF = newTemp(); var TG = newTemp();\r\n    var TH = newTemp(); var TI = newTemp(); var TJ = newTemp(); var TK = newTemp(); var TL = newTemp(); var TM = newTemp();\r\n    var TN = newTemp(); var TO = newTemp(); var TP = newTemp(); var TQ = newTemp(); var TR = newTemp(); \r\n    \r\n    var LA = newLbl(); var LB = newLbl(); var LC = newLbl(); var LD = newLbl(); var LW = newLbl(); var LX = newLbl();\r\n    var LZ = newLbl(); var LAtri = newLbl();\r\n\r\n    cod += tab + `${TA} = spc; \\n`                            //iniciamos un contador general para lo que haya en la consulta\r\n    cod += tab + `${TB} = stackConsulta[(int)${TA}]; \\n`    //mandamos a traer el primer valor del stack consulta\r\n    cod += tab + `${LZ}: //si llega al final del stackConsulta sale \\n`\r\n    cod += tab + `if (${TB} == -2) goto ${LA}; \\n`\r\n\r\n    cod += tab + `${TD} = ${TB} + 2; \\n`                //buscamos el array de hijos del nodo en cuestion\r\n    cod += tab + `${TE} = Indexes[(int)${TD}]; \\n`      //la posicion del primer hijo\r\n    cod += tab + `${TF} = ${TE} + 0; \\n`                //inicializando contador para los hijos\r\n    cod += tab + `${TG} = stackHijos[(int)${TF}]; \\n`   //llamando al primer hijo, stackHijos en la pos TF\r\n    cod += tab + `${LX}: //mientras tenga hijos != -2 \\n`\r\n    cod += tab + `if (${TG} == -2) goto ${LB}; \\n`\r\n                \r\n    //ahora trabajamos con los objetos del hijo\r\n    cod += tab + `${TH} = ${TG} + 0; \\n`                //hacemos un contador para los elementos del hijo, primer elemento (nombre)\r\n    cod += tab + `${TI} = Indexes[(int)${TH}]; \\n\\n`      //mandamos a traer el nombre del hijo\r\n                \r\n    //cambiamos de entorno\r\n    cod += tab + `${TJ} = sp + 1; \\n`                   //mandamos a traer el primer parametro de heap consulta\r\n    cod += tab + `${TK} = stack[(int)${TJ}]; \\n`\r\n    cod += tab +`/* Cambiamos de entorno */ \\n`\r\n    cod += tab + `sp = sp + 3; \\n`\r\n    cod += tab + `${TL} = sp + 1;\\n`                    //Entorno nuevo en la posicion 1 (Posicion del Heap)\r\n    cod += tab + `stack[(int)${TL}] = ${TI};\\n`         //Asignar al parametro 1 la posicion del heap a comparar\r\n    cod += tab + `${TM} = sp + 2; \\n`                   //Entorno nuevo en la posicion 2 (Posicion del heapConsulta)\r\n    cod += tab + `stack[(int)${TM}] = ${TK}; \\n`           //Asignar al parametro 2 la posicion del heap consulta a comparar\r\n    cod += tab + `Comparar();\\n`                        //llamar a la funcion comparar                 \r\n    cod += tab + `${TN} = sp + 0; \\n`                      //Posicion del retorno de comparar\r\n    cod += tab + `${TO} = stack[(int)${TN}];\\n\\n`      //Guardamos lo que haya retornado comparar\r\n\r\n    //regresamos del entorno\r\n    cod += tab +`/* regresamos del entorno */ \\n`\r\n    cod += tab + `sp = sp - 3; \\n`\r\n    cod += tab + `if (${TO} == 0) goto ${LC}; \\n`       //si no hubo retorno vamos a LC\r\n\r\n    //si hubo hijo retornado (el retorno fue 1 -> true)\r\n    cod += tab + `stacX[(int)sx] = ${TG}; \\n`              //se coloca en el stackX la posicion del hijo en cuestion (?) funcionara recursivamente?\r\n    cod += tab + `sx = sx + 1; \\n`                         //Aumentamos el stackX\r\n    cod += tab + `stacX[(int)sx] = -2; \\n`\r\n\r\n    //si ya termino de guardar al hijo o fue 0 el comparar (false) \r\n    cod += tab + `${LC}: \\n`\r\n    cod += tab + `${TF} = ${TF} + 1; \\n`                //aumentamos el contador de hijos\r\n    cod += tab + `${TG} = stackHijos[(int)${TF}]; \\n`      //cambiamos de hijo\r\n    cod += tab + `goto ${LX}; \\n`//regresamos a la comparacion de nombres de hijos\r\n\r\n    //si ya no tiene mas hijos el nodo\r\n    cod += tab + `${LB}: \\n`\r\n    cod += tab + `${TA} = ${TA} + 1; \\n`//aumentamos el contador inicial de nodos\r\n    cod += tab + `${TB} = stackConsulta[(int)${TA}]; \\n`     //nos movemos en el stack de consultas (solo tiene un valor por camino)\r\n    cod += tab + `goto ${LZ}; \\n\\n`                     //regresamos al inicio de la busqueda para cada camino\r\n\r\n    //si ya no tiene nada el stackConsulta\r\n    cod += tab + `${LA}: \\n`\r\n    \r\n    //Reemplazar el StackConsulta por el StackX\r\n    cod += tab + `${TP} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n    cod += tab + `${TQ} = stacX[(int)${TP}]; \\n`\r\n    cod += tab + `${LW}: \\n`\r\n    cod += tab + `if (${TQ} == -2) goto ${LD}; \\n`      //si el stackX ya se termino vamos a LD\r\n    cod += tab + `${TR} = spc + ${TP}; \\n`              //posicion contador del stackConsulta\r\n    cod += tab + `stackConsulta[(int)${TR}] = ${TQ};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n    cod += tab + `${TP} = ${TP} + 1; \\n`                //aumentamos el contador de stackX\r\n    cod += tab + `${TQ} = stacX[(int)${TP}];\\n`           //capturamos lo que hay en stackX en esa nueva posicion\r\n    cod += tab + `goto ${LW}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n\r\n    //se acabo el stackX, no hay mas para guardar\r\n    cod += tab + `${LD}: \\n`    \r\n    cod += tab + `${TR} = spc + ${TP};\\n`\r\n    cod += tab + `stackConsulta[(int)${TR}] = -2;\\n`\r\n    cod += tab + `sx = 0; \\n`\r\n    cod += tab + `stacX[(int)sx] = -2; \\n`\r\n\r\n    //addCodigo3D(`ImprimirConsultas(); \\n`);\r\n\r\n    //the end\r\n    cod += '\\n} \\n'\r\n    return cod\r\n}\r\n\r\n\r\n\r\nexport function funcSelf(){\r\n    /* Se devuelve a el mismo */\r\n    var TC1 = newTemp(); var TC0 = newTemp(); var T0 = newTemp(); var T1 = newTemp(); var TF1 = newTemp(); var T2 = newTemp();\r\n    var T3 = newTemp(); var T4 = newTemp(); var T5 = newTemp(); var T6 = newTemp(); var T7 = newTemp(); var T8 = newTemp();\r\n    var La = newLbl(); var Lb = newLbl(); var Lc = newLbl(); var Ld = newLbl(); var Le = newLbl();\r\n\r\n    var cod = ''\r\n    var tab = '\\t'\r\n\r\n    cod += `void Self(){ \\n`\r\n\r\n    //recibimos los parametros del stack\r\n    cod += tab + `${TC1} = sp + 1; \\n`\r\n    cod += tab + `${TC0} = stack[(int)${TC1}]; \\n`      //donde inicia el nombre del heap consulta\r\n\r\n    //Aqui ya esta listo el stackConsultas que referencia a indexes\r\n    cod += tab + `${T0} = 0; \\n`\r\n    cod += tab + `${La}: \\n`\r\n    cod += tab + `${T1} = stackConsulta[(int)${T0}]; \\n`\r\n    cod += tab + `${TF1} = Indexes[(int)${T1}]; \\n`\r\n    //ciclo general\r\n    cod += tab + `if (${T1} == -2) goto ${Lb}; \\n`\r\n\r\n    //cambiamos de entorno\r\n    cod += tab +`/* Cambiamos de entorno */ \\n`\r\n    cod += tab + `sp = sp + 2; \\n`\r\n    cod += tab + `${T2} = sp + 1;\\n`                    //Entorno nuevo en la posicion 1 (Posicion del Heap)\r\n    cod += tab + `stack[(int)${T2}] = ${TF1};\\n`         //Asignar al parametro 1 la posicion del heap a comparar\r\n    cod += tab + `${T3} = sp + 2; \\n`                   //Entorno nuevo en la posicion 2 (Posicion del heapConsulta)\r\n    cod += tab + `stack[(int)${T3}] = ${TC0}; \\n`       //Asignar al parametro 2 la posicion del heap consulta a comparar\r\n    cod += tab + `Comparar();\\n`                        //llamar a la funcion comparar                 \r\n    cod += tab + `${T4} = sp + 0; \\n`                   //Posicion del retorno de comparar\r\n    cod += tab + `${T5} = stack[(int)${T4}];\\n\\n`       //Guardamos lo que haya retornado comparar\r\n\r\n    //regresamos del entorno\r\n    cod += tab +`/* regresamos del entorno */ \\n`\r\n    cod += tab + `sp = sp - 2; \\n`\r\n    cod += tab + `if (${T5} == 0) goto ${Lc}; \\n`       //si no hubo retorno vamos a Lc\r\n\r\n    //si la comparacion es verdadera\r\n    cod += tab + `stacX[(int)sx] = ${T1}; \\n`\r\n    cod += tab + `sx = sx + 1; \\n`\r\n    cod += tab + `stacX[(int)sx] = -2; \\n` \r\n\r\n    cod += tab + `${Lc}: \\n`\r\n    //si no fue verdadero o si ya se guardo cambiamos al siguiente nodo del stackConsulta\r\n    cod += tab + `${T0} = ${T0} + 1; \\n`\r\n    cod += tab + `goto ${La}; \\n`\r\n\r\n    //si ya se termino el stackConsulta\r\n    cod += tab + `${Lb}: \\n`\r\n    //Reemplazar el StackX por el StackConsulta\r\n    cod += tab + `${T6} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n    cod += tab + `${T7} = stacX[(int)${T6}]; \\n`\r\n    cod += tab + `${Ld}: \\n`\r\n    cod += tab + `if (${T7} == -2) goto ${Le}; \\n`      //si el stackX ya se termino vamos a LD\r\n    cod += tab + `${T8} = spc + ${T6}; \\n`              //posicion contador del stackConsulta\r\n    cod += tab + `stackConsulta[(int)${T8}] = ${T7};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n    cod += tab + `${T6} = ${T6} + 1; \\n`                //aumentamos el contador de stackX\r\n    cod += tab + `${T7} = stacX[(int)${T6}];\\n`           //capturamos lo que hay en stackX en esa nueva posicion\r\n    cod += tab + `goto ${Ld}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n\r\n    //se acabo el stackX, no hay mas para guardar\r\n    cod += tab + `${Le}: \\n`    \r\n    cod += tab + `${T8} = spc + ${T6};\\n`\r\n    cod += tab + `stackConsulta[(int)${T8}] = -2;\\n`\r\n    cod += tab + `sx = 0; \\n`\r\n    cod += tab + `stacX[(int)sx] = -2; \\n`\r\n\r\n    //the end\r\n    cod += '\\n} \\n'\r\n    return cod\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport function funcPrecedingSibling(){\r\n\r\n    var TC0 = newTemp(); var TC1 = newTemp();\r\n    var T0 = newTemp(); var T1 = newTemp(); var TF1 = newTemp(); var T2 = newTemp(); var T3 = newTemp();\r\n    var T4 = newTemp(); var T5 = newTemp(); var T6 = newTemp(); var T7 = newTemp(); var Tlargo = newTemp();\r\n    var T8 = newTemp(); var T9 = newTemp(); var TF2 = newTemp(); var T10 = newTemp(); var T11 = newTemp();\r\n    var T12 = newTemp(); var T13 = newTemp(); var T14 = newTemp(); var T15 = newTemp(); var T16 = newTemp();\r\n    var Ta = newTemp(); var Tb = newTemp();\r\n    var La = newLbl(); var Lb = newLbl(); var Lc = newLbl(); var Ld = newLbl(); var Le = newLbl(); var Lf = newLbl();\r\n    var Lg = newLbl(); var Lh = newLbl(); var Li = newLbl(); var Lj = newLbl();\r\n    var L1 = newLbl(); var L2 = newLbl(); var L3 = newLbl();\r\n\r\n    var cod = ''\r\n    var tab = '\\t'\r\n\r\n    cod += `void PrecedingSibling(){ \\n`\r\n\r\n    //recibimos los parametros del stack\r\n    cod += tab + `${TC1} = sp + 1; \\n`\r\n    cod += tab + `${TC0} = stack[(int)${TC1}]; \\n`      //donde inicia el nombre del heap consulta\r\n\r\n    //Aqui ya esta listo el stackConsultas que referencia a indexes\r\n    cod += tab + `${T0} = 0; \\n`\r\n    cod += tab + `${La}: \\n`\r\n    cod += tab + `${T1} = stackConsulta[(int)${T0}]; \\n`\r\n\r\n    //ciclo general\r\n    cod += tab + `if (${T1} == -2) goto ${Lb}; \\n`\r\n\r\n    //buscamos el padre aumentamos nuestro contador hasta la posicion del padre + 4\r\n    cod += tab + `${TF1} = ${T1} + 4; \\n`\r\n\r\n    //nos metemos en la posicion del padre de ese nodo\r\n    cod += tab + `${T2} = Indexes[(int)${TF1}]; \\n`\r\n\r\n    //nos movemos T+2; para estar en la posicion de los hijos\r\n    cod += tab + `${T2} = ${T2} + 2; \\n`\r\n    cod += tab + `${T3} = Indexes[(int)${T2}]; \\n`\r\n\r\n    cod += tab + `${T4} = sp + 2; \\n`   //inicio de donde estan los indices de los hijos temporalmente\r\n    cod += tab + `${T5} = ${T4}; \\n`    //contador para ir guardando (?)\r\n    cod += tab + `${Lc}: \\n`\r\n    cod += tab + `${T6} = stackHijos[(int)${T3}]; \\n`\r\n    //recorremos todos los hijos de ese padre guardando sus indices en stack\r\n    cod += tab + `if (${T6} == -2) goto ${Ld}; \\n`\r\n    cod += tab + `stack[(int)${T5}] = ${T6}; \\n`\r\n    cod += tab + `${T3} = ${T3} + 1; \\n`\r\n    cod += tab + `${T5} = ${T5} + 1; \\n`           //aumentamos el contador\r\n    cod += tab + `goto ${Lc}; \\n`\r\n\r\n    //ya no hay mas hijos para almacenar temporalmente\r\n    cod += tab + `${Ld}: \\n`\r\n    cod += tab + `${Tlargo} = ${T5}; \\n`\r\n    cod += tab + `stack[(int)${T5}] = -2; \\n`\r\n\r\n    //ahora recorremos el stack buscando el indice del nodo \r\n    cod += tab + `${T7} = ${T4}; \\n`    //desde el contador donde iniciaba\r\n    cod += tab + `${Le}: \\n`\r\n    cod += tab + `${T8} = stack[(int)${T7}]; \\n`\r\n    cod += tab + `if (${T8} == -2) goto ${Lf}; \\n`\r\n    cod += tab + `if (${T8} == ${T1}) goto ${Lg}; \\n`\r\n    //si no es igual entonces si lo guardamos haciendo las validaciones\r\n\r\n    //capturamos el nombre del que viene en el stack\r\n    cod += tab + `${T9} = Indexes[(int)${T8}]; \\n`\r\n    //capturamos el nombre de lo que viene en el stackConsulta TC0\r\n\r\n    //cambiamos de entorno\r\n    cod += tab +`/* Cambiamos de entorno */ \\n`\r\n    cod += tab + `${TF2} = ${Tlargo} + 1; \\n`\r\n    cod += tab + `sp = sp + ${TF2}; \\n`\r\n    cod += tab + `${T10} = sp + 1;\\n`                    //Entorno nuevo en la posicion 1 (Posicion del Heap)\r\n    cod += tab + `stack[(int)${T10}] = ${T9};\\n`         //Asignar al parametro 1 la posicion del heap a comparar\r\n    cod += tab + `${T11} = sp + 2; \\n`                   //Entorno nuevo en la posicion 2 (Posicion del heapConsulta)\r\n    cod += tab + `stack[(int)${T11}] = ${TC0}; \\n`       //Asignar al parametro 2 la posicion del heap consulta a comparar\r\n    cod += tab + `Comparar();\\n`                        //llamar a la funcion comparar                 \r\n    cod += tab + `${T12} = sp + 0; \\n`                   //Posicion del retorno de comparar\r\n    cod += tab + `${T13} = stack[(int)${T12}];\\n\\n`       //Guardamos lo que haya retornado comparar\r\n\r\n    //regresamos del entorno\r\n    cod += tab +`/* regresamos del entorno */ \\n`\r\n    cod += tab + `sp = sp - 2; \\n`\r\n    cod += tab + `if (${T13} == 0) goto ${Lh}; \\n`       //si no hubo retorno vamos a Lh\r\n\r\n    //la comparacion fue verdadera guardamos en stacX el hijo\r\n\r\n    cod += tab + `${Ta} = 0; \\n` //hacemos un contador para stackX\r\n    cod += tab + `${L1}: \\n`\r\n    cod += tab + `${Tb} = stacX[(int)${Ta}]; \\n`\r\n    cod += tab + `if(${Tb} == -2) goto ${L2}; \\n`      //si no encontro ninguna coincidencia    \r\n\r\n    //si no fue -2 entonces hay un nodo a comparar\r\n    cod += tab + `if (${T8} == ${Tb}) goto ${Lh}; \\n`    //si es igual pasamos de nodo y salimos    \r\n    //si es diferente pasamos al siguiente nodo\r\n    cod += tab + `${Ta} = ${Ta} + 1; \\n`\r\n    cod += tab + `goto ${L1}; \\n`\r\n    \r\n    //si se termino stacX no hubieron coincidencias entonces lo guardamos\r\n    cod += tab + `${L2}: \\n`\r\n    cod += tab + `stacX[(int)sx] = ${T8}; \\n`\r\n    cod += tab + `sx = sx + 1; \\n`\r\n    cod += tab + `stacX[(int)sx] = -2; \\n` \r\n    cod += tab + `${Lh}: \\n`\r\n    cod += tab + `${T7} = ${T7} + 1; \\n`\r\n    cod += tab + `goto ${Le}; \\n`\r\n\r\n    //la comparacion fue falsa o ya lo guarde pasamos al siguiente\r\n    //se acabo el stack para comparar\r\n    cod += tab + `${Lf}: \\n`    \r\n    //ya no debe seguir guardando porque ya llego al que buscabamos\r\n    cod += tab + `${Lg}: \\n`\r\n    //si ya terminamos pasamos al siguiente nodo de stackConsulta    \r\n    cod += tab + `${T0} = ${T0} + 1; \\n`\r\n    cod += tab + `goto ${La}; \\n`\r\n    \r\n    //si ya se termino el stackConsulta\r\n    cod += tab + `${Lb}: \\n`\r\n    //Reemplazar el StackX por el StackConsulta\r\n    cod += tab + `${T14} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n    cod += tab + `${T15} = stacX[(int)${T14}]; \\n`\r\n    cod += tab + `${Li}: \\n`\r\n    cod += tab + `if (${T15} == -2) goto ${Lj}; \\n`      //si el stackX ya se termino vamos a LD\r\n    cod += tab + `${T16} = spc + ${T14}; \\n`              //posicion contador del stackConsulta\r\n    cod += tab + `stackConsulta[(int)${T16}] = ${T15};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n    cod += tab + `${T14} = ${T14} + 1; \\n`                //aumentamos el contador de stackX\r\n    cod += tab + `${T15} = stacX[(int)${T14}];\\n`           //capturamos lo que hay en stackX en esa nueva posicion\r\n    cod += tab + `goto ${Li}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n\r\n    //se acabo el stackX, no hay mas para guardar\r\n    cod += tab + `${Lj}: \\n`   \r\n    cod += tab + `${T16} = spc + ${T14};\\n` \r\n    cod += tab + `stackConsulta[(int)${T16}] = -2;\\n`\r\n    cod += tab + `sx = 0; \\n`\r\n    cod += tab + `stacX[(int)sx] = -2; \\n`\r\n\r\n    //the end\r\n    cod += '\\n} \\n'\r\n    return cod\r\n\r\n\r\n}\r\n\r\nexport function funcFollowingSibling(){\r\n    /* Todos los hermanos del nodo en cuestion -> Todos los hijos del padre del nodo actual (menos el actual) */\r\n    var TC0 = newTemp(); var TC1 = newTemp();\r\n    var T0 = newTemp(); var T1 = newTemp(); var TF1 = newTemp(); var T2 = newTemp(); var T3 = newTemp();\r\n    var T4 = newTemp(); var T5 = newTemp(); var T6 = newTemp(); var T7 = newTemp(); var Tlargo = newTemp();\r\n    var T8 = newTemp(); var T9 = newTemp(); var TF2 = newTemp(); var T10 = newTemp(); var T11 = newTemp();\r\n    var T12 = newTemp(); var T13 = newTemp(); var T14 = newTemp(); var T15 = newTemp(); var T16 = newTemp();\r\n    var Ta = newTemp(); var Tb = newTemp();\r\n    var La = newLbl(); var Lb = newLbl(); var Lc = newLbl(); var Ld = newLbl(); var Le = newLbl(); var Lf = newLbl();\r\n    var Lg = newLbl(); var Lh = newLbl(); var Li = newLbl(); var Lj = newLbl();\r\n    var L1 = newLbl(); var L2 = newLbl(); var L3 = newLbl();\r\n    var cod = ''\r\n    var tab = '\\t'\r\n\r\n    cod += `void FollowingSibling(){ \\n`\r\n\r\n    //recibimos los parametros del stack\r\n    cod += tab + `${TC1} = sp + 1; \\n`\r\n    cod += tab + `${TC0} = stack[(int)${TC1}]; \\n`      //donde inicia el nombre del heap consulta\r\n\r\n    //Aqui ya esta listo el stackConsultas que referencia a indexes\r\n    cod += tab + `${T0} = spc; \\n`\r\n    cod += tab + `${La}: \\n`\r\n    cod += tab + `${T1} = stackConsulta[(int)${T0}]; \\n`\r\n\r\n    //ciclo general\r\n    cod += tab + `if (${T1} == -2) goto ${Lb}; \\n`\r\n\r\n    //buscamos el padre aumentamos nuestro contador hasta la posicion del padre + 4\r\n    cod += tab + `${TF1} = ${T1} + 4; \\n`\r\n\r\n    //nos metemos en la posicion del padre de ese nodo\r\n    cod += tab + `${T2} = Indexes[(int)${TF1}]; \\n`\r\n\r\n    //nos movemos T+2; para estar en la posicion de los hijos\r\n    cod += tab + `${T2} = ${T2} + 2; \\n`\r\n    cod += tab + `${T3} = Indexes[(int)${T2}]; \\n`\r\n\r\n    cod += tab + `${T4} = sp + 2; \\n`   //inicio de donde estan los indices de los hijos temporalmente\r\n    cod += tab + `${T5} = ${T4}; \\n`    //contador para ir guardando (?)\r\n    cod += tab + `${Lc}: \\n`\r\n    cod += tab + `${T6} = stackHijos[(int)${T3}]; \\n`\r\n    //recorremos todos los hijos de ese padre guardando sus indices en stack\r\n    cod += tab + `if (${T6} == -2) goto ${Ld}; \\n`\r\n    cod += tab + `stack[(int)${T5}] = ${T6}; \\n`\r\n    cod += tab + `${T3} = ${T3} + 1; \\n`\r\n    cod += tab + `${T5} = ${T5} + 1; \\n`           //aumentamos el contador\r\n    cod += tab + `goto ${Lc}; \\n`\r\n\r\n    //ya no hay mas hijos para almacenar temporalmente\r\n    cod += tab + `${Ld}: \\n`\r\n    cod += tab + `${Tlargo} = ${T5}; \\n`\r\n    cod += tab + `stack[(int)${T5}] = -2; \\n`\r\n\r\n    //ahora recorremos el stack buscando el indice del nodo \r\n    cod += tab + `${T7} = ${T4}; \\n`    //desde el contador donde iniciaba\r\n    cod += tab + `${Le}: \\n`\r\n    cod += tab + `${T8} = stack[(int)${T7}]; \\n`\r\n    cod += tab + `if (${T8} == -2) goto ${Lf}; \\n`\r\n    cod += tab + `if (${T8} == ${T1}) goto ${Lg}; \\n`\r\n    cod += tab + `${T7} = ${T7} + 1; \\n`\r\n    cod += tab + `goto ${Le}; \\n`\r\n\r\n    cod += tab + `${Lg}: \\n`\r\n    cod += tab + `${T7} = ${T7} + 1; \\n`\r\n    cod += tab + `${T8} = stack[(int)${T7}];\\n`\r\n    cod += tab + `if(${T8} == -2) goto ${Lf}; \\n`\r\n    //si fueron iguales los indices empezamos a comparar nombre\r\n    //capturamos el nombre del que viene en el stack\r\n    cod += tab + `${T9} = Indexes[(int)${T8}]; \\n`\r\n    //capturamos el nombre de lo que viene en el stackConsulta TC0\r\n\r\n    //cambiamos de entorno\r\n    cod += tab +`/* Cambiamos de entorno */ \\n`\r\n    cod += tab + `${TF2} = ${Tlargo} + 1; \\n`\r\n    cod += tab + `sp = sp + ${TF2}; \\n`\r\n    cod += tab + `${T10} = sp + 1;\\n`                    //Entorno nuevo en la posicion 1 (Posicion del Heap)\r\n    cod += tab + `stack[(int)${T10}] = ${T9};\\n`         //Asignar al parametro 1 la posicion del heap a comparar\r\n    cod += tab + `${T11} = sp + 2; \\n`                   //Entorno nuevo en la posicion 2 (Posicion del heapConsulta)\r\n    cod += tab + `stack[(int)${T11}] = ${TC0}; \\n`       //Asignar al parametro 2 la posicion del heap consulta a comparar\r\n    cod += tab + `Comparar();\\n`                        //llamar a la funcion comparar                 \r\n    cod += tab + `${T12} = sp + 0; \\n`                   //Posicion del retorno de comparar\r\n    cod += tab + `${T13} = stack[(int)${T12}];\\n\\n`       //Guardamos lo que haya retornado comparar\r\n\r\n    //regresamos del entorno\r\n    cod += tab +`/* regresamos del entorno */ \\n`\r\n    cod += tab + `sp = sp - ${TF2}; \\n`\r\n    cod += tab + `if (${T13} == 0) goto ${Lh}; \\n`       //si no hubo retorno vamos a Lh\r\n\r\n    //la comparacion fue verdadera guardamos en stacX el hijo\r\n\r\n    cod += tab + `${Ta} = 0; \\n` //hacemos un contador para stackX\r\n    cod += tab + `${L1}: \\n`\r\n    cod += tab + `${Tb} = stacX[(int)${Ta}]; \\n`\r\n    cod += tab + `if(${Tb} == -2) goto ${L2}; \\n`      //si no encontro ninguna coincidencia    \r\n\r\n    //si no fue -2 entonces hay un nodo a comparar\r\n    cod += tab + `if (${T8} == ${Tb}) goto ${L3}; \\n`    //si es igual pasamos de nodo y salimos    \r\n    //si es diferente pasamos al siguiente nodo\r\n    cod += tab + `${Ta} = ${Ta} + 1; \\n`\r\n    cod += tab + `goto ${L1}; \\n`\r\n    \r\n    //si se termino stacX no hubieron coincidencias entonces lo guardamos\r\n    cod += tab + `${L2}: \\n`\r\n    cod += tab + `stacX[(int)sx] = ${T8}; \\n`\r\n    cod += tab + `sx = sx + 1; \\n`\r\n    cod += tab + `stacX[(int)sx] = -2; \\n` \r\n    //la comparacion fue falsa o ya lo guarde pasamos al siguiente\r\n    cod += tab + `${L3}: \\n`\r\n    cod += tab + `${Lh}: \\n`\r\n    cod += tab + `goto ${Lg}; \\n`\r\n\r\n    //se acabo el stack para comparar\r\n    cod += tab + `${Lf}: \\n`\r\n    //si ya terminamos pasamos al siguiente nodo de stackConsulta    \r\n    cod += tab + `${T0} = ${T0} + 1; \\n`\r\n    cod += tab + `goto ${La}; \\n`\r\n    \r\n    //si ya se termino el stackConsulta\r\n    cod += tab + `${Lb}: \\n`\r\n    //Reemplazar el StackX por el StackConsulta\r\n    cod += tab + `${T14} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n    cod += tab + `${T15} = stacX[(int)${T14}]; \\n`\r\n    cod += tab + `${Li}: \\n`\r\n    cod += tab + `if (${T15} == -2) goto ${Lj}; \\n`      //si el stackX ya se termino vamos a LD\r\n    cod += tab + `${T16} = spc + ${T14}; \\n`              //posicion contador del stackConsulta\r\n    cod += tab + `stackConsulta[(int)${T16}] = ${T15};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n    cod += tab + `${T14} = ${T14} + 1; \\n`                //aumentamos el contador de stackX\r\n    cod += tab + `${T15} = stacX[(int)${T14}];\\n`           //capturamos lo que hay en stackX en esa nueva posicion\r\n    cod += tab + `goto ${Li}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n\r\n    //se acabo el stackX, no hay mas para guardar\r\n    cod += tab + `${Lj}: \\n`    \r\n    cod += tab + `${T16} = spc + ${T14};\\n`\r\n    cod += tab + `stackConsulta[(int)${T16}] = -2;\\n`\r\n    cod += tab + `sx = 0; \\n`\r\n    cod += tab + `stacX[(int)sx] = -2; \\n`\r\n\r\n    //the end\r\n    cod += '\\n} \\n'\r\n    return cod    \r\n\r\n}\r\n\r\nexport function funcParent(){\r\n    //en el Parent ya esta listo el stackConsulta :: check\r\n    //estando en el nodo de stackConsulta tengo que buscar su padre :: check\r\n    //comparar si el padre de ese nodo se llama igual a como estoy buscando que se llame el padre ::check\r\n    //si es verdadero entonces tengo que buscar en el stacX que no exista ya guardado ese padre :: check\r\n    //si el padre no existe lo guardo en el stacX   :: check\r\n    //si el padre ya existe nos pasamos a buscar al siguiente nodo en stackConsulta :: check\r\n\r\n    var TC0 = newTemp(); var TC1 = newTemp(); var T0 = newTemp(); var T1 = newTemp(); var T2 = newTemp(); var Tr = newTemp();\r\n    var T3 = newTemp(); var T4 = newTemp(); var T5 = newTemp(); var T6 = newTemp(); var T7 = newTemp(); var T8 = newTemp();\r\n    var T9 = newTemp(); var T10 = newTemp(); var T11 = newTemp(); var T12 = newTemp(); var T13 = newTemp();\r\n    var La = newLbl(); var Lb = newLbl(); var Lc = newLbl(); var Ld = newLbl(); var Le = newLbl(); var Lf = newLbl();\r\n    var Lg = newLbl(); var Lh = newLbl();\r\n\r\n    var cod = ''\r\n    var tab = '\\t'\r\n\r\n    cod += `void Parent(){ \\n`\r\n\r\n    //recibimos los parametros del stack\r\n    cod += tab + `${TC1} = sp + 1; \\n`\r\n    cod += tab + `${TC0} = stack[(int)${TC1}]; \\n`      //donde inicia el nombre del heap consulta\r\n\r\n    //Aqui ya esta listo el stackConsultas que referencia a indexes\r\n    cod += tab + `${T0} = spc; \\n`\r\n    cod += tab + `${La}: \\n`\r\n    cod += tab + `${T1} = stackConsulta[(int)${T0}]; \\n`\r\n\r\n    //ciclo general\r\n    cod += tab + `if (${T1} == -2) goto ${Lb}; \\n`\r\n    //aumentamos nuestro contador hasta la posicion del padre + 4\r\n    cod += tab + `${T1} = ${T1} + 4; \\n`\r\n    //nos movemos a indexes, esta es la posicion del nodo padre en el indexes\r\n    cod += tab + `${T2} = Indexes[(int)${T1}]; \\n`\r\n    //tomamos el inicio del nodo padre en indexes\r\n    cod += tab + `${T3} = Indexes[(int)${T2}]; \\n`\r\n\r\n\r\n    //comparamos si el nombre del padre es igual al nombre que estamos comparando\r\n    //cambiamos de entorno\r\n    cod += tab +`/* Cambiamos de entorno */ \\n`\r\n    cod += tab + `sp = sp + 2; \\n`\r\n    cod += tab + `${T5} = sp + 1;\\n`                    //Entorno nuevo en la posicion 1 (Posicion del Heap)\r\n    cod += tab + `stack[(int)${T5}] = ${T3};\\n`         //Asignar al parametro 1 la posicion del heap a comparar\r\n    cod += tab + `${T6} = sp + 2; \\n`                   //Entorno nuevo en la posicion 2 (Posicion del heapConsulta)\r\n    cod += tab + `stack[(int)${T6}] = ${TC0}; \\n`       //Asignar al parametro 2 la posicion del heap consulta a comparar\r\n    cod += tab + `Comparar();\\n`                        //llamar a la funcion comparar                 \r\n    cod += tab + `${T7} = sp + 0; \\n`                   //Posicion del retorno de comparar\r\n    cod += tab + `${T8} = stack[(int)${T7}];\\n\\n`       //Guardamos lo que haya retornado comparar\r\n\r\n    //regresamos del entorno\r\n    cod += tab +`/* regresamos del entorno */ \\n`\r\n    cod += tab + `sp = sp - 2; \\n`\r\n    cod += tab + `if (${T8} == 0) goto ${Lc}; \\n`       //si no hubo retorno vamos a Lc\r\n\r\n    /*si la comparacion fue verdadera*/\r\n    //si es verdadero entonces tengo que buscar en el stacX que no exista ya guardado ese padre\r\n\r\n    cod += tab + `${T9} = 0; \\n` //hacemos un contador para stackX\r\n    cod += tab + `${Ld}: \\n`\r\n    cod += tab + `${T10} = stacX[(int)${T9}]; \\n`\r\n    cod += tab + `if(${T10} == -2) goto ${Le}; \\n`      //si no encontro ninguna coincidencia    \r\n\r\n    //si no fue -2 entonces hay un nodo a comparar\r\n    cod += tab + `if (${T2} == ${T10}) goto ${Lf}; \\n`    //si es igual pasamos de nodo y salimos    \r\n    //si es diferente pasamos al siguiente nodo\r\n    cod += tab + `${T9} = ${T9} + 1; \\n`\r\n    cod += tab + `goto ${Ld}; \\n`\r\n    \r\n    //si se termino stacX no hubieron coincidencias\r\n    cod += tab + `${Le}: \\n`\r\n    /* El nodo no ha sido guardado en stackX, lo guardamos */\r\n    cod += tab + `stacX[(int)sx] = ${T2}; \\n`\r\n    cod += tab + `sx = sx + 1; \\n`\r\n    cod += tab + `stacX[(int)sx] = -2; \\n`    \r\n\r\n    //si ya terminamos pasamos al siguiente nodo de stackConsulta\r\n    cod += tab + `${Lc}: \\n`\r\n    //el nodo ya existe en el stackX, no hacemos nada\r\n    cod += tab + `${Lf}: \\n`\r\n    cod += tab + `${T0} = ${T0} + 1; \\n`\r\n    cod += tab + `goto ${La}; \\n`    \r\n\r\n    //si ya se termino el stackConsulta\r\n    cod += tab + `${Lb}: \\n`\r\n    //Reemplazar el StackX por el StackConsulta\r\n    cod += tab + `${T11} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n    cod += tab + `${T12} = stacX[(int)${T11}]; \\n`\r\n    cod += tab + `${Lg}: \\n`\r\n    cod += tab + `if (${T12} == -2) goto ${Lh}; \\n`      //si el stackX ya se termino vamos a LD\r\n    cod += tab + `${T13} = spc + ${T11}; \\n`              //posicion contador del stackConsulta\r\n    cod += tab + `stackConsulta[(int)${T13}] = ${T12};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n    cod += tab + `${T11} = ${T11} + 1; \\n`                //aumentamos el contador de stackX\r\n    cod += tab + `${T12} = stacX[(int)${T11}];\\n`           //capturamos lo que hay en stackX en esa nueva posicion\r\n    cod += tab + `goto ${Lg}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n\r\n    //se acabo el stackX, no hay mas para guardar\r\n    cod += tab + `${Lh}: \\n`    \r\n    cod += tab + `${T13} = spc + ${T11};\\n`\r\n    cod += tab + `stackConsulta[(int)${T13}] = -2;\\n`\r\n    cod += tab + `sx = 0; \\n`\r\n    cod += tab + `stacX[(int)sx] = -2; \\n`\r\n\r\n    //the end\r\n    cod += '\\n} \\n'\r\n    return cod\r\n    \r\n\r\n    \r\n\r\n\r\n\r\n}\r\n\r\nexport function funcAtributo(){\r\n\r\n    var TC1 = newTemp(); var TC0 = newTemp(); var T0 = newTemp(); var T1 = newTemp(); var T2 = newTemp();\r\n    var T3 = newTemp(); var T4 = newTemp(); var T5 = newTemp(); var T6 = newTemp(); var T7 = newTemp();\r\n    var T8 = newTemp(); var TP = newTemp(); var TQ = newTemp(); var TR = newTemp();\r\n    var Ld = newLbl(); var La = newLbl(); var Lb = newLbl(); var Lc = newLbl(); var Le = newLbl();\r\n    var LW = newLbl(); var Lx = newLbl(); \r\n    var cod = ''\r\n    var tab = '\\t'\r\n\r\n    cod += `void Atributo(){\\n`  // /book/title/@lang\r\n\r\n    cod += tab + `${TC1} = sp + 1; \\n`\r\n    cod += tab + `${TC0} = stack[(int)${TC1}]; \\n`\r\n\r\n    //Aqui ya esta listo el stackConsultas que referencia a indexes\r\n    cod += tab + `${T0} = spc; \\n`\r\n    cod += tab + `${Le}: \\n`\r\n    cod += tab + `${T1} = stackConsulta[(int)${T0}]; \\n`\r\n\r\n    cod += tab + `if (${T1} == -2) goto ${Ld}; \\n`\r\n\r\n    cod += tab + `${T1} = ${T1} + 1; \\n`\r\n\r\n    //nos movemos a indexes\r\n    cod += tab + `${T2} = Indexes[(int)${T1}]; \\n`\r\n    \r\n    //nos movemos al stackAtributos\r\n    cod += tab + `${Lc}: \\n`\r\n    cod += tab + `${T3} = stackAtributos[(int)${T2}]; \\n`\r\n    \r\n    //mientras que no se terminen los atributos\r\n    cod += tab + `if (${T3} == -2 ) goto ${La}; \\n`\r\n    //iniciamos un contador para los atributos (posicion inicial del heap)\r\n    cod += tab + `${T4} = ${T3} + 0; \\n`\r\n      \r\n    //si hay atributo entonces tenemos que comparar el nombre con el que estan buscando                \r\n    //cambiamos de entorno\r\n    cod += tab +`/* Cambiamos de entorno */ \\n`\r\n    cod += tab + `sp = sp + 1; \\n`\r\n    cod += tab + `${T5} = sp + 1;\\n`                    //Entorno nuevo en la posicion 1 (Posicion del Heap)\r\n    cod += tab + `stack[(int)${T5}] = ${T4};\\n`         //Asignar al parametro 1 la posicion del heap a comparar\r\n    cod += tab + `${T6} = sp + 2; \\n`                   //Entorno nuevo en la posicion 2 (Posicion del heapConsulta)\r\n    cod += tab + `stack[(int)${T6}] = ${TC0}; \\n`       //Asignar al parametro 2 la posicion del heap consulta a comparar\r\n    cod += tab + `Comparar();\\n`                        //llamar a la funcion comparar                 \r\n    cod += tab + `${T7} = sp + 0; \\n`                   //Posicion del retorno de comparar\r\n    cod += tab + `${T8} = stack[(int)${T7}];\\n\\n`      //Guardamos lo que haya retornado comparar\r\n\r\n    //regresamos del entorno\r\n    cod += tab +`/* regresamos del entorno */ \\n`\r\n    cod += tab + `sp = sp - 1; \\n`\r\n    cod += tab + `if (${T8} == 0) goto ${Lb}; \\n`       //si no hubo retorno vamos a LB\r\n\r\n    cod += tab + `stacX[(int)sx] = ${T2}; \\n`\r\n    cod += tab + `sx = sx + 1; \\n`\r\n    cod += tab + `stacX[(int)sx] = -2; \\n`\r\n    cod += tab + `goto ${La}; \\n`\r\n\r\n    cod += tab + `${Lb}: \\n`\r\n    //si no coincidio que siga buscando\r\n    cod += tab + `${T2} = ${T2} + 3; \\n`\r\n    cod += tab + `goto ${Lc}; \\n`\r\n    cod += tab + `${La}: \\n`\r\n    cod += tab + `${T0} = ${T0} + 1; \\n`\r\n    cod += tab + `goto ${Le}; \\n`\r\n    cod += tab + `${Ld}:\\n`\r\n\r\n    //Reemplazar el StackConsulta por el StackX\r\n    cod += tab + `${TP} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n    cod += tab + `${TQ} = stacX[(int)${TP}]; \\n`\r\n    cod += tab + `${LW}: \\n`\r\n    cod += tab + `if (${TQ} == -2) goto ${Lx}; \\n`      //si el stackX ya se termino vamos a LD\r\n    cod += tab + `${TR} = spc + ${TP}; \\n`              //posicion contador del stackConsulta\r\n    cod += tab + `stackConsulta[(int)${TR}] = ${TQ};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n    cod += tab + `${TP} = ${TP} + 1; \\n`                //aumentamos el contador de stackX\r\n    cod += tab + `${TQ} = stacX[(int)${TP}];\\n`           //capturamos lo que hay en stackX en esa nueva posicion\r\n    cod += tab + `goto ${LW}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n\r\n    //se acabo el stackX, no hay mas para guardar\r\n    cod += tab + `${Lx}: \\n`   \r\n    cod += tab + `${TR} = spc + ${TP};\\n` \r\n    cod += tab + `stackConsulta[(int)${TR}] = -2;\\n`\r\n    cod += tab + `sx = 0; \\n`\r\n    cod += tab + `stacX[(int)sx] = -2; \\n`\r\n\r\n    //addCodigo3D(`ImprimirConsultas(); \\n`);\r\n\r\n    //the end\r\n    cod += '\\n} \\n'\r\n    return cod\r\n}\r\n\r\nexport function funcAtributoDescendantRecursiva()\r\n{\r\n    var cod = ''\r\n    var tab = `\\t`\r\n    // 1 HeapConsulta   \r\n\r\n    cod += `void AtributoDescendantRecusriva(){ \\n\\n`\r\n    var T2A = newTemp();var T2B = newTemp();\r\n    var T2C = newTemp();var T2D = newTemp();var T2E = newTemp();var T2F = newTemp()\r\n    var T2G = newTemp();var TA0 = newTemp();var T2H = newTemp();var TA1 = newTemp();\r\n    var T2I = newTemp();var T2J = newTemp();var T2K = newTemp();var T2L = newTemp();\r\n    var T2M = newTemp();var T2N = newTemp();var T2O = newTemp();var T2P = newTemp();var T2Q = newTemp();\r\n\r\n    var E2A = newLbl();var E2B = newLbl();var LA1 = newLbl();var LA3 = newLbl();var E2C = newLbl();var E2D = newLbl();\r\n\r\n    cod += tab + `${T2A} = sp + 0; \\n`\r\n    cod += tab + `${T2B} = stack[(int)${T2A}]; \\n`\r\n    cod += tab + `${T2B} = ${T2B} + 2; \\n`\r\n    cod += tab + `${T2C} = Indexes[(int)${T2B}]; \\n`\r\n    cod += tab + `if (${T2C} == -2) goto ${E2A}; \\n`\r\n\r\n\r\n    cod += tab + `${T2D} = sp + 2; \\n`\r\n    cod += tab + `stack[(int)${T2D}]=${T2C};\\n`\r\n    // Label que va a loopear\r\n    cod += tab + `${E2D}:`\r\n    //Me muevo al contador de los hijos en el stack\r\n    cod += tab + `${T2E} = sp + 2; \\n`;\r\n    cod += tab + `${T2F} = stack[(int)${T2E}];\\n`\r\n    //Busco el hijo en la posicion que guarde\r\n    cod += tab + `${T2G} = stackHijos[(int)${T2F}]; \\n`\r\n    cod += tab + `if (${T2G} == -2) goto ${E2B}; \\n` //Ya no hay hijos\r\n    //Obtener la posicion del stackAtributos\r\n    cod += tab + `${TA0} = ${T2G} + 1;\\n`\r\n    cod += tab + `${T2H} = Indexes[(int)${TA0}]; \\n`\r\n    cod += tab + `if(${T2H} == -2 ) goto ${LA1};\\n`\r\n    //Obtener el apuntador al heapConsulta\r\n    cod += tab + `${LA3}:\\n`\r\n    cod += tab + `${TA1} = stackAtributos[(int)${T2H}];\\n`\r\n    cod += tab + `if(${TA1} == -2) goto ${LA1};\\n`\r\n    cod += tab + `${T2I} = sp + 1; \\n`\r\n    cod += tab + `${T2J} = stack[(int)${T2I}]; \\n`\r\n    cod += tab + `sp = sp + 4; \\n`\r\n    cod += tab + `${T2K} = sp + 1;\\n`\r\n    cod += tab + `stack[(int)${T2K}] = ${TA1};\\n`\r\n    cod += tab + `${T2L} = sp + 2;\\n`\r\n    cod += tab + `stack[(int)${T2L}] = ${T2J};\\n`\r\n    cod += tab + `Comparar(); \\n`                        //llamar a la funcion comparar \r\n    cod += tab + `${T2M} = sp + 0; \\n`                      //Posicion del retorno de comparar\r\n    cod += tab + `${T2N} = stack[(int)${T2M}];\\n`      //Guardamos lo que haya retornado comparar\r\n    cod += tab + `sp = sp - 4; \\n`\r\n    cod += tab + `if(${T2N} == 0) goto ${E2C};\\n`\r\n    \r\n    cod += tab + `stacX[(int)sx] = ${T2H}; \\n`              //se coloca en el stackX la posicion del hijo en cuestion (?) funcionara recursivamente?\r\n    cod += tab + `sx = sx + 1; \\n`                         //Aumentamos el stackX\r\n    cod += tab + `stacX[(int)sx] = -2; \\n`\r\n\r\n    cod += tab + `${E2C}: \\n`\r\n    cod += tab + `${T2H} = ${T2H} + 3;\\n`\r\n    cod += tab + `goto ${LA3};\\n`\r\n\r\n    cod += tab + `${LA1}:\\n`\r\n\r\n    //LLamada Recursiva\r\n    cod += tab + `sp = sp + 4; \\n`\r\n    cod += tab + `stack[(int)sp] = ${T2G}; \\n`\r\n    cod += tab + `${T2O} = sp + 1; \\n`\r\n    cod += tab + `stack[(int)${T2O}]= ${T2J}; \\n` \r\n    cod += tab + `AtributoDescendantRecusriva();\\n`\r\n    cod += tab + `sp = sp - 4;`\r\n\r\n    cod += tab + `${T2P} = sp + 2; \\n`;\r\n    cod += tab + `${T2Q} = stack[(int)${T2P}]; \\n`\r\n    cod += tab + `${T2Q} = ${T2Q} + 1; \\n`\r\n    cod += tab + `stack[(int)${T2P}] = ${T2Q};\\n`\r\n    cod += tab + `goto ${E2D};\\n`\r\n\r\n    cod += tab + `${E2B}:; \\n`\r\n    cod += tab + `${E2A}:; \\n`\r\n    cod += '}\\n\\n' \r\n\r\n    return cod\r\n}\r\n\r\nexport function funcAtributoDescendant(){\r\n    var cod = ''\r\n    var tab = `\\t`\r\n    // 1 HeapConsulta   \r\n    cod += 'void AtributoDescendant(){\\n\\n'\r\n    var T1A = newTemp();var T1B = newTemp();var T1C = newTemp();var T1D = newTemp();var T1E = newTemp();var T1F = newTemp()\r\n    var T1G = newTemp();var T1H = newTemp();var T1I = newTemp();\r\n    var E1A = newLbl();var E1B = newLbl();var E1C = newLbl();var E1D = newLbl();\r\n\r\n    cod += tab + `${T1A} = spc; \\n`\r\n    cod += `${E1B}: \\n`\r\n    cod += tab + `${T1B} = stackConsulta[(int)${T1A}]; \\n`\r\n    cod += tab + `if (${T1B} == -2) goto ${E1A}; \\n`\r\n    cod += tab + `${T1C} = sp + 1 ;\\n`\r\n    cod += tab + `${T1D} = stack[(int)${T1C}]; \\n`\r\n    cod += tab + `sp = sp + 2; \\n`\r\n    cod += tab + `${T1E} = sp + 0; \\n`\r\n    cod += tab + `stack[(int)${T1E}] = ${T1B}; \\n`\r\n    cod += tab + `${T1F} = sp + 1; \\n`\r\n    cod += tab + `stack[(int)${T1F}] = ${T1D}; \\n`\r\n    cod += tab + `AtributoDescendantRecusriva(); \\n`\r\n    cod += tab + `sp = sp - 2; \\n`\r\n    cod += tab + `${T1A} = ${T1A} + 1; \\n`\r\n    cod += tab + `goto ${E1B}; \\n`\r\n    cod += `${E1A}:;\\n`\r\n\r\n     //Reemplazar el StackConsulta por el StackX\r\n     cod += tab + `${T1G} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n     cod += tab + `${E1D}: \\n`\r\n     cod += tab + `${T1H} = stacX[(int)${T1G}]; \\n`\r\n     cod += tab + `if (${T1H} == -2) goto ${E1C}; \\n`      //si el stackX ya se termino vamos a LD\r\n     cod += tab + `${T1I} = spc + ${T1G}; \\n`              //posicion contador del stackConsulta\r\n     cod += tab + `stackConsulta[(int)${T1I}] = ${T1H};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n     cod += tab + `${T1G} = ${T1G} + 1; \\n`                //aumentamos el contador de stackX\r\n     cod += tab + `goto ${E1D}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n \r\n     //se acabo el stackX, no hay mas para guardar\r\n     cod += tab + `${E1C}: \\n`  \r\n     cod += tab + `${T1I} = spc + ${T1G};\\n`  \r\n     cod += tab + `stackConsulta[(int)${T1I}] = -2;\\n`\r\n     cod += tab + `sx = 0; \\n`\r\n     cod += tab + `stacX[(int)sx] = -2; \\n`\r\n\r\n    cod += '}\\n\\n' \r\n\r\n    return cod\r\n}\r\n\r\nexport function funcComparar(){\r\n    var T0 = newTemp(); var T1 = newTemp(); var T2 = newTemp(); var T3 = newTemp(); var T4 = newTemp();\r\n    var T5 = newTemp(); var T6 = newTemp();\r\n    var L0 = newLbl(); var L1 = newLbl(); var L2 = newLbl(); var L3 = newLbl(); var L4 = newLbl();\r\n    var L5 = newLbl(); var L6 = newLbl(); var L7 = newLbl(); var L8 = newLbl();\r\n    \r\n    var str = \r\n    `void Comparar(){\r\n    ${T0} = sp + 0;\r\n    stack[(int)${T0}] = 1;  //seteado en verdadero por defecto\r\n    ${T1} = sp + 1;\r\n    ${T2} = stack[(int)${T1}];\r\n    ${T3} = heap[(int)${T2}];\r\n    ${T4} = sp + 2;\r\n    ${T5} = stack[(int)${T4}];\r\n    ${T6} = heapConsulta[(int)${T5}];\r\n    //en caso sea *\r\n    if (${T6} == 42) goto ${L8};\r\n    //de lo contrario inicia el ciclo\r\n    ${L0}: \r\n    if (${T3} != -1) goto ${L1};\r\n    goto ${L2};\r\n    ${L1}: \r\n    if (${T6} != -1) goto ${L3};\r\n    goto ${L4};\r\n    ${L3}: \r\n    if (${T3} == ${T6}) goto ${L5};\r\n    goto ${L6};\r\n    ${L5}: \r\n    ${T2} = ${T2} + 1;\r\n    ${T3} = heap[(int)${T2}];\r\n    ${T5} = ${T5} + 1;\r\n    ${T6} = heapConsulta[(int)${T5}];\r\n    goto ${L0};\r\n    ${L6}: \r\n    stack[(int)${T0}] = 0;\r\n    ${L2}:${L4}:;\r\n    if (${T3} != ${T6}) goto ${L7};\r\n    goto ${L8};\r\n    ${L7}: \r\n    stack[(int)${T0}] = 0;\r\n    ${L8}:;\r\n}`\r\n\r\n    return str\r\n}\r\n//0 retorno\r\n//1 heap\r\n//2 heap\r\n//3 tipo\r\nexport function funcCompararAscii(){\r\n    var T0 = newTemp(); var T1 = newTemp(); var T2 = newTemp(); var T3 = newTemp(); var T4 = newTemp();\r\n    var T5 = newTemp(); var T6 = newTemp();\r\n    var L0 = newLbl(); var L1 = newLbl(); var L2 = newLbl(); var L3 = newLbl(); var L4 = newLbl();\r\n    var L5 = newLbl(); var L6 = newLbl(); var L7 = newLbl(); var L8 = newLbl(); var L9 = newLbl();\r\n    \r\n    var str = \r\n    `void CompararAscii(){\r\n    ${T0} = sp + 0;\r\n    stack[(int)${T0}] = 0;  //seteado en verdadero por defecto\r\n    ${T1} = sp + 1;\r\n    ${T2} = stack[(int)${T1}];\r\n    ${T3} = heap[(int)${T2}];\r\n    ${T4} = sp + 2;\r\n    ${T5} = stack[(int)${T4}];\r\n    ${T6} = heap[(int)${T5}];\r\n    ${L0}: \r\n    if (${T3} != -1) goto ${L1};\r\n    goto ${L2};\r\n    ${L1}: \r\n    if (${T6} != -1) goto ${L3};\r\n    goto ${L4};\r\n    ${L3}: \r\n    if (${T3} == ${T6}) goto ${L5};\r\n    \r\n    if (${T3} > ${T6})  goto ${L6};  \r\n    goto ${L7};\r\n    ${L5}: \r\n    ${T2} = ${T2} + 1;\r\n    ${T3} = heap[(int)${T2}];\r\n    ${T5} = ${T5} + 1;\r\n    ${T6} = heap[(int)${T5}];\r\n    goto ${L0};\r\n    ${L2}:${L4}:;\r\n    if (${T3} != ${T6}) goto ${L7};\r\n    goto ${L8};\r\n    \r\n    ${L7}: \r\n    if (${T3} == -1) goto ${L9};\r\n    ${L6}: \r\n    stack[(int)${T0}] = -1;\r\n    goto ${L8};\r\n    ${L9}:\r\n    stack[(int)${T0}] = 1;\r\n    goto ${L8};\r\n    ${L8}:;\r\n}`\r\n\r\n    return str\r\n}\r\n\r\nexport function funcDescendantRecursiva()\r\n{\r\n    var cod = ''\r\n    var tab = `\\t`\r\n    // 1 HeapConsulta   \r\n\r\n    cod += `void DescendantRecusriva(){ \\n\\n`\r\n    var T2A = newTemp();var T2B = newTemp();var T2C = newTemp();var T2D = newTemp();var T2E = newTemp();var T2F = newTemp()\r\n    var T2G = newTemp();var T2H = newTemp();var T2I = newTemp();var T2J = newTemp();var T2K = newTemp();var T2L = newTemp();\r\n    var T2M = newTemp();var T2N = newTemp();var T2O = newTemp();var T2P = newTemp();var T2Q = newTemp();\r\n\r\n    var E2A = newLbl();var E2B = newLbl();var E2C = newLbl();var E2D = newLbl();\r\n\r\n    cod += tab + `${T2A} = sp + 0; \\n`\r\n    cod += tab + `${T2B} = stack[(int)${T2A}]; \\n`\r\n    cod += tab + `${T2B} = ${T2B} + 2; \\n`\r\n    cod += tab + `${T2C} = Indexes[(int)${T2B}]; \\n`\r\n    cod += tab + `if (${T2C} == -2) goto ${E2A}; \\n`\r\n    cod += tab + `${T2D} = sp + 2; \\n`\r\n    cod += tab + `stack[(int)${T2D}]=${T2C};\\n`\r\n    // Label que va a loopear\r\n    cod += tab + `${E2D}:`\r\n    //Me muevo al contador de los hijos en el stack\r\n    cod += tab + `${T2E} = sp + 2; \\n`;\r\n    cod += tab + `${T2F} = stack[(int)${T2E}];\\n`\r\n    //Busco el hijo en la posicion que guarde\r\n    cod += tab + `${T2G} = stackHijos[(int)${T2F}]; \\n`\r\n    cod += tab + `if (${T2G} == -2) goto ${E2B}; \\n` //Ya no hay hijos\r\n    //Obtener el nombre en el indexes\r\n    cod += tab + `${T2H} = Indexes[(int)${T2G}]; \\n`\r\n    //Obtener el apuntador al heapConsulta\r\n    cod += tab + `${T2I} = sp + 1; \\n`\r\n    cod += tab + `${T2J} = stack[(int)${T2I}]; \\n`\r\n    cod += tab + `sp = sp + 4; \\n`\r\n    cod += tab + `${T2K} = sp + 1;\\n`\r\n    cod += tab + `stack[(int)${T2K}] = ${T2H};\\n`\r\n    cod += tab + `${T2L} = sp + 2;\\n`\r\n    cod += tab + `stack[(int)${T2L}] = ${T2J};\\n`\r\n    cod += tab + `Comparar(); \\n`                        //llamar a la funcion comparar \r\n    cod += tab + `${T2M} = sp + 0; \\n`                      //Posicion del retorno de comparar\r\n    cod += tab + `${T2N} = stack[(int)${T2M}];\\n`      //Guardamos lo que haya retornado comparar\r\n    cod += tab + `sp = sp - 4; \\n`\r\n    cod += tab + `if(${T2N} == 0) goto ${E2C};\\n`\r\n    \r\n    cod += tab + `stacX[(int)sx] = ${T2G}; \\n`              //se coloca en el stackX la posicion del hijo en cuestion (?) funcionara recursivamente?\r\n    cod += tab + `sx = sx + 1; \\n`                         //Aumentamos el stackX\r\n    cod += tab + `stacX[(int)sx] = -2; \\n`\r\n\r\n    cod += tab + `${E2C}: \\n`\r\n    //LLamada Recursiva\r\n    cod += tab + `sp = sp + 4; \\n`\r\n    cod += tab + `stack[(int)sp] = ${T2G}; \\n`\r\n    cod += tab + `${T2O} = sp + 1; \\n`\r\n    cod += tab + `stack[(int)${T2O}]= ${T2J}; \\n` \r\n    cod += tab + `DescendantRecusriva();\\n`\r\n    cod += tab + `sp = sp - 4;`\r\n\r\n    cod += tab + `${T2P} = sp + 2; \\n`;\r\n    cod += tab + `${T2Q} = stack[(int)${T2P}]; \\n`\r\n    cod += tab + `${T2Q} = ${T2Q} + 1; \\n`\r\n    cod += tab + `stack[(int)${T2P}] = ${T2Q};\\n`\r\n    cod += tab + `goto ${E2D};\\n`\r\n\r\n    cod += tab + `${E2B}:; \\n`\r\n    cod += tab + `${E2A}:; \\n`\r\n    cod += '}\\n\\n' \r\n\r\n    return cod\r\n}\r\n\r\nexport function funcDescendant(){\r\n    var cod = ''\r\n    var tab = `\\t`\r\n    // 1 HeapConsulta   \r\n    cod += 'void Descendant(){\\n\\n'\r\n    var T1A = newTemp();var T1B = newTemp();var T1C = newTemp();var T1D = newTemp();var T1E = newTemp();var T1F = newTemp()\r\n    var T1G = newTemp();var T1H = newTemp();var T1I = newTemp();\r\n    var E1A = newLbl();var E1B = newLbl();var E1C = newLbl();var E1D = newLbl();\r\n\r\n    cod += tab + `${T1A} = spc; \\n`\r\n    cod += `${E1B}: \\n`\r\n    cod += tab + `${T1B} = stackConsulta[(int)${T1A}]; \\n`\r\n    cod += tab + `if (${T1B} == -2) goto ${E1A}; \\n`\r\n    cod += tab + `${T1C} = sp + 1 ;\\n`\r\n    cod += tab + `${T1D} = stack[(int)${T1C}]; \\n`\r\n    cod += tab + `sp = sp + 2; \\n`\r\n    cod += tab + `${T1E} = sp + 0; \\n`\r\n    cod += tab + `stack[(int)${T1E}] = ${T1B}; \\n`\r\n    cod += tab + `${T1F} = sp + 1; \\n`\r\n    cod += tab + `stack[(int)${T1F}] = ${T1D}; \\n`\r\n    cod += tab + `DescendantRecusriva(); \\n`\r\n    cod += tab + `sp = sp - 2; \\n`\r\n    cod += tab + `${T1A} = ${T1A} + 1; \\n`\r\n    cod += tab + `goto ${E1B}; \\n`\r\n    cod += `${E1A}:;\\n`\r\n\r\n     //Reemplazar el StackConsulta por el StackX\r\n     cod += tab + `${T1G} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n     cod += tab + `${E1D}: \\n`\r\n     cod += tab + `${T1H} = stacX[(int)${T1G}]; \\n`\r\n     cod += tab + `if (${T1H} == -2) goto ${E1C}; \\n`      //si el stackX ya se termino vamos a LD\r\n     cod += tab + `${T1I} = spc + ${T1G}; \\n`              //posicion contador del stackConsulta\r\n     cod += tab + `stackConsulta[(int)${T1I}] = ${T1H};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n     cod += tab + `${T1G} = ${T1G} + 1; \\n`                //aumentamos el contador de stackX\r\n     cod += tab + `goto ${E1D}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n \r\n     //se acabo el stackX, no hay mas para guardar\r\n     cod += tab + `${E1C}: \\n`  \r\n     cod += tab + `${T1I} = spc + ${T1G};\\n`  \r\n     cod += tab + `stackConsulta[(int)${T1I}] = -2;\\n`\r\n     cod += tab + `sx = 0; \\n`\r\n     cod += tab + `stacX[(int)sx] = -2; \\n`\r\n\r\n    cod += '}\\n\\n' \r\n\r\n    return cod\r\n}\r\n\r\nexport function funcDescendantSelf(){\r\n    var cod = ''\r\n    var tab = `\\t`\r\n    // 1 HeapConsulta   \r\n    cod += 'void DescendantSelf(){\\n\\n'\r\n    var T1A = newTemp();var T1B = newTemp();\r\n    \r\n    var T3A = newTemp();var T3B = newTemp();var T3C = newTemp();var T3D = newTemp();var T3E = newTemp();var T3F = newTemp();\r\n    var T3G = newTemp();\r\n\r\n    var T1C = newTemp();var T1D = newTemp();var T1E = newTemp();var T1F = newTemp()\r\n    var T1G = newTemp();var T1H = newTemp();var T1I = newTemp();\r\n    \r\n    var E3A = newLbl();\r\n    var E1A = newLbl();var E1B = newLbl();var E1C = newLbl();var E1D = newLbl();\r\n\r\n    cod += tab + `${T1A} = spc; \\n`\r\n    cod += `${E1B}: \\n`\r\n    cod += tab + `${T1B} = stackConsulta[(int)${T1A}]; \\n`\r\n    cod += tab + `if (${T1B} == -2) goto ${E1A}; \\n`\r\n\r\n    //Obtener el apuntador al heapConsulta\r\n    cod += tab + `${T3A} = Indexes[(int)${T1B}];\\n`\r\n    cod += tab + `${T3B} = sp + 1; \\n`\r\n    cod += tab + `${T3C} = stack[(int)${T3B}]; \\n`\r\n    cod += tab + `sp = sp + 4; \\n`\r\n    cod += tab + `${T3D} = sp + 1;\\n`\r\n    cod += tab + `stack[(int)${T3D}] = ${T3A};\\n`\r\n    cod += tab + `${T3E} = sp + 2;\\n`\r\n    cod += tab + `stack[(int)${T3E}] = ${T3C};\\n`\r\n    cod += tab + `Comparar(); \\n`                        //llamar a la funcion comparar \r\n    cod += tab + `${T3F} = sp + 0; \\n`                      //Posicion del retorno de comparar\r\n    cod += tab + `${T3G} = stack[(int)${T3F}];\\n`      //Guardamos lo que haya retornado comparar\r\n    cod += tab + `sp = sp - 4; \\n`\r\n    \r\n    cod += tab + `if(${T3G} == 0) goto ${E3A};\\n`\r\n    cod += tab + `stacX[(int)sx] = ${T1B}; \\n`              //se coloca en el stackX la posicion del hijo en cuestion (?) funcionara recursivamente?\r\n    cod += tab + `sx = sx + 1; \\n`                         //Aumentamos el stackX\r\n    cod += tab + `stacX[(int)sx] = -2; \\n`\r\n\r\n    cod += tab + `${E3A}:`\r\n\r\n    cod += tab + `${T1C} = sp + 1 ;\\n`\r\n    cod += tab + `${T1D} = stack[(int)${T1C}]; \\n`\r\n    cod += tab + `sp = sp + 2; \\n`\r\n    cod += tab + `${T1E} = sp + 0; \\n`\r\n    cod += tab + `stack[(int)${T1E}] = ${T1B}; \\n`\r\n    cod += tab + `${T1F} = sp + 1; \\n`\r\n    cod += tab + `stack[(int)${T1F}] = ${T1D}; \\n`\r\n    cod += tab + `DescendantRecusriva(); \\n`\r\n    cod += tab + `sp = sp - 2; \\n`\r\n    cod += tab + `${T1A} = ${T1A} + 1; \\n`\r\n    cod += tab + `goto ${E1B}; \\n`\r\n    cod += `${E1A}:;\\n`\r\n\r\n     //Reemplazar el StackConsulta por el StackX\r\n     cod += tab + `${T1G} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n     cod += tab + `${E1D}: \\n`\r\n     cod += tab + `${T1H} = stacX[(int)${T1G}]; \\n`\r\n     cod += tab + `if (${T1H} == -2) goto ${E1C}; \\n`      //si el stackX ya se termino vamos a LD\r\n     cod += tab + `${T1I} = spc + ${T1G}; \\n`              //posicion contador del stackConsulta\r\n     cod += tab + `stackConsulta[(int)${T1I}] = ${T1H};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n     cod += tab + `${T1G} = ${T1G} + 1; \\n`                //aumentamos el contador de stackX\r\n     cod += tab + `goto ${E1D}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n \r\n     //se acabo el stackX, no hay mas para guardar\r\n     cod += tab + `${E1C}: \\n`    \r\n     cod += tab + `${T1I} = spc + ${T1G};\\n`\r\n     cod += tab + `stackConsulta[(int)${T1G}] = -2;\\n`\r\n     cod += tab + `sx = 0; \\n`\r\n     cod += tab + `stacX[(int)sx] = -2; \\n`\r\n\r\n    cod += '}\\n\\n' \r\n\r\n    return cod\r\n}\r\n\r\nexport function funcAncestorRecursiva()\r\n{\r\n    var cod = ''\r\n    var tab = `\\t`\r\n    // 1 HeapConsulta   \r\n\r\n    cod += `void AncestorRecusriva(){ \\n\\n`\r\n    var TC1 = newTemp(); var TC0 = newTemp(); var T1 = newTemp(); var T2 = newTemp(); var T3 = newTemp();\r\n    var T5 = newTemp(); var T6 = newTemp(); var T7 = newTemp(); var T8 = newTemp(); var T9 = newTemp(); var T10 = newTemp(); \r\n    var T11 = newTemp(); \r\n    \r\n    var Lb = newLbl(); var Lc = newLbl(); var Ld = newLbl(); var Le = newLbl(); var Lf = newLbl();\r\n\r\n        //recibimos los parametros del stack\r\n    cod += tab + `${TC1} = sp + 1; \\n`\r\n    cod += tab + `${TC0} =stack[(int)${TC1}]; \\n`      //donde inicia el nombre del heap consulta\r\n    cod += tab + `${T1} = stack[(int)sp]; \\n`\r\n    cod += tab + `${T1} = ${T1} + 4; \\n`\r\n    //nos movemos a indexes, esta es la posicion del nodo padre en el indexes\r\n    cod += tab + `${T2} = Indexes[(int)${T1}]; \\n`\r\n    cod += tab + `if(${T2} == -2) goto ${Lb};\\n`\r\n    //tomamos el inicio del nodo padre en indexes\r\n    cod += tab + `${T3} = Indexes[(int)${T2}]; \\n`\r\n    //comparamos si el nombre del padre es igual al nombre que estamos comparando\r\n    //cambiamos de entorno\r\n    cod += tab +`/* Cambiamos de entorno */ \\n`\r\n    cod += tab + `sp = sp + 2; \\n`\r\n    cod += tab + `${T5} = sp + 1;\\n`                    //Entorno nuevo en la posicion 1 (Posicion del Heap)\r\n    cod += tab + `stack[(int)${T5}] = ${T3};\\n`         //Asignar al parametro 1 la posicion del heap a comparar\r\n    cod += tab + `${T6} = sp + 2; \\n`                   //Entorno nuevo en la posicion 2 (Posicion del heapConsulta)\r\n    cod += tab + `stack[(int)${T6}] = ${TC0}; \\n`       //Asignar al parametro 2 la posicion del heap consulta a comparar\r\n    cod += tab + `Comparar();\\n`                        //llamar a la funcion comparar                 \r\n    cod += tab + `${T7} = sp + 0; \\n`                   //Posicion del retorno de comparar\r\n    cod += tab + `${T8} = stack[(int)${T7}];\\n\\n`       //Guardamos lo que haya retornado comparar\r\n\r\n    //regresamos del entorno\r\n    cod += tab +`/* regresamos del entorno */ \\n`\r\n    cod += tab + `sp = sp - 2; \\n`\r\n    cod += tab + `if (${T8} == 0) goto ${Lc}; \\n`       //si no hubo retorno vamos a Lc\r\n\r\n    /*si la comparacion fue verdadera*/\r\n    //si es verdadero entonces tengo que buscar en el stacX que no exista ya guardado ese padre\r\n\r\n    cod += tab + `${T9} = 0; \\n` //hacemos un contador para stackX\r\n    cod += tab + `${Ld}: \\n`\r\n    cod += tab + `${T10} = stacX[(int)${T9}]; \\n`\r\n    cod += tab + `if(${T10} == -2) goto ${Le}; \\n`      //si no encontro ninguna coincidencia    \r\n\r\n    //si no fue -2 entonces hay un nodo a comparar\r\n    cod += tab + `if (${T2} == ${T10}) goto ${Lf}; \\n`    //si es igual pasamos de nodo y salimos    \r\n    //si es diferente pasamos al siguiente nodo\r\n    cod += tab + `${T9} = ${T9} + 1; \\n`\r\n    cod += tab + `goto ${Ld}; \\n`\r\n    \r\n    //si se termino stacX no hubieron coincidencias\r\n    cod += tab + `${Le}: \\n`\r\n    /* El nodo no ha sido guardado en stackX, lo guardamos */\r\n    cod += tab + `stacX[(int)sx] = ${T2}; \\n`\r\n    cod += tab + `sx = sx + 1; \\n`\r\n    cod += tab + `stacX[(int)sx] = -2; \\n`    \r\n\r\n    //si ya terminamos pasamos al siguiente nodo de stackConsulta\r\n    cod += tab + `${Lc}: \\n`\r\n    //el nodo ya existe en el stackX, no hacemos nada\r\n    cod += tab + `${Lf}: \\n`\r\n\r\n    cod += tab + `sp = sp + 2; \\n`\r\n    cod += tab + `stack[(int)sp] = ${T2};\\n`\r\n    cod += tab + `${T11}=sp + 1;\\n`\r\n    cod += tab + `stack[(int)${T11}] = ${TC0};\\n`\r\n    cod += tab + `AncestorRecusriva();\\n`\r\n    cod += tab + `sp = sp - 2; \\n`\r\n    cod += tab + `${Lb}:; \\n`\r\n    //the end\r\n    cod += '}\\n\\n' \r\n\r\n    return cod\r\n}\r\n\r\nexport function funcAncestor()\r\n{\r\n    var cod = ''\r\n    var tab = `\\t`\r\n    // 1 HeapConsulta   \r\n    cod += 'void Ancestor(){\\n\\n'\r\n    var T1A = newTemp();var T1B = newTemp();var T1C = newTemp();var T1D = newTemp();var T1E = newTemp();var T1F = newTemp()\r\n    var T1G = newTemp();var T1H = newTemp();var T1I = newTemp();\r\n    var E1A = newLbl();var E1B = newLbl();var E1C = newLbl();var E1D = newLbl();\r\n\r\n    cod += tab + `${T1A} = spc; \\n`\r\n    cod += `${E1B}: \\n`\r\n    cod += tab + `${T1B} = stackConsulta[(int)${T1A}]; \\n`\r\n    cod += tab + `if (${T1B} == -2) goto ${E1A}; \\n`\r\n    cod += tab + `${T1C} = sp + 1 ;\\n`\r\n    cod += tab + `${T1D} = stack[(int)${T1C}]; \\n`\r\n    cod += tab + `sp = sp + 2; \\n`\r\n    cod += tab + `${T1E} = sp + 0; \\n`\r\n    cod += tab + `stack[(int)${T1E}] = ${T1B}; \\n`\r\n    cod += tab + `${T1F} = sp + 1; \\n`\r\n    cod += tab + `stack[(int)${T1F}] = ${T1D}; \\n`\r\n    cod += tab + `AncestorRecusriva(); \\n`\r\n    cod += tab + `sp = sp - 2; \\n`\r\n    cod += tab + `${T1A} = ${T1A} + 1; \\n`\r\n    cod += tab + `goto ${E1B}; \\n`\r\n    cod += `${E1A}:;\\n`\r\n\r\n     //Reemplazar el StackConsulta por el StackX\r\n     cod += tab + `${T1G} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n     cod += tab + `${E1D}: \\n`\r\n     cod += tab + `${T1H} = stacX[(int)${T1G}]; \\n`\r\n     cod += tab + `if (${T1H} == -2) goto ${E1C}; \\n`      //si el stackX ya se termino vamos a LD\r\n     cod += tab + `${T1I} = spc + ${T1G}; \\n`              //posicion contador del stackConsulta\r\n     cod += tab + `stackConsulta[(int)${T1I}] = ${T1H};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n     cod += tab + `${T1G} = ${T1G} + 1; \\n`                //aumentamos el contador de stackX\r\n     cod += tab + `goto ${E1D}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n \r\n     //se acabo el stackX, no hay mas para guardar\r\n     cod += tab + `${E1C}: \\n`    \r\n     cod += tab + `${T1I} = spc + ${T1G};\\n`\r\n     cod += tab + `stackConsulta[(int)${T1I}] = -2;\\n`\r\n     cod += tab + `sx = 0; \\n`\r\n     cod += tab + `stacX[(int)sx] = -2; \\n`\r\n\r\n    cod += '}\\n\\n' \r\n\r\n    return cod\r\n}\r\n\r\nexport function funcAncestorSelf()\r\n{\r\n    var cod = ''\r\n    var tab = `\\t`\r\n    // 1 HeapConsulta   \r\n    cod += 'void AncestorSelf(){\\n\\n'\r\n    var T1A = newTemp();var T1B = newTemp();\r\n    \r\n    var T3A = newTemp();var T3B = newTemp();var T3C = newTemp();var T3D = newTemp();var T3E = newTemp();var T3F = newTemp();\r\n    var T3G = newTemp();\r\n\r\n    var T1C = newTemp();var T1D = newTemp();var T1E = newTemp();var T1F = newTemp()\r\n    var T1G = newTemp();var T1H = newTemp();var T1I = newTemp();\r\n    \r\n    var E3A = newLbl();\r\n    var E1A = newLbl();var E1B = newLbl();var E1C = newLbl();var E1D = newLbl();\r\n\r\n    cod += tab + `${T1A} = spc; \\n`\r\n    cod += `${E1B}: \\n`\r\n    cod += tab + `${T1B} = stackConsulta[(int)${T1A}]; \\n`\r\n    cod += tab + `if (${T1B} == -2) goto ${E1A}; \\n`\r\n\r\n    //Obtener el apuntador al heapConsulta\r\n    cod += tab + `${T3A} = Indexes[(int)${T1B}];\\n`\r\n    cod += tab + `${T3B} = sp + 1; \\n`\r\n    cod += tab + `${T3C} = stack[(int)${T3B}]; \\n`\r\n    cod += tab + `sp = sp + 4; \\n`\r\n    cod += tab + `${T3D} = sp + 1;\\n`\r\n    cod += tab + `stack[(int)${T3D}] = ${T3A};\\n`\r\n    cod += tab + `${T3E} = sp + 2;\\n`\r\n    cod += tab + `stack[(int)${T3E}] = ${T3C};\\n`\r\n    cod += tab + `Comparar(); \\n`                        //llamar a la funcion comparar \r\n    cod += tab + `${T3F} = sp + 0; \\n`                      //Posicion del retorno de comparar\r\n    cod += tab + `${T3G} = stack[(int)${T3F}];\\n`      //Guardamos lo que haya retornado comparar\r\n    cod += tab + `sp = sp - 4; \\n`\r\n    \r\n    cod += tab + `if(${T3G} == 0) goto ${E3A};\\n`\r\n    cod += tab + `stacX[(int)sx] = ${T1B}; \\n`              //se coloca en el stackX la posicion del hijo en cuestion (?) funcionara recursivamente?\r\n    cod += tab + `sx = sx + 1; \\n`                         //Aumentamos el stackX\r\n    cod += tab + `stacX[(int)sx] = -2; \\n`\r\n\r\n    cod += tab + `${E3A}:`\r\n\r\n    cod += tab + `${T1C} = sp + 1 ;\\n`\r\n    cod += tab + `${T1D} = stack[(int)${T1C}]; \\n`\r\n    cod += tab + `sp = sp + 2; \\n`\r\n    cod += tab + `${T1E} = sp + 0; \\n`\r\n    cod += tab + `stack[(int)${T1E}] = ${T1B}; \\n`\r\n    cod += tab + `${T1F} = sp + 1; \\n`\r\n    cod += tab + `stack[(int)${T1F}] = ${T1D}; \\n`\r\n    cod += tab + `AncestorRecusriva(); \\n`\r\n    cod += tab + `sp = sp - 2; \\n`\r\n    cod += tab + `${T1A} = ${T1A} + 1; \\n`\r\n    cod += tab + `goto ${E1B}; \\n`\r\n    cod += `${E1A}:;\\n`\r\n\r\n     //Reemplazar el StackConsulta por el StackX\r\n     cod += tab + `${T1G} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n     cod += tab + `${E1D}: \\n`\r\n     cod += tab + `${T1H} = stacX[(int)${T1G}]; \\n`\r\n     cod += tab + `if (${T1H} == -2) goto ${E1C}; \\n`      //si el stackX ya se termino vamos a LD\r\n     cod += tab + `${T1I} = spc + ${T1G}; \\n`              //posicion contador del stackConsulta\r\n     cod += tab + `stackConsulta[(int)${T1I}] = ${T1H};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n     cod += tab + `${T1G} = ${T1G} + 1; \\n`                //aumentamos el contador de stackX\r\n     cod += tab + `goto ${E1D}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n \r\n     //se acabo el stackX, no hay mas para guardar\r\n     cod += tab + `${E1C}: \\n`    \r\n     cod += tab + `${T1I} = spc + ${T1G};\\n`\r\n     cod += tab + `stackConsulta[(int)${T1I}] = -2;\\n`\r\n     cod += tab + `sx = 0; \\n`\r\n     cod += tab + `stacX[(int)sx] = -2; \\n`\r\n\r\n    cod += '}\\n\\n' \r\n\r\n    return cod\r\n}\r\n\r\nexport function ImprimirConsultaR(){\r\n    var T0 = newTemp(); var T1 = newTemp(); var T2 = newTemp();\r\n    var La = newLbl(); var Lb = newLbl();\r\n    var cod = ''\r\n    var tab = '\\t'\r\n    cod += `void ImprimirConsultaR(){ \\n`\r\n    cod += tab + `${T0} = spc; \\n`                            //iniciamos un contador\r\n    cod += tab + `${La}: \\n`                                //etiqueta recursiva\r\n    cod += tab + `${T1} = stackConsulta[(int)${T0}]; \\n`    //capturamos lo que esta en stackConsulta\r\n    cod += tab + `if (${T1} == -2) goto ${Lb}; \\n`          //si stackConsulta no es -2\r\n    cod += tab + `\\n/* Cambio de entorno */\\n`              //cambiamos de entorno\r\n    cod += tab + `sp = sp + 1; \\n`                          //enviamos un parametro\r\n    cod += tab + `${T2} = sp + 0; \\n`                       //posicion del parametro en el entorno\r\n    cod += tab + `stack[(int)${T2}] = ${T1}; \\n`            //guardamos el parametro en el stack\r\n    cod += tab + `ImprimirConsulta(); \\n`                   //call ImprimirConsulta\r\n    cod += tab + `printf(\"%c\", 10); \\n`\r\n    cod += tab + `sp = sp - 1; \\n`                          //regresamos del entorno\r\n    cod += tab + `${T0} = ${T0} + 1; \\n`                    //aumentamos el contador para el stack consulta\r\n    cod += tab + `goto ${La}; \\n`                           //ciclo\r\n    cod += tab + `${Lb}:; \\n`                               //salimos del metodo\r\n    cod += `\\n}\\n`\r\n    return cod\r\n}\r\n\r\nexport function imprimirConsulta(){\r\n    var TC1 = newTemp();\r\n    var T0 = newTemp(); var T1 = newTemp(); var T2 = newTemp(); var T3 = newTemp(); var T4 = newTemp(); var T5 = newTemp();\r\n    var T6 = newTemp(); var T7 = newTemp(); var T8 = newTemp(); var T9 = newTemp(); var T10 = newTemp(); var T11 = newTemp();\r\n    var T12 = newTemp(); var T13 = newTemp(); var T14 = newTemp(); var T15 = newTemp(); var T16 = newTemp();\r\n    var T17 = newTemp(); var T18 = newTemp(); var T19 = newTemp(); var T20 = newTemp(); var T21 = newTemp();\r\n    var T22 = newTemp(); var T23 = newTemp();\r\n\r\n    var LC = newLbl(); var LD = newLbl(); var LE = newLbl(); var LF = newLbl(); var LG = newLbl(); var LH = newLbl();\r\n    var LI = newLbl(); var LJ = newLbl(); var LK = newLbl(); var LL = newLbl(); var LN = newLbl(); var LO = newLbl();\r\n    var LP = newTemp(); var LQ = newLbl(); var LR = newLbl(); var LM =  newLbl(); var LS = newLbl();\r\n    \r\n    var cod = ''\r\n    var tab = '\\t'\r\n\r\n    cod += `void ImprimirConsulta(){ \\n`\r\n\r\n    cod += tab + `\\n/* Recibimiento de parametros */\\n`\r\n    cod += tab + `${T0} = sp + 0; \\n`\r\n    cod += tab + `${T1} = stack[(int)${T0}]; \\n`\r\n    cod += tab + `${T2} = Indexes[(int)${T1}]; \\n`           //recojemos el indice de la respuesta (nombre del objeto)\r\n    \r\n    cod += tab + `\\n/* Nombre del objeto */\\n`\r\n    //tratamos con el nombre del objeto\r\n    cod += tab + `printf(\"%c\", '<'); \\n`                    //imprimimos el '<'\r\n    cod += tab + `${T4} = ${T2}; \\n`                        //iniciamos un contador para el heap, en donde se quedo la primera posicion\r\n    \r\n    cod += tab + `${LD}: \\n`\r\n    cod += tab + `${T3} = heap[(int)${T4}]; \\n`             //la primera posicion del nombre     \r\n    cod += tab + `if (${T3} == -1) goto ${LC}; \\n`          //mientras no lea -1\r\n    cod += tab + `printf(\"%c\", (int)${T3}); \\n`                  //como no es -1 entonces lo imprimimos\r\n    cod += tab + `${T4} = ${T4} + 1; \\n`                    //aumentamos el contador para recorrer el heap\r\n    cod += tab + `goto ${LD}; \\n`\r\n    cod += tab + `${LC}: \\n`    //ya termino el string\r\n\r\n    cod += tab + `\\n/* nombre atributo */\\n`\r\n    //tratamos con los atributos\r\n    cod += tab + `${T1} = ${T1} + 1; \\n`                    //aumentamos el contador para el indexes\r\n    cod += tab + `${T5} = Indexes[(int)${T1}]; \\n`          //estamos en la posicion de los atributos\r\n    \r\n    cod += tab + `if (${T5} == -2) goto ${LS}; \\n`\r\n\r\n    cod += tab + `${T6} = ${T5}; \\n`                        //iniciamos el contador para recorrer el stackAtributos\r\n    cod += tab + `${T7} = stackAtributos[(int)${T6}]; \\n`   //nos ponemos en la posicion del stackAtributos\r\n    cod += tab + `${LF}: \\n`\r\n    cod += tab + `printf(\"%c\", (int)32); \\n`\r\n    cod += tab + `if (${T7} == -2) goto ${LE}; \\n`           //mientras que los atributos no sean -2  \r\n\r\n    cod += tab + `${T8} = heap[(int)${T7}]; \\n`                 //mando a buscar en el heap el atributo\r\n    cod += tab + `${T9} = ${T7}; \\n`                            //hacemos un contador para el heap\r\n    cod += tab + `${LI}: \\n`\r\n    cod += tab + `if (${T8} == -1) goto ${LG}; \\n`             //recorremos el heap \r\n    cod += tab + `printf(\"%c\", (int)${T8}); \\n`\r\n    cod += tab + `${T9} = ${T9} + 1; \\n`\r\n    cod += tab + `${T8} = heap[(int)${T9}]; \\n`\r\n    cod += tab + `goto ${LI}; \\n`                           //termina nombre atributo\r\n\r\n    cod += tab + `${LG}: \\n`\r\n    cod += tab + `printf(\"%c\",(int)61); \\n`\r\n    cod += tab + `printf(\"%c\",(int)34); \\n`\r\n\r\n    cod += tab + `\\n/* valor del atributo */\\n`\r\n    //seguimos con el valor atributo\r\n    cod += tab + `${T6} = ${T6} + 1; \\n`                //aumentamos el contador para stackAtributos\r\n    cod += tab + `${T10} = stackAtributos[(int)${T6}]; \\n` //mandamos a buscar en el heap el valor \r\n\r\n    cod += tab + `${T11} = ${T10}; \\n`  //nuevo contador \r\n    cod += tab + `${LH}: \\n`\r\n    cod += tab + `${T12} = heap[(int)${T11}]; \\n`       //tenemos el primer caracter del valor\r\n    cod += tab + `if (${T12} == -1) goto ${LJ}; \\n`\r\n    cod += tab + `printf(\"%c\", (int)${T12}); \\n`\r\n    cod += tab + `${T11} = ${T11} + 1; \\n`\r\n    cod += tab + `goto ${LH};\\n`\r\n    \r\n    cod += tab + `${LJ}: \\n`    //se termino el string\r\n    cod += tab + `printf(\"%c\", (int)34); \\n`\r\n\r\n    cod += tab + `${T6} = ${T6} + 2; \\n`                    //sumamos 2 al stack atributos para pasarnos al siguiente atributo\r\n    cod += tab + `${T7} = stackAtributos[(int)${T6}]; \\n`\r\n    cod += tab + `goto ${LF}; \\n`\r\n    cod += tab + `${LE}: \\n`\r\n    cod += tab + `${LS}: \\n`   \r\n    cod += tab + `printf(\"%c\", (int)62); \\n`                 //si ya no hay mas atributos cerramos la etiqueta\r\n\r\n    cod += tab + `\\n/* Hijos del objeto */\\n`\r\n    //tratamos con los hijos\r\n    cod += tab + `${T1} = ${T1} + 1; \\n`                    //nos movemos una posicion en el indexes\r\n    cod += tab + `${T13} = Indexes[(int)${T1}]; \\n`         //mandamos a buscar la posicion en el indexes\r\n    cod += tab + `if (${T13} == -2) goto ${LK}; \\n`         //si la posicion en el indexes no es -2\r\n    cod += tab + `printf(\"%c\", (int)10); \\n`\r\n    cod += tab + `${T14} = ${T13}; \\n`                          //iniciamos un contador para los hijos -> T14\r\n    \r\n    cod += tab + `${LM}: \\n`\r\n    cod += tab + `${T15} = stackHijos[(int)${T14}]; \\n`    //si tuvo hijos, los buscamos en el stackHijos    \r\n\r\n    //hacemos un ciclo para que recorra los hijos\r\n    \r\n    cod += tab + `if (${T15} == -2) goto ${LL}; \\n`       //mientras que tenga hijos\r\n\r\n    /* enviamos los parametros a la llamada recursiva */\r\n    cod += tab + `/* nos cambiamos de entorno */ \\n`\r\n    cod += tab + `sp = sp + 1; \\n`\r\n    cod += tab + `stack[(int)sp] = ${T15}; \\n` //colocamos los parametros (objeto en T15)\r\n    cod += tab + `ImprimirConsulta(); \\n`\r\n    cod += tab + `sp = sp - 1; \\n`\r\n    cod += tab + `printf(\"%c\", (int)10); \\n`\r\n\r\n    /* regreso de la llamada recursiva */\r\n    cod += tab + `${T14} = ${T14} + 1; \\n` \r\n    cod += tab + `goto ${LM}; \\n`\r\n\r\n    cod += tab + `${LL}: \\n`   //ya no tiene hijos\r\n    cod += tab + `${LK}: \\n` //si no tiene hijos\r\n\r\n    \r\n    cod += tab + `\\n/* texto del objeto */\\n`\r\n    //tratamos con el texto\r\n    cod += tab + `${T22} = sp + 0; \\n`\r\n    cod += tab + `${T23} = stack[(int)${T22}]; \\n`\r\n    cod += tab + `${T23} = ${T23} + 3; \\n`\r\n    \r\n    cod += tab + `${T16} = Indexes[(int)${T23}]; \\n`    //obtenemos el valor en indexes\r\n    cod += tab + `if (${T16} == -2) goto ${LP}; \\n`        //verificamos si tiene texto\r\n\r\n    cod += tab + `${TC1} = ${T16}; \\n`\r\n    cod += tab + `${LO}: \\n`\r\n    cod += tab + `${T17} = heap[(int)${TC1}];\\n`        //vamos al heap a buscar la referencia    \r\n    cod += tab + `if (${T17} == -1) goto ${LN}; \\n`\r\n    cod += tab + `printf(\"%c\", (int)${T17}); \\n`\r\n    cod += tab + `${TC1} = ${TC1} + 1; \\n`\r\n    cod += tab + `goto ${LO}; \\n`\r\n\r\n    cod += tab + `${LN}: \\n`     //se termino el texto\r\n    cod += tab + `${LP}: \\n`     //el objeto no tenia texto\r\n\r\n    //al final cerramos la etiqueta del objeto\r\n\r\n    cod += tab + `\\n/* cerrando etiqueta */\\n`\r\n    cod += tab + `printf(\"%c\", (int)60); \\n`            // '<'\r\n    cod += tab + `printf(\"%c\", (int)47); \\n`            // '/'\r\n    \r\n    cod += tab + `${T18} = sp + 0; \\n`\r\n    cod += tab + `${T19} = stack[(int)${T18}]; \\n`\r\n    cod += tab + `${T20} = Indexes[(int)${T19}]; \\n`           //recojemos el indice de la respuesta (nombre del objeto)\r\n\r\n    cod += tab + `${LR}: \\n`\r\n    cod += tab + `${T21} = heap[(int)${T20}]; \\n`       //buscamos en el heap el nombre de nuevo\r\n    cod += tab + `if (${T21} == -1) goto ${LQ}; \\n`     //mientras el string no sea -1\r\n    cod += tab + `printf(\"%c\", (int)${T21}); \\n`\r\n    cod += tab + `${T20} = ${T20} + 1; \\n`\r\n    cod += tab + `goto ${LR}; \\n`\r\n    \r\n    //the end!\r\n    cod += tab + `${LQ}:; \\n`\r\n    cod += tab + `printf(\"%c\", (int)62); \\n`             // '>'\r\n\r\n    cod += '\\n} \\n'\r\n\r\n    return cod\r\n}\r\n\r\nexport function ImprimirAtributoR(){\r\n\r\n    var T0 = newTemp(); var T1 = newTemp(); var T2 = newTemp();\r\n    var La = newLbl(); var Lb = newLbl();\r\n    var cod = ''\r\n    var tab = '\\t'\r\n    cod += `void ImprimirAtributoR(){ \\n`\r\n    cod += tab + `${T0} = spc; \\n`                            //iniciamos un contador\r\n    cod += tab + `${La}: \\n`                                //etiqueta recursiva\r\n    cod += tab + `${T1} = stackConsulta[(int)${T0}]; \\n`    //capturamos lo que esta en stackConsulta\r\n    cod += tab + `if (${T1} == -2) goto ${Lb}; \\n`          //si stackConsulta no es -2\r\n    cod += tab + `\\n/* Cambio de entorno */\\n`              //cambiamos de entorno\r\n    cod += tab + `sp = sp + 1; \\n`                          //enviamos un parametro\r\n    cod += tab + `${T2} = sp + 0; \\n`                       //posicion del parametro en el entorno\r\n    cod += tab + `stack[(int)${T2}] = ${T1}; \\n`            //guardamos el parametro en el stack\r\n    cod += tab + `ImprimirAtributo(); \\n`                   //call ImprimirConsulta\r\n    cod += tab + `printf(\"%c\", 10); \\n`\r\n    cod += tab + `sp = sp - 1; \\n`                          //regresamos del entorno\r\n    cod += tab + `${T0} = ${T0} + 1; \\n`                    //aumentamos el contador para el stack consulta\r\n    cod += tab + `goto ${La}; \\n`                           //ciclo\r\n    cod += tab + `${Lb}:; \\n`                               //salimos del metodo\r\n    cod += `\\n}\\n`\r\n    return cod\r\n}\r\n\r\nexport function ImprimirAtributo(){\r\n    var T0 = newTemp(); var T1 = newTemp(); var T2 = newTemp();  var T3 = newTemp(); var T4 = newTemp(); var T5 = newTemp();\r\n    var La = newLbl(); var Lb = newLbl();\r\n    \r\n    var cod = ''\r\n    var tab = '\\t'\r\n\r\n    cod += `void ImprimirAtributo(){ \\n`\r\n\r\n    cod += tab + `\\n/* Recibimiento de parametros */\\n`\r\n    cod += tab + `${T0} = sp + 0; \\n`\r\n    cod += tab + `${T1} = stack[(int)${T0}]; \\n`\r\n    cod += tab + `${T2} = stackAtributos[(int)${T1}]; \\n`       //recojemos el indice de la respuesta (nombre del atributo)\r\n\r\n    cod += tab + `${T1} = ${T1} + 1; \\n` //nos movemos uno para encontrar el valor del atributo\r\n    cod += tab + `${T3} = stackAtributos[(int)${T1}]; \\n` //obtenemos el valor del atributo\r\n\r\n    //imprimimos lo que haya en el heap en esa posicion\r\n    cod += tab + `${La}: \\n`\r\n    cod += tab + `${T4} = heap[(int)${T3}]; \\n`//mandamos a llamar a la referencia al heap general de ese valor\r\n    cod += tab + `if (${T4} == -1) goto ${Lb}; \\n`\r\n    cod += tab + `printf(\"%c\", (int)${T4}); \\n`\r\n    cod += tab + `${T3} = ${T3} + 1; \\n`\r\n    cod += tab + `goto ${La}; \\n`\r\n    cod += tab + `${Lb}:;`\r\n    //the end\r\n    cod += `\\n}\\n`\r\n    return cod\r\n}\r\n\r\nexport function leerHeap(){\r\n    var Temp1 = newTemp();\r\n    var Labl1 = newLbl();\r\n    var Labl2 = newLbl();\r\n\r\n    var str = 'void leerHeap(){ \\n'\r\n    str += `    ${Temp1} = 0; \\n`\r\n    //inicia el ciclo para leer el heap\r\n    str += `    ${Labl1}: \\n`\r\n    str += `    if (${Temp1} == 50) goto ${Labl2}; \\n`\r\n    str += `    printf(\"%f -> %f \\\\n\", ${Temp1}, heap[(int)${Temp1}]); \\n`\r\n    str += `    ${Temp1} = ${Temp1} + 1; \\n`\r\n    str += `    goto ${Labl1}; \\n`\r\n    str += `    ${Labl2}:; \\n`\r\n    str += `}\\n `\r\n    return str;\r\n}\r\n\r\nexport function leerStack(){\r\n    var Temp1 = newTemp();\r\n    var Labl1 = newLbl();\r\n    var Labl2 = newLbl();\r\n\r\n    var str = 'void leerStack(){ \\n'\r\n    str += `    ${Temp1} = 0; \\n`\r\n    //inicia el ciclo para leer el heap\r\n    str += `    ${Labl1}: \\n`\r\n    str += `    if (${Temp1} == 50) goto ${Labl2}; \\n`\r\n    str += `    printf(\"%f -> %f \\\\n\", ${Temp1},stack[(int)${Temp1}]); \\n`\r\n    str += `    ${Temp1} = ${Temp1} + 1; \\n`\r\n    str += `    goto ${Labl1}; \\n`\r\n    str += `    ${Labl2}:; \\n`\r\n    str += `}\\n `\r\n    return str\r\n}\r\n\r\nexport function leerHeapConsulta(){\r\n    var Temp1 = newTemp();\r\n    var Labl1 = newLbl();\r\n    var Labl2 = newLbl();\r\n\r\n    var str = 'void leerHeapConsulta(){ \\n'\r\n    str += `    ${Temp1} = 0; \\n`\r\n    //inicia el ciclo para leer el heap\r\n    str += `    ${Labl1}: \\n`\r\n    str += `    if (${Temp1} == 50) goto ${Labl2}; \\n`\r\n    str += `    printf(\"%f -> %f \\\\n\", ${Temp1},heapConsulta[(int)${Temp1}]); \\n`\r\n    str += `    ${Temp1} = ${Temp1} + 1; \\n`\r\n    str += `    goto ${Labl1}; \\n`\r\n    str += `    ${Labl2}:; \\n`\r\n    str += `}\\n `\r\n    return str\r\n}\r\n\r\n//tempCod.valor == sp+0\r\n\r\nexport function predicadoDecimal()\r\n{\r\n    let cod = \"\"\r\n\r\n    let tab = \"\\t\"\r\n    var TP1 = newTemp(); var TP2 = newTemp(); var TP3 = newTemp(); var TP4 = newTemp();\r\n    var TP5 = newTemp(); var TP6 = newTemp();\r\n\r\n    var LP1 = newLbl(); var LP2 = newLbl(); var LP3 = newLbl(); var LP4 = newLbl(); var LP5 = newLbl();\r\n\r\n    cod += `void predicadoDecimal() {\\n`\r\n    cod += tab + `${TP1} = stack[(int)sp];\\n`\r\n    cod += tab + `${TP2} = spc;\\n`\r\n    cod += tab + `${TP3} = 1;\\n`\r\n    cod += tab + `${LP3}:\\n`\r\n    cod += tab + `${TP4} = stackConsulta[(int)${TP2}];\\n`\r\n    cod += tab + `if( ${TP4} == -2 ) goto ${LP1};\\n`\r\n    cod += tab + `if( ${TP3} != ${TP1} ) goto ${LP2};\\n`\r\n    cod += tab + `stacX[(int)sx] = ${TP4};\\n`\r\n    cod += tab + `sx = sx + 1;\\n`\r\n    cod += tab + `stacX[(int)sx] = -2;\\n`\r\n    cod += tab + `goto ${LP1};\\n`\r\n    cod += tab + `${LP2}:\\n`\r\n    cod += tab + `${TP2} = ${TP2} + 1;\\n`\r\n    cod += tab + `${TP3} = ${TP3} + 1;\\n`\r\n    cod += tab + `goto ${LP3};\\n`\r\n    cod += tab + `${LP1}:\\n`\r\n\r\n    //Reemplazar el StackConsulta por el StackX\r\n    cod += tab + `${TP4} = 0; \\n`                        //contador para el stackX y stackConsulta\r\n    cod += tab + `${LP4}: \\n`\r\n    cod += tab + `${TP5} = stacX[(int)${TP4}]; \\n`\r\n    cod += tab + `if (${TP5} == -2) goto ${LP5}; \\n`      //si el stackX ya se termino vamos a LD\r\n    cod += tab + `${TP6} = spc + ${TP4}; \\n`              //posicion contador del stackConsulta\r\n    cod += tab + `stackConsulta[(int)${TP6}] = ${TP5};\\n`   //ponemos en el stackConsulta lo que habia en TQ\r\n    cod += tab + `${TP4} = ${TP4} + 1; \\n`                //aumentamos el contador de stackX\r\n    cod += tab + `goto ${LP4}; \\n`                       //vamos a comprobar si stackX tiene mas para guardar\r\n\r\n    //se acabo el stackX, no hay mas para guardar\r\n    cod += tab + `${LP5}: \\n`    \r\n    cod += tab + `${TP6} = spc + ${TP4};\\n`\r\n    cod += tab + `stackConsulta[(int)${TP6}] = -2;\\n`\r\n    cod += tab + `sx = 0; \\n`\r\n    cod += tab + `stacX[(int)sx] = -2; \\n`\r\n    cod += `}\\n\\n`\r\n\r\n    return cod\r\n}\r\n\r\n//0 posicion stackConsulta\r\nexport function predicadoNodo()\r\n{\r\n    let cod = \"\"\r\n\r\n    let tab = \"\\t\"\r\n    var TP1 = newTemp(); var TP2 = newTemp(); var TPC = newTemp(); var TP4 = newTemp(); var TP5 = newTemp();\r\n\r\n    var LP1 = newLbl(); var LP3 = newLbl(); var LP2 = newLbl(); \r\n\r\n    cod += `void predicadoNodo() {\\n`\r\n    cod += tab + `${TP1} = stack[(int)sp];\\n`\r\n    cod += tab + `${TP2} = spc;\\n`\r\n    cod += tab + `${TPC} = spc;\\n`\r\n    cod += tab + `${LP2}:\\n`\r\n    cod += tab + `${TP4} = stackConsulta[(int)${TP1}];\\n`\r\n    cod += tab + `${TP5} = stackConsulta[(int)${TP2}];\\n`\r\n    cod += tab + `if( ${TP4} == -2 ) goto ${LP1};\\n`\r\n    cod += tab + `if( ${TP4} == 0) goto ${LP3};\\n`\r\n    cod += tab + `stackConsulta[(int)${TPC}] = ${TP5};\\n`\r\n    cod += tab + `${TPC} = ${TPC} + 1;\\n`\r\n    cod += tab + `${LP3}:\\n`\r\n    cod += tab + `${TP1} = ${TP1} + 1;\\n`\r\n    cod += tab + `${TP2} = ${TP2} + 1;\\n`\r\n    cod += tab + `goto ${LP2};\\n`\r\n    cod += tab + `${LP1}:\\n`\r\n    cod += tab + `stackConsulta[(int)${TPC}] = -2;\\n`\r\n    cod += `}\\n\\n`\r\n\r\n    return cod\r\n}\r\n\r\n\r\n//Funciones nativas\r\nexport function funcText()\r\n{\r\n    var TT1 = newTemp(); var TT2 = newTemp(); var TT3 = newTemp(); var TT4 = newTemp();\r\n\r\n    var LT1 = newLbl(); var LT2 = newLbl();  var LT3 = newLbl();  var LT4 = newLbl();  var LT5 = newLbl();\r\n    let cod = \"\"\r\n    //0 retorno\r\n    cod += `void Text() {\\n`\r\n    cod += \r\n    `stack[(int)sp]=hp;\r\n    ${TT1} = spc;\r\n    ${LT5}:\r\n    ${TT2} = stackConsulta[(int)${TT1}];\r\n    if(${TT2} == -2 ) goto ${LT1};\r\n    ${TT2} = ${TT2} + 3;\r\n    ${TT3} = Indexes[(int)${TT2}];\r\n    if(${TT3} == -2 ) goto ${LT2};\r\n    ${LT4}:\r\n    ${TT4} = heap[(int)${TT3}];\r\n    if(${TT4} == -1) goto ${LT3};\r\n    heap[(int)hp] = ${TT4};\r\n    hp = hp + 1;\r\n    ${TT3} = ${TT3} + 1;\r\n    goto ${LT4};\r\n    ${LT3}:\r\n    heap[(int)hp] = 10;\r\n    hp = hp + 1; \r\n    ${LT2}:\r\n    ${TT1} = ${TT1} + 1;\r\n    goto ${LT5};\r\n    ${LT1}:\r\n    heap[(int)hp] = -1;\r\n    hp = hp + 1;\r\n    `\r\n    cod += `}\\n\\n`\r\n\r\n    return cod\r\n}\r\n\r\nexport function funcNumberToString(){\r\n    \r\n    var T10 = newTemp(); var T11 = newTemp(); TC3 = newTemp(); var T14 = newTemp();\r\n    var Tcima = newTemp(); var TBase = newTemp(); var TC3 = newTemp();\r\n    var Lj = newLbl(); var Li = newLbl(); var Lm = newLbl(); var Lk = newLbl();\r\n    \r\n    var cod = ''\r\n    var tab = '\\t'\r\n\r\n    cod += `void NumberToString(){ \\n`\r\n    cod +=  tab + `${TBase} = sp + 0; \\n` \r\n    cod +=  tab + `${Tcima} = ${TBase}; \\n`\r\n    cod +=  tab + `${T10} = stack[(int)${TBase}]; \\n`       //capturamos el valor\r\n\r\n    cod +=  tab + `${Lj}: \\n`\r\n    cod +=  tab + `${T11} = (int)${T10} % 10; \\n`           //guardamos el residuo de hacer un mod \r\n    \r\n    cod +=  tab + `if (${T10} == 0) goto ${Li}; \\n`    //si el cociente es cero terminamos de guardar\r\n    cod +=  tab + `${T10} = (int)${T10}/10; \\n`        //guardamos el cociente la parte entera\r\n    cod +=  tab + `stack[(int)${Tcima}] = ${T11}; \\n`  //si no es cero, guardamos en el stack el cociente\r\n    cod +=  tab + `${Tcima} = ${Tcima} + 1; \\n`        //aumentamos el contador\r\n    cod +=  tab + `goto ${Lj}; \\n`\r\n\r\n    cod +=  tab + `${Li}: \\n`  //se termino el numero\r\n    cod +=  tab + `${Tcima} = ${Tcima} - 1; \\n`\r\n    cod +=  tab + `${TC3} = hp; \\n`\r\n    cod +=  tab + `${Lm}: \\n`\r\n    cod +=  tab + `if (${Tcima} < ${TBase}) goto ${Lk}; \\n` //recorremos el stack en forma invertida\r\n    cod +=  tab + `${T14} = stack[(int)${Tcima}]; \\n`\r\n    cod +=  tab + `${T14} = ${T14} + 48; \\n`\r\n    cod +=  tab + `heap[(int)hp] = ${T14}; \\n`   //metemos en el heap\r\n    cod +=  tab + `hp = hp + 1; \\n`\r\n    cod +=  tab + `${Tcima} = ${Tcima} - 1; \\n`\r\n    cod +=  tab + `goto ${Lm}; \\n`\r\n\r\n    cod +=  tab + `${Lk}: \\n`  //terminamos el numero invertido\r\n    cod +=  tab + `heap[(int)hp] = -1; \\n`\r\n    cod +=  tab + `hp = hp + 1; \\n`\r\n\r\n    //retorno en la posicion\r\n    cod += tab + `stack[(int)sp] = ${TC3}; \\n`\r\n\r\n    cod +=  tab + `\\n}\\n`\r\n    return cod\r\n\r\n}\r\nexport function funcLast()\r\n{\r\n    var TT0 = newTemp(); var TT1 = newTemp(); var TT2 = newTemp(); \r\n    var LT1 = newLbl(); var LT2 = newLbl(); \r\n    let cod = \"\"\r\n    //0 retorno\r\n    cod += `void Last() {\\n`\r\n    cod += \r\n    `${TT0} = 0;\r\n    ${TT1} = spc;\r\n    ${LT2}:\r\n    ${TT2} = stackConsulta[(int)${TT1}];\r\n    if(${TT2} == -2 ) goto ${LT1};\r\n    ${TT0} = ${TT0} + 1;\r\n    ${TT1} = ${TT1} + 1;\r\n    goto ${LT2};\r\n    ${LT1}:\r\n    stack[(int)sp] = ${TT0};\r\n    `\r\n    cod += `}\\n\\n`\r\n\r\n    return cod\r\n}\r\n\r\nexport function funcUpperCase()\r\n{\r\n    var TC0 = newTemp();\r\n    var TT0 = newTemp(); var TTS=newTemp(); var TT1 = newTemp(); var TT2 = newTemp(); \r\n    var LT1 = newLbl(); var LT2 = newLbl(); var LT3 = newLbl();\r\n    let cod = \"\"\r\n    //0 retorno\r\n    //1 apuntador al heap\r\n    cod += `void UpperCase() {\\n`\r\n    cod += \r\n    `${TC0} = hp;\r\n    ${TT0} = sp + 1;\r\n    ${TTS} = stack[(int)${TT0}];\r\n    ${LT3}:\r\n    ${TT1} = heap[(int)${TTS}];\r\n    if(${TT1} == -1) goto ${LT1};\r\n    if(${TT1} < 97 ) goto ${LT2};\r\n    if(${TT1} > 122) goto ${LT2};\r\n    ${TT1} = ${TT1} - 32;\r\n    ${LT2}:\r\n    heap[(int)hp] = ${TT1};\r\n    hp = hp + 1;\r\n    ${TTS} = ${TTS} + 1;\r\n    goto ${LT3};\r\n    ${LT1}:\r\n    heap[(int)hp] = -1;\r\n    hp = hp + 1;\r\n    stack[(int)sp] = ${TC0};\r\n    `\r\n    cod += `}\\n\\n`\r\n\r\n    return cod\r\n}\r\n\r\nexport function funcLowerCase()\r\n{\r\n    var TC0 = newTemp();\r\n    var TT0 = newTemp(); var TTS=newTemp(); var TT1 = newTemp(); var TT2 = newTemp(); \r\n    var LT1 = newLbl(); var LT2 = newLbl(); var LT3 = newLbl();\r\n    let cod = \"\"\r\n    //0 retorno\r\n    //1 apuntador al heap\r\n    cod += `void LowerCase() {\\n`\r\n    cod += \r\n    `${TC0} = hp;\r\n    ${TT0} = sp + 1;\r\n    ${TTS} = stack[(int)${TT0}];\r\n    ${LT3}:\r\n    ${TT1} = heap[(int)${TTS}];\r\n    if(${TT1} == -1) goto ${LT1};\r\n    if(${TT1} < 65 ) goto ${LT2};\r\n    if(${TT1} > 90) goto ${LT2};\r\n    ${TT1} = ${TT1} + 32;\r\n    ${LT2}:\r\n    heap[(int)hp] = ${TT1};\r\n    hp = hp + 1;\r\n    ${TTS} = ${TTS} + 1;\r\n    goto ${LT3};\r\n    ${LT1}:\r\n    heap[(int)hp] = -1;\r\n    hp = hp + 1;\r\n    stack[(int)sp] = ${TC0};\r\n    `\r\n    cod += `}\\n\\n`\r\n\r\n    return cod\r\n}\r\n\r\nexport function funcSubStr_int()\r\n{\r\n    var TC0 = newTemp();\r\n    var TT0 = newTemp(); var TT1 = newTemp(); var TT2 = newTemp(); var TT3 = newTemp(); var TT4 = newTemp();\r\n    var TT5 = newTemp();  \r\n    var LT1 = newLbl(); var LT2 = newLbl(); var LT3 = newLbl();\r\n    let cod = \"\"\r\n    //0 retorno\r\n    //1 apuntador al heap\r\n    //2 limite inferior\r\n    cod += `void SubString_int() {\\n`\r\n    cod += \r\n    `${TC0} = hp;\r\n    ${TT0} = sp + 2;\r\n    ${TT1} = stack[(int)${TT0}];\r\n    ${TT2} = sp + 1;\r\n    ${TT3} = stack[(int)${TT2}];\r\n    ${TT4} = 1;\r\n    ${LT3}:\r\n    ${TT5} = heap[(int)${TT3}];\r\n    if( ${TT5} == -1 ) goto ${LT1};\r\n    if( ${TT4} >= ${TT1} ) goto ${LT2};\r\n    ${TT4} = ${TT4} + 1;\r\n    ${TT3} = ${TT3} + 1;\r\n    goto ${LT3};\r\n    ${LT2}:\r\n    heap[(int)hp] = ${TT5};\r\n    hp = hp + 1;\r\n    ${TT4} = ${TT4} + 1;\r\n    ${TT3} = ${TT3} + 1;\r\n    goto ${LT3};\r\n    ${LT1}:\r\n    heap[(int)hp] = -1;\r\n    hp = hp + 1;\r\n    stack[(int)sp] = ${TC0};\r\n    `\r\n    cod += `}\\n\\n`\r\n\r\n    return cod\r\n}\r\n\r\nexport function funcSubStr_int_int()\r\n{\r\n    var TC0 = newTemp();\r\n    var TT_2 = newTemp(); var TT_1 = newTemp();\r\n    var TT0 = newTemp(); var TT1 = newTemp(); var TT2 = newTemp(); var TT3 = newTemp(); var TT4 = newTemp();var TT_3 = newTemp();\r\n    var TT5 = newTemp();  \r\n    var LT1 = newLbl(); var LT2 = newLbl(); var LT3 = newLbl();\r\n    let cod = \"\"\r\n    //0 retorno\r\n    //1 apuntador al heap\r\n    //2 limite inferior\r\n    //3 limite superior\r\n    cod += `void SubString_int_int() {\\n`\r\n    cod += \r\n    `${TC0} = hp;\r\n    ${TT_2} = sp + 3;\r\n    ${TT_1} = stack[(int)${TT_2}];\r\n    ${TT0} = sp + 2;\r\n    ${TT1} = stack[(int)${TT0}];\r\n    ${TT2} = sp + 1;\r\n    ${TT3} = stack[(int)${TT2}];\r\n    ${TT4} = 1;\r\n    ${TT_3} = 1;\r\n    ${LT3}:\r\n    ${TT5} = heap[(int)${TT3}];\r\n    if( ${TT5} == -1 ) goto ${LT1};\r\n    if( ${TT4} >= ${TT1} ) goto ${LT2};\r\n    ${TT4} = ${TT4} + 1;\r\n    ${TT3} = ${TT3} + 1;\r\n    goto ${LT3};\r\n    ${LT2}:\r\n    if( ${TT_3} > ${TT_1} ) goto ${LT1};\r\n    heap[(int)hp] = ${TT5};\r\n    hp = hp + 1;\r\n    ${TT_3} = ${TT_3} + 1;\r\n    ${TT4} = ${TT4} + 1;\r\n    ${TT3} = ${TT3} + 1;\r\n    goto ${LT3};\r\n    ${LT1}:\r\n    heap[(int)hp] = -1;\r\n    hp = hp + 1;\r\n    stack[(int)sp] = ${TC0};\r\n    `\r\n    cod += `}\\n\\n`\r\n\r\n    return cod\r\n}\r\n","var C3D = require('../C3D')\r\n\r\nexport class nodo {\r\n    constructor(linea,columna)\r\n    {\r\n        this.linea=linea\r\n        this.columna=columna\r\n    }\r\n}\r\n\r\nexport class ObjetoPrincipal extends nodo {\r\n    tipo = ''\r\n    texto = ''\r\n    atributos = []\r\n    hijos = []\r\n    posTipo = 0;\r\n    posTexto = 0;\r\n\r\n    constructor(tipo, atributos, hijos, linea, columna, texto = ''){\r\n        super(linea,columna)\r\n        this.tipo = tipo.replace('<','')\r\n        this.atributos = atributos\r\n        this.texto = texto\r\n        if (hijos instanceof Array){\r\n            this.hijos = hijos\r\n        }else{\r\n            this.texto = hijos\r\n        }\r\n\r\n        var refPadres = []\r\n\r\n        var temphijo = '-2' \r\n        if(this.hijos.length > 0){\r\n\r\n            temphijo = C3D.getReferencia(`sh`)\r\n            for (const iterator of this.hijos) {\r\n                C3D.agregarComentario(`guardando hijo: ${iterator.tipo}`)\r\n                C3D.guardarStackHijos(iterator.ref)\r\n                refPadres.push(iterator.refPadre)\r\n            }\r\n\r\n            C3D.addCodigo3D(`stackHijos[(int)sh] = -2; \\n sh = sh + 1; \\n`);\r\n        }\r\n\r\n        /* C3D */\r\n        // ajustar posición respecto a stack pointer\r\n        this.posTipo = C3D.getNextSP()\r\n\r\n        C3D.agregarComentario(`** agregando \"${this.tipo}\" **`);\r\n        var tempTipo = C3D.guardarString(this.posTipo, this.tipo);\r\n\r\n        this.ref = C3D.getReferencia(`si`)\r\n        C3D.guardarIndexRaiz(tempTipo, '-2', temphijo, '-2')\r\n\r\n        C3D.addCodigo3D(`stack[(int)sp] = ${this.ref}; \\n`)\r\n\r\n        for (const iterator of refPadres) {\r\n            C3D.addCodigo3D(`Indexes[(int)${iterator}] = ${this.ref}; \\n`);\r\n        }\r\n\r\n    }\r\n\r\n    setTipo(tipo){\r\n        this.tipo = tipo.replace('</','')\r\n    }\r\n\r\n    getTextoRelativo(){\r\n        // recorrer insertar el valor actual\r\n        var retorno = []\r\n        if (this.texto != '') retorno.push(this.texto)\r\n\r\n        // recorrer hijos\r\n        for (var hijo of this.hijos){\r\n            var retornoHijo = hijo.getTextoRelativo()\r\n            retorno = retorno.concat(retornoHijo)\r\n        }\r\n        return retorno\r\n    }\r\n}\r\n\r\nexport class Objeto extends nodo {\r\n    tipo = ''\r\n    texto = ''\r\n    atributos = []\r\n    hijos = []\r\n    posTipo = 0;\r\n    posTexto = 0;\r\n\r\n    constructor(tipo, atributos, hijos, linea, columna, texto = ''){\r\n        super(linea,columna)\r\n        this.tipo = tipo.replace('<','')\r\n        this.atributos = atributos\r\n        this.texto = texto\r\n        if (hijos instanceof Array){\r\n            this.hijos = hijos\r\n        }else{\r\n            this.texto = hijos\r\n        }\r\n\r\n        var tempAtri = '-2' \r\n        var tempPadreAtri = []\r\n        if(this.atributos.length > 0){\r\n\r\n            tempAtri = C3D.getReferencia(`sa`)\r\n            for (const iterator of this.atributos) {\r\n                C3D.agregarComentario(`guardando atributo: ${iterator.nombre}`)\r\n                C3D.guardarStackAtri(iterator.Temp1)\r\n                C3D.agregarComentario(`guardando valor atributo: ${iterator.valor}`)\r\n                C3D.guardarStackAtri(iterator.Temp2)\r\n                C3D.agregarComentario(`guardando padre del atributo`)\r\n                tempPadreAtri.push(C3D.getReferencia(`sa`));\r\n                C3D.guardarStackAtri(\"-2\")\r\n\r\n            }\r\n            C3D.addCodigo3D(`stackAtributos[(int)sa] = -2; \\n sa = sa + 1; \\n`);\r\n        }\r\n\r\n        var refPadres = []\r\n\r\n        var temphijo = '-2' \r\n        if(this.hijos.length > 0){\r\n\r\n            temphijo = C3D.getReferencia(`sh`)\r\n            for (const iterator of this.hijos) {\r\n                C3D.agregarComentario(`guardando hijo: ${iterator.tipo}`)\r\n                C3D.guardarStackHijos(iterator.ref)\r\n                refPadres.push(iterator.refPadre)\r\n            }\r\n\r\n            C3D.addCodigo3D(`stackHijos[(int)sh] = -2; \\n sh = sh + 1; \\n`);\r\n        }\r\n\r\n        /* C3D */\r\n        // ajustar posición respecto a stack pointer\r\n        this.posTipo = C3D.getNextSP()\r\n        this.posTexto = C3D.getNextSP()\r\n\r\n        C3D.agregarComentario(`** agregando \"${this.tipo}\" **`);\r\n        var tempTipo = C3D.guardarString(this.posTipo, this.tipo);\r\n\r\n        var tempTexto = '-2'\r\n        if(this.texto != ''){\r\n            C3D.agregarComentario(`** agregando \"${this.texto}\" **`);\r\n            tempTexto = C3D.guardarString(this.posTexto, this.texto);\r\n        }      \r\n        this.ref = C3D.getReferencia(`si`)\r\n        this.refPadre = C3D.guardarIndexes(tempTipo, tempAtri, temphijo, tempTexto);\r\n\r\n        for (const iterator of tempPadreAtri) {\r\n            C3D.addCodigo3D(`stackAtributos[(int)${iterator}] = ${this.ref}; \\n`);\r\n        }\r\n\r\n        for (const iterator of refPadres) {\r\n            C3D.addCodigo3D(`Indexes[(int)${iterator}] = ${this.ref}; \\n`);\r\n        }\r\n\r\n    }\r\n\r\n    setTipo(tipo){\r\n        this.tipo = tipo.replace('</','')\r\n    }\r\n\r\n    getTextoRelativo(){\r\n        // recorrer insertar el valor actual\r\n        var retorno = []\r\n        if (this.texto != '') retorno.push(this.texto)\r\n\r\n        // recorrer hijos\r\n        for (var hijo of this.hijos){\r\n            var retornoHijo = hijo.getTextoRelativo()\r\n            retorno = retorno.concat(retornoHijo)\r\n        }\r\n        return retorno\r\n    }\r\n}\r\n\r\nexport class Atributo extends nodo {\r\n    nombre =''\r\n    valor = ''\r\n    posNombre = 0;\r\n    posValor = 0;\r\n\r\n    constructor(nombre, valor, linea, columna){\r\n        super(linea,columna)\r\n        this.nombre = nombre\r\n        this.valor = valor\r\n\r\n        // ajustar posición respecto a stack pointer\r\n        this.posNombre = C3D.getNextSP()\r\n        this.posValor = C3D.getNextSP()\r\n\r\n        C3D.agregarComentario(`** agregando ${this.nombre} **`);\r\n        this.Temp1 = C3D.guardarString(this.posNombre, this.nombre);\r\n\r\n        C3D.agregarComentario(`** agregando ${this.valor} **`);\r\n        this.Temp2 = C3D.guardarString(this.posValor, this.valor);\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport function CambiarCodificacion (contenido, tipoCodificacion) {\r\n    //var buffer = Buffer.from(contenido)\r\n    var iconv = require('iconv-lite');\r\n    switch(tipoCodificacion.toLowerCase()){\r\n        case \"utf8\":\r\n        case \"utf-8\":\r\n            contenido = iconv.decode(contenido, \"utf-8\");\r\n            break\r\n        case \"utf-16le\":\r\n        case \"utf16le\":\r\n            contenido = iconv.decode(contenido, \"utf-16le\");\r\n            break\r\n        case \"utf-16be\":\r\n        case \"utf16be\":\r\n            contenido = iconv.decode(contenido, \"utf-16be\");\r\n            break\r\n        case \"utf-16\":\r\n        case \"utf-16\":\r\n            contenido = iconv.decode(contenido, \"utf-16\");\r\n            break;\r\n        case \"ascii\":\r\n            contenido = iconv.decode(contenido, \"ascii\");\r\n            var utf16beexists=iconv.encodingExists(\"ascii\")\r\n        case \"iso-8859-1\":\r\n            contenido = iconv.decode(contenido, \"ISO-8859-1\");\r\n            // const bytes = stringToBytes(contenido);\r\n            // const blob = new Blob([bytes.buffer], { type: 'text/plain; charset=ISO-8859-1' });\r\n            // contenido = buffer.toString(\"\")\r\n        break;\r\n        default:\r\n            //alert('No se ha logrado identificar el tipo de codificación del archivo, se usará por defect UTF-8.')\r\n            contenido = iconv.decode(contenido, \"utf-8\");\r\n    }\r\n\r\n    return contenido\r\n}\r\n\r\n/*\r\nconst _Objeto = Objeto\r\nexport { _Objeto as Objeto }\r\nconst _Atributo = Atributo\r\nexport { _Atributo as Atributo }\r\nconst _Atributo = Atributo\r\nexport { _Atributo as Atributo }\r\n*/\r\n\r\n//exports.Objeto = Objeto\r\n//exports.Atributo = Atributo\r\n//exports.CambiarCodificacion = CambiarCodificacion","import { Camino } from \"./axes\"\r\nimport { Atributo } from \"./axes\"\r\n\r\nconst { Tipo } = require(\"../AST/Entorno\")\r\nvar C3D  = require('../../C3D')\r\n\r\n//Literales para el uso de datos y tipos\r\nexport class NodoExp\r\n{\r\n    constructor(tipo,valor)\r\n    {\r\n        this.tipo=tipo\r\n        this.valor=valor\r\n    }\r\n\r\n    getValor()\r\n    {\r\n\r\n    }\r\n\r\n    getC3D()\r\n    {}\r\n}\r\n \r\nexport class Literal extends NodoExp\r\n{\r\n    posValor = 0\r\n    constructor(tipo,valor){\r\n        super(tipo,valor) \r\n    }\r\n\r\n    getValor()\r\n    {\r\n        return [this]\r\n    }\r\n\r\n    getC3D(){\r\n        //dependiendo el tipo, la devolucion\r\n        switch(this.tipo){\r\n            case Tipo.INTEGER:\r\n            case Tipo.DECIMAL:\r\n                return { cod:'', tipo:Tipo.DECIMAL,valor:this.valor }\r\n            case Tipo.BOOLEAN:\r\n                \r\n                //retorno 1 si es true y 0 si es false\r\n                var val = ''\r\n                if (this.valor.ToString().ToLower() == \"true\")\r\n                {\r\n                    val = '1'\r\n                }\r\n                else if (this.valor.ToString().ToLower() == \"false\")\r\n                {\r\n                    val = '0'\r\n                }\r\n                return { cod: '', tipo:Tipo.BOOLEAN,valor:val }\r\n            \r\n            case Tipo.STRING:\r\n                this.posValor = C3D.getNextSP()\r\n                var tmp = C3D.guardarString(this.posValor, this.valor)\r\n                return { cod:'', tipo:Tipo.STRING,valor:tmp }\r\n        }\r\n        \r\n    }\r\n\r\n    Graficar(ListaNodes,ListaEdges,contador)\r\n    {\r\n        var NodosActuales = []\r\n        var nodoActual = {id:contador.num,label:this.valor}\r\n        NodosActuales.push(nodoActual);ListaNodes.push(nodoActual);contador.num++\r\n        return NodosActuales\r\n    }\r\n}\r\n\r\nexport class Nodo extends NodoExp\r\n{\r\n    constructor(tipo,entorno,pila,valor,posicion=-1)\r\n    {\r\n        super(tipo,valor) // Tipo es NODO; valor es TEXTO\r\n        this.entorno=entorno // Atributos e Hijos de Etiqueta\r\n        this.pila=pila // Anteriores\r\n        this.posicion=posicion\r\n    }\r\n\r\n    setPosicion(posicion)\r\n    {\r\n        this.posicion=posicion\r\n    }\r\n\r\n    getValor()\r\n    {\r\n    }\r\n\r\n    getC3D(){}\r\n}\r\n\r\nexport class Variable extends NodoExp\r\n{\r\n    constructor(tipo,valor)\r\n    {\r\n        super(tipo,valor)\r\n    }\r\n\r\n    getValor(nodos)\r\n    {\r\n        var retornos = []\r\n        for (const nodo of nodos) {\r\n            if(nodo.entorno.tipo==this.valor){\r\n                retornos=retornos.concat(nodo.entorno.hijos)\r\n                break\r\n            }\r\n        }\r\n        return retornos\r\n    }\r\n}\r\n\r\nexport class PathExp  \r\n{\r\n    constructor(caminos) \r\n    {\r\n        this.caminos=caminos\r\n    }\r\n\r\n    getValor(Entorno)\r\n    {\r\n        var Retornos = Entorno\r\n        for (const iterator of this.caminos) {\r\n            if(Retornos[0] && Retornos[0].tipo!=Tipo.NODO && Retornos[0].tipo!=Tipo.ATRIB) break\r\n            Retornos = iterator.getValor(Retornos)\r\n        }\r\n        if(Retornos.length>0)\r\n        {\r\n\r\n            return Retornos\r\n        }\r\n        else\r\n        {\r\n            return []\r\n        }\r\n    }\r\n\r\n    getC3D(objetos)\r\n    {\r\n        var retorno = {cod:'',tipo:Tipo.ERROR};\r\n\r\n\r\n        for (const objeto of this.caminos){\r\n            var tempretorno = objeto.getC3D(objetos)    //se queda con el ultimo retorno\r\n            retorno.cod += tempretorno.cod \r\n            retorno.tipo = tempretorno.tipo\r\n            if(tempretorno.valor)\r\n            {\r\n                retorno.valor = tempretorno.valor  \r\n            }          \r\n        }\r\n\r\n        return retorno       \r\n    }\r\n\r\n    Graficar(ListaNodes,ListaEdges,contador)\r\n    {   \r\n        var NodosActuales = []\r\n        for(var i=0; i < this.caminos.length; i++)\r\n        {\r\n            var nodoActual = {id:contador.num,label:\"RelativePath\"}\r\n            NodosActuales.push(nodoActual);ListaNodes.push(nodoActual);contador.num++\r\n            var nodos = this.caminos[i].Graficar(ListaNodes,ListaEdges,contador)\r\n            for (const nodo of nodos) {\r\n              ListaEdges.push({from:nodoActual.id,to:nodo.id})\r\n            }\r\n        }\r\n        return NodosActuales\r\n    }\r\n}\r\n\r\nexport class Parentesis \r\n{\r\n    constructor(expresiones)\r\n    {\r\n        this.expresiones=expresiones\r\n    }\r\n\r\n    getValor(nodos)\r\n    {\r\n        var retorno = []\r\n        for (const expresion of this.expresiones) {\r\n            retorno = retorno.concat(expresion.getValor(nodos))\r\n        }\r\n        return retorno\r\n    }\r\n}"],"sourceRoot":""}